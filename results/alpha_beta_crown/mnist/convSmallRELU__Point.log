/home/shauntan/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/layer.py:29: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /opt/conda/conda-bld/pytorch_1708025845868/work/torch/csrc/utils/tensor_numpy.cpp:206.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/shauntan/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
/home/shauntan/alpha-beta-CROWN/complete_verifier/data_utils.py:329: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: out.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: /home/shauntan/benchmark_selection_experiment/models/mnist/convSmallRELU__Point.onnx
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 200
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.11
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 2048
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 300
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 100
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Mon May 27 06:43:00 2024 on peacock
Loading onnx /home/shauntan/benchmark_selection_experiment/models/mnist/convSmallRELU__Point.onnx wih quirks {}
ConvertModel(
  (Constant_9): Constant(constant=tensor([[[[0.13070001]]]]))
  (Sub_10): sub()
  (Constant_11): Constant(constant=tensor([[[[0.30810001]]]]))
  (Div_12): Div()
  (Conv_13): Conv2d(1, 16, kernel_size=(4, 4), stride=(2, 2))
  (Relu_14): ReLU(inplace=True)
  (Conv_15): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2))
  (Relu_16): ReLU(inplace=True)
  (Flatten_17): Flatten()
  (Gemm_18): Linear(in_features=800, out_features=100, bias=True)
  (Relu_19): ReLU(inplace=True)
  (Gemm_output): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  Conv_13.weight: shape torch.Size([16, 1, 4, 4])
  Conv_13.bias: shape torch.Size([16])
  Conv_15.weight: shape torch.Size([32, 16, 4, 4])
  Conv_15.bias: shape torch.Size([32])
  Gemm_18.weight: shape torch.Size([100, 800])
  Gemm_18.bias: shape torch.Size([100])
  Gemm_output.weight: shape torch.Size([10, 100])
  Gemm_output.bias: shape torch.Size([10])
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12228037)
Note runnerup label is empty here!
############################
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  3.55855799,   3.93974280,  12.58808231,   1.11616850,  -4.65113497,
          -3.42428684,   1.54368842,  -1.66039038,  -0.79800618, -12.49215698]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.33it/s]100%|██████████| 1/1 [00:00<00:00,  1.33it/s]
/home/shauntan/alpha-beta-CROWN/complete_verifier/auto_LiRPA/operators/leaf.py:192: UserWarning: The "has_batchdim" option for BoundBuffers is deprecated. It may be removed from the next release.
  warnings.warn('The "has_batchdim" option for BoundBuffers is deprecated.'
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  5.21741199,   2.87699318,   9.43776512,   0.39984405,  -4.46348953,
           -2.47943974,   2.37072873,  -2.18350220,  -0.88234127, -10.61417580],
         [  5.21741199,   2.87699318,   9.43776512,   0.39984405,  -4.46348953,
           -2.47943974,   2.37072873,  -2.18350220,  -0.88234127, -10.61417580]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.22035313,  6.56077194,  9.03792095, 13.90125465, 11.91720486,
           7.06703663, 11.62126732, 10.32010651, 20.05194092]]],
       device='cuda:0')
number of violation:  0
Attack finished in 3.5649 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  3.55855727,   3.93974257,  12.58808231,   1.11616838,  -4.65113497,
          -3.42428684,   1.54368842,  -1.66038990,  -0.79800594, -12.49215794]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [689]; unstable size 689; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 157, 1, 689] with unstable size 156 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 689] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [156]; unstable size 156; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 156] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 156] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.68793464,  1.19696856,  1.95541406,  8.99970531,  4.40544462,
          1.91735530,  8.37198639,  3.82078099, 13.97963142]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 6.2626 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.30767798,  7.38969517,  0.65904701, -1.84157526, -0.33538285,
         -1.88084114, -0.55868816,  0.09076038,  0.89197361, -3.22699976]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]100%|██████████| 1/1 [00:00<00:00,  2.38it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.84983635,  5.24723959,  0.95943671, -1.19686556, -1.81693709,
          -0.33379379, -0.00700478, -0.43528208,  2.31072807, -3.00111294],
         [-1.84983635,  5.24723959,  0.95943671, -1.19686556, -1.81693709,
          -0.33379379, -0.00700478, -0.43528208,  2.31072807, -3.00111294]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.09707594, 4.28780270, 6.44410515, 7.06417656, 5.58103323,
          5.25424433, 5.68252182, 2.93651152, 8.24835205]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4266 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.30767787,  7.38969517,  0.65904737, -1.84157562, -0.33538309,
         -1.88084078, -0.55868834,  0.09076020,  0.89197350, -3.22699976]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [722]; unstable size 722; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 246, 1, 722] with unstable size 245 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 722] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 722] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [245]; unstable size 245; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 245] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 245] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.19627285,  0.29856229,  1.28489304,  2.18187690,  0.70197177,
          0.88474441,  0.91476917, -0.33544123,  2.33744335]], device='cuda:0') None

all verified at 9th iter
best_l after optimization: 14.828912734985352
alpha/beta optimization time: 4.243100881576538
initial alpha-crown bounds: tensor([[3.60115409, 0.71721840, 1.57367206, 2.42577052, 1.17540669, 1.39085197,
         1.19242191, 0.01661515, 2.73580217]], device='cuda:0')
Worst class: (+ rhs) 0.01661515235900879
verified with init bound!
Result: safe-incomplete in 4.7273 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.55531979, -3.91666293,  1.30076790, -0.89552748, -1.99206483,
         -0.47531003, -0.46243498, -2.15788698, -2.66582298, -0.71549845]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]100%|██████████| 1/1 [00:00<00:00,  2.50it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.21197224, -2.69845772,  2.83892465,  0.50935876, -2.78839016,
          -0.63872510, -2.99130678, -1.21851897, -2.45973158, -0.13223745],
         [ 9.21197224, -2.69845772,  2.83892465,  0.50935876, -2.78839016,
          -0.63872510, -2.99130678, -1.21851897, -2.45973158, -0.13223745]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.91042995,  6.37304783,  8.70261383, 12.00036240,  9.85069752,
          12.20327950, 10.43049145, 11.67170334,  9.34420967]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.4062 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.55531979, -3.91666317,  1.30076766, -0.89552748, -1.99206460,
         -0.47531009, -0.46243402, -2.15788698, -2.66582298, -0.71549845]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [655]; unstable size 655; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 100, 1, 655] with unstable size 99 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 655] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 655] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [99]; unstable size 99; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 99] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 99] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.88236141, 2.59673023, 2.50155306, 5.09081841, 2.17956567, 4.30608273,
         4.19773626, 6.07350254, 2.75343442]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4576 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.33112621, -1.16978335, -1.76621258, -2.75396371,  8.88020134,
         -3.08521533, -0.23101185,  0.43820527, -2.29483461,  3.08948517]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.80it/s]100%|██████████| 1/1 [00:00<00:00,  2.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.65299630, -1.58307242, -2.48945856, -1.84349656,  6.19215345,
          -3.79469061, -1.49604106,  1.81260467, -1.82526398,  5.50075054],
         [-0.65299630, -1.58307242, -2.48945856, -1.84349656,  6.19215345,
          -3.79469061, -1.49604106,  1.81260467, -1.82526398,  5.50075054]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.84514999, 7.77522564, 8.68161201, 8.03565025, 9.98684406,
          7.68819427, 4.37954903, 8.01741791, 0.69140291]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3626 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.33112621, -1.16978383, -1.76621246, -2.75396395,  8.88020229,
         -3.08521485, -0.23101203,  0.43820497, -2.29483509,  3.08948541]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [737]; unstable size 737; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 140, 1, 737] with unstable size 139 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 737] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [139]; unstable size 139; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 139] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.24055505,  0.00924063, -1.60395670, -0.89580345,  0.24968958,
         -0.76449370, -4.29187059, -2.06930995, -5.28829765]], device='cuda:0') None
best_l after optimization: -2.6833441257476807
alpha/beta optimization time: 4.005075216293335
initial alpha-crown bounds: tensor([[ 1.33098197,  1.01877999, -0.11399126,  0.57346153,  1.60350370,
          0.45312262, -3.20937920, -0.66952443, -3.67029905]], device='cuda:0')
Worst class: (+ rhs) -3.6702990531921387
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.57475113868713
##### Instance 3 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.330981969833374.

Properties batch 1, size 1
Remaining timeout: 295.4381833076477
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.018779993057251.

Properties batch 2, size 1
Remaining timeout: 295.33341693878174
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11399126]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.33112621, -1.16978383, -1.76621246, -2.75396395,  8.88020229,
        -3.08521485, -0.23101203,  0.43820497, -2.29483509,  3.08948541],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11399126]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 737
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 909
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 58] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 41] 
split level 6: [/input.11, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.463859558105469e-05
Time: prepare 0.0076    bound 0.0107    transfer 0.0006    finalize 0.0059    func 0.0249    
Accumulated time: func 0.0249    prepare 0.0083    bound 0.0107    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0008    decision 0.3174    set_bounds 0.0157    solve 0.0249    add 0.0002    
Accumulated time: pickout 0.0008    decision 0.3174    set_bounds 0.0157    solve 0.0249    add 0.0002    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3991658687591553


Properties batch 3, size 1
Remaining timeout: 294.7959768772125
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5734615325927734.

Properties batch 4, size 1
Remaining timeout: 294.6865088939667
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.603503704071045.

Properties batch 5, size 1
Remaining timeout: 294.5813498497009
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.453122615814209.

Properties batch 6, size 1
Remaining timeout: 294.47709941864014
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.20937920]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.33112621, -1.16978383, -1.76621246, -2.75396395,  8.88020229,
        -3.08521485, -0.23101203,  0.43820497, -2.29483509,  3.08948541],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.20937920]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 737
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 909
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 14] 
split level 6: [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.013553619384765625
Time: prepare 0.0076    bound 0.9566    transfer 0.0012    finalize 0.0101    func 0.9757    
Accumulated time: func 0.9757    prepare 0.0082    bound 0.9566    transfer 0.0012    finalize 0.0101    
Current worst splitting domains lb-rhs (depth):
-0.81915 (7), -0.76731 (7), -0.65913 (7), -0.65209 (7), -0.64344 (7), -0.62419 (7), -0.61913 (7), -0.49672 (7), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0374    set_bounds 0.0155    solve 0.9758    add 0.0018    
Accumulated time: pickout 0.0007    decision 0.0374    set_bounds 0.0155    solve 0.9758    add 0.0018    
Current (lb-rhs): -0.8191463947296143
8 domains visited
Cumulative time: 1.0378930568695068

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] 
split level 1: [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] 
split level 2: [/input.11, 58] [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.11, 58] [/input.7, 636] 
split level 3: [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 128 = 0.9140625
pruning-in-iteration extra time: 0.01580190658569336
Time: prepare 0.0177    bound 0.4054    transfer 0.0012    finalize 0.0096    func 0.4341    
Accumulated time: func 1.4098    prepare 0.0264    bound 1.3621    transfer 0.0024    finalize 0.0198    
Current worst splitting domains lb-rhs (depth):
-0.26689 (11), -0.23099 (11), -0.18570 (11), -0.14231 (11), -0.11841 (11), -0.10988 (11), -0.09482 (11), -0.07616 (11), -0.05867 (11), -0.04013 (11), -0.03577 (11), 
Length of domains: 11
Time: pickout 0.0010    decision 0.0314    set_bounds 0.0123    solve 0.4342    add 0.0016    
Accumulated time: pickout 0.0017    decision 0.0688    set_bounds 0.0278    solve 1.4100    add 0.0034    
Current (lb-rhs): -0.2668895721435547
19 domains visited
Cumulative time: 1.5197851657867432

BaB round 3
batch: 11
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 631] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] 
split level 1: [/input.11, 12] [/input.11, 58] [/input.7, 636] [/input.7, 636] [/input.11, 56] [/input.7, 256] [/input.7, 256] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
split level 2: [/input.7, 636] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 58] [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.7, 256] [/input.7, 636] 
split level 3: [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.11, 12] [/input.11, 12] [/input.7, 256] [/input.7, 636] [/input.7, 256] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 176 / 176 = 1.0
pruning-in-iteration extra time: 8.034706115722656e-05
Time: prepare 0.0240    bound 0.0102    transfer 0.0008    finalize 0.0120    func 0.0471    
Accumulated time: func 1.4569    prepare 0.0508    bound 1.3723    transfer 0.0033    finalize 0.0317    
Length of domains: 0
Time: pickout 0.0010    decision 0.0322    set_bounds 0.0188    solve 0.0472    add 0.0002    
Accumulated time: pickout 0.0027    decision 0.1010    set_bounds 0.0466    solve 1.4571    add 0.0036    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
19 domains visited
Cumulative time: 1.6197946071624756


Properties batch 7, size 1
Remaining timeout: 292.71773314476013
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.66952443]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.33112621, -1.16978383, -1.76621246, -2.75396395,  8.88020229,
        -3.08521485, -0.23101203,  0.43820497, -2.29483509,  3.08948541],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.66952443]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 737
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 909
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 58] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 65] 
split level 6: [/input.11, 11] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0076    bound 0.0071    transfer 0.0012    finalize 0.0072    func 0.0233    
Accumulated time: func 0.0233    prepare 0.0082    bound 0.0071    transfer 0.0012    finalize 0.0072    
Length of domains: 0
Time: pickout 0.0006    decision 0.0374    set_bounds 0.0155    solve 0.0234    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0374    set_bounds 0.0155    solve 0.0234    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0831291675567627


Properties batch 8, size 1
Remaining timeout: 292.49068546295166
##### Instance 3 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.67029905]], device='cuda:0') need to verify.
torch allclose failed: norm 8.580792041357199e-07
Model prediction is: tensor([-1.33112621, -1.16978383, -1.76621246, -2.75396395,  8.88020229,
        -3.08521485, -0.23101203,  0.43820497, -2.29483509,  3.08948541],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.67029905]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 737
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 909
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 12] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 6] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 25] 
split level 6: [/input.11, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 113 / 128 = 0.8828125
pruning-in-iteration extra time: 0.012953519821166992
Time: prepare 0.0076    bound 0.5470    transfer 0.0012    finalize 0.0083    func 0.5640    
Accumulated time: func 0.5640    prepare 0.0082    bound 0.5470    transfer 0.0012    finalize 0.0083    
Current worst splitting domains lb-rhs (depth):
-2.10346 (7), -1.77899 (7), -1.50407 (7), -1.27219 (7), -0.86356 (7), -0.83551 (7), -0.78154 (7), -0.59177 (7), -0.39109 (7), -0.36708 (7), -0.36493 (7), -0.06168 (7), -0.04223 (7), -0.03209 (7), -0.01407 (7), 
Length of domains: 15
Time: pickout 0.0006    decision 0.0377    set_bounds 0.0179    solve 0.5641    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0377    set_bounds 0.0179    solve 0.5641    add 0.0018    
Current (lb-rhs): -2.103464126586914
15 domains visited
Cumulative time: 0.6288259029388428

BaB round 2
batch: 15
splitting decisions: 
split level 0: [/input.11, 97] [/input.3, 2244] [/input.11, 97] [/input.11, 97] [/input.7, 632] [/input.7, 706] [/input.7, 632] [/input.7, 632] [/input.11, 97] [/input.11, 97] 
split level 1: [/input.11, 5] [/input.11, 5] [/input.7, 632] [/input.3, 2244] [/input.7, 706] [/input.7, 632] [/input.11, 5] [/input.7, 706] [/input.11, 5] [/input.7, 632] 
split level 2: [/input.7, 598] [/input.7, 632] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.7, 598] [/input.11, 5] [/input.7, 598] [/input.11, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 85 / 120 = 0.7083333333333333
pruning-in-iteration extra time: 0.013135194778442383
Time: prepare 0.0172    bound 0.5111    transfer 0.0011    finalize 0.0095    func 0.5392    
Accumulated time: func 1.1032    prepare 0.0257    bound 1.0581    transfer 0.0023    finalize 0.0178    
Current worst splitting domains lb-rhs (depth):
-1.57211 (10), -1.55730 (10), -1.30277 (10), -1.29770 (10), -1.28961 (10), -1.25345 (10), -1.24238 (10), -1.15614 (10), -1.01456 (10), -1.00524 (10), -0.88856 (10), -0.83350 (10), -0.82723 (10), -0.80957 (10), -0.78125 (10), -0.71705 (10), -0.57358 (10), -0.56987 (10), -0.51534 (10), -0.51212 (10), 
Length of domains: 35
Time: pickout 0.0011    decision 0.0271    set_bounds 0.0100    solve 0.5393    add 0.0023    
Accumulated time: pickout 0.0018    decision 0.0648    set_bounds 0.0279    solve 1.1034    add 0.0041    
Current (lb-rhs): -1.5721124410629272
50 domains visited
Cumulative time: 1.2098212242126465

BaB round 3
batch: 35
splitting decisions: 
split level 0: [/input.11, 48] [/input.7, 706] [/input.11, 97] [/input.11, 48] [/input.7, 706] [/input.7, 706] [/input.11, 97] [/input.11, 48] [/input.7, 706] [/input.7, 706] 
split level 1: [/input.7, 632] [/input.3, 2244] [/input.3, 2244] [/input.7, 632] [/input.3, 2244] [/input.7, 702] [/input.7, 702] [/input.11, 97] [/input.3, 2244] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 140 = 0.5428571428571429
pruning-in-iteration extra time: 0.013028621673583984
Time: prepare 0.0241    bound 0.4990    transfer 0.0012    finalize 0.0107    func 0.5350    
Accumulated time: func 1.6383    prepare 0.0501    bound 1.5571    transfer 0.0035    finalize 0.0285    
Current worst splitting domains lb-rhs (depth):
-1.37312 (12), -1.36835 (12), -1.10851 (12), -1.09559 (12), -1.08391 (12), -1.06993 (12), -1.04258 (12), -1.04165 (12), -1.03255 (12), -0.96370 (12), -0.86028 (12), -0.83317 (12), -0.81430 (12), -0.78713 (12), -0.77864 (12), -0.76913 (12), -0.75252 (12), -0.72397 (12), -0.71159 (12), -0.71059 (12), 
Length of domains: 64
Time: pickout 0.0013    decision 0.0297    set_bounds 0.0096    solve 0.5351    add 0.0027    
Accumulated time: pickout 0.0031    decision 0.0945    set_bounds 0.0376    solve 1.6385    add 0.0069    
Current (lb-rhs): -1.3731186389923096
114 domains visited
Cumulative time: 1.7894282341003418

BaB round 4
batch: 64
splitting decisions: 
split level 0: [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.7, 702] [/input.11, 48] [/input.11, 48] [/input.7, 633] [/input.11, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 63 / 128 = 0.4921875
pruning-in-iteration extra time: 0.013589620590209961
Time: prepare 0.0231    bound 0.5191    transfer 0.0012    finalize 0.0116    func 0.5552    
Accumulated time: func 2.1934    prepare 0.0735    bound 2.0762    transfer 0.0047    finalize 0.0401    
Current worst splitting domains lb-rhs (depth):
-1.27718 (13), -1.27179 (13), -1.00848 (13), -1.00293 (13), -0.98307 (13), -0.97664 (13), -0.93745 (13), -0.93574 (13), -0.93246 (13), -0.86623 (13), -0.75800 (13), -0.73464 (13), -0.68763 (13), -0.68709 (13), -0.68475 (13), -0.66279 (13), -0.64433 (13), -0.60419 (13), -0.58483 (13), -0.57844 (13), 
Length of domains: 65
Time: pickout 0.0013    decision 0.0301    set_bounds 0.0057    solve 0.5553    add 0.0025    
Accumulated time: pickout 0.0044    decision 0.1246    set_bounds 0.0433    solve 2.1938    add 0.0094    
Current (lb-rhs): -1.2771756649017334
179 domains visited
Cumulative time: 2.3852829933166504

BaB round 5
batch: 65
splitting decisions: 
split level 0: [/input.11, 73] [/input.7, 633] [/input.11, 19] [/input.11, 73] [/input.11, 48] [/input.11, 73] [/input.11, 48] [/input.11, 73] [/input.11, 73] [/input.11, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 130 = 0.4461538461538461
pruning-in-iteration extra time: 0.014085531234741211
Time: prepare 0.0239    bound 0.5403    transfer 0.0012    finalize 0.0113    func 0.5770    
Accumulated time: func 2.7704    prepare 0.0978    bound 2.6166    transfer 0.0059    finalize 0.0514    
Current worst splitting domains lb-rhs (depth):
-1.18070 (14), -1.17848 (14), -0.90217 (14), -0.89647 (14), -0.88168 (14), -0.87420 (14), -0.83880 (14), -0.83582 (14), -0.80943 (14), -0.76260 (14), -0.64744 (14), -0.63519 (14), -0.62036 (14), -0.57738 (14), -0.57114 (14), -0.55380 (14), -0.55092 (14), -0.54750 (14), -0.52776 (14), -0.52418 (14), 
Length of domains: 72
Time: pickout 0.0013    decision 0.0317    set_bounds 0.0056    solve 0.5771    add 0.0029    
Accumulated time: pickout 0.0057    decision 0.1563    set_bounds 0.0489    solve 2.7708    add 0.0122    
Current (lb-rhs): -1.1806952953338623
251 domains visited
Cumulative time: 3.004852294921875

BaB round 6
batch: 72
splitting decisions: 
split level 0: [/input.11, 73] [/input.7, 633] [/input.7, 633] [/input.11, 19] [/input.7, 633] [/input.7, 633] [/input.11, 19] [/input.11, 73] [/input.11, 73] [/input.11, 19] 
pruning_in_iteration open status: True
ratio of positive domain = 64 / 144 = 0.4444444444444444
pruning-in-iteration extra time: 0.013567686080932617
Time: prepare 0.0272    bound 0.5069    transfer 0.0012    finalize 0.0118    func 0.5471    
Accumulated time: func 3.3175    prepare 0.1253    bound 3.1235    transfer 0.0070    finalize 0.0632    
Current worst splitting domains lb-rhs (depth):
-1.08340 (15), -1.08031 (15), -0.85275 (15), -0.83926 (15), -0.81378 (15), -0.81118 (15), -0.80523 (15), -0.78327 (15), -0.69163 (15), -0.62768 (15), -0.58199 (15), -0.54890 (15), -0.54218 (15), -0.53532 (15), -0.51363 (15), -0.51291 (15), -0.51015 (15), -0.49145 (15), -0.46387 (15), -0.44189 (15), 
Length of domains: 80
Time: pickout 0.0014    decision 0.0313    set_bounds 0.0060    solve 0.5472    add 0.0028    
Accumulated time: pickout 0.0071    decision 0.1876    set_bounds 0.0549    solve 3.3181    add 0.0150    
Current (lb-rhs): -1.0833964347839355
331 domains visited
Cumulative time: 3.5947015285491943

BaB round 7
batch: 80
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.7, 633] [/input.7, 633] [/input.11, 73] [/input.7, 702] [/input.7, 633] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 160 = 0.55
pruning-in-iteration extra time: 0.013958930969238281
Time: prepare 0.0314    bound 0.4868    transfer 0.0013    finalize 0.0133    func 0.5328    
Accumulated time: func 3.8503    prepare 0.1571    bound 3.6103    transfer 0.0083    finalize 0.0765    
Current worst splitting domains lb-rhs (depth):
-1.00046 (16), -0.96470 (16), -0.82057 (16), -0.78941 (16), -0.76150 (16), -0.74982 (16), -0.70860 (16), -0.70450 (16), -0.70418 (16), -0.68680 (16), -0.59219 (16), -0.53800 (16), -0.50106 (16), -0.48685 (16), -0.48302 (16), -0.47734 (16), -0.47209 (16), -0.46437 (16), -0.46290 (16), -0.39582 (16), 
Length of domains: 72
Time: pickout 0.0014    decision 0.0316    set_bounds 0.0067    solve 0.5329    add 0.0027    
Accumulated time: pickout 0.0085    decision 0.2193    set_bounds 0.0616    solve 3.8510    add 0.0178    
Current (lb-rhs): -1.0004627704620361
403 domains visited
Cumulative time: 4.17132043838501

BaB round 8
batch: 72
splitting decisions: 
split level 0: [/input.7, 638] [/input.11, 56] [/input.7, 702] [/input.11, 56] [/input.7, 702] [/input.7, 638] [/input.11, 56] [/input.3, 2231] [/input.7, 702] [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 144 = 0.5486111111111112
pruning-in-iteration extra time: 0.013744831085205078
Time: prepare 0.0286    bound 0.4240    transfer 0.0013    finalize 0.0126    func 0.4668    
Accumulated time: func 4.3171    prepare 0.1860    bound 4.0343    transfer 0.0096    finalize 0.0891    
Current worst splitting domains lb-rhs (depth):
-0.93037 (17), -0.89022 (17), -0.70493 (17), -0.68399 (17), -0.67190 (17), -0.66996 (17), -0.62516 (17), -0.62366 (17), -0.59652 (17), -0.59041 (17), -0.58169 (17), -0.55180 (17), -0.53697 (17), -0.48433 (17), -0.42742 (17), -0.39643 (17), -0.38605 (17), -0.37409 (17), -0.36504 (17), -0.35360 (17), 
Length of domains: 65
Time: pickout 0.0015    decision 0.0268    set_bounds 0.0060    solve 0.4668    add 0.0024    
Accumulated time: pickout 0.0100    decision 0.2460    set_bounds 0.0676    solve 4.3179    add 0.0202    
Current (lb-rhs): -0.9303661584854126
468 domains visited
Cumulative time: 4.6759374141693115

BaB round 9
batch: 65
splitting decisions: 
split level 0: [/input.7, 633] [/input.11, 56] [/input.7, 633] [/input.11, 56] [/input.7, 633] [/input.11, 10] [/input.11, 56] [/input.7, 633] [/input.11, 10] [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 130 = 0.5615384615384615
pruning-in-iteration extra time: 0.01369476318359375
Time: prepare 0.0261    bound 0.5354    transfer 0.0012    finalize 0.0113    func 0.5741    
Accumulated time: func 4.8912    prepare 0.2125    bound 4.5697    transfer 0.0109    finalize 0.1004    
Current worst splitting domains lb-rhs (depth):
-0.81445 (18), -0.77863 (18), -0.69126 (18), -0.66335 (18), -0.62943 (18), -0.59547 (18), -0.56786 (18), -0.55830 (18), -0.55075 (18), -0.52789 (18), -0.50980 (18), -0.50700 (18), -0.50608 (18), -0.46575 (18), -0.44452 (18), -0.44303 (18), -0.42453 (18), -0.37201 (18), -0.36731 (18), -0.33795 (18), 
Length of domains: 57
Time: pickout 0.0014    decision 0.0265    set_bounds 0.0055    solve 0.5743    add 0.0024    
Accumulated time: pickout 0.0113    decision 0.2725    set_bounds 0.0731    solve 4.8922    add 0.0226    
Current (lb-rhs): -0.8144481778144836
525 domains visited
Cumulative time: 5.287094354629517

BaB round 10
batch: 57
splitting decisions: 
split level 0: [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.7, 638] [/input.11, 10] [/input.11, 10] [/input.7, 638] [/input.11, 10] [/input.7, 638] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 114 = 0.5087719298245614
pruning-in-iteration extra time: 0.012823343276977539
Time: prepare 0.0230    bound 0.4315    transfer 0.0012    finalize 0.0106    func 0.4664    
Accumulated time: func 5.3576    prepare 0.2358    bound 5.0012    transfer 0.0121    finalize 0.1110    
Current worst splitting domains lb-rhs (depth):
-0.71077 (19), -0.67150 (19), -0.58315 (19), -0.55272 (19), -0.51628 (19), -0.48870 (19), -0.48146 (19), -0.48052 (19), -0.46540 (19), -0.46015 (19), -0.45012 (19), -0.40212 (19), -0.39351 (19), -0.35400 (19), -0.34985 (19), -0.34673 (19), -0.33263 (19), -0.33103 (19), -0.30135 (19), -0.29747 (19), 
Length of domains: 56
Time: pickout 0.0011    decision 0.0295    set_bounds 0.0051    solve 0.4665    add 0.0026    
Accumulated time: pickout 0.0125    decision 0.3020    set_bounds 0.0782    solve 5.3587    add 0.0251    
Current (lb-rhs): -0.7107707262039185
581 domains visited
Cumulative time: 5.7929627895355225

BaB round 11
batch: 56
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 638] [/input.11, 10] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 49 / 112 = 0.4375
pruning-in-iteration extra time: 0.013216257095336914
Time: prepare 0.0225    bound 0.3999    transfer 0.0011    finalize 0.0088    func 0.4323    
Accumulated time: func 5.7899    prepare 0.2587    bound 5.4011    transfer 0.0131    finalize 0.1198    
Current worst splitting domains lb-rhs (depth):
-0.60850 (20), -0.59210 (20), -0.54344 (20), -0.47547 (20), -0.46788 (20), -0.45656 (20), -0.41130 (20), -0.41069 (20), -0.39804 (20), -0.38729 (20), -0.38544 (20), -0.37180 (20), -0.36277 (20), -0.34733 (20), -0.32845 (20), -0.32202 (20), -0.31392 (20), -0.30555 (20), -0.28386 (20), -0.27359 (20), 
Length of domains: 63
Time: pickout 0.0013    decision 0.0297    set_bounds 0.0048    solve 0.4323    add 0.0024    
Accumulated time: pickout 0.0138    decision 0.3317    set_bounds 0.0830    solve 5.7911    add 0.0275    
Current (lb-rhs): -0.6085031032562256
644 domains visited
Cumulative time: 6.264341831207275

BaB round 12
batch: 63
splitting decisions: 
split level 0: [/input.7, 188] [/input.7, 702] [/input.7, 638] [/input.7, 188] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.3, 2231] [/input.3, 2231] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 126 = 0.46031746031746035
pruning-in-iteration extra time: 0.013343334197998047
Time: prepare 0.0249    bound 0.4326    transfer 0.0011    finalize 0.0101    func 0.4688    
Accumulated time: func 6.2587    prepare 0.2839    bound 5.8337    transfer 0.0142    finalize 0.1299    
Current worst splitting domains lb-rhs (depth):
-0.59972 (21), -0.50460 (21), -0.49232 (21), -0.47351 (21), -0.46138 (21), -0.45590 (21), -0.43091 (21), -0.40974 (21), -0.36572 (21), -0.36456 (21), -0.34762 (21), -0.33880 (21), -0.33513 (21), -0.32339 (21), -0.31960 (21), -0.30999 (21), -0.29395 (21), -0.28459 (21), -0.27219 (21), -0.26764 (21), 
Length of domains: 68
Time: pickout 0.0012    decision 0.0298    set_bounds 0.0053    solve 0.4691    add 0.0025    
Accumulated time: pickout 0.0151    decision 0.3615    set_bounds 0.0883    solve 6.2601    add 0.0300    
Current (lb-rhs): -0.5997207164764404
712 domains visited
Cumulative time: 6.773139238357544

BaB round 13
batch: 68
splitting decisions: 
split level 0: [/input.7, 188] [/input.7, 188] [/input.7, 188] [/input.7, 188] [/input.7, 188] [/input.7, 637] [/input.7, 188] [/input.7, 188] [/input.3, 2282] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 136 = 0.4338235294117647
pruning-in-iteration extra time: 0.013246536254882812
Time: prepare 0.0265    bound 0.4389    transfer 0.0013    finalize 0.0116    func 0.4785    
Accumulated time: func 6.7372    prepare 0.3108    bound 6.2726    transfer 0.0155    finalize 0.1415    
Current worst splitting domains lb-rhs (depth):
-0.56048 (22), -0.43476 (22), -0.42540 (22), -0.41706 (22), -0.39672 (22), -0.39494 (22), -0.35950 (22), -0.35922 (22), -0.33226 (22), -0.32912 (22), -0.29964 (22), -0.29348 (22), -0.29114 (22), -0.28705 (22), -0.28228 (22), -0.27868 (22), -0.26344 (22), -0.25734 (22), -0.25646 (22), -0.25303 (22), 
Length of domains: 77
Time: pickout 0.0013    decision 0.0307    set_bounds 0.0057    solve 0.4786    add 0.0027    
Accumulated time: pickout 0.0164    decision 0.3922    set_bounds 0.0939    solve 6.7388    add 0.0327    
Current (lb-rhs): -0.560479998588562
789 domains visited
Cumulative time: 7.29316782951355

BaB round 14
batch: 77
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 188] [/input.7, 188] [/input.7, 313] [/input.3, 2282] [/input.7, 707] [/input.3, 2282] [/input.7, 313] [/input.3, 2282] [/input.7, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 154 = 0.4285714285714286
pruning-in-iteration extra time: 0.013262510299682617
Time: prepare 0.0302    bound 0.4426    transfer 0.0012    finalize 0.0151    func 0.4892    
Accumulated time: func 7.2264    prepare 0.3413    bound 6.7152    transfer 0.0167    finalize 0.1565    
Current worst splitting domains lb-rhs (depth):
-0.44357 (23), -0.43020 (23), -0.38455 (23), -0.36956 (23), -0.34232 (23), -0.31773 (23), -0.31666 (23), -0.30375 (23), -0.29759 (23), -0.29290 (23), -0.28422 (23), -0.27048 (23), -0.26351 (23), -0.25521 (23), -0.24146 (23), -0.24118 (23), -0.23794 (23), -0.23643 (23), -0.23620 (23), -0.22919 (23), 
Length of domains: 88
Time: pickout 0.0014    decision 0.0314    set_bounds 0.0063    solve 0.4893    add 0.0032    
Accumulated time: pickout 0.0178    decision 0.4236    set_bounds 0.1003    solve 7.2281    add 0.0359    
Current (lb-rhs): -0.44356971979141235
877 domains visited
Cumulative time: 7.82584810256958

BaB round 15
batch: 88
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 313] [/input.7, 258] [/input.7, 707] [/input.7, 637] [/input.7, 707] [/input.7, 313] [/input.3, 2282] [/input.7, 707] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 99 / 176 = 0.5625
pruning-in-iteration extra time: 0.0140228271484375
Time: prepare 0.0344    bound 0.4157    transfer 0.0013    finalize 0.0143    func 0.4658    
Accumulated time: func 7.6923    prepare 0.3760    bound 7.1309    transfer 0.0180    finalize 0.1709    
Current worst splitting domains lb-rhs (depth):
-0.37640 (24), -0.36301 (24), -0.31771 (24), -0.27422 (24), -0.26440 (24), -0.25043 (24), -0.24852 (24), -0.24066 (24), -0.23824 (24), -0.23648 (24), -0.22728 (24), -0.22543 (24), -0.21063 (24), -0.21060 (24), -0.20387 (24), -0.19712 (24), -0.19507 (24), -0.17308 (24), -0.17212 (24), -0.16924 (24), 
Length of domains: 77
Time: pickout 0.0016    decision 0.0331    set_bounds 0.0072    solve 0.4659    add 0.0027    
Accumulated time: pickout 0.0193    decision 0.4567    set_bounds 0.1075    solve 7.6940    add 0.0385    
Current (lb-rhs): -0.3764040768146515
954 domains visited
Cumulative time: 8.338144063949585

BaB round 16
batch: 77
splitting decisions: 
split level 0: [/input.7, 313] [/input.7, 707] [/input.3, 2231] [/input.7, 707] [/input.7, 313] [/input.7, 707] [/input.3, 2231] [/input.7, 707] [/input.7, 707] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 81 / 154 = 0.525974025974026
pruning-in-iteration extra time: 0.013349056243896484
Time: prepare 0.0305    bound 0.4195    transfer 0.0013    finalize 0.0154    func 0.4670    
Accumulated time: func 8.1593    prepare 0.4068    bound 7.5504    transfer 0.0193    finalize 0.1863    
Current worst splitting domains lb-rhs (depth):
-0.27920 (25), -0.26663 (25), -0.24641 (25), -0.23879 (25), -0.23753 (25), -0.23409 (25), -0.22257 (25), -0.22032 (25), -0.21733 (25), -0.20901 (25), -0.19523 (25), -0.19213 (25), -0.17256 (25), -0.16796 (25), -0.15324 (25), -0.14563 (25), -0.14212 (25), -0.14034 (25), -0.13474 (25), -0.12431 (25), 
Length of domains: 73
Time: pickout 0.0015    decision 0.0272    set_bounds 0.0064    solve 0.4671    add 0.0028    
Accumulated time: pickout 0.0208    decision 0.4838    set_bounds 0.1139    solve 8.1612    add 0.0414    
Current (lb-rhs): -0.2791956663131714
1027 domains visited
Cumulative time: 8.84431505203247

BaB round 17
batch: 73
splitting decisions: 
split level 0: [/input.7, 703] [/input.7, 637] [/input.3, 2282] [/input.7, 313] [/input.3, 2282] [/input.7, 313] [/input.7, 313] [/input.3, 2231] [/input.7, 258] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 146 = 0.5753424657534247
pruning-in-iteration extra time: 0.012729406356811523
Time: prepare 0.0281    bound 0.4378    transfer 0.0013    finalize 0.0122    func 0.4796    
Accumulated time: func 8.6389    prepare 0.4353    bound 7.9883    transfer 0.0206    finalize 0.1985    
Current worst splitting domains lb-rhs (depth):
-0.21004 (26), -0.19506 (26), -0.18752 (26), -0.18731 (26), -0.18592 (26), -0.15552 (26), -0.15142 (26), -0.14864 (26), -0.14659 (26), -0.14292 (26), -0.13675 (26), -0.13400 (26), -0.12641 (26), -0.12011 (26), -0.11854 (26), -0.11033 (26), -0.10858 (26), -0.10049 (26), -0.09952 (26), -0.09737 (26), 
Length of domains: 62
Time: pickout 0.0012    decision 0.0307    set_bounds 0.0060    solve 0.4797    add 0.0025    
Accumulated time: pickout 0.0221    decision 0.5145    set_bounds 0.1199    solve 8.6409    add 0.0439    
Current (lb-rhs): -0.2100408971309662
1089 domains visited
Cumulative time: 9.365574598312378

BaB round 18
batch: 62
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 703] [/input.7, 703] [/input.7, 258] [/input.7, 703] [/input.7, 703] [/input.7, 703] [/input.7, 703] [/input.7, 258] [/input.7, 112] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 124 = 0.7016129032258065
pruning-in-iteration extra time: 0.013542413711547852
Time: prepare 0.0240    bound 0.4317    transfer 0.0011    finalize 0.0104    func 0.4673    
Accumulated time: func 9.1062    prepare 0.4597    bound 8.4199    transfer 0.0217    finalize 0.2088    
Current worst splitting domains lb-rhs (depth):
-0.12924 (27), -0.12335 (27), -0.11615 (27), -0.10562 (27), -0.10158 (27), -0.09854 (27), -0.09659 (27), -0.08590 (27), -0.08508 (27), -0.08413 (27), -0.08313 (27), -0.07305 (27), -0.07252 (27), -0.06749 (27), -0.05963 (27), -0.05143 (27), -0.05062 (27), -0.04956 (27), -0.04619 (27), -0.04511 (27), 
Length of domains: 37
Time: pickout 0.0014    decision 0.0303    set_bounds 0.0052    solve 0.4674    add 0.0022    
Accumulated time: pickout 0.0235    decision 0.5448    set_bounds 0.1251    solve 9.1083    add 0.0460    
Current (lb-rhs): -0.1292429268360138
1126 domains visited
Cumulative time: 9.873412609100342

BaB round 19
batch: 37
splitting decisions: 
split level 0: [/input.7, 703] [/input.7, 703] [/input.7, 703] [/input.7, 258] [/input.7, 703] [/input.3, 2254] [/input.7, 703] [/input.3, 2282] [/input.7, 258] [/input.7, 703] 
split level 1: [/input.3, 2254] [/input.7, 256] [/input.7, 112] [/input.3, 2254] [/input.7, 112] [/input.7, 112] [/input.7, 708] [/input.3, 2254] [/input.3, 2254] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 146 / 148 = 0.9864864864864865
pruning-in-iteration extra time: 0.013480424880981445
Time: prepare 0.0285    bound 0.4609    transfer 0.0013    finalize 0.0124    func 0.5031    
Accumulated time: func 9.6093    prepare 0.4885    bound 8.8808    transfer 0.0230    finalize 0.2212    
Current worst splitting domains lb-rhs (depth):
-0.03324 (29), -0.00464 (29), 
Length of domains: 2
Time: pickout 0.0013    decision 0.0299    set_bounds 0.0103    solve 0.5032    add 0.0012    
Accumulated time: pickout 0.0247    decision 0.5747    set_bounds 0.1354    solve 9.6115    add 0.0472    
Current (lb-rhs): -0.03324499726295471
1128 domains visited
Cumulative time: 10.420901775360107

BaB round 20
batch: 2
splitting decisions: 
split level 0: [/input.11, 0] [/input.11, 0] 
split level 1: [/input.7, 178] [/input.7, 112] 
split level 2: [/input.7, 28] [/input.7, 708] 
split level 3: [/input.7, 33] [/input.7, 178] 
split level 4: [/input.7, 256] [/input.7, 28] 
split level 5: [/input.7, 708] [/input.7, 256] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0248    bound 0.0072    transfer 0.0006    finalize 0.0090    func 0.0418    
Accumulated time: func 9.6510    prepare 0.5139    bound 8.8880    transfer 0.0236    finalize 0.2302    
Length of domains: 0
Time: pickout 0.0012    decision 0.0360    set_bounds 0.0176    solve 0.0418    add 0.0001    
Accumulated time: pickout 0.0259    decision 0.6107    set_bounds 0.1530    solve 9.6533    add 0.0473    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1128 domains visited
Cumulative time: 10.518304586410522

Result: safe in 18.1723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.12645221, 10.13879967, -1.17761636, -1.63764632,  0.46465954,
         -3.88793564, -3.45391464,  2.72170234,  0.96736354, -2.16976404]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.52869654,  8.33585072, -1.66112447, -1.22651494,  0.63623267,
          -3.63079643, -4.14352465,  4.96436501,  1.11222136, -1.02523541],
         [-3.52869654,  8.33585072, -1.66112447, -1.22651494,  0.63623267,
          -3.63079643, -4.14352465,  4.96436501,  1.11222136, -1.02523541]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.86454773,  9.99697495,  9.56236553,  7.69961786, 11.96664715,
          12.47937584,  3.37148571,  7.22362947,  9.36108589]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3944 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.12645221, 10.13880062, -1.17761672, -1.63764608,  0.46465883,
         -3.88793564, -3.45391417,  2.72170186,  0.96736395, -2.16976333]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [739]; unstable size 739; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 232, 1, 739] with unstable size 231 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 23, 1, 739] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 739] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [231]; unstable size 231; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 23, 1, 231] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.59774876, 4.50753498, 4.37842941, 3.56624341, 6.19323540, 7.03798342,
         0.84129083, 2.63958192, 3.78366470]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.99149275, -0.00964306, -2.88043523, -2.34340501,  8.37071323,
         -1.33868504, -3.75976920,  1.90009069,  3.65128827,  1.32162070]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.26883698, -0.92365652, -1.75892472, -1.11849082,  4.76947880,
           0.16740625, -3.17589664, -0.23204502,  6.03924084,  1.45411980],
         [-5.26883698, -0.92365652, -1.75892472, -1.11849082,  4.76947880,
           0.16740625, -3.17589664, -0.23204502,  6.03924084,  1.45411980]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.03831577,  5.69313526,  6.52840328,  5.88796949,  4.60207272,
           7.94537544,  5.00152397, -1.26976204,  3.31535912]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0121 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0130 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.64495611, -3.42065287,  0.92806959,  1.72768986,  0.89517540,
         -0.13997407, -6.38442516, -0.43546531,  1.37373841,  8.24500847]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.74it/s]100%|██████████| 1/1 [00:00<00:00,  2.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.74100590, -3.16933870,  1.99557996,  4.50869894, -0.66207701,
          -0.20767184, -6.46812820,  0.37939814,  1.54586649,  5.95140743],
         [-3.74100590, -3.16933870,  1.99557996,  4.50869894, -0.66207701,
          -0.20767184, -6.46812820,  0.37939814,  1.54586649,  5.95140743]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.69241333,  9.12074661,  3.95582747,  1.44270849,  6.61348438,
           6.15907907, 12.41953564,  5.57200909,  4.40554094]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3711 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
         -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [657]; unstable size 657; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 154, 1, 657] with unstable size 153 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 657] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 657] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [153]; unstable size 153; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 153] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 153] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.96487808,  0.26431751, -3.87178516, -3.43416142, -2.67614174,
         -0.71439147,  3.18346262, -2.37536669, -3.16528177]], device='cuda:0') None
best_l after optimization: -2.4166862964630127
alpha/beta optimization time: 4.021304368972778
initial alpha-crown bounds: tensor([[ 3.40439129,  1.42971253, -3.05168533, -2.74632835, -1.85839450,
         -0.15628445,  4.01820278, -1.89363122, -1.56266904]], device='cuda:0')
Worst class: (+ rhs) -3.051685333251953
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.5490653514862
##### Instance 6 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.404391288757324.

Properties batch 1, size 1
Remaining timeout: 295.39762234687805
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4297125339508057.

Properties batch 2, size 1
Remaining timeout: 295.29251742362976
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.05168533]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.05168533]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 89] 
split level 2: [/input.11, 96] 
split level 3: [/input.7, 586] 
split level 4: [/input.11, 33] 
split level 5: [/input.11, 58] 
split level 6: [/input.11, 7] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.01346731185913086
Time: prepare 0.0145    bound 0.4179    transfer 0.0011    finalize 0.0080    func 0.4416    
Accumulated time: func 0.4416    prepare 0.0151    bound 0.4179    transfer 0.0011    finalize 0.0080    
Current worst splitting domains lb-rhs (depth):
-1.26738 (7), -1.06806 (7), -0.43679 (7), -0.42897 (7), -0.04046 (7), -0.03292 (7), 
Length of domains: 6
Time: pickout 0.0007    decision 0.0376    set_bounds 0.0166    solve 0.4416    add 0.0014    
Accumulated time: pickout 0.0007    decision 0.0376    set_bounds 0.0166    solve 0.4416    add 0.0014    
Current (lb-rhs): -1.267378807067871
6 domains visited
Cumulative time: 0.5051369667053223

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.7, 137] [/input.11, 45] [/input.11, 45] 
split level 1: [/input.7, 137] [/input.11, 14] [/input.7, 137] [/input.11, 45] [/input.7, 137] [/input.11, 14] 
split level 2: [/input.11, 14] [/input.11, 25] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 649] 
split level 3: [/input.7, 649] [/input.7, 636] [/input.7, 649] [/input.7, 636] [/input.11, 25] [/input.11, 25] 
split level 4: [/input.11, 25] [/input.7, 649] [/input.11, 25] [/input.7, 117] [/input.7, 649] [/input.7, 719] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 192 = 0.90625
pruning-in-iteration extra time: 0.014038562774658203
Time: prepare 0.0263    bound 0.4968    transfer 0.0014    finalize 0.0140    func 0.5386    
Accumulated time: func 0.9802    prepare 0.0419    bound 0.9147    transfer 0.0025    finalize 0.0220    
Current worst splitting domains lb-rhs (depth):
-0.37885 (12), -0.35653 (12), -0.20767 (12), -0.20205 (12), -0.19784 (12), -0.19432 (12), -0.19321 (12), -0.16811 (12), -0.15917 (12), -0.14346 (12), -0.11924 (12), -0.11109 (12), -0.09648 (12), -0.09169 (12), -0.08336 (12), -0.05425 (12), -0.04037 (12), -0.01676 (12), 
Length of domains: 18
Time: pickout 0.0012    decision 0.0361    set_bounds 0.0234    solve 0.5388    add 0.0018    
Accumulated time: pickout 0.0019    decision 0.0737    set_bounds 0.0400    solve 0.9804    add 0.0032    
Current (lb-rhs): -0.37885481119155884
24 domains visited
Cumulative time: 1.1085631847381592

BaB round 3
batch: 18
splitting decisions: 
split level 0: [/input.11, 86] [/input.7, 137] [/input.7, 137] [/input.7, 636] [/input.7, 137] [/input.7, 137] [/input.7, 719] [/input.7, 137] [/input.7, 719] [/input.7, 137] 
split level 1: [/input.7, 636] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.11, 86] [/input.7, 141] [/input.7, 636] [/input.7, 141] 
split level 2: [/input.7, 719] [/input.7, 718] [/input.7, 718] [/input.7, 719] [/input.7, 718] [/input.7, 718] [/input.7, 636] [/input.7, 718] [/input.7, 141] [/input.7, 718] 
pruning_in_iteration open status: True
ratio of positive domain = 143 / 144 = 0.9930555555555556
pruning-in-iteration extra time: 0.013572454452514648
Time: prepare 0.0197    bound 0.3860    transfer 0.0024    finalize 0.0129    func 0.4212    
Accumulated time: func 1.4013    prepare 0.0619    bound 1.3007    transfer 0.0049    finalize 0.0349    
Current worst splitting domains lb-rhs (depth):
-0.01517 (15), 
Length of domains: 1
Time: pickout 0.0013    decision 0.0224    set_bounds 0.0110    solve 0.4212    add 0.0008    
Accumulated time: pickout 0.0032    decision 0.0961    set_bounds 0.0511    solve 1.4016    add 0.0040    
Current (lb-rhs): -0.015168845653533936
25 domains visited
Cumulative time: 1.566274881362915

BaB round 4
batch: 1
splitting decisions: 
split level 0: [/input.7, 149] 
split level 1: [/input.7, 711] 
split level 2: [/input.7, 232] 
split level 3: [/input.7, 636] 
split level 4: [/input.11, 86] 
split level 5: [/input.7, 593] 
split level 6: [/input.7, 317] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0169    bound 0.0071    transfer 0.0006    finalize 0.0073    func 0.0320    
Accumulated time: func 1.4334    prepare 0.0794    bound 1.3078    transfer 0.0056    finalize 0.0422    
Length of domains: 0
Time: pickout 0.0008    decision 0.0396    set_bounds 0.0197    solve 0.0321    add 0.0001    
Accumulated time: pickout 0.0040    decision 0.1356    set_bounds 0.0707    solve 1.4338    add 0.0041    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
25 domains visited
Cumulative time: 1.6591835021972656


Properties batch 3, size 1
Remaining timeout: 293.4944806098938
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.74632835]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.74632835]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 80] 
split level 3: [/input.11, 7] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 96] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.01278376579284668
Time: prepare 0.0076    bound 0.4005    transfer 0.0012    finalize 0.0077    func 0.4171    
Accumulated time: func 0.4171    prepare 0.0082    bound 0.4005    transfer 0.0012    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.69606 (7), -0.69053 (7), -0.64390 (7), -0.24216 (7), -0.16269 (7), -0.05662 (7), 
Length of domains: 6
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0158    solve 0.4171    add 0.0014    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0158    solve 0.4171    add 0.0014    
Current (lb-rhs): -0.6960561275482178
6 domains visited
Cumulative time: 0.4791984558105469

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.11, 56] [/input.7, 137] [/input.7, 137] [/input.7, 137] [/input.7, 586] [/input.7, 586] 
split level 1: [/input.7, 137] [/input.7, 586] [/input.7, 586] [/input.7, 586] [/input.7, 137] [/input.7, 137] 
split level 2: [/input.7, 586] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] 
split level 3: [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 136] [/input.7, 148] [/input.7, 148] 
split level 4: [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.7, 317] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0254    bound 0.0074    transfer 0.0009    finalize 0.0117    func 0.0454    
Accumulated time: func 0.4624    prepare 0.0340    bound 0.4080    transfer 0.0021    finalize 0.0193    
Length of domains: 0
Time: pickout 0.0009    decision 0.0329    set_bounds 0.0209    solve 0.0455    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0704    set_bounds 0.0367    solve 0.4626    add 0.0015    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.580981969833374


Properties batch 4, size 1
Remaining timeout: 292.7679669857025
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.85839450]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.85839450]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 7] 
split level 2: [/input.7, 586] 
split level 3: [/input.11, 33] 
split level 4: [/input.11, 1] 
split level 5: [/input.11, 84] 
split level 6: [/input.11, 47] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.013548851013183594
Time: prepare 0.0146    bound 0.3960    transfer 0.0018    finalize 0.0101    func 0.4226    
Accumulated time: func 0.4226    prepare 0.0152    bound 0.3960    transfer 0.0018    finalize 0.0101    
Current worst splitting domains lb-rhs (depth):
-0.10784 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.4227    add 0.0008    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.4227    add 0.0008    
Current (lb-rhs): -0.10784366726875305
1 domains visited
Cumulative time: 0.4850776195526123

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.7, 232] 
split level 1: [/input.11, 89] 
split level 2: [/input.7, 107] 
split level 3: [/input.7, 407] 
split level 4: [/input.7, 718] 
split level 5: [/input.7, 117] 
split level 6: [/input.11, 14] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.273124694824219e-05
Time: prepare 0.0169    bound 0.0071    transfer 0.0006    finalize 0.0072    func 0.0320    
Accumulated time: func 0.4546    prepare 0.0328    bound 0.4031    transfer 0.0024    finalize 0.0174    
Length of domains: 0
Time: pickout 0.0007    decision 0.0395    set_bounds 0.0199    solve 0.0321    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0770    set_bounds 0.0365    solve 0.4548    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.5781662464141846


Properties batch 5, size 1
Remaining timeout: 292.0455183982849
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15628445]], device='cuda:0') need to verify.
torch allclose failed: norm 4.535072264388873e-07
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15628445]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 89] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 59] 
split level 5: [/input.11, 7] 
split level 6: [/input.11, 33] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0076    bound 0.0072    transfer 0.0007    finalize 0.0058    func 0.0214    
Accumulated time: func 0.0214    prepare 0.0082    bound 0.0072    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0374    set_bounds 0.0157    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0374    set_bounds 0.0157    solve 0.0215    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08164525032043457


Properties batch 6, size 1
Remaining timeout: 291.8177251815796
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.018202781677246.

Properties batch 7, size 1
Remaining timeout: 291.7078857421875
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.89363122]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.89363122]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 14] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 47] 
split level 6: [/input.7, 586] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0145    bound 0.0073    transfer 0.0006    finalize 0.0072    func 0.0298    
Accumulated time: func 0.0298    prepare 0.0151    bound 0.0073    transfer 0.0006    finalize 0.0072    
Length of domains: 0
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.0299    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.0299    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09126400947570801


Properties batch 8, size 1
Remaining timeout: 291.4773850440979
##### Instance 6 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.56266904]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.64495659, -3.42065334,  0.92806947,  1.72769022,  0.89517528,
        -0.13997407, -6.38442469, -0.43546566,  1.37373817,  8.24500847],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.56266904]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 657
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 152
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 7] 
split level 4: [/input.11, 58] 
split level 5: [/input.11, 89] 
split level 6: [/input.11, 96] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.702278137207031e-05
Time: prepare 0.0075    bound 0.0072    transfer 0.0006    finalize 0.0058    func 0.0214    
Accumulated time: func 0.0214    prepare 0.0082    bound 0.0072    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0377    set_bounds 0.0157    solve 0.0214    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0377    set_bounds 0.0157    solve 0.0214    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0819692611694336

Result: safe in 8.7482 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.69679260, -8.20513439, -2.38261938, -3.18053436, -0.24801663,
          8.31674671,  8.00961971, -4.32586765,  4.32464981, -0.21093310]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.59954357, -8.31069946, -2.51677752, -3.21793556,  0.01711873,
           8.11982250,  8.13378620, -4.38384914,  4.26445198, -0.10739478],
         [-2.59954357, -8.31069946, -2.51677752, -3.21793556,  0.01711873,
           8.11982250,  8.13378620, -4.38384914,  4.26445198, -0.10739478]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.07193661e+01,  1.64305229e+01,  1.06366005e+01,  1.13377581e+01,
           8.10270405e+00, -1.39636993e-02,  1.25036716e+01,  3.85537052e+00,
           8.22721767e+00]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0098 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0108 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.57257318, -8.69636822, -5.26186275,  2.18567371,  1.44675410,
         -2.31645536, -8.38583755,  7.22470188,  4.88316154, 13.44854546]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.73643756, -7.38063192, -5.01347303,  0.34844375,  1.39555919,
          -2.52808428, -8.60284615, 10.58886909,  4.26052094, 10.51731110],
         [-3.73643756, -7.38063192, -5.01347303,  0.34844375,  1.39555919,
          -2.52808428, -8.60284615, 10.58886909,  4.26052094, 10.51731110]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.25374889, 17.89794350, 15.53078461, 10.16886711,  9.12175179,
          13.04539490, 19.12015724, -0.07155800,  6.25679016]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0124 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0133 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[12.62677860,  0.06043847,  1.68634582, -1.59739923, -3.86612296,
         -1.97117877, -0.39392540, -1.97019386, -4.27820253, -0.68545133]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[10.44505787,  1.65037763,  3.76892281,  0.48961532, -5.04957294,
          -1.86465311, -3.15592647, -1.84980261, -4.13094711, -0.61115491],
         [10.44505787,  1.65037763,  3.76892281,  0.48961532, -5.04957294,
          -1.86465311, -3.15592647, -1.84980261, -4.13094711, -0.61115491]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.79468060,  6.67613506,  9.95544243, 15.49463081, 12.30971146,
          13.60098457, 12.29486084, 14.57600498, 11.05621243]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3958 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[12.62677956,  0.06043847,  1.68634558, -1.59739959, -3.86612344,
         -1.97117913, -0.39392564, -1.97019339, -4.27820206, -0.68545163]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [618]; unstable size 618; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 135, 1, 618] with unstable size 134 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 618] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 618] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [134]; unstable size 134; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 134] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 134] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.97678280, 0.03369999, 3.16513491, 8.22986412, 1.39233589, 5.29528379,
         4.50413752, 5.33974409, 3.26334524]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4483 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.14802313, -1.54099667, -0.99199724, -4.03140068, -2.02071571,
          1.63023305, 10.84079266, -6.92954254,  4.55086040, -3.98997879]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.40091613, -2.03350210,  0.45627865, -2.49792576, -3.09305334,
           1.44158244,  7.57157707, -6.29463720,  7.57724190, -3.73845673],
         [ 0.40091613, -2.03350210,  0.45627865, -2.49792576, -3.09305334,
           1.44158244,  7.57157707, -6.29463720,  7.57724190, -3.73845673]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.17066097e+00,  9.60507965e+00,  7.11529827e+00,  1.00695028e+01,
           1.06646309e+01,  6.12999439e+00,  1.38662148e+01, -5.66482544e-03,
           1.13100338e+01]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0120 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0129 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.29098272, -6.41613626, -3.59637642,  0.68880057,  4.09049463,
         -2.13342953, -6.79672575,  4.57518625,  0.40964386, 12.34256744]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.23862433, -5.23695040, -3.32918501, -0.31015635,  3.58181453,
          -0.81658858, -7.58239079,  7.23395681, -0.41205296,  8.96728706],
         [-2.23862433, -5.23695040, -3.32918501, -0.31015635,  3.58181453,
          -0.81658858, -7.58239079,  7.23395681, -0.41205296,  8.96728706]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.20591164, 14.20423698, 12.29647255,  9.27744293,  5.38547230,
           9.78387547, 16.54967880,  1.73333025,  9.37934017]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3730 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.29098272, -6.41613626, -3.59637594,  0.68880033,  4.09049463,
         -2.13342929, -6.79672527,  4.57518578,  0.40964332, 12.34256840]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [687]; unstable size 687; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 138, 1, 687] with unstable size 137 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 687] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 687] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [137]; unstable size 137; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 137] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 137] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.78745317,  4.14752150,  2.09750915, -0.27127910, -3.83970070,
          0.55466485,  5.50845909, -5.61366272, -0.79412508]], device='cuda:0') None
best_l after optimization: 13.760970115661621
alpha/beta optimization time: 4.032582521438599
initial alpha-crown bounds: tensor([[ 4.46330929,  4.99870348,  3.04450941,  0.57577407, -2.73257232,
          1.41744328,  6.32223511, -4.78274202,  0.45430946]], device='cuda:0')
Worst class: (+ rhs) -4.782742023468018
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.53917479515076
##### Instance 11 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.463309288024902.

Properties batch 1, size 1
Remaining timeout: 295.39933252334595
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.998703479766846.

Properties batch 2, size 1
Remaining timeout: 295.2942409515381
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0445094108581543.

Properties batch 3, size 1
Remaining timeout: 295.1899564266205
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.575774073600769.

Properties batch 4, size 1
Remaining timeout: 295.085604429245
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.73257232]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.29098272, -6.41613626, -3.59637594,  0.68880033,  4.09049463,
        -2.13342929, -6.79672527,  4.57518578,  0.40964332, 12.34256840],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.73257232]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 851
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 96] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 33] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 17] 
split level 6: [/input.11, 1] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 128 = 0.9453125
pruning-in-iteration extra time: 0.013839483261108398
Time: prepare 0.0076    bound 0.4047    transfer 0.0018    finalize 0.0089    func 0.4230    
Accumulated time: func 0.4230    prepare 0.0082    bound 0.4047    transfer 0.0018    finalize 0.0089    
Current worst splitting domains lb-rhs (depth):
-0.44149 (7), -0.38899 (7), -0.34204 (7), -0.16662 (7), -0.09502 (7), -0.07968 (7), -0.05418 (7), 
Length of domains: 7
Time: pickout 0.0007    decision 0.0377    set_bounds 0.0160    solve 0.4231    add 0.0017    
Accumulated time: pickout 0.0007    decision 0.0377    set_bounds 0.0160    solve 0.4231    add 0.0017    
Current (lb-rhs): -0.44148826599121094
7 domains visited
Cumulative time: 0.48590636253356934

BaB round 2
batch: 7
splitting decisions: 
split level 0: [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.7, 718] 
split level 1: [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.11, 50] [/input.7, 307] [/input.11, 50] [/input.11, 50] 
split level 2: [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.7, 307] [/input.11, 50] [/input.7, 307] [/input.7, 307] 
split level 3: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 112 / 112 = 1.0
pruning-in-iteration extra time: 8.535385131835938e-05
Time: prepare 0.0149    bound 0.0073    transfer 0.0006    finalize 0.0065    func 0.0293    
Accumulated time: func 0.4524    prepare 0.0236    bound 0.4120    transfer 0.0024    finalize 0.0154    
Length of domains: 0
Time: pickout 0.0011    decision 0.0275    set_bounds 0.0110    solve 0.0295    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0652    set_bounds 0.0269    solve 0.4526    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 0.555687665939331


Properties batch 5, size 1
Remaining timeout: 294.39061665534973
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4174432754516602.

Properties batch 6, size 1
Remaining timeout: 294.28067994117737
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.322235107421875.

Properties batch 7, size 1
Remaining timeout: 294.17495346069336
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.78274202]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.29098272, -6.41613626, -3.59637594,  0.68880033,  4.09049463,
        -2.13342929, -6.79672527,  4.57518578,  0.40964332, 12.34256840],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.78274202]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 851
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.01352691650390625
Time: prepare 0.0076    bound 0.4210    transfer 0.0013    finalize 0.0079    func 0.4378    
Accumulated time: func 0.4378    prepare 0.0082    bound 0.4210    transfer 0.0013    finalize 0.0079    
Current worst splitting domains lb-rhs (depth):
-1.77009 (7), -1.50457 (7), -1.45083 (7), -1.37105 (7), -0.84087 (7), -0.75650 (7), -0.71327 (7), -0.69240 (7), -0.67595 (7), -0.55751 (7), -0.44703 (7), -0.31202 (7), -0.21198 (7), -0.17618 (7), -0.12323 (7), -0.05741 (7), 
Length of domains: 16
Time: pickout 0.0007    decision 0.0379    set_bounds 0.0158    solve 0.4379    add 0.0020    
Accumulated time: pickout 0.0007    decision 0.0379    set_bounds 0.0158    solve 0.4379    add 0.0020    
Current (lb-rhs): -1.7700858116149902
16 domains visited
Cumulative time: 0.5015816688537598

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.7, 307] [/input.11, 58] [/input.11, 96] [/input.11, 58] [/input.11, 96] [/input.11, 96] [/input.11, 58] [/input.11, 96] [/input.11, 58] [/input.11, 96] 
split level 1: [/input.11, 58] [/input.7, 307] [/input.11, 58] [/input.11, 96] [/input.11, 58] [/input.11, 58] [/input.11, 96] [/input.11, 58] [/input.11, 50] [/input.11, 58] 
split level 2: [/input.11, 96] [/input.11, 96] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 96] [/input.11, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 128 = 0.8203125
pruning-in-iteration extra time: 0.013635635375976562
Time: prepare 0.0123    bound 0.4179    transfer 0.0011    finalize 0.0074    func 0.4387    
Accumulated time: func 0.8765    prepare 0.0208    bound 0.8389    transfer 0.0024    finalize 0.0153    
Current worst splitting domains lb-rhs (depth):
-0.84569 (10), -0.65936 (10), -0.59902 (10), -0.59079 (10), -0.52349 (10), -0.48775 (10), -0.48537 (10), -0.40580 (10), -0.40401 (10), -0.39732 (10), -0.39245 (10), -0.34590 (10), -0.33358 (10), -0.32176 (10), -0.31338 (10), -0.31082 (10), -0.26786 (10), -0.21633 (10), -0.20926 (10), -0.20597 (10), 
Length of domains: 23
Time: pickout 0.0012    decision 0.0236    set_bounds 0.0099    solve 0.4388    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.0615    set_bounds 0.0258    solve 0.8767    add 0.0040    
Current (lb-rhs): -0.8456926345825195
39 domains visited
Cumulative time: 0.9781992435455322

BaB round 3
batch: 23
splitting decisions: 
split level 0: [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] 
split level 2: [/input.7, 307] [/input.7, 632] [/input.7, 307] [/input.7, 632] [/input.7, 307] [/input.7, 636] [/input.7, 632] [/input.7, 632] [/input.7, 307] [/input.7, 307] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 184 = 0.9728260869565217
pruning-in-iteration extra time: 0.013592243194580078
Time: prepare 0.0241    bound 0.4320    transfer 0.0014    finalize 0.0135    func 0.4710    
Accumulated time: func 1.3475    prepare 0.0452    bound 1.2709    transfer 0.0037    finalize 0.0288    
Current worst splitting domains lb-rhs (depth):
-0.39751 (13), -0.15636 (13), -0.15572 (13), -0.14948 (13), -0.08055 (13), 
Length of domains: 5
Time: pickout 0.0012    decision 0.0291    set_bounds 0.0147    solve 0.4711    add 0.0013    
Accumulated time: pickout 0.0031    decision 0.0906    set_bounds 0.0404    solve 1.3478    add 0.0053    
Current (lb-rhs): -0.39751195907592773
44 domains visited
Cumulative time: 1.4977476596832275

BaB round 4
batch: 5
splitting decisions: 
split level 0: [/input.7, 307] [/input.7, 241] [/input.7, 241] [/input.7, 241] [/input.7, 241] 
split level 1: [/input.7, 636] [/input.7, 236] [/input.7, 636] [/input.7, 636] [/input.7, 636] 
split level 2: [/input.7, 236] [/input.7, 718] [/input.7, 236] [/input.7, 718] [/input.7, 236] 
split level 3: [/input.7, 183] [/input.7, 183] [/input.7, 718] [/input.7, 236] [/input.7, 718] 
split level 4: [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0206    bound 0.0072    transfer 0.0017    finalize 0.0112    func 0.0408    
Accumulated time: func 1.3883    prepare 0.0664    bound 1.2780    transfer 0.0054    finalize 0.0400    
Length of domains: 0
Time: pickout 0.0012    decision 0.0303    set_bounds 0.0163    solve 0.0408    add 0.0001    
Accumulated time: pickout 0.0043    decision 0.1209    set_bounds 0.0567    solve 1.3886    add 0.0053    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
44 domains visited
Cumulative time: 1.5870935916900635


Properties batch 8, size 1
Remaining timeout: 292.4494197368622
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.45430946350097656.
Result: safe in 7.6616 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.70642662, -3.48850584, -0.66141593, -3.89491272, -1.64126003,
         -1.86503804, -0.41209075,  1.38467002, -2.02532148,  0.56525028]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]100%|██████████| 1/1 [00:00<00:00,  2.56it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.24895859, -2.92571640, -1.02918541, -3.88368654, -1.01026487,
          -1.62842751, -2.13560605,  4.70006561, -2.47742653,  0.80771971],
         [ 9.24895859, -2.92571640, -1.02918541, -3.88368654, -1.01026487,
          -1.62842751, -2.13560605,  4.70006561, -2.47742653,  0.80771971]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.17467499, 10.27814388, 13.13264465, 10.25922394, 10.87738609,
          11.38456440,  4.54889297, 11.72638512,  8.44123840]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3972 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.70642757, -3.48850632, -0.66141629, -3.89491224, -1.64126086,
         -1.86503768, -0.41208985,  1.38466930, -2.02532101,  0.56525087]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [729]; unstable size 729; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 126, 1, 729] with unstable size 125 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 729] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 729] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [125]; unstable size 125; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 125] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 125] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.79067993,  3.61319971,  6.20911407,  3.14800596,  2.30292320,
          5.17508698, -0.35448551,  3.52372599, -0.10634041]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 33.397186279296875
alpha/beta optimization time: 0.14514398574829102
initial alpha-crown bounds: tensor([[7.05882359, 3.86591148, 6.51611567, 3.44919252, 2.69273996, 5.42483997,
         0.01554155, 3.95644593, 0.41757584]], device='cuda:0')
Worst class: (+ rhs) 0.015541553497314453
verified with init bound!
Result: safe-incomplete in 0.5958 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.18321753, 11.51272011, -1.59534299,  0.45880279, -2.06992173,
         -1.47768295, -0.92607570, -2.32616854,  3.21650100, -2.86720085]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]100%|██████████| 1/1 [00:00<00:00,  2.71it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.69403505,  9.70353603, -1.82361889,  0.85471213, -2.03342986,
          -1.32621908, -1.30322504, -2.30447268,  4.47064590, -1.76339412],
         [-4.69403505,  9.70353603, -1.82361889,  0.85471213, -2.03342986,
          -1.32621908, -1.30322504, -2.30447268,  4.47064590, -1.76339412]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.39757156, 11.52715492,  8.84882355, 11.73696613, 11.02975464,
          11.00676155, 12.00800896,  5.23289013, 11.46693039]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3749 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.18321753, 11.51272106, -1.59534299,  0.45880258, -2.06992126,
         -1.47768307, -0.92607570, -2.32616854,  3.21650100, -2.86720061]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 269, 1, 688] with unstable size 268 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 21, 1, 688] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [268]; unstable size 268; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 21, 1, 268] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 268] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.63527679,  7.82045078,  5.07233286,  9.22947407,  7.47973013,
          7.62077570,  8.41058731,  3.38720989,  7.60265446]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4282 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.94077325, -2.11713648, -2.56201935,  5.67685938, -5.06446981,
          9.91379833, -1.75501823, -2.02458262, -0.38755730,  0.09781658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.58193445, -1.27987838, -1.43571103,  7.82801437, -5.76927423,
           7.79573584, -2.91641402, -2.81964087,  0.47995654,  0.56258142],
         [-2.58193445, -1.27987838, -1.43571103,  7.82801437, -5.76927423,
           7.79573584, -2.91641402, -2.81964087,  0.47995654,  0.56258142]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.37767029,  9.07561398,  9.23144722, -0.03227854, 13.56501007,
          10.71214962, 10.61537647,  7.31577921,  7.23315430]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0157 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0166 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.14870083, -5.09839630, -2.52411699, -0.90442753,  2.03708386,
         -4.29115915, -3.85621762,  3.50658703, -0.35501739, 11.44457340]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]100%|██████████| 1/1 [00:00<00:00,  2.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.55737966, -3.86854243, -1.52567756, -0.95047569, -0.19608214,
          -3.47824907, -5.31492424,  6.52712297, -0.08897284,  8.12287426],
         [ 0.55737966, -3.86854243, -1.52567756, -0.95047569, -0.19608214,
          -3.47824907, -5.31492424,  6.52712297, -0.08897284,  8.12287426]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.56549454, 11.99141693,  9.64855194,  9.07334995,  8.31895638,
          11.60112381, 13.43779850,  1.59575129,  8.21184731]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3736 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.14870122, -5.09839630, -2.52411747, -0.90442753,  2.03708386,
         -4.29115915, -3.85621834,  3.50658751, -0.35501727, 11.44457340]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [712]; unstable size 712; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 135, 1, 712] with unstable size 134 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 712] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 712] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [134]; unstable size 134; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 134] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 134] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.24895144e+00,  3.25965881e-03, -2.13542175e+00, -1.07285881e+00,
         -5.15642929e+00,  8.39708805e-01, -3.32193375e-02, -7.03910398e+00,
         -2.69771528e+00]], device='cuda:0') None
best_l after optimization: -4.924376010894775
alpha/beta optimization time: 4.106541156768799
initial alpha-crown bounds: tensor([[ 0.09554887,  1.71266699, -0.34488440,  0.20410585, -3.58758640,
          2.18696928,  1.69513130, -5.58755684, -1.29877079]], device='cuda:0')
Worst class: (+ rhs) -5.587556838989258
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.466504573822
##### Instance 15 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.09554886817932129.

Properties batch 1, size 1
Remaining timeout: 295.3376293182373
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7126669883728027.

Properties batch 2, size 1
Remaining timeout: 295.2320559024811
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34488440]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.14870122, -5.09839630, -2.52411747, -0.90442753,  2.03708386,
        -4.29115915, -3.85621834,  3.50658751, -0.35501727, 11.44457340],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34488440]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 871
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 17] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 58] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 96] 
split level 5: [/input.11, 33] 
split level 6: [/input.11, 7] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.916854858398438e-05
Time: prepare 0.0075    bound 0.0073    transfer 0.0013    finalize 0.0074    func 0.0237    
Accumulated time: func 0.0237    prepare 0.0081    bound 0.0073    transfer 0.0013    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0376    set_bounds 0.0157    solve 0.0238    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0376    set_bounds 0.0157    solve 0.0238    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0840306282043457


Properties batch 3, size 1
Remaining timeout: 295.008939743042
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20410585403442383.

Properties batch 4, size 1
Remaining timeout: 294.8995065689087
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.58758640]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.14870122, -5.09839630, -2.52411747, -0.90442753,  2.03708386,
        -4.29115915, -3.85621834,  3.50658751, -0.35501727, 11.44457340],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.58758640]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 871
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 96] 
split level 2: [/input.11, 33] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 1] 
split level 6: [/input.7, 181] 
pruning_in_iteration open status: True
ratio of positive domain = 113 / 128 = 0.8828125
pruning-in-iteration extra time: 0.013853311538696289
Time: prepare 0.0146    bound 0.3876    transfer 0.0012    finalize 0.0095    func 0.4130    
Accumulated time: func 0.4130    prepare 0.0152    bound 0.3876    transfer 0.0012    finalize 0.0095    
Current worst splitting domains lb-rhs (depth):
-1.24032 (7), -1.23936 (7), -0.91113 (7), -0.87096 (7), -0.65192 (7), -0.60292 (7), -0.38660 (7), -0.38563 (7), -0.36645 (7), -0.23614 (7), -0.12104 (7), -0.11047 (7), -0.08812 (7), -0.01903 (7), -0.01245 (7), 
Length of domains: 15
Time: pickout 0.0007    decision 0.0375    set_bounds 0.0166    solve 0.4131    add 0.0018    
Accumulated time: pickout 0.0007    decision 0.0375    set_bounds 0.0166    solve 0.4131    add 0.0018    
Current (lb-rhs): -1.240321397781372
15 domains visited
Cumulative time: 0.47658467292785645

BaB round 2
batch: 15
splitting decisions: 
split level 0: [/input.7, 107] [/input.7, 718] [/input.7, 107] [/input.7, 107] [/input.7, 718] [/input.11, 17] [/input.7, 107] [/input.11, 17] [/input.7, 718] [/input.7, 107] 
split level 1: [/input.11, 65] [/input.11, 17] [/input.11, 17] [/input.11, 65] [/input.11, 17] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 17] [/input.11, 17] 
split level 2: [/input.7, 643] [/input.11, 65] [/input.11, 65] [/input.7, 643] [/input.11, 65] [/input.7, 643] [/input.7, 643] [/input.11, 58] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 110 / 120 = 0.9166666666666666
pruning-in-iteration extra time: 0.014856815338134766
Time: prepare 0.0170    bound 0.4626    transfer 0.0010    finalize 0.0087    func 0.4894    
Accumulated time: func 0.9024    prepare 0.0326    bound 0.8502    transfer 0.0023    finalize 0.0182    
Current worst splitting domains lb-rhs (depth):
-0.80253 (10), -0.79739 (10), -0.36826 (10), -0.32746 (10), -0.25344 (10), -0.21594 (10), -0.18576 (10), -0.18356 (10), -0.17158 (10), -0.04418 (10), 
Length of domains: 10
Time: pickout 0.0012    decision 0.0232    set_bounds 0.0112    solve 0.4896    add 0.0016    
Accumulated time: pickout 0.0019    decision 0.0607    set_bounds 0.0278    solve 0.9027    add 0.0034    
Current (lb-rhs): -0.8025262355804443
25 domains visited
Cumulative time: 1.0046792030334473

BaB round 3
batch: 10
splitting decisions: 
split level 0: [/input.7, 718] [/input.7, 718] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 718] [/input.7, 718] [/input.7, 107] [/input.7, 107] 
split level 1: [/input.11, 17] [/input.11, 17] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.11, 17] [/input.11, 17] [/input.7, 232] [/input.7, 232] 
split level 2: [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] 
split level 3: [/input.7, 227] [/input.7, 227] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 160 = 0.95
pruning-in-iteration extra time: 0.013219833374023438
Time: prepare 0.0210    bound 0.3887    transfer 0.0013    finalize 0.0105    func 0.4220    
Accumulated time: func 1.3245    prepare 0.0540    bound 1.2389    transfer 0.0036    finalize 0.0287    
Current worst splitting domains lb-rhs (depth):
-0.15859 (14), -0.14340 (14), -0.09532 (14), -0.06439 (14), -0.05222 (14), -0.03823 (14), -0.01608 (14), -0.01496 (14), 
Length of domains: 8
Time: pickout 0.0012    decision 0.0281    set_bounds 0.0172    solve 0.4221    add 0.0015    
Accumulated time: pickout 0.0031    decision 0.0888    set_bounds 0.0450    solve 1.3248    add 0.0049    
Current (lb-rhs): -0.15859317779541016
33 domains visited
Cumulative time: 1.4762206077575684

BaB round 4
batch: 8
splitting decisions: 
split level 0: [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] 
split level 1: [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] 
split level 2: [/input.7, 227] [/input.11, 36] [/input.7, 227] [/input.7, 227] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] 
split level 3: [/input.11, 36] [/input.7, 227] [/input.11, 36] [/input.11, 36] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0169    bound 0.0071    transfer 0.0006    finalize 0.0073    func 0.0321    
Accumulated time: func 1.3565    prepare 0.0713    bound 1.2460    transfer 0.0042    finalize 0.0360    
Length of domains: 0
Time: pickout 0.0012    decision 0.0269    set_bounds 0.0140    solve 0.0321    add 0.0001    
Accumulated time: pickout 0.0042    decision 0.1157    set_bounds 0.0589    solve 1.3569    add 0.0050    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
33 domains visited
Cumulative time: 1.551159143447876


Properties batch 5, size 1
Remaining timeout: 293.2092492580414
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.18696928024292.

Properties batch 6, size 1
Remaining timeout: 293.0989236831665
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6951313018798828.

Properties batch 7, size 1
Remaining timeout: 292.9936873912811
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.58755684]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.14870122, -5.09839630, -2.52411747, -0.90442753,  2.03708386,
        -4.29115915, -3.85621834,  3.50658751, -0.35501727, 11.44457340],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.58755684]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 871
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 128 = 0.671875
pruning-in-iteration extra time: 0.014052391052246094
Time: prepare 0.0075    bound 0.4925    transfer 0.0012    finalize 0.0077    func 0.5090    
Accumulated time: func 0.5090    prepare 0.0081    bound 0.4925    transfer 0.0012    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-1.95565 (7), -1.76971 (7), -1.74001 (7), -1.73729 (7), -1.35917 (7), -1.33794 (7), -1.19349 (7), -1.13712 (7), -1.08380 (7), -1.06772 (7), -1.05487 (7), -0.97693 (7), -0.96836 (7), -0.87255 (7), -0.81228 (7), -0.78975 (7), -0.77048 (7), -0.76344 (7), -0.73861 (7), -0.71892 (7), 
Length of domains: 42
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0157    solve 0.5091    add 0.0023    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0157    solve 0.5091    add 0.0023    
Current (lb-rhs): -1.9556517601013184
42 domains visited
Cumulative time: 0.5718684196472168

BaB round 2
batch: 42
splitting decisions: 
split level 0: [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
split level 1: [/input.11, 96] [/input.11, 65] [/input.11, 65] [/input.11, 96] [/input.11, 96] [/input.11, 96] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 132 / 168 = 0.7857142857142857
pruning-in-iteration extra time: 0.013239860534667969
Time: prepare 0.0132    bound 0.3959    transfer 0.0014    finalize 0.0096    func 0.4202    
Accumulated time: func 0.9291    prepare 0.0217    bound 0.8884    transfer 0.0026    finalize 0.0173    
Current worst splitting domains lb-rhs (depth):
-1.57589 (9), -1.32235 (9), -1.16714 (9), -1.15363 (9), -1.08849 (9), -1.03303 (9), -1.00441 (9), -0.94018 (9), -0.90647 (9), -0.76540 (9), -0.68274 (9), -0.55884 (9), -0.53608 (9), -0.48900 (9), -0.47151 (9), -0.44894 (9), -0.42916 (9), -0.41847 (9), -0.40568 (9), -0.38496 (9), 
Length of domains: 36
Time: pickout 0.0013    decision 0.0312    set_bounds 0.0101    solve 0.4203    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.0687    set_bounds 0.0257    solve 0.9293    add 0.0045    
Current (lb-rhs): -1.5758874416351318
78 domains visited
Cumulative time: 1.0381383895874023

BaB round 3
batch: 36
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] 
split level 1: [/input.11, 50] [/input.7, 141] [/input.11, 65] [/input.11, 96] [/input.7, 141] [/input.11, 96] [/input.11, 65] [/input.11, 96] [/input.11, 96] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 144 = 0.8402777777777778
pruning-in-iteration extra time: 0.014260530471801758
Time: prepare 0.0153    bound 0.4010    transfer 0.0011    finalize 0.0100    func 0.4275    
Accumulated time: func 1.3566    prepare 0.0373    bound 1.2894    transfer 0.0037    finalize 0.0272    
Current worst splitting domains lb-rhs (depth):
-1.19113 (11), -1.07460 (11), -0.96919 (11), -0.85122 (11), -0.80854 (11), -0.71461 (11), -0.68246 (11), -0.60694 (11), -0.52135 (11), -0.39169 (11), -0.34970 (11), -0.33804 (11), -0.32718 (11), -0.28405 (11), -0.25309 (11), -0.24692 (11), -0.22022 (11), -0.21989 (11), -0.19178 (11), -0.17427 (11), 
Length of domains: 23
Time: pickout 0.0010    decision 0.0254    set_bounds 0.0090    solve 0.4276    add 0.0019    
Accumulated time: pickout 0.0029    decision 0.0941    set_bounds 0.0347    solve 1.3569    add 0.0065    
Current (lb-rhs): -1.1911325454711914
101 domains visited
Cumulative time: 1.5044429302215576

BaB round 4
batch: 23
splitting decisions: 
split level 0: [/input.7, 181] [/input.7, 631] [/input.7, 141] [/input.11, 17] [/input.11, 17] [/input.7, 181] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] 
split level 1: [/input.7, 636] [/input.7, 593] [/input.7, 631] [/input.7, 631] [/input.7, 141] [/input.7, 631] [/input.7, 141] [/input.7, 141] [/input.7, 593] [/input.7, 141] 
split level 2: [/input.7, 631] [/input.11, 50] [/input.7, 593] [/input.7, 636] [/input.7, 631] [/input.7, 593] [/input.7, 631] [/input.7, 631] [/input.11, 50] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 162 / 184 = 0.8804347826086957
pruning-in-iteration extra time: 0.009610414505004883
Time: prepare 0.0251    bound 0.2574    transfer 0.0010    finalize 0.0107    func 0.2942    
Accumulated time: func 1.6509    prepare 0.0627    bound 1.5468    transfer 0.0047    finalize 0.0379    
Current worst splitting domains lb-rhs (depth):
-0.50473 (14), -0.38991 (14), -0.34998 (14), -0.32296 (14), -0.32117 (14), -0.27587 (14), -0.20653 (14), -0.16160 (14), -0.14586 (14), -0.14287 (14), -0.14280 (14), -0.13457 (14), -0.12083 (14), -0.11017 (14), -0.10071 (14), -0.09549 (14), -0.06488 (14), -0.03428 (14), -0.03419 (14), -0.01339 (14), 
Length of domains: 22
Time: pickout 0.0012    decision 0.0248    set_bounds 0.0153    solve 0.2943    add 0.0018    
Accumulated time: pickout 0.0042    decision 0.1189    set_bounds 0.0500    solve 1.6512    add 0.0082    
Current (lb-rhs): -0.504732608795166
123 domains visited
Cumulative time: 1.8432273864746094

BaB round 5
batch: 22
splitting decisions: 
split level 0: [/input.7, 181] [/input.11, 50] [/input.7, 181] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.7, 181] [/input.11, 50] [/input.11, 50] [/input.7, 181] 
split level 1: [/input.11, 50] [/input.7, 631] [/input.7, 636] [/input.7, 631] [/input.7, 593] [/input.7, 593] [/input.11, 50] [/input.7, 631] [/input.3, 2320] [/input.7, 636] 
split level 2: [/input.7, 636] [/input.7, 636] [/input.11, 50] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 631] [/input.11, 50] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 176 / 176 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0236    bound 0.0072    transfer 0.0008    finalize 0.0103    func 0.0419    
Accumulated time: func 1.6928    prepare 0.0867    bound 1.5540    transfer 0.0055    finalize 0.0482    
Length of domains: 0
Time: pickout 0.0012    decision 0.0231    set_bounds 0.0163    solve 0.0420    add 0.0001    
Accumulated time: pickout 0.0053    decision 0.1420    set_bounds 0.0664    solve 1.6932    add 0.0083    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
123 domains visited
Cumulative time: 1.9267477989196777


Properties batch 8, size 1
Remaining timeout: 290.92800211906433
##### Instance 15 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.29877079]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.14870122, -5.09839630, -2.52411747, -0.90442753,  2.03708386,
        -4.29115915, -3.85621834,  3.50658751, -0.35501727, 11.44457340],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.29877079]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 871
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 17] 
split level 1: [/input.11, 58] 
split level 2: [/input.11, 65] 
split level 3: [/input.11, 7] 
split level 4: [/input.11, 96] 
split level 5: [/input.11, 1] 
split level 6: [/input.11, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.96453857421875e-05
Time: prepare 0.0076    bound 0.0072    transfer 0.0006    finalize 0.0058    func 0.0214    
Accumulated time: func 0.0214    prepare 0.0082    bound 0.0072    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0159    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0159    solve 0.0215    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08171629905700684

Result: safe in 9.2995 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.29449478, -0.91676426,  3.72421908,  1.14822972, -4.59577036,
         -2.54097128, -8.58032608, 13.98030281, -4.19880676,  2.13142371]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  4.06it/s]100%|██████████| 1/1 [00:00<00:00,  4.06it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.47883925, -0.43342894,  5.28717613,  1.35625279, -5.48689127,
          -1.93289649, -7.46767426, 11.00901318, -3.00725698,  0.07771684],
         [ 0.47883925, -0.43342894,  5.28717613,  1.35625279, -5.48689127,
          -1.93289649, -7.46767426, 11.00901318, -3.00725698,  0.07771684]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.53017426, 11.44244194,  5.72183704,  9.65276051, 16.49590492,
          12.94190979, 18.47668839, 14.01626968, 10.93129635]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.2516 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.29449436, -0.91676408,  3.72421885,  1.14822996, -4.59576988,
         -2.54097080, -8.58032703, 13.98030376, -4.19880676,  2.13142347]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 137, 1, 688] with unstable size 136 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 20, 1, 688] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [136]; unstable size 136; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 20, 1, 136] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 136] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.97197247,  8.66292953,  3.42911172,  5.11369514, 12.58115196,
          7.85424423, 13.59673882, 10.48516846,  4.45433426]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.3007 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.05467463, -4.50164843,  2.06356072,  6.97762060, -4.94937181,
          3.65346432,  0.62590808, -3.42351055,  5.22907591, -3.82596707]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.83577985, -4.34040213,  3.57828474,  2.86152458, -3.81783843,
           2.26927137,  2.91255617, -3.89024258,  5.82276821, -4.76294279],
         [-0.83577985, -4.34040213,  3.57828474,  2.86152458, -3.81783843,
           2.26927137,  2.91255617, -3.89024258,  5.82276821, -4.76294279]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.69730449,  7.20192671, -0.71676016,  6.67936325,  0.59225321,
          -0.05103159,  6.75176716, -2.96124363,  7.62446737]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.0102 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0111 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.06771803, -0.20622568, -0.68783951, -2.72596550, 10.64786053,
         -3.25325298, -2.67367959,  3.30118704, -2.58026910,  2.09003830]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  4.10it/s]100%|██████████| 1/1 [00:00<00:00,  4.10it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.16802907, -0.36780012, -1.58185959, -2.02131414,  8.28895569,
          -2.69190049, -2.91735196,  5.05132627, -3.36160612,  2.60376358],
         [-3.16802907, -0.36780012, -1.58185959, -2.02131414,  8.28895569,
          -2.69190049, -2.91735196,  5.05132627, -3.36160612,  2.60376358]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.45698452,  8.65675545,  9.87081528, 10.31027031, 10.98085594,
          11.20630741,  3.23762941, 11.65056229,  5.68519211]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.2492 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.06771851, -0.20622562, -0.68783927, -2.72596526, 10.64786053,
         -3.25325346, -2.67367959,  3.30118656, -2.58026886,  2.09003806]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [743]; unstable size 743; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 192, 1, 743] with unstable size 191 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 35, 1, 743] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [191]; unstable size 191; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 35, 1, 191] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.83088017,  2.81885195,  0.74049091,  0.93351436,  0.57660770,
          2.56142831, -2.15365934,  0.93463397, -1.96501517]], device='cuda:0') None
best_l after optimization: 20.569293975830078
alpha/beta optimization time: 2.3483431339263916
initial alpha-crown bounds: tensor([[ 5.80850554,  3.71342254,  1.87133813,  2.48235202,  1.98046541,
          3.60837913, -1.06213498,  2.57208443, -0.40511918]], device='cuda:0')
Worst class: (+ rhs) -1.0621349811553955
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 297.3453845977783
##### Instance 18 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.808505535125732.

Properties batch 1, size 1
Remaining timeout: 297.2340006828308
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7134225368499756.

Properties batch 2, size 1
Remaining timeout: 297.12809443473816
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.871338129043579.

Properties batch 3, size 1
Remaining timeout: 297.02349829673767
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4823520183563232.

Properties batch 4, size 1
Remaining timeout: 296.91873717308044
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9804654121398926.

Properties batch 5, size 1
Remaining timeout: 296.81408619880676
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6083791255950928.

Properties batch 6, size 1
Remaining timeout: 296.7096483707428
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.06213498]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.06771851, -0.20622562, -0.68783927, -2.72596526, 10.64786053,
        -3.25325346, -2.67367959,  3.30118656, -2.58026886,  2.09003806],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.06213498]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 743
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 184
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 957
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 51] 
split level 4: [/input.7, 112] 
split level 5: [/input.11, 25] 
split level 6: [/input.7, 633] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0145    bound 0.0073    transfer 0.0007    finalize 0.0073    func 0.0299    
Accumulated time: func 0.0299    prepare 0.0151    bound 0.0073    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0379    set_bounds 0.0166    solve 0.0299    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0379    set_bounds 0.0166    solve 0.0299    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09187173843383789


Properties batch 7, size 1
Remaining timeout: 296.47910499572754
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.572084426879883.

Properties batch 8, size 1
Remaining timeout: 296.3695271015167
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40511918]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.06771851, -0.20622562, -0.68783927, -2.72596526, 10.64786053,
        -3.25325346, -2.67367959,  3.30118656, -2.58026886,  2.09003806],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40511918]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 743
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 184
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 957
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 25] 
split level 5: [/input.7, 633] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0146    bound 0.0072    transfer 0.0007    finalize 0.0073    func 0.0299    
Accumulated time: func 0.0299    prepare 0.0152    bound 0.0072    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0376    set_bounds 0.0166    solve 0.0300    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0376    set_bounds 0.0166    solve 0.0300    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09112238883972168

Result: safe in 3.8615 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.32057559,  -3.52538943,  -5.68953562,   1.19644606,  -0.53482330,
           1.94235492, -11.49765873,   7.43603468,   0.35227409,  11.78639984]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.93051809,  -2.79116964,  -5.11981535,  -0.03457452,  -0.93400478,
            2.14378572, -11.06637859,   9.93371391,  -0.52466422,   9.39224625],
         [ -0.93051809,  -2.79116964,  -5.11981535,  -0.03457452,  -0.93400478,
            2.14378572, -11.06637859,   9.93371391,  -0.52466422,   9.39224625]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.32276440, 12.18341637, 14.51206207,  9.42682076, 10.32625103,
           7.24846077, 20.45862579, -0.54146767,  9.91691017]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0110 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0120 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.78885227, -5.39803600, -2.01591659, -3.36916780, -0.97860312,
          5.65031147, 11.74517822, -6.48682737,  3.20177603, -1.98624289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  4.08it/s]100%|██████████| 1/1 [00:00<00:00,  4.08it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.00824952, -5.34610176, -2.09758258, -1.20483232, -2.52844214,
           7.97230768,  8.54388428, -5.55080032,  3.64439583, -0.78952140],
         [-3.00824952, -5.34610176, -2.09758258, -1.20483232, -2.52844214,
           7.97230768,  8.54388428, -5.55080032,  3.64439583, -0.78952140]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.55213356, 13.88998604, 10.64146709,  9.74871635, 11.07232666,
           0.57157660, 14.09468460,  4.89948845,  9.33340549]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.2502 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.78885210, -5.39803600, -2.01591682, -3.36916780, -0.97860312,
          5.65031099, 11.74517822, -6.48682737,  3.20177579, -1.98624289]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [735]; unstable size 735; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 230, 1, 735] with unstable size 229 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 735] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 735] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [229]; unstable size 229; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 229] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 229] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.96671915,  7.00109100,  2.69999886,  2.29884386,  3.41788816,
         -3.77440476,  6.32971048, -1.85653496,  2.16405082]], device='cuda:0') None
best_l after optimization: 31.68575096130371
alpha/beta optimization time: 2.3488729000091553
initial alpha-crown bounds: tensor([[ 5.86548328,  7.63913631,  3.76122379,  3.42201042,  4.14964008,
         -2.85797119,  7.32562447, -0.80159891,  3.18220186]], device='cuda:0')
Worst class: (+ rhs) -2.85797119140625
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 297.3464527130127
##### Instance 20 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.865483283996582.

Properties batch 1, size 1
Remaining timeout: 297.23029375076294
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.63913631439209.

Properties batch 2, size 1
Remaining timeout: 297.1247880458832
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.761223793029785.

Properties batch 3, size 1
Remaining timeout: 297.0195734500885
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4220104217529297.

Properties batch 4, size 1
Remaining timeout: 296.90613174438477
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.149640083312988.

Properties batch 5, size 1
Remaining timeout: 296.7877674102783
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.85797119]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.78885210, -5.39803600, -2.01591682, -3.36916780, -0.97860312,
         5.65031099, 11.74517822, -6.48682737,  3.20177579, -1.98624289],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.85797119]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 226
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 990
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 95] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 59] 
split level 4: [/input.7, 597] 
split level 5: [/input.11, 89] 
split level 6: [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 104 / 128 = 0.8125
pruning-in-iteration extra time: 0.008464574813842773
Time: prepare 0.0145    bound 0.2140    transfer 0.0012    finalize 0.0083    func 0.2381    
Accumulated time: func 0.2381    prepare 0.0151    bound 0.2140    transfer 0.0012    finalize 0.0083    
Current worst splitting domains lb-rhs (depth):
-1.65036 (7), -1.28248 (7), -1.24638 (7), -1.17366 (7), -1.06630 (7), -0.99270 (7), -0.71657 (7), -0.62441 (7), -0.57311 (7), -0.52072 (7), -0.49999 (7), -0.46330 (7), -0.37456 (7), -0.35987 (7), -0.35817 (7), -0.34745 (7), -0.33078 (7), -0.30993 (7), -0.29009 (7), -0.26904 (7), 
Length of domains: 24
Time: pickout 0.0007    decision 0.0378    set_bounds 0.0168    solve 0.2382    add 0.0020    
Accumulated time: pickout 0.0007    decision 0.0378    set_bounds 0.0168    solve 0.2382    add 0.0020    
Current (lb-rhs): -1.6503640413284302
24 domains visited
Cumulative time: 0.3021810054779053

BaB round 2
batch: 24
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] 
split level 1: [/input.7, 636] [/input.7, 41] [/input.7, 636] [/input.7, 41] [/input.7, 707] [/input.7, 636] [/input.7, 247] [/input.7, 41] [/input.7, 41] [/input.7, 41] 
split level 2: [/input.11, 14] [/input.7, 636] [/input.7, 41] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 41] [/input.11, 14] [/input.7, 312] [/input.7, 312] 
pruning_in_iteration open status: True
ratio of positive domain = 153 / 192 = 0.796875
pruning-in-iteration extra time: 0.008324861526489258
Time: prepare 0.0263    bound 0.2045    transfer 0.0010    finalize 0.0124    func 0.2443    
Accumulated time: func 0.4825    prepare 0.0418    bound 0.4186    transfer 0.0022    finalize 0.0207    
Current worst splitting domains lb-rhs (depth):
-1.27506 (10), -1.25995 (10), -1.01590 (10), -1.00357 (10), -0.96198 (10), -0.89871 (10), -0.85517 (10), -0.79623 (10), -0.73433 (10), -0.73057 (10), -0.72437 (10), -0.72054 (10), -0.71615 (10), -0.58490 (10), -0.50768 (10), -0.45633 (10), -0.41349 (10), -0.41307 (10), -0.39144 (10), -0.29361 (10), 
Length of domains: 39
Time: pickout 0.0010    decision 0.0281    set_bounds 0.0174    solve 0.2445    add 0.0022    
Accumulated time: pickout 0.0017    decision 0.0659    set_bounds 0.0342    solve 0.4827    add 0.0042    
Current (lb-rhs): -1.2750567197799683
63 domains visited
Cumulative time: 0.596930980682373

BaB round 3
batch: 39
splitting decisions: 
split level 0: [/input.11, 97] [/input.7, 261] [/input.11, 63] [/input.7, 261] [/input.7, 247] [/input.7, 261] [/input.7, 261] [/input.7, 707] [/input.11, 97] [/input.7, 261] 
split level 1: [/input.7, 123] [/input.7, 41] [/input.7, 41] [/input.7, 41] [/input.7, 716] [/input.7, 41] [/input.7, 41] [/input.7, 41] [/input.7, 123] [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 156 = 0.7115384615384616
pruning-in-iteration extra time: 0.00825643539428711
Time: prepare 0.0217    bound 0.2199    transfer 0.0010    finalize 0.0109    func 0.2535    
Accumulated time: func 0.7360    prepare 0.0638    bound 0.6385    transfer 0.0032    finalize 0.0316    
Current worst splitting domains lb-rhs (depth):
-1.14245 (12), -1.12703 (12), -0.94769 (12), -0.88429 (12), -0.85241 (12), -0.79126 (12), -0.78214 (12), -0.74234 (12), -0.67476 (12), -0.64416 (12), -0.62814 (12), -0.54066 (12), -0.52600 (12), -0.50914 (12), -0.49685 (12), -0.44988 (12), -0.41754 (12), -0.39338 (12), -0.39117 (12), -0.38699 (12), 
Length of domains: 45
Time: pickout 0.0013    decision 0.0287    set_bounds 0.0102    solve 0.2536    add 0.0023    
Accumulated time: pickout 0.0030    decision 0.0946    set_bounds 0.0444    solve 0.7363    add 0.0065    
Current (lb-rhs): -1.1424537897109985
108 domains visited
Cumulative time: 0.8942077159881592

BaB round 4
batch: 45
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 123] [/input.7, 261] [/input.11, 63] [/input.7, 707] [/input.11, 63] [/input.7, 261] [/input.11, 63] [/input.7, 707] [/input.11, 63] 
split level 1: [/input.7, 312] [/input.7, 716] [/input.7, 123] [/input.7, 307] [/input.11, 63] [/input.7, 307] [/input.7, 716] [/input.7, 307] [/input.11, 63] [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 142 / 180 = 0.7888888888888889
pruning-in-iteration extra time: 0.00827479362487793
Time: prepare 0.0254    bound 0.2128    transfer 0.0010    finalize 0.0114    func 0.2508    
Accumulated time: func 0.9868    prepare 0.0896    bound 0.8513    transfer 0.0042    finalize 0.0430    
Current worst splitting domains lb-rhs (depth):
-1.03472 (14), -1.01453 (14), -0.84069 (14), -0.71888 (14), -0.67708 (14), -0.66847 (14), -0.61490 (14), -0.58846 (14), -0.51840 (14), -0.51704 (14), -0.48624 (14), -0.42344 (14), -0.42091 (14), -0.40539 (14), -0.34130 (14), -0.33384 (14), -0.33291 (14), -0.32322 (14), -0.32162 (14), -0.31543 (14), 
Length of domains: 38
Time: pickout 0.0012    decision 0.0298    set_bounds 0.0133    solve 0.2509    add 0.0021    
Accumulated time: pickout 0.0042    decision 0.1244    set_bounds 0.0577    solve 0.9872    add 0.0086    
Current (lb-rhs): -1.0347182750701904
146 domains visited
Cumulative time: 1.1929073333740234

BaB round 5
batch: 38
splitting decisions: 
split level 0: [/input.7, 262] [/input.7, 123] [/input.7, 41] [/input.7, 716] [/input.3, 2230] [/input.7, 716] [/input.7, 716] [/input.7, 262] [/input.7, 262] [/input.7, 262] 
split level 1: [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 262] [/input.7, 262] [/input.7, 262] [/input.11, 33] [/input.7, 716] [/input.11, 33] [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 152 = 0.7302631578947368
pruning-in-iteration extra time: 0.00829172134399414
Time: prepare 0.0229    bound 0.2178    transfer 0.0009    finalize 0.0098    func 0.2516    
Accumulated time: func 1.2384    prepare 0.1128    bound 1.0691    transfer 0.0052    finalize 0.0528    
Current worst splitting domains lb-rhs (depth):
-0.95466 (16), -0.83813 (16), -0.78260 (16), -0.68083 (16), -0.64866 (16), -0.54954 (16), -0.54092 (16), -0.51714 (16), -0.49066 (16), -0.47900 (16), -0.47640 (16), -0.46908 (16), -0.36715 (16), -0.36613 (16), -0.36528 (16), -0.30953 (16), -0.30856 (16), -0.29727 (16), -0.29315 (16), -0.28363 (16), 
Length of domains: 41
Time: pickout 0.0013    decision 0.0287    set_bounds 0.0102    solve 0.2517    add 0.0021    
Accumulated time: pickout 0.0054    decision 0.1531    set_bounds 0.0679    solve 1.2389    add 0.0107    
Current (lb-rhs): -0.9546630382537842
187 domains visited
Cumulative time: 1.487929344177246

BaB round 6
batch: 41
splitting decisions: 
split level 0: [/input.3, 2230] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 262] [/input.3, 2230] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 716] 
split level 1: [/input.11, 33] [/input.3, 2230] [/input.7, 123] [/input.11, 33] [/input.7, 266] [/input.7, 312] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 164 = 0.774390243902439
pruning-in-iteration extra time: 0.008247852325439453
Time: prepare 0.0272    bound 0.2131    transfer 0.0010    finalize 0.0109    func 0.2523    
Accumulated time: func 1.4907    prepare 0.1403    bound 1.2823    transfer 0.0062    finalize 0.0638    
Current worst splitting domains lb-rhs (depth):
-0.84573 (18), -0.72534 (18), -0.65237 (18), -0.58723 (18), -0.53263 (18), -0.45083 (18), -0.40255 (18), -0.38897 (18), -0.38518 (18), -0.34996 (18), -0.33490 (18), -0.25614 (18), -0.23106 (18), -0.22331 (18), -0.22316 (18), -0.21756 (18), -0.20684 (18), -0.20253 (18), -0.19803 (18), -0.18857 (18), 
Length of domains: 37
Time: pickout 0.0012    decision 0.0293    set_bounds 0.0117    solve 0.2524    add 0.0020    
Accumulated time: pickout 0.0067    decision 0.1824    set_bounds 0.0796    solve 1.4913    add 0.0127    
Current (lb-rhs): -0.8457263708114624
224 domains visited
Cumulative time: 1.7858808040618896

BaB round 7
batch: 37
splitting decisions: 
split level 0: [/input.11, 81] [/input.7, 591] [/input.7, 591] [/input.7, 707] [/input.3, 2230] [/input.11, 81] [/input.11, 33] [/input.7, 591] [/input.11, 81] [/input.11, 81] 
split level 1: [/input.7, 312] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.7, 247] [/input.7, 591] [/input.7, 312] [/input.7, 312] [/input.7, 591] [/input.3, 2230] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 148 = 0.7905405405405406
pruning-in-iteration extra time: 0.008254766464233398
Time: prepare 0.0255    bound 0.2073    transfer 0.0009    finalize 0.0100    func 0.2438    
Accumulated time: func 1.7345    prepare 0.1661    bound 1.4896    transfer 0.0071    finalize 0.0738    
Current worst splitting domains lb-rhs (depth):
-0.71519 (20), -0.66731 (20), -0.51652 (20), -0.44390 (20), -0.41863 (20), -0.37764 (20), -0.30838 (20), -0.29351 (20), -0.26128 (20), -0.21096 (20), -0.20820 (20), -0.20793 (20), -0.19485 (20), -0.18278 (20), -0.15240 (20), -0.10410 (20), -0.09101 (20), -0.07629 (20), -0.07150 (20), -0.06636 (20), 
Length of domains: 31
Time: pickout 0.0013    decision 0.0248    set_bounds 0.0112    solve 0.2439    add 0.0019    
Accumulated time: pickout 0.0080    decision 0.2072    set_bounds 0.0907    solve 1.7352    add 0.0146    
Current (lb-rhs): -0.7151883244514465
255 domains visited
Cumulative time: 2.0700178146362305

BaB round 8
batch: 31
splitting decisions: 
split level 0: [/input.7, 177] [/input.7, 591] [/input.11, 81] [/input.7, 591] [/input.7, 312] [/input.3, 2230] [/input.11, 84] [/input.7, 312] [/input.7, 591] [/input.7, 591] 
split level 1: [/input.7, 266] [/input.7, 312] [/input.7, 591] [/input.7, 266] [/input.11, 84] [/input.7, 591] [/input.7, 177] [/input.7, 266] [/input.11, 33] [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 101 / 124 = 0.814516129032258
pruning-in-iteration extra time: 0.008263349533081055
Time: prepare 0.0217    bound 0.2068    transfer 0.0008    finalize 0.0086    func 0.2379    
Accumulated time: func 1.9724    prepare 0.1882    bound 1.6964    transfer 0.0078    finalize 0.0823    
Current worst splitting domains lb-rhs (depth):
-0.58586 (22), -0.53360 (22), -0.38435 (22), -0.36933 (22), -0.28127 (22), -0.27269 (22), -0.26843 (22), -0.17827 (22), -0.16299 (22), -0.15810 (22), -0.14714 (22), -0.13819 (22), -0.12633 (22), -0.12249 (22), -0.11603 (22), -0.07899 (22), -0.06496 (22), -0.05951 (22), -0.04578 (22), -0.03884 (22), 
Length of domains: 23
Time: pickout 0.0010    decision 0.0238    set_bounds 0.0087    solve 0.2380    add 0.0018    
Accumulated time: pickout 0.0090    decision 0.2310    set_bounds 0.0994    solve 1.9732    add 0.0165    
Current (lb-rhs): -0.5858590006828308
278 domains visited
Cumulative time: 2.3444740772247314

BaB round 9
batch: 23
splitting decisions: 
split level 0: [/input.7, 266] [/input.11, 84] [/input.11, 84] [/input.7, 591] [/input.7, 312] [/input.11, 84] [/input.7, 266] [/input.3, 2230] [/input.7, 312] [/input.3, 2230] 
split level 1: [/input.11, 84] [/input.7, 266] [/input.7, 177] [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.11, 84] [/input.7, 266] [/input.7, 266] [/input.11, 84] 
split level 2: [/input.11, 8] [/input.11, 8] [/input.7, 266] [/input.11, 8] [/input.7, 307] [/input.7, 177] [/input.7, 177] [/input.7, 307] [/input.7, 307] [/input.7, 177] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 184 = 0.8967391304347826
pruning-in-iteration extra time: 0.008292913436889648
Time: prepare 0.0342    bound 0.2074    transfer 0.0010    finalize 0.0129    func 0.2555    
Accumulated time: func 2.2279    prepare 0.2226    bound 1.9038    transfer 0.0089    finalize 0.0952    
Current worst splitting domains lb-rhs (depth):
-0.25402 (25), -0.25223 (25), -0.22643 (25), -0.22456 (25), -0.20984 (25), -0.20586 (25), -0.20405 (25), -0.20107 (25), -0.19992 (25), -0.19024 (25), -0.17089 (25), -0.16156 (25), -0.11266 (25), -0.10262 (25), -0.08962 (25), -0.07968 (25), -0.04781 (25), -0.04583 (25), -0.01421 (25), 
Length of domains: 19
Time: pickout 0.0009    decision 0.0239    set_bounds 0.0165    solve 0.2556    add 0.0018    
Accumulated time: pickout 0.0099    decision 0.2549    set_bounds 0.1159    solve 2.2287    add 0.0182    
Current (lb-rhs): -0.2540168762207031
297 domains visited
Cumulative time: 2.644719123840332

BaB round 10
batch: 19
splitting decisions: 
split level 0: [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] 
split level 1: [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.11, 8] [/input.7, 307] 
split level 2: [/input.7, 177] [/input.11, 8] [/input.7, 177] [/input.11, 8] [/input.7, 177] [/input.11, 8] [/input.7, 177] [/input.11, 8] [/input.7, 307] [/input.7, 177] 
pruning_in_iteration open status: True
ratio of positive domain = 148 / 152 = 0.9736842105263158
pruning-in-iteration extra time: 0.008251667022705078
Time: prepare 0.0292    bound 0.2122    transfer 0.0009    finalize 0.0102    func 0.2527    
Accumulated time: func 2.4806    prepare 0.2521    bound 2.1160    transfer 0.0098    finalize 0.1054    
Current worst splitting domains lb-rhs (depth):
-0.01222 (28), -0.01201 (28), -0.00440 (28), -0.00114 (28), 
Length of domains: 4
Time: pickout 0.0012    decision 0.0226    set_bounds 0.0140    solve 0.2528    add 0.0012    
Accumulated time: pickout 0.0111    decision 0.2775    set_bounds 0.1299    solve 2.4815    add 0.0195    
Current (lb-rhs): -0.01221853494644165
301 domains visited
Cumulative time: 2.937939405441284

BaB round 11
batch: 4
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] 
split level 1: [/input.3, 2227] [/input.3, 2227] [/input.3, 2227] [/input.3, 2227] 
split level 2: [/input.7, 592] [/input.7, 592] [/input.7, 247] [/input.7, 592] 
split level 3: [/input.7, 247] [/input.7, 247] [/input.7, 592] [/input.7, 247] 
split level 4: [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.463859558105469e-05
Time: prepare 0.0240    bound 0.0072    transfer 0.0006    finalize 0.0086    func 0.0405    
Accumulated time: func 2.5211    prepare 0.2766    bound 2.1232    transfer 0.0105    finalize 0.1141    
Length of domains: 0
Time: pickout 0.0012    decision 0.0301    set_bounds 0.0183    solve 0.0406    add 0.0001    
Accumulated time: pickout 0.0123    decision 0.3076    set_bounds 0.1482    solve 2.5221    add 0.0196    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
301 domains visited
Cumulative time: 3.0290019512176514


Properties batch 6, size 1
Remaining timeout: 293.618798494339
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.325624465942383.

Properties batch 7, size 1
Remaining timeout: 293.50197100639343
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.80159891]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.78885210, -5.39803600, -2.01591682, -3.36916780, -0.97860312,
         5.65031099, 11.74517822, -6.48682737,  3.20177579, -1.98624289],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.80159891]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 226
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 990
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 30] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0075    bound 0.0072    transfer 0.0007    finalize 0.0058    func 0.0214    
Accumulated time: func 0.0214    prepare 0.0081    bound 0.0072    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0377    set_bounds 0.0158    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0377    set_bounds 0.0158    solve 0.0215    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08208513259887695


Properties batch 8, size 1
Remaining timeout: 293.2796370983124
##### Instance 20 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.182201862335205.
Result: safe in 6.8294 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.90382880, -0.45081908, -1.74904001, -2.10409594,  1.05308020,
          0.24752478, 10.19773674, -3.86411047, -0.05903391, -4.49507380]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  4.05it/s]100%|██████████| 1/1 [00:00<00:00,  4.04it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.49239674, -0.35935935, -1.65108395, -2.38638353,  3.61082101,
          -0.60800403,  8.61385727, -2.86890888, -0.35174808, -4.79993200],
         [ 0.49239674, -0.35935935, -1.65108395, -2.38638353,  3.61082101,
          -0.60800403,  8.61385727, -2.86890888, -0.35174808, -4.79993200]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.12146091,  8.97321701, 10.26494122, 11.00024033,  5.00303650,
           9.22186089, 11.48276615,  8.96560574, 13.41378975]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.2529 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.90382892, -0.45081908, -1.74904060, -2.10409570,  1.05308020,
          0.24752431, 10.19773769, -3.86411071, -0.05903361, -4.49507380]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [744]; unstable size 744; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 163, 1, 744] with unstable size 162 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 45, 1, 744] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [162]; unstable size 162; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 45, 1, 162] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.67298889,  0.11274958, -1.01630306,  0.33216953, -1.73214388,
         -0.48218107, -0.78495741, -1.81139660,  1.40057039]], device='cuda:0') None
best_l after optimization: 6.681754112243652
alpha/beta optimization time: 2.3393523693084717
initial alpha-crown bounds: tensor([[ 1.62330317,  1.17787409,  0.41899538,  1.51857615, -0.69753480,
          0.40635252,  0.66953230, -0.79865599,  2.36331129]], device='cuda:0')
Worst class: (+ rhs) -0.7986559867858887
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 297.3530960083008
##### Instance 21 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6233031749725342.

Properties batch 1, size 1
Remaining timeout: 297.2338774204254
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1778740882873535.

Properties batch 2, size 1
Remaining timeout: 297.12852239608765
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.41899538040161133.

Properties batch 3, size 1
Remaining timeout: 297.0237019062042
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5185761451721191.

Properties batch 4, size 1
Remaining timeout: 296.919095993042
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.69753480]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.90382892, -0.45081908, -1.74904060, -2.10409570,  1.05308020,
         0.24752431, 10.19773769, -3.86411071, -0.05903361, -4.49507380],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.69753480]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 744
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 161
Node /27 input 0: size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 947
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 19] 
split level 4: [/input.11, 63] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 8] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0076    bound 0.0072    transfer 0.0007    finalize 0.0058    func 0.0214    
Accumulated time: func 0.0214    prepare 0.0082    bound 0.0072    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0378    set_bounds 0.0157    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0378    set_bounds 0.0157    solve 0.0215    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08213663101196289


Properties batch 5, size 1
Remaining timeout: 296.69787669181824
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.40635251998901367.

Properties batch 6, size 1
Remaining timeout: 296.58859491348267
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.669532299041748.

Properties batch 7, size 1
Remaining timeout: 296.48363065719604
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.79865599]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.90382892, -0.45081908, -1.74904060, -2.10409570,  1.05308020,
         0.24752431, 10.19773769, -3.86411071, -0.05903361, -4.49507380],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.79865599]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 744
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 161
Node /27 input 0: size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 947
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 32] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 97] 
split level 6: [/input.11, 58] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0076    bound 0.0072    transfer 0.0007    finalize 0.0058    func 0.0215    
Accumulated time: func 0.0215    prepare 0.0082    bound 0.0072    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0159    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0159    solve 0.0215    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08187508583068848


Properties batch 8, size 1
Remaining timeout: 296.2627115249634
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.363311290740967.
Result: safe in 3.8465 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.00067878, -5.60779619, -3.58496141,  2.95178246, -5.28860235,
         13.02693844,  2.11687875, -5.84846115,  2.26234007,  2.75758100]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.67it/s]100%|██████████| 1/1 [00:00<00:00,  2.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.29189634, -4.56416035, -1.91542625,  4.79808521, -5.03645325,
          10.72463417,  0.55725682, -4.82886839,  1.39815402,  1.99184477],
         [-3.29189634, -4.56416035, -1.91542625,  4.79808521, -5.03645325,
          10.72463417,  0.55725682, -4.82886839,  1.39815402,  1.99184477]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.01653099, 15.28879452, 12.64006042,  5.92654896, 15.76108742,
          10.16737747, 15.55350304,  9.32647991,  8.73278904]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.3805 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.00067854, -5.60779619, -3.58496094,  2.95178270, -5.28860235,
         13.02693748,  2.11687875, -5.84846115,  2.26234078,  2.75758100]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [728]; unstable size 728; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 170, 1, 728] with unstable size 169 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 728] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 728] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [169]; unstable size 169; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 169] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.28151083, 7.69676208, 5.29836941, 0.90252161, 6.39817190, 2.53283143,
         7.73137426, 2.14849305, 2.31641531]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.4327 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.23012114,  0.18161817, -1.27224839, -3.19182420,  7.74391222,
         -1.73616707, -0.91817772,  2.63707709, -2.94422913,  1.61623478]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]100%|██████████| 1/1 [00:00<00:00,  2.58it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.50718403,  0.67944175, -1.52454448, -1.62660968,  4.53058624,
          -2.29968452, -2.94414282,  4.33599281, -2.47643042,  2.76693511],
         [-1.50718403,  0.67944175, -1.52454448, -1.62660968,  4.53058624,
          -2.29968452, -2.94414282,  4.33599281, -2.47643042,  2.76693511]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.03777027, 3.85114455, 6.05513096, 6.15719604, 6.83027077,
          7.47472906, 0.19459343, 7.00701666, 1.76365113]]], device='cuda:0')
number of violation:  0
Attack finished in 0.3930 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
         -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [802]; unstable size 802; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 193, 1, 802] with unstable size 192 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 44, 1, 802] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 802] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [192]; unstable size 192; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 44, 1, 192] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [43]; unstable size 43; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.65241098, -3.54997396, -4.77819300, -3.33030224, -3.73951006,
         -2.83824635, -7.04820442, -3.62728739, -6.05062819]], device='cuda:0') None
best_l after optimization: -27.72772216796875
alpha/beta optimization time: 4.067644119262695
initial alpha-crown bounds: tensor([[-0.88717890, -2.27955246, -3.71959686, -2.31321144, -2.78482103,
         -1.96724796, -5.96486092, -2.66844702, -5.14280415]], device='cuda:0')
Worst class: (+ rhs) -5.964860916137695
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.4841411113739
##### Instance 23 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.88717890]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.88717890]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 12] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 41] 
split level 5: [/input.11, 86] 
split level 6: [/input.7, 598] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0146    bound 0.0073    transfer 0.0007    finalize 0.0073    func 0.0301    
Accumulated time: func 0.0301    prepare 0.0153    bound 0.0073    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0007    decision 0.0378    set_bounds 0.0169    solve 0.0302    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0378    set_bounds 0.0169    solve 0.0302    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09210395812988281


Properties batch 1, size 1
Remaining timeout: 295.24310660362244
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.27955246]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.27955246]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 70] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 89] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.013507843017578125
Time: prepare 0.0075    bound 0.4045    transfer 0.0011    finalize 0.0065    func 0.4197    
Accumulated time: func 0.4197    prepare 0.0081    bound 0.4045    transfer 0.0011    finalize 0.0065    
Current worst splitting domains lb-rhs (depth):
-0.56973 (7), -0.55015 (7), -0.45915 (7), -0.45622 (7), -0.40093 (7), -0.27404 (7), -0.27320 (7), -0.16407 (7), 
Length of domains: 8
Time: pickout 0.0006    decision 0.0379    set_bounds 0.0157    solve 0.4198    add 0.0015    
Accumulated time: pickout 0.0006    decision 0.0379    set_bounds 0.0157    solve 0.4198    add 0.0015    
Current (lb-rhs): -0.5697295665740967
8 domains visited
Cumulative time: 0.48253512382507324

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 86] [/input.7, 632] [/input.11, 86] [/input.7, 632] [/input.7, 193] [/input.7, 632] [/input.11, 86] [/input.7, 632] 
split level 1: [/input.7, 193] [/input.11, 86] [/input.7, 193] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.7, 193] [/input.11, 86] 
split level 2: [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 73] [/input.7, 193] [/input.11, 1] [/input.7, 193] 
split level 3: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 1] [/input.11, 1] [/input.11, 73] [/input.11, 1] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.96453857421875e-05
Time: prepare 0.0177    bound 0.0072    transfer 0.0007    finalize 0.0077    func 0.0332    
Accumulated time: func 0.4529    prepare 0.0262    bound 0.4117    transfer 0.0017    finalize 0.0141    
Length of domains: 0
Time: pickout 0.0009    decision 0.0278    set_bounds 0.0124    solve 0.0333    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0657    set_bounds 0.0280    solve 0.4531    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.5576972961425781


Properties batch 2, size 1
Remaining timeout: 294.54225397109985
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.71959686]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.71959686]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 17] 
split level 5: [/input.11, 41] 
split level 6: [/input.11, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 87 / 128 = 0.6796875
pruning-in-iteration extra time: 0.014094114303588867
Time: prepare 0.0075    bound 0.3853    transfer 0.0011    finalize 0.0066    func 0.4007    
Accumulated time: func 0.4007    prepare 0.0081    bound 0.3853    transfer 0.0011    finalize 0.0066    
Current worst splitting domains lb-rhs (depth):
-1.03800 (7), -0.97591 (7), -0.83004 (7), -0.82965 (7), -0.81831 (7), -0.80825 (7), -0.71752 (7), -0.65178 (7), -0.64711 (7), -0.64431 (7), -0.61128 (7), -0.53886 (7), -0.53422 (7), -0.49554 (7), -0.42934 (7), -0.40920 (7), -0.39817 (7), -0.38474 (7), -0.36671 (7), -0.34583 (7), 
Length of domains: 41
Time: pickout 0.0006    decision 0.0376    set_bounds 0.0156    solve 0.4008    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0376    set_bounds 0.0156    solve 0.4008    add 0.0022    
Current (lb-rhs): -1.0379977226257324
41 domains visited
Cumulative time: 0.4636363983154297

BaB round 2
batch: 41
splitting decisions: 
split level 0: [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.7, 632] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.7, 632] [/input.11, 89] 
split level 1: [/input.7, 193] [/input.11, 58] [/input.11, 36] [/input.11, 89] [/input.11, 58] [/input.11, 58] [/input.7, 193] [/input.11, 58] [/input.11, 89] [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 140 / 164 = 0.8536585365853658
pruning-in-iteration extra time: 0.013375282287597656
Time: prepare 0.0200    bound 0.3860    transfer 0.0013    finalize 0.0098    func 0.4172    
Accumulated time: func 0.8179    prepare 0.0285    bound 0.7713    transfer 0.0024    finalize 0.0164    
Current worst splitting domains lb-rhs (depth):
-0.69612 (9), -0.60726 (9), -0.45605 (9), -0.43749 (9), -0.42775 (9), -0.42017 (9), -0.33666 (9), -0.26755 (9), -0.26595 (9), -0.24421 (9), -0.18962 (9), -0.17453 (9), -0.17079 (9), -0.15275 (9), -0.14851 (9), -0.14082 (9), -0.13000 (9), -0.11247 (9), -0.10443 (9), -0.07640 (9), 
Length of domains: 24
Time: pickout 0.0012    decision 0.0263    set_bounds 0.0099    solve 0.4173    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.0639    set_bounds 0.0255    solve 0.8180    add 0.0041    
Current (lb-rhs): -0.6961207389831543
65 domains visited
Cumulative time: 0.921607255935669

BaB round 3
batch: 24
splitting decisions: 
split level 0: [/input.7, 632] [/input.11, 58] [/input.11, 36] [/input.11, 36] [/input.11, 58] [/input.11, 89] [/input.7, 193] [/input.11, 89] [/input.7, 193] [/input.11, 89] 
split level 1: [/input.11, 58] [/input.7, 632] [/input.7, 193] [/input.7, 193] [/input.7, 193] [/input.11, 58] [/input.11, 36] [/input.11, 58] [/input.11, 58] [/input.11, 58] 
split level 2: [/input.7, 598] [/input.7, 598] [/input.11, 58] [/input.11, 58] [/input.7, 598] [/input.7, 598] [/input.11, 58] [/input.11, 36] [/input.7, 598] [/input.7, 598] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 8.726119995117188e-05
Time: prepare 0.0261    bound 0.0071    transfer 0.0009    finalize 0.0119    func 0.0460    
Accumulated time: func 0.8639    prepare 0.0549    bound 0.7785    transfer 0.0032    finalize 0.0283    
Length of domains: 0
Time: pickout 0.0013    decision 0.0248    set_bounds 0.0175    solve 0.0461    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.0888    set_bounds 0.0430    solve 0.8642    add 0.0042    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
65 domains visited
Cumulative time: 1.0127089023590088


Properties batch 3, size 1
Remaining timeout: 293.3849723339081
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.31321144]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.31321144]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 56] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 97] 
split level 6: [/input.11, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.013027667999267578
Time: prepare 0.0077    bound 0.3830    transfer 0.0012    finalize 0.0089    func 0.4009    
Accumulated time: func 0.4009    prepare 0.0083    bound 0.3830    transfer 0.0012    finalize 0.0089    
Current worst splitting domains lb-rhs (depth):
-0.33360 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0374    set_bounds 0.0157    solve 0.4010    add 0.0009    
Accumulated time: pickout 0.0006    decision 0.0374    set_bounds 0.0157    solve 0.4010    add 0.0009    
Current (lb-rhs): -0.33359813690185547
1 domains visited
Cumulative time: 0.46216702461242676

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.7, 632] 
split level 1: [/input.7, 631] 
split level 2: [/input.7, 193] 
split level 3: [/input.11, 48] 
split level 4: [/input.7, 706] 
split level 5: [/input.7, 598] 
split level 6: [/input.11, 9] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0168    bound 0.0072    transfer 0.0006    finalize 0.0074    func 0.0322    
Accumulated time: func 0.4331    prepare 0.0258    bound 0.3902    transfer 0.0019    finalize 0.0164    
Length of domains: 0
Time: pickout 0.0009    decision 0.0401    set_bounds 0.0182    solve 0.0323    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0775    set_bounds 0.0340    solve 0.4332    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.5544438362121582


Properties batch 4, size 1
Remaining timeout: 292.6849880218506
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.78482103]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.78482103]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 9] 
split level 4: [/input.11, 25] 
split level 5: [/input.11, 11] 
split level 6: [/input.11, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.013403177261352539
Time: prepare 0.0076    bound 0.3909    transfer 0.0012    finalize 0.0080    func 0.4077    
Accumulated time: func 0.4077    prepare 0.0082    bound 0.3909    transfer 0.0012    finalize 0.0080    
Current worst splitting domains lb-rhs (depth):
-0.17722 (7), -0.02288 (7), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0378    set_bounds 0.0157    solve 0.4078    add 0.0014    
Accumulated time: pickout 0.0006    decision 0.0378    set_bounds 0.0157    solve 0.4078    add 0.0014    
Current (lb-rhs): -0.1772165298461914
2 domains visited
Cumulative time: 0.47121763229370117

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.11, 10] [/input.11, 10] 
split level 1: [/input.7, 193] [/input.7, 193] 
split level 2: [/input.7, 632] [/input.11, 73] 
split level 3: [/input.11, 48] [/input.7, 632] 
split level 4: [/input.11, 73] [/input.11, 48] 
split level 5: [/input.7, 598] [/input.7, 598] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.320808410644531e-05
Time: prepare 0.0169    bound 0.0072    transfer 0.0007    finalize 0.0074    func 0.0321    
Accumulated time: func 0.4399    prepare 0.0257    bound 0.3981    transfer 0.0018    finalize 0.0153    
Length of domains: 0
Time: pickout 0.0011    decision 0.0366    set_bounds 0.0161    solve 0.0322    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0745    set_bounds 0.0318    solve 0.4400    add 0.0014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.5580141544342041


Properties batch 5, size 1
Remaining timeout: 291.9826741218567
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.96724796]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.96724796]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 11] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 9] 
split level 3: [/input.7, 598] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 86] 
split level 6: [/input.7, 193] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.012949943542480469
Time: prepare 0.0145    bound 0.3889    transfer 0.0011    finalize 0.0089    func 0.4134    
Accumulated time: func 0.4134    prepare 0.0151    bound 0.3889    transfer 0.0011    finalize 0.0089    
Current worst splitting domains lb-rhs (depth):
-0.11538 (7), -0.04498 (7), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0377    set_bounds 0.0166    solve 0.4135    add 0.0012    
Accumulated time: pickout 0.0006    decision 0.0377    set_bounds 0.0166    solve 0.4135    add 0.0012    
Current (lb-rhs): -0.11537742614746094
2 domains visited
Cumulative time: 0.4766526222229004

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.7, 142] [/input.11, 99] 
split level 1: [/input.7, 723] [/input.7, 723] 
split level 2: [/input.11, 73] [/input.11, 73] 
split level 3: [/input.11, 99] [/input.11, 1] 
split level 4: [/input.11, 1] [/input.7, 632] 
split level 5: [/input.11, 17] [/input.11, 17] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0169    bound 0.0072    transfer 0.0006    finalize 0.0072    func 0.0321    
Accumulated time: func 0.4455    prepare 0.0326    bound 0.3960    transfer 0.0017    finalize 0.0161    
Length of domains: 0
Time: pickout 0.0011    decision 0.0364    set_bounds 0.0179    solve 0.0321    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0741    set_bounds 0.0344    solve 0.4456    add 0.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.564971923828125


Properties batch 6, size 1
Remaining timeout: 291.2734110355377
##### Instance 23 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.96486092]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.23012114,  0.18161775, -1.27224827, -3.19182396,  7.74391222,
        -1.73616695, -0.91817784,  2.63707709, -2.94422936,  1.61623490],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.96486092]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 802
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 189
Node /27 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1031
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 99] 
split level 4: [/input.7, 632] 
split level 5: [/input.11, 51] 
split level 6: [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 44 / 128 = 0.34375
pruning-in-iteration extra time: 0.005502223968505859
Time: prepare 0.0146    bound 0.4137    transfer 0.0011    finalize 0.0083    func 0.4378    
Accumulated time: func 0.4378    prepare 0.0152    bound 0.4137    transfer 0.0011    finalize 0.0083    
Current worst splitting domains lb-rhs (depth):
-3.57096 (7), -3.45292 (7), -3.41561 (7), -3.24445 (7), -3.23758 (7), -3.11290 (7), -2.90177 (7), -2.87281 (7), -2.82039 (7), -2.75000 (7), -2.74322 (7), -2.74036 (7), -2.67952 (7), -2.67810 (7), -2.65428 (7), -2.63461 (7), -2.61383 (7), -2.60244 (7), -2.55775 (7), -2.50776 (7), 
Length of domains: 84
Time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.4379    add 0.0027    
Accumulated time: pickout 0.0006    decision 0.0375    set_bounds 0.0166    solve 0.4379    add 0.0027    
Current (lb-rhs): -3.5709643363952637
84 domains visited
Cumulative time: 0.5019068717956543

BaB round 2
batch: 84
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 25] [/input.11, 36] [/input.11, 36] [/input.11, 25] [/input.11, 25] [/input.11, 36] [/input.11, 25] [/input.11, 25] [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 43 / 168 = 0.25595238095238093
pruning-in-iteration extra time: 0.010378122329711914
Time: prepare 0.0231    bound 0.4607    transfer 0.0013    finalize 0.0123    func 0.4975    
Accumulated time: func 0.9352    prepare 0.0387    bound 0.8744    transfer 0.0024    finalize 0.0206    
Current worst splitting domains lb-rhs (depth):
-3.54533 (8), -3.33111 (8), -3.23527 (8), -3.18133 (8), -3.09259 (8), -2.97683 (8), -2.84927 (8), -2.70352 (8), -2.69579 (8), -2.64191 (8), -2.61666 (8), -2.60976 (8), -2.58276 (8), -2.52925 (8), -2.52840 (8), -2.52502 (8), -2.45231 (8), -2.42134 (8), -2.41137 (8), -2.41085 (8), 
Length of domains: 125
Time: pickout 0.0014    decision 0.0328    set_bounds 0.0073    solve 0.4976    add 0.0037    
Accumulated time: pickout 0.0020    decision 0.0702    set_bounds 0.0239    solve 0.9354    add 0.0064    
Current (lb-rhs): -3.5453271865844727
209 domains visited
Cumulative time: 1.045583724975586

BaB round 3
batch: 125
splitting decisions: 
split level 0: [/input.11, 36] [/input.11, 36] [/input.11, 56] [/input.11, 36] [/input.11, 36] [/input.11, 25] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 250 = 0.21599999999999997
pruning-in-iteration extra time: 0.009485006332397461
Time: prepare 0.0342    bound 0.4590    transfer 0.0032    finalize 0.0209    func 0.5174    
Accumulated time: func 1.4527    prepare 0.0733    bound 1.3334    transfer 0.0056    finalize 0.0414    
Current worst splitting domains lb-rhs (depth):
-3.41325 (9), -3.30058 (9), -3.11959 (9), -3.04416 (9), -3.02264 (9), -2.79031 (9), -2.70798 (9), -2.56252 (9), -2.55340 (9), -2.53713 (9), -2.48702 (9), -2.47235 (9), -2.40524 (9), -2.39750 (9), -2.37570 (9), -2.36357 (9), -2.36084 (9), -2.31774 (9), -2.30280 (9), -2.29222 (9), 
Length of domains: 196
Time: pickout 0.0016    decision 0.0362    set_bounds 0.0101    solve 0.5176    add 0.0037    
Accumulated time: pickout 0.0036    decision 0.1065    set_bounds 0.0340    solve 1.4530    add 0.0102    
Current (lb-rhs): -3.413245439529419
405 domains visited
Cumulative time: 1.6166274547576904

BaB round 4
batch: 196
splitting decisions: 
split level 0: [/input.7, 706] [/input.7, 631] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 707] [/input.11, 25] [/input.11, 25] [/input.11, 56] [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 392 = 0.3163265306122449
pruning-in-iteration extra time: 0.010557174682617188
Time: prepare 0.0542    bound 0.6585    transfer 0.0051    finalize 0.0301    func 0.7481    
Accumulated time: func 2.2008    prepare 0.1278    bound 1.9919    transfer 0.0107    finalize 0.0715    
Current worst splitting domains lb-rhs (depth):
-3.20037 (10), -3.14423 (10), -2.98968 (10), -2.84752 (10), -2.84635 (10), -2.77922 (10), -2.76169 (10), -2.64938 (10), -2.61674 (10), -2.54226 (10), -2.47100 (10), -2.44326 (10), -2.40376 (10), -2.34175 (10), -2.33485 (10), -2.31591 (10), -2.28731 (10), -2.24042 (10), -2.23204 (10), -2.20724 (10), 
Length of domains: 268
Time: pickout 0.0019    decision 0.0432    set_bounds 0.0152    solve 0.7483    add 0.0046    
Accumulated time: pickout 0.0055    decision 0.1497    set_bounds 0.0492    solve 2.2013    add 0.0148    
Current (lb-rhs): -3.2003700733184814
673 domains visited
Cumulative time: 2.432202100753784

BaB round 5
batch: 268
splitting decisions: 
split level 0: [/input.7, 707] [/input.11, 56] [/input.11, 56] [/input.7, 707] [/input.7, 707] [/input.7, 706] [/input.7, 702] [/input.7, 598] [/input.7, 706] [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 143 / 536 = 0.26679104477611937
pruning-in-iteration extra time: 0.010438203811645508
Time: prepare 0.0748    bound 0.6229    transfer 0.0068    finalize 0.0393    func 0.7438    
Accumulated time: func 2.9446    prepare 0.2029    bound 2.6148    transfer 0.0175    finalize 0.1108    
Current worst splitting domains lb-rhs (depth):
-3.03368 (11), -2.95236 (11), -2.87966 (11), -2.81788 (11), -2.73905 (11), -2.72133 (11), -2.62796 (11), -2.59826 (11), -2.59790 (11), -2.44828 (11), -2.38143 (11), -2.35489 (11), -2.33042 (11), -2.31461 (11), -2.27380 (11), -2.24333 (11), -2.22205 (11), -2.19998 (11), -2.19330 (11), -2.17594 (11), 
Length of domains: 393
Time: pickout 0.0020    decision 0.0491    set_bounds 0.0204    solve 0.7451    add 0.0063    
Accumulated time: pickout 0.0075    decision 0.1988    set_bounds 0.0696    solve 2.9464    add 0.0211    
Current (lb-rhs): -3.033682107925415
1066 domains visited
Cumulative time: 3.258251190185547

BaB round 6
batch: 393
splitting decisions: 
split level 0: [/input.11, 25] [/input.7, 256] [/input.7, 707] [/input.7, 637] [/input.11, 56] [/input.11, 56] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 206 / 786 = 0.2620865139949109
pruning-in-iteration extra time: 0.009710073471069336
Time: prepare 0.1095    bound 0.6123    transfer 0.0093    finalize 0.0548    func 0.7861    
Accumulated time: func 3.7306    prepare 0.3128    bound 3.2271    transfer 0.0268    finalize 0.1656    
Current worst splitting domains lb-rhs (depth):
-2.79159 (12), -2.73188 (12), -2.63264 (12), -2.58431 (12), -2.57747 (12), -2.52720 (12), -2.48898 (12), -2.48692 (12), -2.46657 (12), -2.46547 (12), -2.46229 (12), -2.44033 (12), -2.42264 (12), -2.37469 (12), -2.37223 (12), -2.31033 (12), -2.25354 (12), -2.23960 (12), -2.21152 (12), -2.17093 (12), 
Length of domains: 580
Time: pickout 0.0024    decision 0.0622    set_bounds 0.0300    solve 0.7863    add 0.0077    
Accumulated time: pickout 0.0099    decision 0.2610    set_bounds 0.0996    solve 3.7327    add 0.0288    
Current (lb-rhs): -2.7915918827056885
1646 domains visited
Cumulative time: 4.151318311691284

BaB round 7
batch: 580
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 706] [/input.7, 256] [/input.11, 56] [/input.7, 256] [/input.7, 256] [/input.11, 73] [/input.7, 707] [/input.7, 636] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 309 / 1160 = 0.26637931034482754
pruning-in-iteration extra time: 0.00943756103515625
Time: prepare 0.1637    bound 0.6172    transfer 0.0142    finalize 0.0865    func 0.8817    
Accumulated time: func 4.6123    prepare 0.4768    bound 3.8443    transfer 0.0410    finalize 0.2520    
Current worst splitting domains lb-rhs (depth):
-2.73698 (13), -2.57840 (13), -2.56389 (13), -2.51025 (13), -2.48107 (13), -2.44312 (13), -2.41762 (13), -2.40837 (13), -2.40521 (13), -2.36383 (13), -2.30925 (13), -2.29109 (13), -2.28097 (13), -2.27817 (13), -2.24191 (13), -2.21497 (13), -2.15407 (13), -2.13245 (13), -2.10974 (13), -2.09034 (13), 
Length of domains: 851
Time: pickout 0.0031    decision 0.0826    set_bounds 0.0435    solve 0.8820    add 0.0112    
Accumulated time: pickout 0.0130    decision 0.3437    set_bounds 0.1432    solve 4.6148    add 0.0400    
Current (lb-rhs): -2.7369766235351562
2497 domains visited
Cumulative time: 5.180530071258545

BaB round 8
batch: 851
splitting decisions: 
split level 0: [/input.7, 256] [/input.7, 707] [/input.7, 631] [/input.7, 708] [/input.7, 631] [/input.7, 631] [/input.11, 12] [/input.7, 256] [/input.7, 636] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 507 / 1702 = 0.2978848413631022
pruning-in-iteration extra time: 0.011045694351196289
Time: prepare 0.2394    bound 0.6764    transfer 0.0187    finalize 0.1192    func 1.0548    
Accumulated time: func 5.6671    prepare 0.7166    bound 4.5206    transfer 0.0596    finalize 0.3712    
Current worst splitting domains lb-rhs (depth):
-2.57610 (14), -2.46096 (14), -2.40083 (14), -2.39949 (14), -2.36793 (14), -2.36467 (14), -2.36057 (14), -2.35677 (14), -2.32562 (14), -2.30592 (14), -2.30517 (14), -2.27759 (14), -2.23313 (14), -2.18622 (14), -2.14306 (14), -2.12910 (14), -2.11883 (14), -2.11872 (14), -2.11039 (14), -2.10111 (14), 
Length of domains: 1195
Time: pickout 0.0041    decision 0.1107    set_bounds 0.0642    solve 1.0554    add 0.0678    
Accumulated time: pickout 0.0171    decision 0.4544    set_bounds 0.2074    solve 5.6701    add 0.1078    
Current (lb-rhs): -2.5761032104492188
3692 domains visited
Cumulative time: 6.497127294540405

BaB round 9
batch: 1195
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 636] [/input.7, 257] [/input.11, 58] [/input.7, 142] [/input.7, 257] [/input.7, 707] [/input.7, 636] [/input.11, 58] [/input.7, 257] 
pruning_in_iteration open status: True
ratio of positive domain = 720 / 2390 = 0.301255230125523
pruning-in-iteration extra time: 0.011428594589233398
Time: prepare 0.3387    bound 0.7236    transfer 0.0251    finalize 0.1645    func 1.2528    
Accumulated time: func 6.9199    prepare 1.0556    bound 5.2442    transfer 0.0847    finalize 0.5357    
Current worst splitting domains lb-rhs (depth):
-2.36992 (15), -2.35317 (15), -2.32833 (15), -2.30799 (15), -2.29774 (15), -2.27528 (15), -2.27421 (15), -2.21113 (15), -2.20697 (15), -2.20589 (15), -2.20110 (15), -2.19633 (15), -2.17680 (15), -2.10798 (15), -2.09479 (15), -2.09101 (15), -2.07104 (15), -2.06680 (15), -2.06644 (15), -2.06624 (15), 
Length of domains: 1670
Time: pickout 0.0051    decision 0.1489    set_bounds 0.2328    solve 1.2535    add 0.0163    
Accumulated time: pickout 0.0223    decision 0.6033    set_bounds 0.4402    solve 6.9236    add 0.1241    
Current (lb-rhs): -2.369917154312134
5362 domains visited
Cumulative time: 8.167794466018677

BaB round 10
batch: 1670
splitting decisions: 
split level 0: [/input.7, 631] [/input.11, 58] [/input.7, 636] [/input.7, 256] [/input.7, 708] [/input.7, 706] [/input.7, 631] [/input.7, 257] [/input.7, 707] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 1104 / 3340 = 0.3305389221556886
pruning-in-iteration extra time: 0.013019323348999023
Time: prepare 0.4763    bound 0.7487    transfer 0.0344    finalize 0.2298    func 1.4903    
Accumulated time: func 8.4103    prepare 1.5323    bound 5.9929    transfer 0.1192    finalize 0.7655    
Current worst splitting domains lb-rhs (depth):
-2.21915 (16), -2.19648 (16), -2.17558 (16), -2.13692 (16), -2.12154 (16), -2.11268 (16), -2.09897 (16), -2.08674 (16), -2.08025 (16), -2.05246 (16), -2.05133 (16), -2.02836 (16), -2.02628 (16), -2.02496 (16), -2.02474 (16), -2.02036 (16), -1.98698 (16), -1.96951 (16), -1.96750 (16), -1.96019 (16), 
Length of domains: 2236
Time: pickout 0.0060    decision 0.2017    set_bounds 0.1265    solve 1.4913    add 0.1128    
Accumulated time: pickout 0.0283    decision 0.8049    set_bounds 0.5667    solve 8.4149    add 0.2369    
Current (lb-rhs): -2.2191548347473145
7598 domains visited
Cumulative time: 10.125765085220337

BaB round 11
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.11, 58] [/input.7, 636] [/input.7, 257] [/input.11, 73] [/input.7, 636] [/input.7, 637] [/input.7, 257] [/input.7, 256] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1523 / 4096 = 0.371826171875
pruning-in-iteration extra time: 0.012944221496582031
Time: prepare 0.5873    bound 0.7549    transfer 0.0398    finalize 0.2836    func 1.6667    
Accumulated time: func 10.0770    prepare 2.1200    bound 6.7478    transfer 0.1590    finalize 1.0491    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -2.08018 (17), -2.06311 (17), -2.01893 (17), -1.97452 (17), -1.96019 (16), -1.94560 (17), -1.93554 (17), -1.91873 (17), -1.90711 (17), -1.90387 (16), -1.90373 (16), -1.90083 (17), -1.87542 (17), -1.87323 (17), -1.87017 (17), -1.86834 (17), -1.86831 (17), -1.84981 (17), 
Length of domains: 2761
Time: pickout 0.0073    decision 0.3742    set_bounds 0.1570    solve 1.6678    add 0.0242    
Accumulated time: pickout 0.0356    decision 1.1791    set_bounds 0.7237    solve 10.0827    add 0.2611    
Current (lb-rhs): -2.1126770973205566
10171 domains visited
Cumulative time: 12.380390644073486

BaB round 12
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 258] [/input.7, 257] [/input.11, 58] [/input.11, 58] [/input.7, 636] [/input.11, 58] [/input.7, 257] [/input.7, 631] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 1581 / 4096 = 0.385986328125
pruning-in-iteration extra time: 0.012598276138305664
Time: prepare 0.5868    bound 0.7381    transfer 0.0400    finalize 0.2820    func 1.6483    
Accumulated time: func 11.7252    prepare 2.7072    bound 7.4860    transfer 0.1989    finalize 1.3310    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.95377 (18), -1.90950 (18), -1.90387 (16), -1.90373 (16), -1.89410 (18), -1.86598 (18), -1.86484 (18), -1.86160 (18), -1.84847 (17), -1.83426 (17), -1.81453 (18), -1.79736 (16), -1.79008 (18), -1.76923 (18), -1.76843 (18), -1.76528 (17), -1.75740 (17), 
Length of domains: 3228
Time: pickout 0.0076    decision 0.2407    set_bounds 0.2992    solve 1.6494    add 0.0191    
Accumulated time: pickout 0.0432    decision 1.4198    set_bounds 1.0229    solve 11.7321    add 0.2802    
Current (lb-rhs): -2.1126770973205566
12686 domains visited
Cumulative time: 14.621017694473267

BaB round 13
batch: 2048
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 256] [/input.7, 638] [/input.11, 12] [/input.7, 636] [/input.11, 63] [/input.11, 63] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 1740 / 4096 = 0.4248046875
pruning-in-iteration extra time: 0.012557744979858398
Time: prepare 0.5910    bound 0.7292    transfer 0.0391    finalize 0.2827    func 1.6424    
Accumulated time: func 13.3676    prepare 3.2985    bound 8.2152    transfer 0.2380    finalize 1.6138    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.90102 (19), -1.86598 (18), -1.85548 (19), -1.84847 (17), -1.83613 (19), -1.83426 (17), -1.80651 (19), -1.80484 (19), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.75330 (19), -1.74858 (16), -1.73592 (19), -1.71454 (16), 
Length of domains: 3536
Time: pickout 0.0077    decision 0.2406    set_bounds 0.1607    solve 1.6438    add 0.0175    
Accumulated time: pickout 0.0509    decision 1.6604    set_bounds 1.1836    solve 13.3759    add 0.2977    
Current (lb-rhs): -2.1126770973205566
15042 domains visited
Cumulative time: 16.71667456626892

BaB round 14
batch: 2048
splitting decisions: 
split level 0: [/input.7, 631] [/input.11, 73] [/input.7, 708] [/input.7, 257] [/input.11, 73] [/input.11, 12] [/input.7, 136] [/input.7, 258] [/input.7, 136] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 1707 / 4096 = 0.416748046875
pruning-in-iteration extra time: 0.012454509735107422
Time: prepare 0.5932    bound 0.6582    transfer 0.0391    finalize 0.2830    func 1.5747    
Accumulated time: func 14.9423    prepare 3.8922    bound 8.8734    transfer 0.2771    finalize 1.8968    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.75228 (20), -1.74858 (16), -1.72502 (20), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.68119 (20), -1.67147 (18), -1.67067 (16), 
Length of domains: 3877
Time: pickout 0.0077    decision 0.3768    set_bounds 0.1612    solve 1.5759    add 0.0204    
Accumulated time: pickout 0.0586    decision 2.0372    set_bounds 1.3448    solve 14.9518    add 0.3181    
Current (lb-rhs): -2.1126770973205566
17431 domains visited
Cumulative time: 18.88454556465149

BaB round 15
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 136] [/input.11, 63] [/input.11, 12] [/input.11, 9] [/input.7, 702] [/input.11, 9] [/input.7, 631] [/input.11, 12] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 1708 / 4096 = 0.4169921875
pruning-in-iteration extra time: 0.012676715850830078
Time: prepare 0.5907    bound 0.6956    transfer 0.0402    finalize 0.2844    func 1.6121    
Accumulated time: func 16.5544    prepare 4.4832    bound 9.5690    transfer 0.3173    finalize 2.1812    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4217
Time: pickout 0.0078    decision 0.2427    set_bounds 0.3051    solve 1.6133    add 0.1972    
Accumulated time: pickout 0.0664    decision 2.2798    set_bounds 1.6499    solve 16.5651    add 0.5153    
Current (lb-rhs): -2.1126770973205566
19819 domains visited
Cumulative time: 21.276966333389282

BaB round 16
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 258] [/input.7, 708] [/input.7, 31] [/input.7, 258] [/input.7, 31] [/input.7, 637] [/input.11, 63] [/input.7, 638] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1631 / 4096 = 0.398193359375
pruning-in-iteration extra time: 0.012244462966918945
Time: prepare 0.5937    bound 0.7340    transfer 0.0405    finalize 0.2840    func 1.6536    
Accumulated time: func 18.2080    prepare 5.0773    bound 10.3030    transfer 0.3578    finalize 2.4652    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4634
Time: pickout 0.0079    decision 0.2429    set_bounds 0.1623    solve 1.6548    add 0.0200    
Accumulated time: pickout 0.0743    decision 2.5227    set_bounds 1.8122    solve 18.2199    add 0.5353    
Current (lb-rhs): -2.1126770973205566
22284 domains visited
Cumulative time: 23.389647722244263

BaB round 17
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.11, 63] [/input.11, 9] [/input.7, 702] [/input.7, 702] [/input.7, 31] [/input.7, 638] [/input.7, 708] [/input.7, 638] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 1527 / 4096 = 0.372802734375
pruning-in-iteration extra time: 0.012996196746826172
Time: prepare 0.5936    bound 0.6946    transfer 0.0424    finalize 0.2852    func 1.6164    
Accumulated time: func 19.8244    prepare 5.6713    bound 10.9977    transfer 0.4002    finalize 2.7504    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5155
Time: pickout 0.0087    decision 0.2419    set_bounds 0.3064    solve 1.6179    add 0.0209    
Accumulated time: pickout 0.0830    decision 2.7646    set_bounds 2.1187    solve 19.8378    add 0.5562    
Current (lb-rhs): -2.1126770973205566
24853 domains visited
Cumulative time: 25.61132574081421

BaB round 18
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.11, 17] [/input.7, 638] [/input.7, 258] [/input.7, 637] [/input.7, 636] [/input.7, 31] [/input.7, 702] [/input.7, 631] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1525 / 4096 = 0.372314453125
pruning-in-iteration extra time: 0.012720584869384766
Time: prepare 0.5917    bound 0.6850    transfer 0.0392    finalize 0.4409    func 1.7572    
Accumulated time: func 21.5816    prepare 6.2634    bound 11.6827    transfer 0.4394    finalize 3.1913    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5678
Time: pickout 0.0079    decision 0.2415    set_bounds 0.1628    solve 1.7588    add 0.0198    
Accumulated time: pickout 0.0909    decision 3.0061    set_bounds 2.2814    solve 21.5966    add 0.5760    
Current (lb-rhs): -2.1126770973205566
27424 domains visited
Cumulative time: 27.826346397399902

BaB round 19
batch: 2048
splitting decisions: 
split level 0: [/input.7, 142] [/input.11, 9] [/input.7, 637] [/input.7, 142] [/input.7, 258] [/input.7, 638] [/input.7, 142] [/input.7, 708] [/input.7, 637] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 1476 / 4096 = 0.3603515625
pruning-in-iteration extra time: 0.012848377227783203
Time: prepare 0.5936    bound 0.6636    transfer 0.0390    finalize 0.2854    func 1.5819    
Accumulated time: func 23.1635    prepare 6.8573    bound 12.3463    transfer 0.4784    finalize 3.4767    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6250
Time: pickout 0.0086    decision 0.2423    set_bounds 0.1636    solve 1.5838    add 0.0246    
Accumulated time: pickout 0.0995    decision 3.2484    set_bounds 2.4450    solve 23.1804    add 0.6006    
Current (lb-rhs): -2.1126770973205566
30044 domains visited
Cumulative time: 29.874914407730103

BaB round 20
batch: 2048
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 31] [/input.7, 708] [/input.7, 708] [/input.11, 9] [/input.11, 9] [/input.11, 65] [/input.7, 31] [/input.11, 97] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 1528 / 4096 = 0.373046875
pruning-in-iteration extra time: 0.013257265090942383
Time: prepare 0.6018    bound 0.5940    transfer 0.0451    finalize 0.2928    func 1.5340    
Accumulated time: func 24.6975    prepare 7.4595    bound 12.9403    transfer 0.5234    finalize 3.7694    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6770
Time: pickout 0.0079    decision 0.2430    set_bounds 0.3220    solve 1.5358    add 0.0233    
Accumulated time: pickout 0.1075    decision 3.4914    set_bounds 2.7671    solve 24.7162    add 0.6238    
Current (lb-rhs): -2.1126770973205566
32612 domains visited
Cumulative time: 32.03276085853577

BaB round 21
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.7, 31] [/input.7, 708] [/input.7, 638] [/input.7, 258] [/input.11, 17] [/input.7, 636] [/input.7, 638] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 1887 / 4096 = 0.460693359375
pruning-in-iteration extra time: 0.011919498443603516
Time: prepare 0.5901    bound 0.7025    transfer 0.0401    finalize 0.2899    func 1.6230    
Accumulated time: func 26.3206    prepare 8.0499    bound 13.6428    transfer 0.5635    finalize 4.0593    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6931
Time: pickout 0.0081    decision 0.2426    set_bounds 0.1625    solve 1.6248    add 0.0203    
Accumulated time: pickout 0.1155    decision 3.7340    set_bounds 2.9296    solve 26.3410    add 0.6442    
Current (lb-rhs): -2.1126770973205566
34821 domains visited
Cumulative time: 34.116342067718506

BaB round 22
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 9] [/input.11, 65] [/input.11, 17] [/input.7, 638] [/input.11, 17] [/input.7, 637] [/input.11, 32] [/input.11, 17] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 1864 / 4096 = 0.455078125
pruning-in-iteration extra time: 0.013182640075683594
Time: prepare 0.6031    bound 0.7159    transfer 0.0392    finalize 0.2971    func 1.6567    
Accumulated time: func 27.9773    prepare 8.6534    bound 14.3587    transfer 0.6027    finalize 4.3564    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 7115
Time: pickout 0.0106    decision 0.4085    set_bounds 0.1616    solve 1.6580    add 0.0211    
Accumulated time: pickout 0.1261    decision 4.1425    set_bounds 3.0912    solve 27.9991    add 0.6652    
Current (lb-rhs): -2.1126770973205566
37053 domains visited
Cumulative time: 36.40515947341919

BaB round 23
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.7, 142] [/input.7, 142] [/input.7, 31] [/input.11, 17] [/input.7, 142] [/input.7, 638] [/input.11, 65] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2126 / 4096 = 0.51904296875
pruning-in-iteration extra time: 0.012457609176635742
Time: prepare 0.6018    bound 0.7264    transfer 0.0399    finalize 0.4607    func 1.8301    
Accumulated time: func 29.8074    prepare 9.2555    bound 15.0851    transfer 0.6427    finalize 4.8170    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 7037
Time: pickout 0.0082    decision 0.2432    set_bounds 0.1653    solve 1.8314    add 0.0162    
Accumulated time: pickout 0.1343    decision 4.3857    set_bounds 3.2565    solve 29.8305    add 0.6814    
Current (lb-rhs): -2.1126770973205566
39023 domains visited
Cumulative time: 38.697561740875244

BaB round 24
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 142] [/input.7, 708] [/input.7, 142] [/input.7, 708] [/input.11, 17] [/input.7, 592] [/input.7, 116] [/input.11, 17] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2123 / 4096 = 0.518310546875
pruning-in-iteration extra time: 0.012682199478149414
Time: prepare 0.6037    bound 0.6710    transfer 0.0402    finalize 0.2874    func 1.6038    
Accumulated time: func 31.4113    prepare 9.8596    bound 15.7561    transfer 0.6829    finalize 5.1044    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6962
Time: pickout 0.0109    decision 0.2434    set_bounds 0.1646    solve 1.6052    add 0.0178    
Accumulated time: pickout 0.1452    decision 4.6291    set_bounds 3.4211    solve 31.4357    add 0.6993    
Current (lb-rhs): -2.1126770973205566
40996 domains visited
Cumulative time: 40.76938533782959

BaB round 25
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 65] [/input.11, 9] [/input.11, 65] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 9] [/input.7, 31] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 2401 / 4096 = 0.586181640625
pruning-in-iteration extra time: 0.012447357177734375
Time: prepare 0.5968    bound 0.7158    transfer 0.0391    finalize 0.2846    func 1.6379    
Accumulated time: func 33.0492    prepare 10.4568    bound 16.4719    transfer 0.7220    finalize 5.3890    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6609
Time: pickout 0.0084    decision 0.2433    set_bounds 0.3637    solve 1.6393    add 0.0142    
Accumulated time: pickout 0.1536    decision 4.8725    set_bounds 3.7848    solve 33.0749    add 0.7134    
Current (lb-rhs): -2.1126770973205566
42691 domains visited
Cumulative time: 43.07261610031128

BaB round 26
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.11, 9] [/input.7, 638] [/input.7, 31] [/input.7, 637] [/input.7, 708] [/input.11, 9] [/input.7, 31] [/input.11, 9] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2484 / 4096 = 0.6064453125
pruning-in-iteration extra time: 0.012112140655517578
Time: prepare 0.6004    bound 0.7246    transfer 0.0387    finalize 0.2882    func 1.6536    
Accumulated time: func 34.7028    prepare 11.0576    bound 17.1965    transfer 0.7607    finalize 5.6773    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6173
Time: pickout 0.0103    decision 0.2437    set_bounds 0.1658    solve 1.6549    add 0.0138    
Accumulated time: pickout 0.1638    decision 5.1162    set_bounds 3.9506    solve 34.7298    add 0.7273    
Current (lb-rhs): -2.1126770973205566
44303 domains visited
Cumulative time: 45.196874141693115

BaB round 27
batch: 2048
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 258] [/input.7, 638] [/input.7, 638] [/input.7, 258] [/input.11, 9] [/input.7, 708] [/input.7, 637] [/input.11, 9] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2160 / 4096 = 0.52734375
pruning-in-iteration extra time: 0.01280665397644043
Time: prepare 0.6039    bound 0.6806    transfer 0.0400    finalize 0.2885    func 1.6134    
Accumulated time: func 36.3162    prepare 11.6618    bound 17.8771    transfer 0.8007    finalize 5.9658    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6061
Time: pickout 0.0084    decision 0.2447    set_bounds 0.3421    solve 1.6149    add 0.0184    
Accumulated time: pickout 0.1723    decision 5.3609    set_bounds 4.2927    solve 36.3448    add 0.7456    
Current (lb-rhs): -2.1126770973205566
46239 domains visited
Cumulative time: 47.45796084403992

BaB round 28
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 708] [/input.7, 631] [/input.7, 258] [/input.11, 17] [/input.7, 31] [/input.7, 702] [/input.11, 9] [/input.7, 637] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2086 / 4096 = 0.50927734375
pruning-in-iteration extra time: 0.012455940246582031
Time: prepare 0.6033    bound 0.6663    transfer 0.0391    finalize 0.2875    func 1.5966    
Accumulated time: func 37.9127    prepare 12.2655    bound 18.5434    transfer 0.8398    finalize 6.2533    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 6023
Time: pickout 0.0086    decision 0.2435    set_bounds 0.1663    solve 1.5983    add 0.0172    
Accumulated time: pickout 0.1809    decision 5.6044    set_bounds 4.4590    solve 37.9430    add 0.7628    
Current (lb-rhs): -2.1126770973205566
48249 domains visited
Cumulative time: 49.52273464202881

BaB round 29
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.7, 31] [/input.7, 31] [/input.11, 17] [/input.7, 31] [/input.7, 638] [/input.7, 708] [/input.7, 258] [/input.7, 638] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2258 / 4096 = 0.55126953125
pruning-in-iteration extra time: 0.011834144592285156
Time: prepare 0.6011    bound 0.7123    transfer 0.0388    finalize 0.2878    func 1.6404    
Accumulated time: func 39.5531    prepare 12.8669    bound 19.2556    transfer 0.8786    finalize 6.5411    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5813
Time: pickout 0.0098    decision 0.2429    set_bounds 0.3224    solve 1.6424    add 0.0157    
Accumulated time: pickout 0.1907    decision 5.8474    set_bounds 4.7814    solve 39.5854    add 0.7785    
Current (lb-rhs): -2.1126770973205566
50087 domains visited
Cumulative time: 51.78668451309204

BaB round 30
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.3, 2254] [/input.11, 9] [/input.11, 17] [/input.11, 17] [/input.7, 708] [/input.7, 702] [/input.7, 638] [/input.7, 258] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2298 / 4096 = 0.56103515625
pruning-in-iteration extra time: 0.010709047317504883
Time: prepare 0.5982    bound 0.7062    transfer 0.0329    finalize 0.4518    func 1.7895    
Accumulated time: func 41.3427    prepare 13.4655    bound 19.9618    transfer 0.9115    finalize 6.9929    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5563
Time: pickout 0.0121    decision 0.2442    set_bounds 0.1655    solve 1.7915    add 0.0147    
Accumulated time: pickout 0.2029    decision 6.0916    set_bounds 4.9469    solve 41.3769    add 0.7933    
Current (lb-rhs): -2.1126770973205566
51885 domains visited
Cumulative time: 54.05000853538513

BaB round 31
batch: 2048
splitting decisions: 
split level 0: [/input.7, 136] [/input.7, 258] [/input.11, 17] [/input.7, 31] [/input.7, 638] [/input.7, 637] [/input.7, 258] [/input.7, 258] [/input.7, 636] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2239 / 4096 = 0.546630859375
pruning-in-iteration extra time: 0.010316848754882812
Time: prepare 0.5969    bound 0.7302    transfer 0.0331    finalize 0.2884    func 1.6491    
Accumulated time: func 42.9917    prepare 14.0628    bound 20.6920    transfer 0.9447    finalize 7.2813    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5372
Time: pickout 0.0085    decision 0.2437    set_bounds 0.1665    solve 1.6510    add 0.0152    
Accumulated time: pickout 0.2114    decision 6.3353    set_bounds 5.1134    solve 43.0279    add 0.8084    
Current (lb-rhs): -2.1126770973205566
53742 domains visited
Cumulative time: 56.16987466812134

BaB round 32
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 637] [/input.7, 638] [/input.7, 708] [/input.7, 258] [/input.7, 702] [/input.7, 258] [/input.7, 258] [/input.7, 708] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2098 / 4096 = 0.51220703125
pruning-in-iteration extra time: 0.010300874710083008
Time: prepare 0.5986    bound 0.6968    transfer 0.0328    finalize 0.2879    func 1.6166    
Accumulated time: func 44.6083    prepare 14.6618    bound 21.3888    transfer 0.9774    finalize 7.5693    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5322
Time: pickout 0.0086    decision 0.2437    set_bounds 0.3231    solve 1.6185    add 0.0161    
Accumulated time: pickout 0.2200    decision 6.5790    set_bounds 5.4365    solve 44.6465    add 0.8245    
Current (lb-rhs): -2.1126770973205566
55740 domains visited
Cumulative time: 58.413227796554565

BaB round 33
batch: 2048
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 637] [/input.7, 637] [/input.11, 17] [/input.7, 136] [/input.7, 708] [/input.7, 638] [/input.11, 97] [/input.7, 708] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 2026 / 4096 = 0.49462890625
pruning-in-iteration extra time: 0.009813070297241211
Time: prepare 0.5971    bound 0.6903    transfer 0.0324    finalize 0.2879    func 1.6089    
Accumulated time: func 46.2172    prepare 15.2593    bound 22.0791    transfer 1.0098    finalize 7.8571    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5344
Time: pickout 0.0085    decision 0.2436    set_bounds 0.1661    solve 1.6102    add 0.0178    
Accumulated time: pickout 0.2285    decision 6.8226    set_bounds 5.6027    solve 46.2567    add 0.8423    
Current (lb-rhs): -2.1126770973205566
57810 domains visited
Cumulative time: 60.49068784713745

BaB round 34
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 142] [/input.11, 9] [/input.11, 9] [/input.7, 31] [/input.7, 708] [/input.7, 702] [/input.7, 638] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 2038 / 4096 = 0.49755859375
pruning-in-iteration extra time: 0.01048588752746582
Time: prepare 0.5951    bound 0.7213    transfer 0.0334    finalize 0.2870    func 1.6385    
Accumulated time: func 47.8557    prepare 15.8548    bound 22.8004    transfer 1.0433    finalize 8.1442    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5354
Time: pickout 0.0098    decision 0.3973    set_bounds 0.1647    solve 1.6398    add 0.0165    
Accumulated time: pickout 0.2383    decision 7.2200    set_bounds 5.7674    solve 47.8965    add 0.8589    
Current (lb-rhs): -2.1126770973205566
59868 domains visited
Cumulative time: 62.74801802635193

BaB round 35
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 142] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.7, 31] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2071 / 4096 = 0.505615234375
pruning-in-iteration extra time: 0.010700225830078125
Time: prepare 0.5973    bound 0.6352    transfer 0.0371    finalize 0.4483    func 1.7196    
Accumulated time: func 49.5753    prepare 16.4525    bound 23.4356    transfer 1.0804    finalize 8.5924    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5331
Time: pickout 0.0117    decision 0.2449    set_bounds 0.1654    solve 1.7209    add 0.0164    
Accumulated time: pickout 0.2500    decision 7.4649    set_bounds 5.9327    solve 49.6174    add 0.8753    
Current (lb-rhs): -2.1126770973205566
61893 domains visited
Cumulative time: 64.94027638435364

BaB round 36
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 31] [/input.7, 31] [/input.7, 31] [/input.7, 638] [/input.7, 637] [/input.7, 638] [/input.7, 708] [/input.11, 17] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2096 / 4096 = 0.51171875
pruning-in-iteration extra time: 0.011914253234863281
Time: prepare 0.6110    bound 0.6106    transfer 0.0429    finalize 0.3033    func 1.5697    
Accumulated time: func 51.1450    prepare 17.0638    bound 24.0462    transfer 1.1233    finalize 8.8958    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5283
Time: pickout 0.0084    decision 0.2434    set_bounds 0.1656    solve 1.5710    add 0.0207    
Accumulated time: pickout 0.2585    decision 7.7083    set_bounds 6.0983    solve 51.1884    add 0.8960    
Current (lb-rhs): -2.1126770973205566
63893 domains visited
Cumulative time: 66.98330879211426

BaB round 37
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 638] [/input.7, 702] [/input.7, 702] [/input.7, 708] [/input.7, 136] [/input.7, 31] [/input.7, 638] [/input.7, 708] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 2244 / 4096 = 0.5478515625
pruning-in-iteration extra time: 0.01098489761352539
Time: prepare 0.5996    bound 0.6856    transfer 0.0357    finalize 0.2915    func 1.6128    
Accumulated time: func 52.7578    prepare 17.6638    bound 24.7319    transfer 1.1590    finalize 9.1873    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5087
Time: pickout 0.0085    decision 0.2434    set_bounds 0.3202    solve 1.6145    add 0.0155    
Accumulated time: pickout 0.2669    decision 7.9517    set_bounds 6.4185    solve 52.8029    add 0.9115    
Current (lb-rhs): -2.1126770973205566
65745 domains visited
Cumulative time: 69.21964859962463

BaB round 38
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 638] [/input.7, 31] [/input.7, 638] [/input.7, 708] [/input.7, 708] [/input.7, 638] [/input.7, 702] [/input.7, 638] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2255 / 4096 = 0.550537109375
pruning-in-iteration extra time: 0.010887622833251953
Time: prepare 0.6020    bound 0.6031    transfer 0.0344    finalize 0.2883    func 1.5283    
Accumulated time: func 54.2861    prepare 18.2662    bound 25.3350    transfer 1.1934    finalize 9.4756    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4880
Time: pickout 0.0085    decision 0.2430    set_bounds 0.1651    solve 1.5301    add 0.0152    
Accumulated time: pickout 0.2754    decision 8.1947    set_bounds 6.5836    solve 54.3329    add 0.9266    
Current (lb-rhs): -2.1126770973205566
67586 domains visited
Cumulative time: 71.21653866767883

BaB round 39
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 702] [/input.7, 638] [/input.7, 31] [/input.7, 258] [/input.7, 637] [/input.11, 9] [/input.7, 708] [/input.7, 638] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2131 / 4096 = 0.520263671875
pruning-in-iteration extra time: 0.01159358024597168
Time: prepare 0.5993    bound 0.6159    transfer 0.0386    finalize 0.2885    func 1.5428    
Accumulated time: func 55.8289    prepare 18.8659    bound 25.9509    transfer 1.2321    finalize 9.7641    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4797
Time: pickout 0.0086    decision 0.3946    set_bounds 0.1652    solve 1.5448    add 0.0158    
Accumulated time: pickout 0.2841    decision 8.5893    set_bounds 6.7487    solve 55.8777    add 0.9424    
Current (lb-rhs): -2.1126770973205566
69551 domains visited
Cumulative time: 73.37777781486511

BaB round 40
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 708] [/input.7, 258] [/input.7, 636] [/input.7, 638] [/input.7, 31] [/input.7, 708] [/input.7, 31] [/input.7, 708] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2078 / 4096 = 0.50732421875
pruning-in-iteration extra time: 0.011139869689941406
Time: prepare 0.5971    bound 0.6219    transfer 0.0365    finalize 0.4663    func 1.7229    
Accumulated time: func 57.5518    prepare 19.4633    bound 26.5727    transfer 1.2685    finalize 10.2304    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4767
Time: pickout 0.0083    decision 0.2426    set_bounds 0.1653    solve 1.7242    add 0.0159    
Accumulated time: pickout 0.2923    decision 8.8319    set_bounds 6.9141    solve 57.6019    add 0.9583    
Current (lb-rhs): -2.1126770973205566
71569 domains visited
Cumulative time: 75.56727075576782

BaB round 41
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 136] [/input.7, 136] [/input.7, 31] [/input.7, 258] [/input.11, 63] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 1880 / 4096 = 0.458984375
pruning-in-iteration extra time: 0.011297941207885742
Time: prepare 0.5921    bound 0.6373    transfer 0.0344    finalize 0.2869    func 1.5522    
Accumulated time: func 59.1040    prepare 20.0558    bound 27.2100    transfer 1.3029    finalize 10.5173    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4935
Time: pickout 0.0102    decision 0.2439    set_bounds 0.1658    solve 1.5535    add 0.0192    
Accumulated time: pickout 0.3026    decision 9.0759    set_bounds 7.0799    solve 59.1554    add 0.9775    
Current (lb-rhs): -2.1126770973205566
73785 domains visited
Cumulative time: 77.58982968330383

BaB round 42
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.7, 638] [/input.7, 637] [/input.11, 17] [/input.11, 17] [/input.7, 31] [/input.7, 258] [/input.11, 17] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 1912 / 4096 = 0.466796875
pruning-in-iteration extra time: 0.0106353759765625
Time: prepare 0.5933    bound 0.7573    transfer 0.0349    finalize 0.2846    func 1.6720    
Accumulated time: func 60.7761    prepare 20.6495    bound 27.9673    transfer 1.3377    finalize 10.8020    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5071
Time: pickout 0.0098    decision 0.2433    set_bounds 0.3154    solve 1.6734    add 0.0200    
Accumulated time: pickout 0.3124    decision 9.3192    set_bounds 7.3953    solve 60.8288    add 0.9976    
Current (lb-rhs): -2.1126770973205566
75969 domains visited
Cumulative time: 79.88372755050659

BaB round 43
batch: 2048
splitting decisions: 
split level 0: [/input.7, 631] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.11, 9] [/input.7, 702] [/input.11, 97] [/input.11, 9] [/input.11, 9] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 1976 / 4096 = 0.482421875
pruning-in-iteration extra time: 0.010772228240966797
Time: prepare 0.5925    bound 0.6750    transfer 0.0331    finalize 0.2860    func 1.5870    
Accumulated time: func 62.3631    prepare 21.2424    bound 28.6424    transfer 1.3708    finalize 11.0879    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5143
Time: pickout 0.0085    decision 0.2435    set_bounds 0.1662    solve 1.7646    add 0.0167    
Accumulated time: pickout 0.3208    decision 9.5627    set_bounds 7.5615    solve 62.5934    add 1.0142    
Current (lb-rhs): -2.1126770973205566
78089 domains visited
Cumulative time: 82.11572575569153

BaB round 44
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 711] [/input.7, 261] [/input.7, 138] [/input.7, 635] [/input.7, 261] [/input.11, 9] [/input.7, 258] [/input.11, 9] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 2030 / 4096 = 0.49560546875
pruning-in-iteration extra time: 0.01163482666015625
Time: prepare 0.5940    bound 0.5610    transfer 0.0372    finalize 0.2865    func 1.4791    
Accumulated time: func 63.8422    prepare 21.8368    bound 29.2034    transfer 1.4080    finalize 11.3744    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5161
Time: pickout 0.0078    decision 0.2428    set_bounds 0.1650    solve 1.4809    add 0.0166    
Accumulated time: pickout 0.3286    decision 9.8055    set_bounds 7.7265    solve 64.0743    add 1.0308    
Current (lb-rhs): -2.1126770973205566
80155 domains visited
Cumulative time: 84.06216382980347

BaB round 45
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 708] [/input.11, 17] [/input.7, 116] [/input.11, 70] [/input.11, 9] [/input.11, 97] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2179 / 4096 = 0.531982421875
pruning-in-iteration extra time: 0.01114964485168457
Time: prepare 0.7508    bound 0.5904    transfer 0.0332    finalize 0.2869    func 1.6617    
Accumulated time: func 65.5039    prepare 22.5880    bound 29.7938    transfer 1.4412    finalize 11.6612    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 5030
Time: pickout 0.0085    decision 0.2432    set_bounds 0.1657    solve 1.6637    add 0.0152    
Accumulated time: pickout 0.3372    decision 10.0487    set_bounds 7.8922    solve 65.7380    add 1.0460    
Current (lb-rhs): -2.1126770973205566
82072 domains visited
Cumulative time: 86.19297957420349

BaB round 46
batch: 2048
splitting decisions: 
split level 0: [/input.11, 70] [/input.7, 27] [/input.7, 261] [/input.7, 27] [/input.7, 116] [/input.7, 635] [/input.7, 27] [/input.7, 635] [/input.7, 711] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2302 / 4096 = 0.56201171875
pruning-in-iteration extra time: 0.010092973709106445
Time: prepare 0.5913    bound 0.7859    transfer 0.0333    finalize 0.2879    func 1.6987    
Accumulated time: func 67.2027    prepare 23.1797    bound 30.5797    transfer 1.4745    finalize 11.9491    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4776
Time: pickout 0.0086    decision 0.2417    set_bounds 0.1667    solve 1.7008    add 0.0146    
Accumulated time: pickout 0.3457    decision 10.2904    set_bounds 8.0589    solve 67.4388    add 1.0606    
Current (lb-rhs): -2.1126770973205566
83866 domains visited
Cumulative time: 88.35852980613708

BaB round 47
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.7, 638] [/input.7, 702] [/input.7, 638] [/input.7, 258] [/input.7, 258] [/input.7, 708] [/input.7, 708] [/input.11, 17] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2313 / 4096 = 0.564697265625
pruning-in-iteration extra time: 0.010620832443237305
Time: prepare 0.5980    bound 0.6575    transfer 0.0362    finalize 0.2880    func 1.5814    
Accumulated time: func 68.7840    prepare 23.7781    bound 31.2372    transfer 1.5107    finalize 12.2371    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4511
Time: pickout 0.0107    decision 0.2442    set_bounds 0.3164    solve 1.5826    add 0.0148    
Accumulated time: pickout 0.3564    decision 10.5346    set_bounds 8.3753    solve 69.0214    add 1.0754    
Current (lb-rhs): -2.1126770973205566
85649 domains visited
Cumulative time: 90.56322479248047

BaB round 48
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 702] [/input.7, 702] [/input.7, 631] [/input.11, 63] [/input.11, 63] [/input.7, 702] [/input.11, 63] [/input.7, 638] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 2188 / 4096 = 0.5341796875
pruning-in-iteration extra time: 0.012572050094604492
Time: prepare 0.5985    bound 0.6208    transfer 0.0375    finalize 0.2873    func 1.5460    
Accumulated time: func 70.3300    prepare 24.3770    bound 31.8580    transfer 1.5482    finalize 12.5243    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4371
Time: pickout 0.0086    decision 0.2428    set_bounds 0.1651    solve 1.5474    add 0.0173    
Accumulated time: pickout 0.3650    decision 10.7775    set_bounds 8.5403    solve 70.5687    add 1.0927    
Current (lb-rhs): -2.1126770973205566
87557 domains visited
Cumulative time: 92.57673764228821

BaB round 49
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 702] [/input.7, 258] [/input.7, 702] [/input.7, 136] [/input.7, 636] [/input.7, 708] [/input.7, 638] [/input.11, 63] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2033 / 4096 = 0.496337890625
pruning-in-iteration extra time: 0.012039899826049805
Time: prepare 0.5987    bound 0.5704    transfer 0.0399    finalize 0.2865    func 1.4959    
Accumulated time: func 71.8260    prepare 24.9761    bound 32.4284    transfer 1.5881    finalize 12.8109    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4386
Time: pickout 0.0105    decision 0.3881    set_bounds 0.1659    solve 1.4977    add 0.0166    
Accumulated time: pickout 0.3756    decision 11.1655    set_bounds 8.7062    solve 72.0665    add 1.1093    
Current (lb-rhs): -2.1126770973205566
89620 domains visited
Cumulative time: 94.68829584121704

BaB round 50
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 708] [/input.7, 31] [/input.7, 708] [/input.7, 637] [/input.7, 708] [/input.7, 702] [/input.7, 708] [/input.7, 637] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2072 / 4096 = 0.505859375
pruning-in-iteration extra time: 0.011339902877807617
Time: prepare 0.5962    bound 0.6132    transfer 0.0374    finalize 0.2866    func 1.5339    
Accumulated time: func 73.3599    prepare 25.5727    bound 33.0416    transfer 1.6255    finalize 13.0975    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4362
Time: pickout 0.0086    decision 0.2438    set_bounds 0.3149    solve 1.5359    add 0.0163    
Accumulated time: pickout 0.3841    decision 11.4093    set_bounds 9.0210    solve 73.6024    add 1.1255    
Current (lb-rhs): -2.1126770973205566
91644 domains visited
Cumulative time: 96.83911442756653

BaB round 51
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.11, 63] [/input.7, 638] [/input.7, 258] [/input.7, 258] [/input.7, 638] [/input.7, 637] [/input.7, 31] [/input.7, 136] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 2063 / 4096 = 0.503662109375
pruning-in-iteration extra time: 0.014167547225952148
Time: prepare 0.5919    bound 0.5767    transfer 0.0403    finalize 0.3078    func 1.5171    
Accumulated time: func 74.8770    prepare 26.1649    bound 33.6183    transfer 1.6658    finalize 13.4053    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4347
Time: pickout 0.0103    decision 0.2426    set_bounds 0.1655    solve 1.5191    add 0.0197    
Accumulated time: pickout 0.3944    decision 11.6519    set_bounds 9.1865    solve 75.1215    add 1.1452    
Current (lb-rhs): -2.1126770973205566
93677 domains visited
Cumulative time: 98.82950639724731

BaB round 52
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 708] [/input.7, 258] [/input.7, 636] [/input.7, 702] [/input.7, 708] [/input.7, 258] [/input.7, 702] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 2045 / 4096 = 0.499267578125
pruning-in-iteration extra time: 0.01255035400390625
Time: prepare 0.5995    bound 0.5355    transfer 0.0440    finalize 0.2949    func 1.4755    
Accumulated time: func 76.3525    prepare 26.7648    bound 34.1538    transfer 1.7098    finalize 13.7002    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4350
Time: pickout 0.0113    decision 0.3896    set_bounds 0.1656    solve 1.4768    add 0.0187    
Accumulated time: pickout 0.4057    decision 12.0415    set_bounds 9.3521    solve 76.5983    add 1.1639    
Current (lb-rhs): -2.1126770973205566
95728 domains visited
Cumulative time: 100.92632579803467

BaB round 53
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 702] [/input.7, 136] [/input.7, 258] [/input.7, 136] [/input.3, 2254] [/input.7, 637] [/input.7, 702] [/input.7, 708] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 2082 / 4096 = 0.50830078125
pruning-in-iteration extra time: 0.01248931884765625
Time: prepare 0.6005    bound 0.5631    transfer 0.0400    finalize 0.4411    func 1.6462    
Accumulated time: func 77.9987    prepare 27.3656    bound 34.7169    transfer 1.7498    finalize 14.1414    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4316
Time: pickout 0.0085    decision 0.2443    set_bounds 0.1650    solve 1.6475    add 0.0157    
Accumulated time: pickout 0.4142    decision 12.2858    set_bounds 9.5171    solve 78.2458    add 1.1797    
Current (lb-rhs): -2.1126770973205566
97742 domains visited
Cumulative time: 103.04208707809448

BaB round 54
batch: 2048
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 708] [/input.11, 63] [/input.7, 31] [/input.7, 258] [/input.7, 258] [/input.7, 258] [/input.7, 136] [/input.7, 702] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 2007 / 4096 = 0.489990234375
pruning-in-iteration extra time: 0.010560274124145508
Time: prepare 0.6085    bound 0.6783    transfer 0.0394    finalize 0.2891    func 1.6169    
Accumulated time: func 79.6156    prepare 27.9745    bound 35.3951    transfer 1.7892    finalize 14.4305    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4357
Time: pickout 0.0085    decision 0.2440    set_bounds 0.1658    solve 1.6182    add 0.0167    
Accumulated time: pickout 0.4227    decision 12.5298    set_bounds 9.6829    solve 79.8640    add 1.1964    
Current (lb-rhs): -2.1126770973205566
99831 domains visited
Cumulative time: 105.12870240211487

BaB round 55
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.7, 593] [/input.7, 142] [/input.11, 97] [/input.7, 593] [/input.11, 17] [/input.11, 17] [/input.7, 136] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2052 / 4096 = 0.5009765625
pruning-in-iteration extra time: 0.011242866516113281
Time: prepare 0.6018    bound 0.5215    transfer 0.0409    finalize 0.2912    func 1.4558    
Accumulated time: func 81.0713    prepare 28.5766    bound 35.9167    transfer 1.8301    finalize 14.7217    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4353
Time: pickout 0.0092    decision 0.2445    set_bounds 0.3203    solve 1.4573    add 0.0175    
Accumulated time: pickout 0.4319    decision 12.7744    set_bounds 10.0031    solve 81.3214    add 1.2138    
Current (lb-rhs): -2.1126770973205566
101875 domains visited
Cumulative time: 107.21094012260437

BaB round 56
batch: 2048
splitting decisions: 
split level 0: [/input.7, 136] [/input.11, 9] [/input.11, 9] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.7, 142] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2191 / 4096 = 0.534912109375
pruning-in-iteration extra time: 0.013219833374023438
Time: prepare 0.6034    bound 0.5797    transfer 0.0387    finalize 0.4559    func 1.6782    
Accumulated time: func 82.7495    prepare 29.1804    bound 36.4964    transfer 1.8688    finalize 15.1776    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 4210
Time: pickout 0.0084    decision 0.2427    set_bounds 0.1652    solve 1.6797    add 0.0158    
Accumulated time: pickout 0.4404    decision 13.0170    set_bounds 10.1683    solve 83.0011    add 1.2296    
Current (lb-rhs): -2.1126770973205566
103780 domains visited
Cumulative time: 109.35733985900879

BaB round 57
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 708] [/input.11, 63] [/input.7, 702] [/input.7, 631] [/input.7, 142] [/input.7, 258] [/input.7, 702] [/input.7, 31] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 2300 / 4096 = 0.5615234375
pruning-in-iteration extra time: 0.012114763259887695
Time: prepare 0.5992    bound 0.5204    transfer 0.0376    finalize 0.2902    func 1.4477    
Accumulated time: func 84.1972    prepare 29.7799    bound 37.0168    transfer 1.9064    finalize 15.4677    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 3958
Time: pickout 0.0086    decision 0.2424    set_bounds 0.1652    solve 1.4493    add 0.0144    
Accumulated time: pickout 0.4489    decision 13.2594    set_bounds 10.3335    solve 84.4504    add 1.2441    
Current (lb-rhs): -2.1126770973205566
105576 domains visited
Cumulative time: 111.27055358886719

BaB round 58
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 702] [/input.11, 12] [/input.7, 636] [/input.7, 142] [/input.7, 708] [/input.11, 12] [/input.11, 12] [/input.11, 73] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 2302 / 4096 = 0.56201171875
pruning-in-iteration extra time: 0.011542797088623047
Time: prepare 0.6020    bound 0.6272    transfer 0.0338    finalize 0.2884    func 1.5517    
Accumulated time: func 85.7489    prepare 30.3822    bound 37.6439    transfer 1.9401    finalize 15.7562    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.66022 (20), -1.64645 (18), -1.64406 (19), 
Length of domains: 3704
Time: pickout 0.0105    decision 0.2431    set_bounds 0.3224    solve 1.5536    add 0.0127    
Accumulated time: pickout 0.4595    decision 13.5025    set_bounds 10.6559    solve 86.0041    add 1.2567    
Current (lb-rhs): -2.1126770973205566
107370 domains visited
Cumulative time: 113.44463038444519

BaB round 59
batch: 2048
splitting decisions: 
split level 0: [/input.7, 258] [/input.11, 63] [/input.11, 9] [/input.7, 708] [/input.11, 63] [/input.11, 12] [/input.7, 637] [/input.7, 257] [/input.11, 63] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2108 / 4096 = 0.5146484375
pruning-in-iteration extra time: 0.012119293212890625
Time: prepare 0.5961    bound 0.5921    transfer 0.0407    finalize 0.2898    func 1.5191    
Accumulated time: func 87.2680    prepare 30.9787    bound 38.2360    transfer 1.9808    finalize 16.0460    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3644
Time: pickout 0.0125    decision 0.2437    set_bounds 0.1675    solve 1.5210    add 0.0157    
Accumulated time: pickout 0.4720    decision 13.7462    set_bounds 10.8234    solve 87.5251    add 1.2724    
Current (lb-rhs): -2.1126770973205566
109358 domains visited
Cumulative time: 115.43700098991394

BaB round 60
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.11, 12] [/input.11, 63] [/input.11, 63] [/input.7, 708] [/input.11, 63] [/input.7, 708] [/input.11, 12] [/input.11, 12] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 1873 / 4096 = 0.457275390625
pruning-in-iteration extra time: 0.011415243148803711
Time: prepare 0.5959    bound 0.5667    transfer 0.0376    finalize 0.2879    func 1.4896    
Accumulated time: func 88.7576    prepare 31.5750    bound 38.8027    transfer 2.0185    finalize 16.3339    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3819
Time: pickout 0.0105    decision 0.3833    set_bounds 0.1651    solve 1.4909    add 0.0150    
Accumulated time: pickout 0.4825    decision 14.1295    set_bounds 10.9884    solve 89.0160    add 1.2874    
Current (lb-rhs): -2.1126770973205566
111581 domains visited
Cumulative time: 117.53383493423462

BaB round 61
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 637] [/input.7, 638] [/input.7, 637] [/input.7, 258] [/input.7, 702] [/input.7, 708] [/input.7, 637] [/input.7, 637] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 1801 / 4096 = 0.439697265625
pruning-in-iteration extra time: 0.010571479797363281
Time: prepare 0.5924    bound 0.6220    transfer 0.0326    finalize 0.2877    func 1.5365    
Accumulated time: func 90.2942    prepare 32.1678    bound 39.4247    transfer 2.0511    finalize 16.6216    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4066
Time: pickout 0.0085    decision 0.2435    set_bounds 0.3067    solve 1.5378    add 0.0181    
Accumulated time: pickout 0.4910    decision 14.3730    set_bounds 11.2951    solve 90.5538    add 1.3055    
Current (lb-rhs): -2.1126770973205566
113876 domains visited
Cumulative time: 119.67991256713867

BaB round 62
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.7, 118] [/input.7, 638] [/input.11, 17] [/input.11, 9] [/input.11, 17] [/input.11, 9] [/input.7, 586] [/input.7, 631] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 1725 / 4096 = 0.421142578125
pruning-in-iteration extra time: 0.011244773864746094
Time: prepare 0.5927    bound 0.6870    transfer 0.0326    finalize 0.2864    func 1.6007    
Accumulated time: func 91.8948    prepare 32.7609    bound 40.1117    transfer 2.0837    finalize 16.9080    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4389
Time: pickout 0.0085    decision 0.2434    set_bounds 0.1650    solve 1.6020    add 0.0175    
Accumulated time: pickout 0.4995    decision 14.6164    set_bounds 11.4601    solve 92.1558    add 1.3230    
Current (lb-rhs): -2.1126770973205566
116247 domains visited
Cumulative time: 121.74703001976013

BaB round 63
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.11, 9] [/input.7, 638] [/input.11, 17] [/input.11, 9] [/input.11, 9] [/input.11, 9] [/input.7, 31] [/input.11, 9] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 1739 / 4096 = 0.424560546875
pruning-in-iteration extra time: 0.010203123092651367
Time: prepare 0.5973    bound 0.6388    transfer 0.0329    finalize 0.2878    func 1.5573    
Accumulated time: func 93.4521    prepare 33.3586    bound 40.7505    transfer 2.1166    finalize 17.1959    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4698
Time: pickout 0.0083    decision 0.3882    set_bounds 0.1643    solve 1.5590    add 0.0193    
Accumulated time: pickout 0.5078    decision 15.0045    set_bounds 11.6244    solve 93.7148    add 1.3424    
Current (lb-rhs): -2.1126770973205566
118604 domains visited
Cumulative time: 123.91644310951233

BaB round 64
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 711] [/input.7, 702] [/input.7, 637] [/input.7, 31] [/input.7, 31] [/input.7, 631] [/input.7, 631] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 1909 / 4096 = 0.466064453125
pruning-in-iteration extra time: 0.011705875396728516
Time: prepare 0.5991    bound 0.6190    transfer 0.0359    finalize 0.2874    func 1.5419    
Accumulated time: func 94.9940    prepare 33.9581    bound 41.3695    transfer 2.1525    finalize 17.4833    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4837
Time: pickout 0.0083    decision 0.2428    set_bounds 0.3145    solve 1.5436    add 0.0176    
Accumulated time: pickout 0.5161    decision 15.2473    set_bounds 11.9389    solve 95.2584    add 1.3600    
Current (lb-rhs): -2.1126770973205566
120791 domains visited
Cumulative time: 126.07227039337158

BaB round 65
batch: 2048
splitting decisions: 
split level 0: [/input.7, 142] [/input.11, 17] [/input.7, 258] [/input.11, 17] [/input.11, 97] [/input.7, 31] [/input.7, 136] [/input.7, 711] [/input.7, 711] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 1961 / 4096 = 0.478759765625
pruning-in-iteration extra time: 0.011863470077514648
Time: prepare 0.6045    bound 0.5909    transfer 0.0358    finalize 0.2874    func 1.5189    
Accumulated time: func 96.5129    prepare 34.5629    bound 41.9604    transfer 2.1883    finalize 17.7707    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4924
Time: pickout 0.0100    decision 0.2423    set_bounds 0.1651    solve 1.5208    add 0.0169    
Accumulated time: pickout 0.5260    decision 15.4896    set_bounds 12.1041    solve 96.7792    add 1.3769    
Current (lb-rhs): -2.1126770973205566
122926 domains visited
Cumulative time: 128.0595624446869

BaB round 66
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 31] [/input.11, 32] [/input.7, 142] [/input.7, 33] [/input.7, 261] [/input.7, 261] [/input.11, 32] [/input.11, 17] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2057 / 4096 = 0.502197265625
pruning-in-iteration extra time: 0.012758255004882812
Time: prepare 0.6049    bound 0.5109    transfer 0.0401    finalize 0.2883    func 1.4446    
Accumulated time: func 97.9575    prepare 35.1682    bound 42.4713    transfer 2.2284    finalize 18.0590    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4915
Time: pickout 0.0083    decision 0.2434    set_bounds 0.3141    solve 1.4466    add 0.0165    
Accumulated time: pickout 0.5344    decision 15.7331    set_bounds 12.4181    solve 98.2258    add 1.3933    
Current (lb-rhs): -2.1126770973205566
124965 domains visited
Cumulative time: 130.12170553207397

BaB round 67
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 31] [/input.7, 31] [/input.7, 261] [/input.7, 31] [/input.11, 65] [/input.11, 65] [/input.7, 31] [/input.11, 70] [/input.11, 70] 
pruning_in_iteration open status: True
ratio of positive domain = 2208 / 4096 = 0.5390625
pruning-in-iteration extra time: 0.012677669525146484
Time: prepare 0.6009    bound 0.5615    transfer 0.0392    finalize 0.4455    func 1.6475    
Accumulated time: func 99.6050    prepare 35.7695    bound 43.0328    transfer 2.2676    finalize 18.5045    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4755
Time: pickout 0.0085    decision 0.2417    set_bounds 0.1656    solve 1.6496    add 0.0160    
Accumulated time: pickout 0.5428    decision 15.9748    set_bounds 12.5837    solve 99.8754    add 1.4093    
Current (lb-rhs): -2.1126770973205566
126853 domains visited
Cumulative time: 132.23776483535767

BaB round 68
batch: 2048
splitting decisions: 
split level 0: [/input.7, 593] [/input.11, 9] [/input.11, 17] [/input.11, 17] [/input.11, 9] [/input.7, 31] [/input.7, 256] [/input.11, 9] [/input.11, 9] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2385 / 4096 = 0.582275390625
pruning-in-iteration extra time: 0.010845422744750977
Time: prepare 0.6066    bound 0.6984    transfer 0.0351    finalize 0.2884    func 1.6298    
Accumulated time: func 101.2347    prepare 36.3765    bound 43.7312    transfer 2.3026    finalize 18.7929    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4418
Time: pickout 0.0086    decision 0.2434    set_bounds 0.1659    solve 1.6311    add 0.0197    
Accumulated time: pickout 0.5514    decision 16.2182    set_bounds 12.7496    solve 101.5064    add 1.4290    
Current (lb-rhs): -2.1126770973205566
128564 domains visited
Cumulative time: 134.353750705719

BaB round 69
batch: 2048
splitting decisions: 
split level 0: [/input.7, 592] [/input.11, 9] [/input.11, 9] [/input.11, 17] [/input.11, 9] [/input.7, 181] [/input.7, 142] [/input.11, 17] [/input.7, 136] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2317 / 4096 = 0.565673828125
pruning-in-iteration extra time: 0.011484146118164062
Time: prepare 0.6089    bound 0.5655    transfer 0.0387    finalize 0.2942    func 1.5086    
Accumulated time: func 102.7433    prepare 36.9857    bound 44.2967    transfer 2.3413    finalize 19.0871    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 4149
Time: pickout 0.0102    decision 0.2448    set_bounds 0.3183    solve 1.5099    add 0.0183    
Accumulated time: pickout 0.5616    decision 16.4630    set_bounds 13.0679    solve 103.0164    add 1.4473    
Current (lb-rhs): -2.1126770973205566
130343 domains visited
Cumulative time: 136.49201655387878

BaB round 70
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.11, 17] [/input.11, 17] [/input.7, 31] [/input.7, 708] [/input.11, 9] [/input.7, 638] [/input.11, 17] [/input.7, 258] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2227 / 4096 = 0.543701171875
pruning-in-iteration extra time: 0.012592554092407227
Time: prepare 0.6082    bound 0.5127    transfer 0.0358    finalize 0.2943    func 1.4526    
Accumulated time: func 104.1959    prepare 37.5943    bound 44.8095    transfer 2.3771    finalize 19.3814    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3970
Time: pickout 0.0086    decision 0.2443    set_bounds 0.1678    solve 1.4539    add 0.0156    
Accumulated time: pickout 0.5702    decision 16.7073    set_bounds 13.2357    solve 104.4703    add 1.4629    
Current (lb-rhs): -2.1126770973205566
132212 domains visited
Cumulative time: 138.4169361591339

BaB round 71
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.11, 17] [/input.7, 638] [/input.7, 635] [/input.7, 638] [/input.7, 638] [/input.11, 17] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2202 / 4096 = 0.53759765625
pruning-in-iteration extra time: 0.012151241302490234
Time: prepare 0.5989    bound 0.4748    transfer 0.0383    finalize 0.2888    func 1.4029    
Accumulated time: func 105.5988    prepare 38.1936    bound 45.2842    transfer 2.4154    finalize 19.6702    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3816
Time: pickout 0.0099    decision 0.3896    set_bounds 0.1675    solve 1.4043    add 0.0173    
Accumulated time: pickout 0.5801    decision 17.0969    set_bounds 13.4032    solve 105.8745    add 1.4802    
Current (lb-rhs): -2.1126770973205566
134106 domains visited
Cumulative time: 140.43695974349976

BaB round 72
batch: 2048
splitting decisions: 
split level 0: [/input.3, 2254] [/input.7, 31] [/input.7, 258] [/input.11, 63] [/input.7, 638] [/input.7, 702] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 2048 / 4096 = 0.5
pruning-in-iteration extra time: 0.16952228546142578
Time: prepare 0.5977    bound 0.6706    transfer 0.0422    finalize 0.2866    func 1.5992    
Accumulated time: func 107.1980    prepare 38.7917    bound 45.9548    transfer 2.4576    finalize 19.9568    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3816
Time: pickout 0.0080    decision 0.2437    set_bounds 0.1651    solve 1.6006    add 0.0160    
Accumulated time: pickout 0.5881    decision 17.3407    set_bounds 13.5683    solve 107.4751    add 1.4962    
Current (lb-rhs): -2.1126770973205566
136154 domains visited
Cumulative time: 142.50564646720886

BaB round 73
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 31] [/input.7, 638] [/input.7, 31] [/input.7, 258] [/input.7, 638] [/input.11, 63] [/input.7, 142] [/input.7, 31] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2072 / 4096 = 0.505859375
pruning-in-iteration extra time: 0.011368751525878906
Time: prepare 0.6003    bound 0.5273    transfer 0.0405    finalize 0.2873    func 1.4559    
Accumulated time: func 108.6539    prepare 39.3924    bound 46.4822    transfer 2.4981    finalize 20.2441    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3792
Time: pickout 0.0124    decision 0.2438    set_bounds 0.1651    solve 1.4575    add 0.0178    
Accumulated time: pickout 0.6005    decision 17.5845    set_bounds 13.7334    solve 108.9327    add 1.5141    
Current (lb-rhs): -2.1126770973205566
138178 domains visited
Cumulative time: 144.4362394809723

BaB round 74
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 258] [/input.11, 63] [/input.7, 638] [/input.7, 258] [/input.7, 31] [/input.7, 258] [/input.7, 638] [/input.7, 258] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 2251 / 4096 = 0.549560546875
pruning-in-iteration extra time: 0.012173652648925781
Time: prepare 0.6012    bound 0.6108    transfer 0.0409    finalize 0.2901    func 1.5435    
Accumulated time: func 110.1975    prepare 39.9940    bound 47.0930    transfer 2.5390    finalize 20.5342    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3589
Time: pickout 0.0086    decision 0.2437    set_bounds 0.3142    solve 1.5455    add 0.0142    
Accumulated time: pickout 0.6090    decision 17.8282    set_bounds 14.0475    solve 110.4781    add 1.5283    
Current (lb-rhs): -2.1126770973205566
140023 domains visited
Cumulative time: 146.5965666770935

BaB round 75
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 637] [/input.7, 257] [/input.7, 258] [/input.7, 258] [/input.11, 58] [/input.7, 257] [/input.11, 17] [/input.7, 257] [/input.7, 257] 
pruning_in_iteration open status: True
ratio of positive domain = 2030 / 4096 = 0.49560546875
pruning-in-iteration extra time: 0.013289451599121094
Time: prepare 0.5994    bound 0.4947    transfer 0.0404    finalize 0.4456    func 1.5806    
Accumulated time: func 111.7781    prepare 40.5938    bound 47.5876    transfer 2.5795    finalize 20.9798    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3607
Time: pickout 0.0096    decision 0.2440    set_bounds 0.1661    solve 1.5824    add 0.0167    
Accumulated time: pickout 0.6187    decision 18.0722    set_bounds 14.2137    solve 112.0605    add 1.5450    
Current (lb-rhs): -2.1126770973205566
142089 domains visited
Cumulative time: 148.648987531662

BaB round 76
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 118] [/input.7, 637] [/input.7, 258] [/input.7, 636] [/input.7, 638] [/input.7, 637] [/input.11, 12] [/input.7, 258] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 2121 / 4096 = 0.517822265625
pruning-in-iteration extra time: 0.011645317077636719
Time: prepare 0.6011    bound 0.4665    transfer 0.0388    finalize 0.2900    func 1.3969    
Accumulated time: func 113.1749    prepare 41.1953    bound 48.0542    transfer 2.6182    finalize 21.2699    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3534
Time: pickout 0.0090    decision 0.2427    set_bounds 0.1645    solve 1.3989    add 0.0151    
Accumulated time: pickout 0.6277    decision 18.3149    set_bounds 14.3782    solve 113.4594    add 1.5601    
Current (lb-rhs): -2.1126770973205566
144064 domains visited
Cumulative time: 150.51405382156372

BaB round 77
batch: 2048
splitting decisions: 
split level 0: [/input.11, 12] [/input.7, 631] [/input.7, 702] [/input.7, 631] [/input.11, 63] [/input.11, 73] [/input.7, 702] [/input.11, 12] [/input.7, 136] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 2205 / 4096 = 0.538330078125
pruning-in-iteration extra time: 0.012103080749511719
Time: prepare 0.6008    bound 0.5086    transfer 0.0375    finalize 0.2900    func 1.4382    
Accumulated time: func 114.6131    prepare 41.7964    bound 48.5627    transfer 2.6557    finalize 21.5598    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3377
Time: pickout 0.0085    decision 0.2431    set_bounds 0.3031    solve 1.4395    add 0.0145    
Accumulated time: pickout 0.6362    decision 18.5580    set_bounds 14.6813    solve 114.8988    add 1.5747    
Current (lb-rhs): -2.1126770973205566
145955 domains visited
Cumulative time: 152.55794262886047

BaB round 78
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 73] [/input.11, 12] [/input.11, 12] [/input.7, 708] [/input.7, 637] [/input.11, 9] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 2125 / 4096 = 0.518798828125
pruning-in-iteration extra time: 0.012561321258544922
Time: prepare 0.6008    bound 0.5142    transfer 0.0359    finalize 0.4316    func 1.5841    
Accumulated time: func 116.1972    prepare 42.3975    bound 49.0770    transfer 2.6917    finalize 21.9914    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3300
Time: pickout 0.0084    decision 0.2433    set_bounds 0.1653    solve 1.5853    add 0.0149    
Accumulated time: pickout 0.6447    decision 18.8013    set_bounds 14.8467    solve 116.4842    add 1.5896    
Current (lb-rhs): -2.1126770973205566
147926 domains visited
Cumulative time: 154.60579371452332

BaB round 79
batch: 2048
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 637] [/input.7, 136] [/input.7, 637] [/input.7, 257] [/input.7, 258] [/input.7, 636] [/input.7, 136] [/input.7, 631] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 1994 / 4096 = 0.48681640625
pruning-in-iteration extra time: 0.012461662292480469
Time: prepare 0.6064    bound 0.4581    transfer 0.0412    finalize 0.2881    func 1.3953    
Accumulated time: func 117.5924    prepare 43.0043    bound 49.5351    transfer 2.7329    finalize 22.2795    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3354
Time: pickout 0.0121    decision 0.2431    set_bounds 0.1644    solve 1.3966    add 0.0155    
Accumulated time: pickout 0.6568    decision 19.0444    set_bounds 15.0111    solve 117.8807    add 1.6050    
Current (lb-rhs): -2.1126770973205566
150028 domains visited
Cumulative time: 156.4685616493225

BaB round 80
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.7, 136] [/input.7, 637] [/input.7, 637] [/input.7, 702] [/input.11, 9] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 1940 / 4096 = 0.4736328125
pruning-in-iteration extra time: 0.011281251907348633
Time: prepare 0.6032    bound 0.5407    transfer 0.0372    finalize 0.2906    func 1.4733    
Accumulated time: func 119.0657    prepare 43.6079    bound 50.0757    transfer 2.7701    finalize 22.5701    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3462
Time: pickout 0.0102    decision 0.2429    set_bounds 0.3018    solve 1.4746    add 0.0165    
Accumulated time: pickout 0.6670    decision 19.2873    set_bounds 15.3129    solve 119.3553    add 1.6215    
Current (lb-rhs): -2.1126770973205566
152184 domains visited
Cumulative time: 158.5468065738678

BaB round 81
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 31] [/input.11, 63] [/input.11, 17] [/input.7, 711] [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.11, 9] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 1880 / 4096 = 0.458984375
pruning-in-iteration extra time: 0.010960817337036133
Time: prepare 0.6046    bound 0.6178    transfer 0.0358    finalize 0.2908    func 1.6951    
Accumulated time: func 120.7608    prepare 44.2129    bound 50.6935    transfer 2.8059    finalize 22.8609    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3630
Time: pickout 0.0085    decision 0.2425    set_bounds 0.1651    solve 1.6963    add 0.0168    
Accumulated time: pickout 0.6754    decision 19.5299    set_bounds 15.4780    solve 121.0516    add 1.6383    
Current (lb-rhs): -2.1126770973205566
154400 domains visited
Cumulative time: 160.70634031295776

BaB round 82
batch: 2048
splitting decisions: 
split level 0: [/input.11, 65] [/input.7, 702] [/input.7, 142] [/input.7, 142] [/input.7, 261] [/input.11, 17] [/input.7, 142] [/input.11, 97] [/input.11, 65] [/input.7, 118] 
pruning_in_iteration open status: True
ratio of positive domain = 2028 / 4096 = 0.4951171875
pruning-in-iteration extra time: 0.012709856033325195
Time: prepare 0.6029    bound 0.4764    transfer 0.0405    finalize 0.2876    func 1.4091    
Accumulated time: func 122.1699    prepare 44.8161    bound 51.1699    transfer 2.8464    finalize 23.1484    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3650
Time: pickout 0.0100    decision 0.2429    set_bounds 0.1648    solve 1.4105    add 0.0157    
Accumulated time: pickout 0.6854    decision 19.7728    set_bounds 15.6428    solve 122.4620    add 1.6541    
Current (lb-rhs): -2.1126770973205566
156468 domains visited
Cumulative time: 162.58160305023193

BaB round 83
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 711] [/input.7, 702] [/input.7, 637] [/input.7, 636] [/input.7, 708] [/input.7, 708] [/input.7, 258] [/input.7, 637] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2072 / 4096 = 0.505859375
pruning-in-iteration extra time: 0.011457204818725586
Time: prepare 0.6048    bound 0.5131    transfer 0.0401    finalize 0.2901    func 1.4485    
Accumulated time: func 123.6184    prepare 45.4212    bound 51.6829    transfer 2.8865    finalize 23.4386    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3626
Time: pickout 0.0101    decision 0.2432    set_bounds 0.3062    solve 1.4501    add 0.0160    
Accumulated time: pickout 0.6955    decision 20.0160    set_bounds 15.9490    solve 123.9121    add 1.6701    
Current (lb-rhs): -2.1126770973205566
158492 domains visited
Cumulative time: 164.6386685371399

BaB round 84
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.11, 17] [/input.11, 32] [/input.11, 9] [/input.7, 261] [/input.11, 65] [/input.7, 32] [/input.7, 32] [/input.7, 27] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2161 / 4096 = 0.527587890625
pruning-in-iteration extra time: 0.011664867401123047
Time: prepare 0.6031    bound 0.4897    transfer 0.0357    finalize 0.2906    func 1.4196    
Accumulated time: func 125.0380    prepare 46.0247    bound 52.1727    transfer 2.9222    finalize 23.7292    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3513
Time: pickout 0.0102    decision 0.2430    set_bounds 0.1647    solve 1.4214    add 0.0146    
Accumulated time: pickout 0.7056    decision 20.2590    set_bounds 16.1136    solve 125.3335    add 1.6847    
Current (lb-rhs): -2.1126770973205566
160427 domains visited
Cumulative time: 166.5264916419983

BaB round 85
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.11, 17] [/input.11, 9] [/input.11, 9] [/input.7, 142] [/input.11, 17] [/input.11, 9] [/input.7, 142] [/input.7, 136] [/input.11, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 2158 / 4096 = 0.52685546875
pruning-in-iteration extra time: 0.01307535171508789
Time: prepare 0.6053    bound 0.5212    transfer 0.0396    finalize 0.2891    func 1.4557    
Accumulated time: func 126.4937    prepare 46.6305    bound 52.6939    transfer 2.9619    finalize 24.0183    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3403
Time: pickout 0.0086    decision 0.3823    set_bounds 0.1652    solve 1.4576    add 0.0150    
Accumulated time: pickout 0.7143    decision 20.6414    set_bounds 16.2789    solve 126.7911    add 1.6997    
Current (lb-rhs): -2.1126770973205566
162365 domains visited
Cumulative time: 168.5895528793335

BaB round 86
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 638] [/input.7, 142] [/input.7, 638] [/input.7, 708] [/input.7, 638] [/input.7, 258] [/input.11, 12] [/input.7, 258] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2150 / 4096 = 0.52490234375
pruning-in-iteration extra time: 0.013268470764160156
Time: prepare 0.6081    bound 0.4736    transfer 0.0396    finalize 0.2906    func 1.4123    
Accumulated time: func 127.9060    prepare 47.2389    bound 53.1675    transfer 3.0014    finalize 24.3089    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3301
Time: pickout 0.0090    decision 0.2434    set_bounds 0.3058    solve 1.4143    add 0.0154    
Accumulated time: pickout 0.7233    decision 20.8848    set_bounds 16.5846    solve 128.2054    add 1.7151    
Current (lb-rhs): -2.1126770973205566
164311 domains visited
Cumulative time: 170.60896563529968

BaB round 87
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 136] [/input.7, 258] [/input.7, 31] [/input.7, 708] [/input.7, 257] [/input.7, 702] [/input.7, 136] [/input.11, 63] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 2148 / 4096 = 0.5244140625
pruning-in-iteration extra time: 0.012363672256469727
Time: prepare 0.6045    bound 0.4914    transfer 0.0391    finalize 0.2974    func 1.4329    
Accumulated time: func 129.3389    prepare 47.8438    bound 53.6589    transfer 3.0406    finalize 24.6063    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.64406 (19), -1.63683 (18), 
Length of domains: 3201
Time: pickout 0.0116    decision 0.2434    set_bounds 0.1821    solve 1.4350    add 0.0207    
Accumulated time: pickout 0.7350    decision 21.1282    set_bounds 16.7668    solve 129.6403    add 1.7358    
Current (lb-rhs): -2.1126770973205566
166259 domains visited
Cumulative time: 172.53368592262268

BaB round 88
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 636] [/input.7, 707] [/input.7, 136] [/input.7, 631] [/input.7, 708] [/input.11, 12] [/input.7, 636] [/input.11, 12] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 2182 / 4096 = 0.53271484375
pruning-in-iteration extra time: 0.012532472610473633
Time: prepare 0.6065    bound 0.5813    transfer 0.0393    finalize 0.2972    func 1.5259    
Accumulated time: func 130.8648    prepare 48.4507    bound 54.2402    transfer 3.0799    finalize 24.9035    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.62381 (17), -1.61156 (16), 
Length of domains: 3067
Time: pickout 0.0122    decision 0.3823    set_bounds 0.1655    solve 1.5272    add 0.0154    
Accumulated time: pickout 0.7471    decision 21.5104    set_bounds 16.9323    solve 131.1676    add 1.7512    
Current (lb-rhs): -2.1126770973205566
168173 domains visited
Cumulative time: 174.66757988929749

BaB round 89
batch: 2048
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 136] [/input.7, 258] [/input.7, 636] [/input.11, 12] [/input.7, 702] [/input.7, 638] [/input.7, 702] [/input.7, 638] [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 2199 / 4096 = 0.536865234375
pruning-in-iteration extra time: 0.013160467147827148
Time: prepare 0.6047    bound 0.4754    transfer 0.0408    finalize 0.2892    func 1.4116    
Accumulated time: func 132.2765    prepare 49.0557    bound 54.7157    transfer 3.1207    finalize 25.1927    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.86598 (18), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67147 (18), -1.67067 (16), -1.64645 (18), -1.62381 (17), -1.61156 (16), 
Length of domains: 2916
Time: pickout 0.0126    decision 0.2433    set_bounds 0.3067    solve 1.4129    add 0.0152    
Accumulated time: pickout 0.7597    decision 21.7537    set_bounds 17.2390    solve 132.5804    add 1.7664    
Current (lb-rhs): -2.1126770973205566
170070 domains visited
Cumulative time: 176.6911497116089

BaB round 90
batch: 2048
splitting decisions: 
split level 0: [/input.11, 12] [/input.7, 258] [/input.11, 58] [/input.7, 256] [/input.11, 12] [/input.11, 73] [/input.7, 636] [/input.11, 73] [/input.11, 12] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 2101 / 4096 = 0.512939453125
pruning-in-iteration extra time: 0.013066768646240234
Time: prepare 0.6036    bound 0.4971    transfer 0.0378    finalize 0.2915    func 1.4316    
Accumulated time: func 133.7081    prepare 49.6597    bound 55.2128    transfer 3.1585    finalize 25.4842    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71721 (19), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), 
Length of domains: 2863
Time: pickout 0.0108    decision 0.2426    set_bounds 0.1653    solve 1.4329    add 0.0162    
Accumulated time: pickout 0.7705    decision 21.9964    set_bounds 17.4043    solve 134.0134    add 1.7826    
Current (lb-rhs): -2.1126770973205566
172065 domains visited
Cumulative time: 178.59126043319702

BaB round 91
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 707] [/input.7, 707] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 73] [/input.7, 636] [/input.11, 63] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 2017 / 4096 = 0.492431640625
pruning-in-iteration extra time: 0.012055635452270508
Time: prepare 0.5991    bound 0.5696    transfer 0.0403    finalize 0.2923    func 1.5017    
Accumulated time: func 135.2098    prepare 50.2592    bound 55.7824    transfer 3.1987    finalize 25.7765    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.62104 (20), -1.61156 (16), -1.60768 (16), -1.60329 (17), 
Length of domains: 2894
Time: pickout 0.0082    decision 0.3773    set_bounds 0.1639    solve 1.5035    add 0.0189    
Accumulated time: pickout 0.7788    decision 22.3737    set_bounds 17.5683    solve 135.5169    add 1.8015    
Current (lb-rhs): -2.1126770973205566
174144 domains visited
Cumulative time: 180.69897437095642

BaB round 92
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 136] [/input.7, 142] [/input.7, 637] [/input.7, 136] [/input.11, 73] [/input.7, 637] [/input.7, 637] [/input.7, 142] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 1911 / 4096 = 0.466552734375
pruning-in-iteration extra time: 0.011841297149658203
Time: prepare 0.7501    bound 0.5477    transfer 0.0395    finalize 0.2906    func 1.6284    
Accumulated time: func 136.8382    prepare 51.0097    bound 56.3301    transfer 3.2382    finalize 26.0671    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3031
Time: pickout 0.0089    decision 0.2426    set_bounds 0.1639    solve 1.6300    add 0.0181    
Accumulated time: pickout 0.7877    decision 22.6163    set_bounds 17.7322    solve 137.1469    add 1.8196    
Current (lb-rhs): -2.1126770973205566
176329 domains visited
Cumulative time: 182.79283928871155

BaB round 93
batch: 2048
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 31] [/input.7, 638] [/input.7, 31] [/input.7, 136] [/input.7, 708] [/input.7, 702] [/input.7, 702] [/input.7, 638] [/input.7, 593] 
pruning_in_iteration open status: True
ratio of positive domain = 1899 / 4096 = 0.463623046875
pruning-in-iteration extra time: 0.013057947158813477
Time: prepare 0.5964    bound 0.4932    transfer 0.0403    finalize 0.2885    func 1.4189    
Accumulated time: func 138.2571    prepare 51.6065    bound 56.8233    transfer 3.2785    finalize 26.3557    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3180
Time: pickout 0.0100    decision 0.2435    set_bounds 0.1642    solve 1.4206    add 0.0178    
Accumulated time: pickout 0.7977    decision 22.8598    set_bounds 17.8963    solve 138.5675    add 1.8374    
Current (lb-rhs): -2.1126770973205566
178526 domains visited
Cumulative time: 184.67938446998596

BaB round 94
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 638] [/input.7, 638] [/input.7, 31] [/input.7, 702] [/input.7, 142] [/input.11, 9] [/input.7, 136] [/input.7, 142] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 1909 / 4096 = 0.466064453125
pruning-in-iteration extra time: 0.012569427490234375
Time: prepare 0.5975    bound 0.5243    transfer 0.0411    finalize 0.2905    func 1.4539    
Accumulated time: func 139.7109    prepare 52.2044    bound 57.3476    transfer 3.3196    finalize 26.6462    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3319
Time: pickout 0.0100    decision 0.2410    set_bounds 0.3075    solve 1.4559    add 0.0168    
Accumulated time: pickout 0.8078    decision 23.1008    set_bounds 18.2038    solve 140.0234    add 1.8542    
Current (lb-rhs): -2.1126770973205566
180713 domains visited
Cumulative time: 186.74309086799622

BaB round 95
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 638] [/input.7, 637] [/input.7, 702] [/input.7, 708] [/input.7, 708] [/input.7, 136] [/input.7, 142] [/input.7, 142] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2012 / 4096 = 0.4912109375
pruning-in-iteration extra time: 0.01277303695678711
Time: prepare 0.6048    bound 0.4828    transfer 0.0399    finalize 0.2903    func 1.4182    
Accumulated time: func 141.1292    prepare 52.8095    bound 57.8304    transfer 3.3595    finalize 26.9365    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3355
Time: pickout 0.0084    decision 0.2430    set_bounds 0.3070    solve 1.4203    add 0.0164    
Accumulated time: pickout 0.8161    decision 23.3437    set_bounds 18.5108    solve 141.4437    add 1.8707    
Current (lb-rhs): -2.1126770973205566
182797 domains visited
Cumulative time: 188.77113842964172

BaB round 96
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 258] [/input.7, 638] [/input.7, 142] [/input.7, 708] [/input.7, 142] [/input.7, 708] [/input.7, 702] [/input.7, 638] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 1972 / 4096 = 0.4814453125
pruning-in-iteration extra time: 0.011263608932495117
Time: prepare 0.6017    bound 0.5224    transfer 0.0394    finalize 0.2900    func 1.4548    
Accumulated time: func 142.5839    prepare 53.4116    bound 58.3528    transfer 3.3989    finalize 27.2265    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3431
Time: pickout 0.0085    decision 0.2426    set_bounds 0.1659    solve 1.4561    add 0.0167    
Accumulated time: pickout 0.8246    decision 23.5864    set_bounds 18.6767    solve 142.8998    add 1.8873    
Current (lb-rhs): -2.1126770973205566
184921 domains visited
Cumulative time: 190.69409370422363

BaB round 97
batch: 2048
splitting decisions: 
split level 0: [/input.11, 65] [/input.7, 142] [/input.7, 142] [/input.7, 33] [/input.7, 33] [/input.11, 32] [/input.11, 17] [/input.7, 136] [/input.7, 33] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2053 / 4096 = 0.501220703125
pruning-in-iteration extra time: 0.01371908187866211
Time: prepare 0.6046    bound 0.4704    transfer 0.0399    finalize 0.2892    func 1.4059    
Accumulated time: func 143.9898    prepare 54.0165    bound 58.8231    transfer 3.4388    finalize 27.5157    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3426
Time: pickout 0.0084    decision 0.2436    set_bounds 0.3143    solve 1.4072    add 0.0161    
Accumulated time: pickout 0.8330    decision 23.8300    set_bounds 18.9910    solve 144.3070    add 1.9034    
Current (lb-rhs): -2.1126770973205566
186964 domains visited
Cumulative time: 192.71726202964783

BaB round 98
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.11, 9] [/input.11, 17] [/input.7, 638] [/input.11, 17] [/input.11, 9] [/input.7, 702] [/input.7, 142] [/input.11, 9] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 2014 / 4096 = 0.49169921875
pruning-in-iteration extra time: 0.011534929275512695
Time: prepare 0.6070    bound 0.5209    transfer 0.0411    finalize 0.4321    func 1.6028    
Accumulated time: func 145.5926    prepare 54.6239    bound 59.3440    transfer 3.4799    finalize 27.9478    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3460
Time: pickout 0.0084    decision 0.2432    set_bounds 0.1653    solve 1.6041    add 0.0159    
Accumulated time: pickout 0.8415    decision 24.0731    set_bounds 19.1564    solve 145.9111    add 1.9193    
Current (lb-rhs): -2.1126770973205566
189046 domains visited
Cumulative time: 194.7848014831543

BaB round 99
batch: 2048
splitting decisions: 
split level 0: [/input.7, 261] [/input.7, 33] [/input.11, 17] [/input.11, 9] [/input.11, 65] [/input.11, 17] [/input.11, 9] [/input.11, 9] [/input.11, 9] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2194 / 4096 = 0.53564453125
pruning-in-iteration extra time: 0.012512445449829102
Time: prepare 0.6062    bound 0.4850    transfer 0.0342    finalize 0.2874    func 1.4146    
Accumulated time: func 147.0073    prepare 55.2305    bound 59.8291    transfer 3.5142    finalize 28.2353    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3314
Time: pickout 0.0104    decision 0.2428    set_bounds 0.1651    solve 1.4159    add 0.0161    
Accumulated time: pickout 0.8518    decision 24.3160    set_bounds 19.3214    solve 147.3270    add 1.9354    
Current (lb-rhs): -2.1126770973205566
190948 domains visited
Cumulative time: 196.6658411026001

BaB round 100
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.11, 45] [/input.7, 636] [/input.7, 637] [/input.7, 702] [/input.11, 63] [/input.7, 31] [/input.7, 638] [/input.7, 702] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2297 / 4096 = 0.560791015625
pruning-in-iteration extra time: 0.011841535568237305
Time: prepare 0.6064    bound 0.5725    transfer 0.0364    finalize 0.2903    func 1.5075    
Accumulated time: func 148.5147    prepare 55.8372    bound 60.4015    transfer 3.5505    finalize 28.5255    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 3065
Time: pickout 0.0123    decision 0.2414    set_bounds 0.3025    solve 1.5088    add 0.0145    
Accumulated time: pickout 0.8641    decision 24.5574    set_bounds 19.6239    solve 148.8358    add 1.9499    
Current (lb-rhs): -2.1126770973205566
192747 domains visited
Cumulative time: 198.77865719795227

BaB round 101
batch: 2048
splitting decisions: 
split level 0: [/input.7, 136] [/input.7, 631] [/input.7, 258] [/input.11, 9] [/input.7, 142] [/input.7, 702] [/input.7, 258] [/input.7, 638] [/input.7, 708] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2211 / 4096 = 0.539794921875
pruning-in-iteration extra time: 0.013406515121459961
Time: prepare 0.6078    bound 0.4767    transfer 0.0408    finalize 0.2900    func 1.5576    
Accumulated time: func 150.0723    prepare 56.4454    bound 60.8783    transfer 3.5913    finalize 28.8155    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2902
Time: pickout 0.0108    decision 0.2434    set_bounds 0.1658    solve 1.5587    add 0.0145    
Accumulated time: pickout 0.8749    decision 24.8008    set_bounds 19.7897    solve 150.3946    add 1.9644    
Current (lb-rhs): -2.1126770973205566
194632 domains visited
Cumulative time: 200.80545663833618

BaB round 102
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 708] [/input.7, 637] [/input.7, 638] [/input.11, 63] [/input.7, 258] [/input.7, 638] [/input.7, 258] [/input.7, 631] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 2261 / 4096 = 0.552001953125
pruning-in-iteration extra time: 0.011812448501586914
Time: prepare 0.5959    bound 0.5615    transfer 0.0382    finalize 0.2904    func 1.4865    
Accumulated time: func 151.5588    prepare 57.0417    bound 61.4398    transfer 3.6295    finalize 29.1060    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2689
Time: pickout 0.0104    decision 0.2413    set_bounds 0.1662    solve 1.4881    add 0.0146    
Accumulated time: pickout 0.8853    decision 25.0420    set_bounds 19.9559    solve 151.8826    add 1.9791    
Current (lb-rhs): -2.1126770973205566
196467 domains visited
Cumulative time: 202.7595407962799

BaB round 103
batch: 2048
splitting decisions: 
split level 0: [/input.7, 257] [/input.7, 708] [/input.7, 136] [/input.11, 73] [/input.7, 136] [/input.7, 257] [/input.7, 708] [/input.7, 636] [/input.7, 636] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 2091 / 4096 = 0.510498046875
pruning-in-iteration extra time: 0.013282537460327148
Time: prepare 0.6006    bound 0.4830    transfer 0.0395    finalize 0.2887    func 1.4121    
Accumulated time: func 152.9710    prepare 57.6426    bound 61.9227    transfer 3.6690    finalize 29.3947    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2646
Time: pickout 0.0106    decision 0.2432    set_bounds 0.2974    solve 1.4139    add 0.0158    
Accumulated time: pickout 0.8959    decision 25.2853    set_bounds 20.2533    solve 153.2965    add 1.9949    
Current (lb-rhs): -2.1126770973205566
198472 domains visited
Cumulative time: 204.77487540245056

BaB round 104
batch: 2048
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 256] [/input.7, 136] [/input.11, 58] [/input.11, 63] [/input.7, 636] [/input.7, 257] [/input.11, 73] [/input.11, 73] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 1947 / 4096 = 0.475341796875
pruning-in-iteration extra time: 0.010915517807006836
Time: prepare 0.5980    bound 0.4665    transfer 0.0349    finalize 0.2885    func 1.3883    
Accumulated time: func 154.3593    prepare 58.2409    bound 62.3892    transfer 3.7039    finalize 29.6833    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2747
Time: pickout 0.0085    decision 0.2419    set_bounds 0.1643    solve 1.3902    add 0.0168    
Accumulated time: pickout 0.9045    decision 25.5272    set_bounds 20.4176    solve 154.6868    add 2.0117    
Current (lb-rhs): -2.1126770973205566
200621 domains visited
Cumulative time: 206.62685894966125

BaB round 105
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 636] [/input.11, 73] [/input.7, 256] [/input.11, 63] [/input.7, 636] [/input.7, 637] [/input.7, 31] [/input.11, 63] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 1955 / 4096 = 0.477294921875
pruning-in-iteration extra time: 0.01344442367553711
Time: prepare 0.5936    bound 0.4755    transfer 0.0410    finalize 0.2875    func 1.3991    
Accumulated time: func 155.7584    prepare 58.8350    bound 62.8648    transfer 3.7449    finalize 29.9708    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2840
Time: pickout 0.0105    decision 0.3731    set_bounds 0.1648    solve 1.4004    add 0.0157    
Accumulated time: pickout 0.9150    decision 25.9003    set_bounds 20.5824    solve 156.0871    add 2.0274    
Current (lb-rhs): -2.1126770973205566
202762 domains visited
Cumulative time: 208.62041544914246

BaB round 106
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.11, 17] [/input.7, 708] [/input.11, 17] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.11, 17] [/input.11, 9] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2061 / 4096 = 0.503173828125
pruning-in-iteration extra time: 0.013817548751831055
Time: prepare 0.5949    bound 0.4726    transfer 0.0402    finalize 0.2889    func 1.3981    
Accumulated time: func 157.1566    prepare 59.4302    bound 63.3374    transfer 3.7851    finalize 30.2597    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2827
Time: pickout 0.0119    decision 0.2427    set_bounds 0.2987    solve 1.3994    add 0.0159    
Accumulated time: pickout 0.9269    decision 26.1430    set_bounds 20.8811    solve 157.4865    add 2.0433    
Current (lb-rhs): -2.1126770973205566
204797 domains visited
Cumulative time: 210.6203396320343

BaB round 107
batch: 2048
splitting decisions: 
split level 0: [/input.7, 142] [/input.7, 638] [/input.7, 638] [/input.11, 9] [/input.7, 31] [/input.11, 9] [/input.11, 9] [/input.7, 638] [/input.7, 31] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2085 / 4096 = 0.509033203125
pruning-in-iteration extra time: 0.013328790664672852
Time: prepare 0.6004    bound 0.5134    transfer 0.0401    finalize 0.2906    func 1.4462    
Accumulated time: func 158.6028    prepare 60.0310    bound 63.8508    transfer 3.8252    finalize 30.5503    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2790
Time: pickout 0.0103    decision 0.2434    set_bounds 0.1657    solve 1.4475    add 0.0159    
Accumulated time: pickout 0.9372    decision 26.3864    set_bounds 21.0468    solve 158.9340    add 2.0592    
Current (lb-rhs): -2.1126770973205566
206808 domains visited
Cumulative time: 212.5334873199463

BaB round 108
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 136] [/input.7, 638] [/input.7, 136] [/input.7, 708] [/input.11, 63] [/input.7, 636] [/input.7, 636] [/input.11, 63] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2158 / 4096 = 0.52685546875
pruning-in-iteration extra time: 0.012976884841918945
Time: prepare 0.6030    bound 0.4843    transfer 0.0409    finalize 0.3017    func 1.4303    
Accumulated time: func 160.0331    prepare 60.6344    bound 64.3352    transfer 3.8661    finalize 30.8520    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2680
Time: pickout 0.0121    decision 0.3768    set_bounds 0.1647    solve 1.4319    add 0.0177    
Accumulated time: pickout 0.9493    decision 26.7632    set_bounds 21.2115    solve 160.3660    add 2.0769    
Current (lb-rhs): -2.1126770973205566
208746 domains visited
Cumulative time: 214.56918954849243

BaB round 109
batch: 2048
splitting decisions: 
split level 0: [/input.7, 142] [/input.7, 636] [/input.7, 631] [/input.7, 636] [/input.11, 12] [/input.7, 636] [/input.11, 63] [/input.11, 63] [/input.11, 12] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 2094 / 4096 = 0.51123046875
pruning-in-iteration extra time: 0.013489246368408203
Time: prepare 0.6003    bound 0.4774    transfer 0.0412    finalize 0.2921    func 1.4115    
Accumulated time: func 161.4446    prepare 61.2351    bound 64.8126    transfer 3.9072    finalize 31.1441    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2634
Time: pickout 0.0129    decision 0.2432    set_bounds 0.3016    solve 1.4130    add 0.0213    
Accumulated time: pickout 0.9623    decision 27.0064    set_bounds 21.5131    solve 161.7790    add 2.0982    
Current (lb-rhs): -2.1126770973205566
210748 domains visited
Cumulative time: 216.5936517715454

BaB round 110
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.11, 73] [/input.7, 637] [/input.7, 702] [/input.7, 707] [/input.11, 73] [/input.7, 707] [/input.7, 136] [/input.7, 136] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2029 / 4096 = 0.495361328125
pruning-in-iteration extra time: 0.013692617416381836
Time: prepare 0.6009    bound 0.4816    transfer 0.0428    finalize 0.2904    func 1.4161    
Accumulated time: func 162.8607    prepare 61.8364    bound 65.2942    transfer 3.9500    finalize 31.4345    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2653
Time: pickout 0.0109    decision 0.2433    set_bounds 0.1646    solve 1.4177    add 0.0160    
Accumulated time: pickout 0.9732    decision 27.2497    set_bounds 21.6777    solve 163.1967    add 2.1141    
Current (lb-rhs): -2.1126770973205566
212815 domains visited
Cumulative time: 218.47785353660583

BaB round 111
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 258] [/input.11, 12] [/input.7, 637] [/input.7, 637] [/input.7, 631] [/input.7, 31] [/input.7, 258] [/input.11, 12] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 2127 / 4096 = 0.519287109375
pruning-in-iteration extra time: 0.012559652328491211
Time: prepare 0.6013    bound 0.5286    transfer 0.0409    finalize 0.2946    func 1.4659    
Accumulated time: func 164.3265    prepare 62.4381    bound 65.8228    transfer 3.9909    finalize 31.7291    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.60329 (17), -1.59399 (16), 
Length of domains: 2574
Time: pickout 0.0104    decision 0.3765    set_bounds 0.1658    solve 1.4678    add 0.0159    
Accumulated time: pickout 0.9836    decision 27.6262    set_bounds 21.8435    solve 164.6645    add 2.1300    
Current (lb-rhs): -2.1126770973205566
214784 domains visited
Cumulative time: 220.5465977191925

BaB round 112
batch: 2048
splitting decisions: 
split level 0: [/input.11, 73] [/input.7, 257] [/input.11, 58] [/input.11, 73] [/input.7, 638] [/input.7, 258] [/input.7, 708] [/input.11, 73] [/input.7, 136] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 2182 / 4096 = 0.53271484375
pruning-in-iteration extra time: 0.011818408966064453
Time: prepare 0.6031    bound 0.5497    transfer 0.0364    finalize 0.2960    func 1.4856    
Accumulated time: func 165.8122    prepare 63.0415    bound 66.3725    transfer 4.0273    finalize 32.0251    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.84847 (17), -1.83426 (17), -1.79736 (16), -1.76528 (17), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.69528 (17), -1.68802 (16), -1.67067 (16), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), 
Length of domains: 2440
Time: pickout 0.0105    decision 0.2410    set_bounds 0.2978    solve 1.4876    add 0.0152    
Accumulated time: pickout 0.9941    decision 27.8672    set_bounds 22.1413    solve 166.1521    add 2.1452    
Current (lb-rhs): -2.1126770973205566
216698 domains visited
Cumulative time: 222.6313829421997

BaB round 113
batch: 2048
splitting decisions: 
split level 0: [/input.11, 73] [/input.7, 636] [/input.11, 73] [/input.7, 707] [/input.7, 631] [/input.11, 58] [/input.11, 58] [/input.11, 73] [/input.11, 12] [/input.7, 136] 
pruning_in_iteration open status: True
ratio of positive domain = 2158 / 4096 = 0.52685546875
pruning-in-iteration extra time: 0.013791084289550781
Time: prepare 0.6004    bound 0.4747    transfer 0.0382    finalize 0.2891    func 1.4037    
Accumulated time: func 167.2159    prepare 63.6423    bound 66.8473    transfer 4.0655    finalize 32.3142    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.83426 (17), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71788 (18), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.63436 (18), -1.62381 (17), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), 
Length of domains: 2330
Time: pickout 0.0106    decision 0.2432    set_bounds 0.1655    solve 1.4050    add 0.0155    
Accumulated time: pickout 1.0046    decision 28.1105    set_bounds 22.3068    solve 167.5571    add 2.1607    
Current (lb-rhs): -2.1126770973205566
218636 domains visited
Cumulative time: 224.50668144226074

BaB round 114
batch: 2048
splitting decisions: 
split level 0: [/input.7, 136] [/input.11, 58] [/input.11, 58] [/input.7, 636] [/input.7, 707] [/input.11, 73] [/input.7, 707] [/input.7, 256] [/input.7, 258] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2110 / 4096 = 0.51513671875
pruning-in-iteration extra time: 0.013590574264526367
Time: prepare 0.5965    bound 0.4789    transfer 0.0389    finalize 0.2903    func 1.4062    
Accumulated time: func 168.6221    prepare 64.2391    bound 67.3261    transfer 4.1044    finalize 32.6046    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.83426 (17), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.65887 (19), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56805 (19), 
Length of domains: 2268
Time: pickout 0.0086    decision 0.3875    set_bounds 0.1656    solve 1.4075    add 0.0150    
Accumulated time: pickout 1.0132    decision 28.4979    set_bounds 22.4724    solve 168.9646    add 2.1756    
Current (lb-rhs): -2.1126770973205566
220622 domains visited
Cumulative time: 226.5214593410492

BaB round 115
batch: 2048
splitting decisions: 
split level 0: [/input.7, 136] [/input.7, 136] [/input.11, 63] [/input.7, 638] [/input.7, 258] [/input.7, 638] [/input.11, 12] [/input.7, 136] [/input.7, 702] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 2052 / 4096 = 0.5009765625
pruning-in-iteration extra time: 0.01408696174621582
Time: prepare 0.5980    bound 0.4687    transfer 0.0408    finalize 0.2893    func 1.3987    
Accumulated time: func 170.0207    prepare 64.8375    bound 67.7948    transfer 4.1452    finalize 32.8938    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.68179 (18), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), 
Length of domains: 2264
Time: pickout 0.0123    decision 0.2430    set_bounds 0.3034    solve 1.3999    add 0.0156    
Accumulated time: pickout 1.0255    decision 28.7409    set_bounds 22.7758    solve 170.3645    add 2.1912    
Current (lb-rhs): -2.1126770973205566
222666 domains visited
Cumulative time: 228.52931451797485

BaB round 116
batch: 2048
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 136] [/input.7, 708] [/input.11, 12] [/input.7, 707] [/input.7, 707] [/input.11, 9] [/input.7, 136] [/input.11, 63] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1982 / 4096 = 0.48388671875
pruning-in-iteration extra time: 0.012855052947998047
Time: prepare 0.6021    bound 0.5012    transfer 0.0384    finalize 0.2890    func 1.4310    
Accumulated time: func 171.4517    prepare 65.4399    bound 68.2960    transfer 4.1836    finalize 33.1828    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2330
Time: pickout 0.0082    decision 0.2418    set_bounds 0.1637    solve 1.4325    add 0.0166    
Accumulated time: pickout 1.0337    decision 28.9828    set_bounds 22.9395    solve 171.7970    add 2.2078    
Current (lb-rhs): -2.1126770973205566
224780 domains visited
Cumulative time: 230.42608261108398

BaB round 117
batch: 2048
splitting decisions: 
split level 0: [/input.7, 118] [/input.7, 637] [/input.11, 73] [/input.11, 63] [/input.7, 258] [/input.7, 637] [/input.7, 708] [/input.7, 636] [/input.7, 258] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 2048 / 4096 = 0.5
pruning-in-iteration extra time: 0.012141227722167969
Time: prepare 0.6077    bound 0.5200    transfer 0.0395    finalize 0.2892    func 1.4569    
Accumulated time: func 172.9086    prepare 66.0480    bound 68.8160    transfer 4.2231    finalize 33.4720    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2330
Time: pickout 0.0085    decision 0.3706    set_bounds 0.1637    solve 1.4586    add 0.0162    
Accumulated time: pickout 1.0423    decision 29.3533    set_bounds 23.1032    solve 173.2556    add 2.2240    
Current (lb-rhs): -2.1126770973205566
226828 domains visited
Cumulative time: 232.47741627693176

BaB round 118
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 31] [/input.11, 63] [/input.11, 12] [/input.7, 258] [/input.7, 702] [/input.7, 31] [/input.7, 636] [/input.7, 258] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1933 / 4096 = 0.471923828125
pruning-in-iteration extra time: 0.011189699172973633
Time: prepare 0.6038    bound 0.5033    transfer 0.0367    finalize 0.2894    func 1.4343    
Accumulated time: func 174.3429    prepare 66.6522    bound 69.3192    transfer 4.2597    finalize 33.7614    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2445
Time: pickout 0.0085    decision 0.2428    set_bounds 0.2986    solve 1.4356    add 0.0168    
Accumulated time: pickout 1.0508    decision 29.5962    set_bounds 23.4018    solve 174.6912    add 2.2407    
Current (lb-rhs): -2.1126770973205566
228991 domains visited
Cumulative time: 234.50959610939026

BaB round 119
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 258] [/input.7, 31] [/input.7, 136] [/input.7, 708] [/input.11, 17] [/input.7, 142] [/input.7, 636] [/input.7, 31] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 2075 / 4096 = 0.506591796875
pruning-in-iteration extra time: 0.012004852294921875
Time: prepare 0.6074    bound 0.4878    transfer 0.0383    finalize 0.4331    func 1.5670    
Accumulated time: func 175.9099    prepare 67.2599    bound 69.8071    transfer 4.2981    finalize 34.1945    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2418
Time: pickout 0.0107    decision 0.2423    set_bounds 0.1651    solve 1.5690    add 0.0159    
Accumulated time: pickout 1.0615    decision 29.8385    set_bounds 23.5669    solve 176.2602    add 2.2566    
Current (lb-rhs): -2.1126770973205566
231012 domains visited
Cumulative time: 236.5427668094635

BaB round 120
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 708] [/input.7, 638] [/input.7, 638] [/input.7, 31] [/input.7, 31] [/input.7, 258] [/input.7, 31] [/input.7, 136] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 1847 / 4096 = 0.450927734375
pruning-in-iteration extra time: 0.012042760848999023
Time: prepare 0.6064    bound 0.5546    transfer 0.0394    finalize 0.2910    func 1.4918    
Accumulated time: func 177.4018    prepare 67.8667    bound 70.3617    transfer 4.3374    finalize 34.4855    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2619
Time: pickout 0.0121    decision 0.2437    set_bounds 0.1646    solve 1.4938    add 0.0177    
Accumulated time: pickout 1.0736    decision 30.0822    set_bounds 23.7315    solve 177.7540    add 2.2743    
Current (lb-rhs): -2.1126770973205566
233261 domains visited
Cumulative time: 238.5040099620819

BaB round 121
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 637] [/input.11, 17] [/input.7, 31] [/input.11, 17] [/input.7, 258] [/input.7, 31] [/input.11, 17] [/input.11, 59] [/input.3, 2254] 
pruning_in_iteration open status: True
ratio of positive domain = 1928 / 4096 = 0.470703125
pruning-in-iteration extra time: 0.011054515838623047
Time: prepare 0.6060    bound 0.4430    transfer 0.0335    finalize 0.2907    func 1.3745    
Accumulated time: func 178.7763    prepare 68.4730    bound 70.8047    transfer 4.3710    finalize 34.7762    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2739
Time: pickout 0.0104    decision 0.2432    set_bounds 0.2964    solve 1.3758    add 0.0169    
Accumulated time: pickout 1.0840    decision 30.3254    set_bounds 24.0279    solve 179.1298    add 2.2912    
Current (lb-rhs): -2.1126770973205566
235429 domains visited
Cumulative time: 240.4769561290741

BaB round 122
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.11, 17] [/input.11, 9] [/input.7, 637] [/input.7, 258] [/input.7, 142] [/input.11, 9] [/input.7, 136] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 1933 / 4096 = 0.471923828125
pruning-in-iteration extra time: 0.013347148895263672
Time: prepare 0.6061    bound 0.5297    transfer 0.0396    finalize 0.4282    func 1.6050    
Accumulated time: func 180.3813    prepare 69.0795    bound 71.3345    transfer 4.4106    finalize 35.2044    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2854
Time: pickout 0.0099    decision 0.2418    set_bounds 0.1643    solve 1.6062    add 0.0159    
Accumulated time: pickout 1.0938    decision 30.5671    set_bounds 24.1922    solve 180.7360    add 2.3071    
Current (lb-rhs): -2.1126770973205566
237592 domains visited
Cumulative time: 242.5477204322815

BaB round 123
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 31] [/input.3, 2239] [/input.11, 17] [/input.11, 65] [/input.11, 9] [/input.7, 31] [/input.7, 702] [/input.7, 136] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 2055 / 4096 = 0.501708984375
pruning-in-iteration extra time: 0.01312708854675293
Time: prepare 0.6222    bound 0.4674    transfer 0.0403    finalize 0.2906    func 1.4209    
Accumulated time: func 181.8022    prepare 69.7020    bound 71.8019    transfer 4.4509    finalize 35.4950    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2847
Time: pickout 0.0083    decision 0.2427    set_bounds 0.1644    solve 1.4229    add 0.0160    
Accumulated time: pickout 1.1022    decision 30.8099    set_bounds 24.3566    solve 182.1589    add 2.3231    
Current (lb-rhs): -2.1126770973205566
239633 domains visited
Cumulative time: 244.4360272884369

BaB round 124
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.7, 638] [/input.11, 65] [/input.11, 65] [/input.11, 9] [/input.7, 638] [/input.11, 9] [/input.11, 45] [/input.7, 142] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2143 / 4096 = 0.523193359375
pruning-in-iteration extra time: 0.012051105499267578
Time: prepare 0.6170    bound 0.4808    transfer 0.0411    finalize 0.2924    func 1.4325    
Accumulated time: func 183.2347    prepare 70.3194    bound 72.2827    transfer 4.4920    finalize 35.7874    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2752
Time: pickout 0.0084    decision 0.2420    set_bounds 0.2965    solve 1.4338    add 0.0150    
Accumulated time: pickout 1.1106    decision 31.0519    set_bounds 24.6532    solve 183.5927    add 2.3380    
Current (lb-rhs): -2.1126770973205566
241586 domains visited
Cumulative time: 246.46412825584412

BaB round 125
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.11, 17] [/input.11, 9] [/input.11, 9] [/input.7, 142] [/input.11, 32] [/input.11, 17] [/input.11, 9] [/input.7, 31] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2285 / 4096 = 0.557861328125
pruning-in-iteration extra time: 0.011702537536621094
Time: prepare 0.6137    bound 0.5158    transfer 0.0357    finalize 0.2944    func 1.4600    
Accumulated time: func 184.6947    prepare 70.9334    bound 72.7985    transfer 4.5277    finalize 36.0818    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2515
Time: pickout 0.0106    decision 0.2418    set_bounds 0.1649    solve 1.6005    add 0.0146    
Accumulated time: pickout 1.1212    decision 31.2937    set_bounds 24.8181    solve 185.1932    add 2.3526    
Current (lb-rhs): -2.1126770973205566
243397 domains visited
Cumulative time: 248.5299608707428

BaB round 126
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 258] [/input.7, 637] [/input.11, 17] [/input.11, 9] [/input.7, 637] [/input.7, 702] [/input.7, 31] [/input.7, 708] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2288 / 4096 = 0.55859375
pruning-in-iteration extra time: 0.012032270431518555
Time: prepare 0.6174    bound 0.5726    transfer 0.0328    finalize 0.2912    func 1.5145    
Accumulated time: func 186.2092    prepare 71.5512    bound 73.3711    transfer 4.5606    finalize 36.3730    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2275
Time: pickout 0.0108    decision 0.2432    set_bounds 0.1638    solve 1.5165    add 0.0136    
Accumulated time: pickout 1.1319    decision 31.5369    set_bounds 24.9818    solve 186.7097    add 2.3662    
Current (lb-rhs): -2.1126770973205566
245205 domains visited
Cumulative time: 250.51106238365173

BaB round 127
batch: 2048
splitting decisions: 
split level 0: [/input.7, 257] [/input.7, 702] [/input.11, 12] [/input.11, 63] [/input.11, 12] [/input.7, 118] [/input.11, 9] [/input.7, 637] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 2240 / 4096 = 0.546875
pruning-in-iteration extra time: 0.011812210083007812
Time: prepare 0.6102    bound 0.5477    transfer 0.0361    finalize 0.2905    func 1.4858    
Accumulated time: func 187.6949    prepare 72.1618    bound 73.9189    transfer 4.5967    finalize 36.6635    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -2.08674 (16), -1.96019 (16), -1.90387 (16), -1.90373 (16), -1.79736 (16), -1.75740 (17), -1.74858 (16), -1.71454 (16), -1.68802 (16), -1.67067 (16), -1.61156 (16), -1.60768 (16), -1.59399 (16), -1.59204 (16), -1.58616 (16), -1.58025 (16), -1.56009 (16), -1.55364 (16), -1.54975 (16), 
Length of domains: 2083
Time: pickout 0.0114    decision 0.2428    set_bounds 0.2950    solve 1.4870    add 0.0141    
Accumulated time: pickout 1.1433    decision 31.7797    set_bounds 25.2769    solve 188.1967    add 2.3803    
Current (lb-rhs): -2.1126770973205566
247061 domains visited
Cumulative time: 252.59747195243835

BaB round 128
batch: 2048
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 256] [/input.7, 257] [/input.7, 636] [/input.7, 637] [/input.7, 707] [/input.7, 638] [/input.7, 636] [/input.7, 707] [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 2221 / 4096 = 0.542236328125
pruning-in-iteration extra time: 0.013370275497436523
Time: prepare 0.6078    bound 0.4466    transfer 0.0381    finalize 0.4208    func 1.5137    
Accumulated time: func 189.2086    prepare 72.7699    bound 74.3655    transfer 4.6348    finalize 37.0843    
Current worst splitting domains lb-rhs (depth):
-2.11268 (16), -1.96019 (16), -1.95405 (17), -1.90387 (16), -1.90373 (16), -1.74858 (16), -1.74592 (17), -1.70474 (17), -1.58616 (16), -1.55958 (18), -1.54975 (16), -1.54204 (17), -1.53743 (17), -1.52561 (16), -1.51731 (18), -1.51116 (17), -1.48521 (16), -1.48304 (17), -1.46626 (17), -1.45355 (17), 
Length of domains: 1910
Time: pickout 0.0086    decision 0.2424    set_bounds 0.1649    solve 1.5156    add 0.0166    
Accumulated time: pickout 1.1519    decision 32.0222    set_bounds 25.4417    solve 189.7123    add 2.3969    
Current (lb-rhs): -2.1126770973205566
248936 domains visited
Cumulative time: 254.57860255241394

BaB round 129
batch: 1910
splitting decisions: 
split level 0: [/input.7, 257] [/input.11, 58] [/input.3, 2254] [/input.7, 637] [/input.7, 636] [/input.7, 257] [/input.7, 707] [/input.11, 58] [/input.7, 708] [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 2027 / 3820 = 0.5306282722513089
pruning-in-iteration extra time: 0.011957883834838867
Time: prepare 0.5609    bound 0.5556    transfer 0.0319    finalize 0.2724    func 1.4211    
Accumulated time: func 190.6297    prepare 73.3311    bound 74.9211    transfer 4.6667    finalize 37.3567    
Current worst splitting domains lb-rhs (depth):
-1.99120 (17), -1.80921 (17), -1.80521 (17), -1.77219 (18), -1.73612 (18), -1.72683 (17), -1.72675 (17), -1.61975 (17), -1.57649 (17), -1.56821 (17), -1.56420 (18), -1.55760 (17), -1.54605 (18), -1.54414 (18), -1.50123 (19), -1.46752 (17), -1.43806 (17), -1.41930 (17), -1.41715 (17), -1.41144 (18), 
Length of domains: 1793
Time: pickout 0.0120    decision 0.2322    set_bounds 0.1535    solve 1.4223    add 0.0143    
Accumulated time: pickout 1.1639    decision 32.2544    set_bounds 25.5952    solve 191.1346    add 2.4112    
Current (lb-rhs): -1.9911994934082031
250729 domains visited
Cumulative time: 256.44233226776123

BaB round 130
batch: 1793
splitting decisions: 
split level 0: [/input.11, 73] [/input.7, 136] [/input.7, 638] [/input.7, 636] [/input.7, 631] [/input.11, 12] [/input.11, 73] [/input.7, 136] [/input.11, 73] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 1774 / 3586 = 0.49470161740100393
pruning-in-iteration extra time: 0.011528253555297852
Time: prepare 0.5313    bound 0.5476    transfer 0.0296    finalize 0.2559    func 1.3648    
Accumulated time: func 191.9945    prepare 73.8628    bound 75.4687    transfer 4.6962    finalize 37.6126    
Current worst splitting domains lb-rhs (depth):
-1.94340 (18), -1.72002 (19), -1.63521 (18), -1.63055 (18), -1.61657 (18), -1.57800 (19), -1.57373 (18), -1.56414 (18), -1.54337 (18), -1.51885 (18), -1.50951 (19), -1.50887 (19), -1.47568 (18), -1.40999 (18), -1.40297 (18), -1.39633 (18), -1.37496 (19), -1.37135 (20), -1.36601 (19), -1.33822 (19), 
Length of domains: 1812
Time: pickout 0.0128    decision 0.2199    set_bounds 0.2696    solve 1.3662    add 0.0145    
Accumulated time: pickout 1.1768    decision 32.4743    set_bounds 25.8649    solve 192.5008    add 2.4257    
Current (lb-rhs): -1.9434044361114502
252541 domains visited
Cumulative time: 258.35353541374207

BaB round 131
batch: 1812
splitting decisions: 
split level 0: [/input.11, 12] [/input.11, 73] [/input.7, 636] [/input.7, 136] [/input.11, 73] [/input.11, 12] [/input.11, 12] [/input.7, 142] [/input.7, 136] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 1766 / 3624 = 0.48730684326710816
pruning-in-iteration extra time: 0.012162208557128906
Time: prepare 0.5363    bound 0.4750    transfer 0.0331    finalize 0.2575    func 1.3023    
Accumulated time: func 193.2967    prepare 74.3995    bound 75.9437    transfer 4.7293    finalize 37.8701    
Current worst splitting domains lb-rhs (depth):
-1.77359 (19), -1.68938 (19), -1.58742 (20), -1.58189 (19), -1.57283 (19), -1.51635 (20), -1.50730 (19), -1.47614 (19), -1.46938 (20), -1.45937 (19), -1.45680 (19), -1.45675 (20), -1.41677 (19), -1.39117 (19), -1.38845 (19), -1.35777 (19), -1.34657 (19), -1.34520 (19), -1.33385 (20), -1.29261 (20), 
Length of domains: 1858
Time: pickout 0.0090    decision 0.2214    set_bounds 0.1443    solve 1.3038    add 0.0147    
Accumulated time: pickout 1.1858    decision 32.6956    set_bounds 26.0092    solve 193.8046    add 2.4404    
Current (lb-rhs): -1.7735888957977295
254399 domains visited
Cumulative time: 260.0731556415558

BaB round 132
batch: 1858
splitting decisions: 
split level 0: [/input.7, 136] [/input.11, 12] [/input.11, 73] [/input.11, 58] [/input.7, 136] [/input.7, 142] [/input.11, 73] [/input.7, 636] [/input.11, 73] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 1790 / 3716 = 0.48170075349838537
pruning-in-iteration extra time: 0.013453245162963867
Time: prepare 0.5508    bound 0.5038    transfer 0.0353    finalize 0.2654    func 1.3566    
Accumulated time: func 194.6533    prepare 74.9507    bound 76.4475    transfer 4.7647    finalize 38.1354    
Current worst splitting domains lb-rhs (depth):
-1.64157 (20), -1.56777 (20), -1.52734 (20), -1.46987 (21), -1.46676 (20), -1.45524 (21), -1.45145 (20), -1.43888 (20), -1.40553 (21), -1.39451 (21), -1.36395 (21), -1.36029 (20), -1.34302 (20), -1.33060 (20), -1.29804 (20), -1.29424 (20), -1.28847 (20), -1.28644 (20), -1.26000 (20), -1.25831 (20), 
Length of domains: 1926
Time: pickout 0.0110    decision 0.3527    set_bounds 0.1481    solve 1.3577    add 0.0168    
Accumulated time: pickout 1.1968    decision 33.0484    set_bounds 26.1572    solve 195.1622    add 2.4572    
Current (lb-rhs): -1.6415650844573975
256325 domains visited
Cumulative time: 261.98898553848267

BaB round 133
batch: 1926
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.7, 136] [/input.7, 142] [/input.7, 637] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.7, 257] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 1674 / 3852 = 0.43457943925233644
pruning-in-iteration extra time: 0.013636112213134766
Time: prepare 0.6957    bound 0.5095    transfer 0.0378    finalize 0.2729    func 1.5164    
Accumulated time: func 196.1696    prepare 75.6467    bound 76.9570    transfer 4.8024    finalize 38.4083    
Current worst splitting domains lb-rhs (depth):
-1.51004 (21), -1.45814 (21), -1.42629 (21), -1.41826 (21), -1.35407 (22), -1.33546 (22), -1.33263 (21), -1.33136 (21), -1.32018 (21), -1.30040 (21), -1.29436 (22), -1.29042 (22), -1.28641 (22), -1.25745 (22), -1.25733 (21), -1.25200 (21), -1.24910 (21), -1.24435 (21), -1.24095 (22), -1.23984 (22), 
Length of domains: 2178
Time: pickout 0.0082    decision 0.2348    set_bounds 0.1530    solve 1.5176    add 0.0169    
Accumulated time: pickout 1.2050    decision 33.2831    set_bounds 26.3103    solve 196.6798    add 2.4741    
Current (lb-rhs): -1.5100423097610474
258503 domains visited
Cumulative time: 263.9493317604065

BaB round 134
batch: 2048
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.7, 708] [/input.7, 702] [/input.7, 637] [/input.11, 63] [/input.11, 12] [/input.7, 637] [/input.7, 702] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 1800 / 4096 = 0.439453125
pruning-in-iteration extra time: 0.012555837631225586
Time: prepare 0.6098    bound 0.5484    transfer 0.0350    finalize 0.2885    func 1.4834    
Accumulated time: func 197.6530    prepare 76.2568    bound 77.5054    transfer 4.8374    finalize 38.6968    
Current worst splitting domains lb-rhs (depth):
-1.40746 (22), -1.33871 (22), -1.33263 (21), -1.32102 (22), -1.31554 (22), -1.30735 (22), -1.29436 (22), -1.28268 (23), -1.28179 (22), -1.24525 (23), -1.24307 (22), -1.22409 (22), -1.21614 (23), -1.20858 (22), -1.20430 (22), -1.20346 (22), -1.20099 (23), -1.18381 (22), -1.18323 (22), -1.17326 (23), 
Length of domains: 2426
Time: pickout 0.0084    decision 0.2421    set_bounds 0.1634    solve 1.4847    add 0.0172    
Accumulated time: pickout 1.2135    decision 33.5252    set_bounds 26.4737    solve 198.1645    add 2.4913    
Current (lb-rhs): -1.4074630737304688
260799 domains visited
Cumulative time: 265.89644384384155

BaB round 135
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.7, 711] [/input.7, 136] [/input.11, 17] [/input.11, 97] [/input.7, 638] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 1783 / 4096 = 0.435302734375
pruning-in-iteration extra time: 0.011173486709594727
Time: prepare 0.6260    bound 0.5806    transfer 0.0380    finalize 0.2935    func 1.5385    
Accumulated time: func 199.1915    prepare 76.8832    bound 78.0860    transfer 4.8754    finalize 38.9904    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.27598 (23), -1.22545 (23), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.19457 (23), -1.18141 (23), -1.15621 (23), -1.15117 (21), -1.14313 (23), -1.13457 (23), -1.12868 (21), -1.12852 (23), -1.12555 (24), 
Length of domains: 2691
Time: pickout 0.0083    decision 0.3716    set_bounds 0.1634    solve 1.5401    add 0.0207    
Accumulated time: pickout 1.2218    decision 33.8968    set_bounds 26.6371    solve 199.7046    add 2.5120    
Current (lb-rhs): -1.343407392501831
263112 domains visited
Cumulative time: 268.02835988998413

BaB round 136
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.7, 31] [/input.7, 638] [/input.7, 258] [/input.7, 636] [/input.7, 31] [/input.7, 136] [/input.7, 637] [/input.7, 637] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 1683 / 4096 = 0.410888671875
pruning-in-iteration extra time: 0.01107335090637207
Time: prepare 0.6104    bound 0.6124    transfer 0.0371    finalize 0.2919    func 1.5523    
Accumulated time: func 200.7437    prepare 77.4939    bound 78.6984    transfer 4.9125    finalize 39.2823    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.23031 (24), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.15403 (24), -1.15117 (21), -1.14229 (24), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.09194 (24), 
Length of domains: 3056
Time: pickout 0.0118    decision 0.2425    set_bounds 0.2977    solve 1.5539    add 0.0240    
Accumulated time: pickout 1.2337    decision 34.1393    set_bounds 26.9348    solve 201.2585    add 2.5361    
Current (lb-rhs): -1.343407392501831
265525 domains visited
Cumulative time: 270.18494153022766

BaB round 137
batch: 2048
splitting decisions: 
split level 0: [/input.7, 31] [/input.11, 17] [/input.7, 258] [/input.7, 638] [/input.7, 31] [/input.7, 638] [/input.7, 708] [/input.7, 258] [/input.7, 708] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 1725 / 4096 = 0.421142578125
pruning-in-iteration extra time: 0.01200556755065918
Time: prepare 0.6085    bound 0.5625    transfer 0.0403    finalize 0.2920    func 1.5038    
Accumulated time: func 202.2476    prepare 78.1028    bound 79.2609    transfer 4.9528    finalize 39.5743    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3379
Time: pickout 0.0112    decision 0.2422    set_bounds 0.1632    solve 1.5055    add 0.0183    
Accumulated time: pickout 1.2449    decision 34.3815    set_bounds 27.0979    solve 202.7640    add 2.5544    
Current (lb-rhs): -1.343407392501831
267896 domains visited
Cumulative time: 272.15550351142883

BaB round 138
batch: 2048
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 711] [/input.7, 258] [/input.7, 261] [/input.11, 32] [/input.11, 9] [/input.3, 2254] [/input.11, 9] [/input.7, 258] [/input.7, 638] 
pruning_in_iteration open status: True
ratio of positive domain = 1887 / 4096 = 0.460693359375
pruning-in-iteration extra time: 0.011633157730102539
Time: prepare 0.6124    bound 0.5094    transfer 0.0408    finalize 0.2892    func 1.4522    
Accumulated time: func 203.6997    prepare 78.7156    bound 79.7704    transfer 4.9936    finalize 39.8635    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3540
Time: pickout 0.0090    decision 0.3782    set_bounds 0.1628    solve 1.4540    add 0.0200    
Accumulated time: pickout 1.2539    decision 34.7597    set_bounds 27.2608    solve 204.2181    add 2.5743    
Current (lb-rhs): -1.343407392501831
270105 domains visited
Cumulative time: 274.2083420753479

BaB round 139
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.7, 142] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.7, 702] [/input.11, 17] [/input.11, 17] [/input.7, 142] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2009 / 4096 = 0.490478515625
pruning-in-iteration extra time: 0.01239323616027832
Time: prepare 0.7522    bound 0.5014    transfer 0.0136    finalize 0.2881    func 1.5557    
Accumulated time: func 205.2554    prepare 79.4682    bound 80.2717    transfer 5.0071    finalize 40.1517    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3579
Time: pickout 0.0096    decision 0.2428    set_bounds 0.1627    solve 1.5575    add 0.0170    
Accumulated time: pickout 1.2635    decision 35.0025    set_bounds 27.4235    solve 205.7756    add 2.5913    
Current (lb-rhs): -1.343407392501831
272192 domains visited
Cumulative time: 276.2343280315399

BaB round 140
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.7, 711] [/input.11, 17] [/input.11, 17] [/input.7, 593] 
pruning_in_iteration open status: True
ratio of positive domain = 1978 / 4096 = 0.48291015625
pruning-in-iteration extra time: 0.012322664260864258
Time: prepare 0.6206    bound 0.5233    transfer 0.0411    finalize 0.2909    func 1.4763    
Accumulated time: func 206.7317    prepare 80.0891    bound 80.7950    transfer 5.0483    finalize 40.4426    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3649
Time: pickout 0.0083    decision 0.2430    set_bounds 0.1629    solve 1.4781    add 0.0166    
Accumulated time: pickout 1.2718    decision 35.2455    set_bounds 27.5864    solve 207.2537    add 2.6080    
Current (lb-rhs): -1.343407392501831
274310 domains visited
Cumulative time: 278.175977230072

BaB round 141
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.11, 17] [/input.7, 32] [/input.7, 142] [/input.7, 142] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2129 / 4096 = 0.519775390625
pruning-in-iteration extra time: 0.011992216110229492
Time: prepare 0.6195    bound 0.4978    transfer 0.0397    finalize 0.2912    func 1.4485    
Accumulated time: func 208.1802    prepare 80.7090    bound 81.2928    transfer 5.0879    finalize 40.7338    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3568
Time: pickout 0.0083    decision 0.2403    set_bounds 0.3002    solve 1.4504    add 0.0162    
Accumulated time: pickout 1.2801    decision 35.4859    set_bounds 27.8866    solve 208.7041    add 2.6241    
Current (lb-rhs): -1.343407392501831
276277 domains visited
Cumulative time: 280.2255165576935

BaB round 142
batch: 2048
splitting decisions: 
split level 0: [/input.7, 142] [/input.11, 17] [/input.7, 142] [/input.11, 17] [/input.7, 702] [/input.11, 9] [/input.3, 2254] [/input.7, 142] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2404 / 4096 = 0.5869140625
pruning-in-iteration extra time: 0.011404037475585938
Time: prepare 0.7680    bound 0.6557    transfer 0.0331    finalize 0.2888    func 1.7460    
Accumulated time: func 209.9262    prepare 81.4773    bound 81.9485    transfer 5.1210    finalize 41.0226    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 3212
Time: pickout 0.0084    decision 0.2442    set_bounds 0.1652    solve 1.7479    add 0.0131    
Accumulated time: pickout 1.2885    decision 35.7301    set_bounds 28.0518    solve 210.4519    add 2.6372    
Current (lb-rhs): -1.343407392501831
277969 domains visited
Cumulative time: 282.44133400917053

BaB round 143
batch: 2048
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.7, 708] [/input.7, 31] [/input.11, 9] [/input.11, 17] [/input.7, 258] [/input.11, 17] [/input.11, 17] [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 2336 / 4096 = 0.5703125
pruning-in-iteration extra time: 0.011034965515136719
Time: prepare 0.6144    bound 0.6112    transfer 0.0323    finalize 0.2895    func 1.5478    
Accumulated time: func 211.4740    prepare 82.0921    bound 82.5597    transfer 5.1534    finalize 41.3121    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.17067 (25), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06758 (25), 
Length of domains: 2924
Time: pickout 0.0085    decision 0.2435    set_bounds 0.1658    solve 1.5497    add 0.0151    
Accumulated time: pickout 1.2970    decision 35.9736    set_bounds 28.2176    solve 212.0016    add 2.6523    
Current (lb-rhs): -1.343407392501831
279729 domains visited
Cumulative time: 284.45955204963684

BaB round 144
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 31] [/input.7, 638] [/input.7, 258] [/input.7, 258] [/input.7, 638] [/input.7, 638] [/input.7, 31] [/input.7, 31] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2267 / 4096 = 0.553466796875
pruning-in-iteration extra time: 0.012611627578735352
Time: prepare 0.6072    bound 0.4735    transfer 0.0361    finalize 0.2889    func 1.4061    
Accumulated time: func 212.8802    prepare 82.6996    bound 83.0332    transfer 5.1895    finalize 41.6010    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.15403 (24), -1.15117 (21), -1.13790 (24), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06561 (23), -1.06227 (21), 
Length of domains: 2705
Time: pickout 0.0089    decision 0.2420    set_bounds 0.3098    solve 1.4081    add 0.0140    
Accumulated time: pickout 1.3059    decision 36.2156    set_bounds 28.5274    solve 213.4097    add 2.6663    
Current (lb-rhs): -1.343407392501831
281558 domains visited
Cumulative time: 286.4741952419281

BaB round 145
batch: 2048
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 637] [/input.7, 708] [/input.7, 638] [/input.11, 9] [/input.7, 31] [/input.7, 702] [/input.11, 9] [/input.7, 702] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 2095 / 4096 = 0.511474609375
pruning-in-iteration extra time: 0.01236724853515625
Time: prepare 0.6073    bound 0.4818    transfer 0.0395    finalize 0.4309    func 1.5601    
Accumulated time: func 214.4402    prepare 83.3073    bound 83.5150    transfer 5.2290    finalize 42.0320    
Current worst splitting domains lb-rhs (depth):
-1.34341 (23), -1.33263 (21), -1.31554 (22), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.15117 (21), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.07806 (25), -1.06953 (23), -1.06561 (23), -1.06227 (21), -1.05695 (22), 
Length of domains: 2658
Time: pickout 0.0126    decision 0.2428    set_bounds 0.1653    solve 1.5619    add 0.0169    
Accumulated time: pickout 1.3186    decision 36.4584    set_bounds 28.6927    solve 214.9716    add 2.6831    
Current (lb-rhs): -1.343407392501831
283559 domains visited
Cumulative time: 288.50570464134216

BaB round 146
batch: 2048
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 142] [/input.7, 708] [/input.7, 636] [/input.7, 708] [/input.7, 638] [/input.7, 136] [/input.7, 31] [/input.7, 136] [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 2042 / 4096 = 0.49853515625
pruning-in-iteration extra time: 0.012475013732910156
Time: prepare 0.6141    bound 0.5025    transfer 0.0411    finalize 0.2890    func 1.4471    
Accumulated time: func 215.8873    prepare 83.9218    bound 84.0175    transfer 5.2701    finalize 42.3210    
Current worst splitting domains lb-rhs (depth):
-1.33263 (21), -1.31554 (22), -1.29817 (24), -1.29436 (22), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.15117 (21), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06561 (23), -1.06227 (21), -1.05695 (22), -1.05468 (22), 
Length of domains: 2664
Time: pickout 0.0105    decision 0.2440    set_bounds 0.1631    solve 1.4490    add 0.0173    
Accumulated time: pickout 1.3291    decision 36.7024    set_bounds 28.8558    solve 216.4206    add 2.7004    
Current (lb-rhs): -1.332629680633545
285613 domains visited
Cumulative time: 290.42352652549744

BaB round 147
batch: 2048
splitting decisions: 
split level 0: [/input.11, 9] [/input.7, 637] [/input.7, 31] [/input.7, 593] [/input.7, 711] [/input.7, 637] [/input.7, 702] [/input.7, 708] [/input.7, 638] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 2095 / 4096 = 0.511474609375
pruning-in-iteration extra time: 0.012352466583251953
Time: prepare 0.6115    bound 0.4928    transfer 0.0402    finalize 0.2881    func 1.4339    
Accumulated time: func 217.3212    prepare 84.5337    bound 84.5103    transfer 5.3103    finalize 42.6091    
Current worst splitting domains lb-rhs (depth):
-1.33263 (21), -1.31554 (22), -1.29436 (22), -1.23460 (25), -1.22429 (24), -1.21946 (23), -1.21614 (23), -1.20099 (23), -1.19509 (24), -1.15117 (21), -1.13486 (25), -1.12868 (21), -1.12852 (23), -1.12555 (24), -1.10841 (21), -1.10259 (22), -1.06953 (23), -1.06561 (23), -1.06227 (21), -1.05695 (22), 
Length of domains: 2617
Time: pickout 0.0086    decision 0.2429    set_bounds 0.3012    solve 1.4351    add 0.0159    
Accumulated time: pickout 1.3376    decision 36.9453    set_bounds 29.1570    solve 217.8557    add 2.7163    
Current (lb-rhs): -1.332629680633545
287614 domains visited
Time out!!!!!!!!
Result: unknown in 301.3584 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[14.46299553, -7.49389458, -0.05747461, -4.95114994,  1.99034786,
         -4.04051638,  2.82610178, -2.92868757, -1.43012714,  0.89388311]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.81it/s]100%|██████████| 1/1 [00:00<00:00,  1.81it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[11.17374325, -7.93647814, -1.20909882, -4.89228773,  1.87216866,
          -2.40931797,  4.87446404, -3.94283485,  0.13072482,  1.57514799],
         [11.17374325, -7.93647814, -1.20909882, -4.89228773,  1.87216866,
          -2.40931797,  4.87446404, -3.94283485,  0.13072482,  1.57514799]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[19.11022186, 12.38284206, 16.06603050,  9.30157471, 13.58306122,
           6.29927921, 15.11657810, 11.04301834,  9.59859562]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5652 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[14.46299553, -7.49389505, -0.05747461, -4.95115042,  1.99034798,
         -4.04051733,  2.82610297, -2.92868805, -1.43012679,  0.89388341]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [582]; unstable size 582; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 88, 1, 582] with unstable size 87 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 582] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 582] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [87]; unstable size 87; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 87] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 87] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[13.48179913,  3.02463341,  9.82707119,  2.44934654,  8.36491489,
          2.70140529,  6.82134485,  3.94232559,  2.61156869]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.04026052, -1.29700160,  1.31461632,  0.16177775, -3.02636528,
         -0.75306970, -5.88124228,  8.31819153, -2.51131749,  3.62415862]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.07391639, -1.74960041,  0.32620743,  0.83522880, -2.47924757,
          -0.77833056, -5.32605934,  6.43168640, -2.26776886,  5.11132908],
         [-0.07391639, -1.74960041,  0.32620743,  0.83522880, -2.47924757,
          -0.77833056, -5.32605934,  6.43168640, -2.26776886,  5.11132908]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.50560284,  8.18128681,  6.10547876,  5.59645748,  8.91093445,
           7.21001720, 11.75774574,  8.69945526,  1.32035732]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5697 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.04025974, -1.29700184,  1.31461692,  0.16177790, -3.02636552,
         -0.75306994, -5.88124323,  8.31819248, -2.51131749,  3.62415838]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [701]; unstable size 701; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 205, 1, 701] with unstable size 204 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 701] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [204]; unstable size 204; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 204] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.65838337,  3.35315132,  1.01140094,  1.16130233,  3.99980497,
          1.31237173,  6.56910658,  3.70097160, -2.57570601]], device='cuda:0') None
best_l after optimization: 27.014358520507812
alpha/beta optimization time: 4.374377727508545
initial alpha-crown bounds: tensor([[ 2.38727188,  3.81989717,  1.86370063,  2.00425744,  4.56134081,
          2.38140249,  7.18555117,  4.64145422, -1.83051610]], device='cuda:0')
Worst class: (+ rhs) -1.8305160999298096
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.98560905456543
##### Instance 25 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3872718811035156.

Properties batch 1, size 1
Remaining timeout: 294.81743907928467
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.819897174835205.

Properties batch 2, size 1
Remaining timeout: 294.71202206611633
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8637006282806396.

Properties batch 3, size 1
Remaining timeout: 294.6069493293762
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0042574405670166.

Properties batch 4, size 1
Remaining timeout: 294.50219893455505
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.561340808868408.

Properties batch 5, size 1
Remaining timeout: 294.3971040248871
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3814024925231934.

Properties batch 6, size 1
Remaining timeout: 294.29250025749207
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.185551166534424.

Properties batch 7, size 1
Remaining timeout: 294.1876199245453
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.641454219818115.

Properties batch 8, size 1
Remaining timeout: 294.0830101966858
##### Instance 25 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.83051610]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.04025974, -1.29700184,  1.31461692,  0.16177790, -3.02636552,
        -0.75306994, -5.88124323,  8.31819248, -2.51131749,  3.62415838],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.83051610]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 701
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 202
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 934
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 95] 
split level 2: [/input.11, 32] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 90] 
split level 6: [/input.11, 8] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.012909889221191406
Time: prepare 0.0076    bound 0.4422    transfer 0.0013    finalize 0.0075    func 0.4586    
Accumulated time: func 0.4586    prepare 0.0082    bound 0.4422    transfer 0.0013    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.54088 (7), -0.39532 (7), -0.32791 (7), -0.29336 (7), -0.18312 (7), -0.06175 (7), 
Length of domains: 6
Time: pickout 0.0007    decision 0.0454    set_bounds 0.0158    solve 0.4587    add 0.0015    
Accumulated time: pickout 0.0007    decision 0.0454    set_bounds 0.0158    solve 0.4587    add 0.0015    
Current (lb-rhs): -0.5408797264099121
6 domains visited
Cumulative time: 0.5314352512359619

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.7, 138] [/input.11, 60] [/input.7, 138] [/input.7, 311] [/input.11, 60] [/input.7, 138] 
split level 1: [/input.7, 311] [/input.7, 311] [/input.7, 311] [/input.7, 138] [/input.7, 713] [/input.7, 311] 
split level 2: [/input.7, 713] [/input.7, 713] [/input.11, 60] [/input.7, 713] [/input.7, 588] [/input.7, 713] 
split level 3: [/input.11, 60] [/input.7, 588] [/input.7, 713] [/input.11, 60] [/input.7, 243] [/input.11, 60] 
split level 4: [/input.11, 41] [/input.11, 41] [/input.11, 41] [/input.11, 41] [/input.11, 41] [/input.11, 41] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 0.0005705356597900391
Time: prepare 0.0248    bound 0.0336    transfer 0.0011    finalize 0.0111    func 0.0706    
Accumulated time: func 0.5293    prepare 0.0335    bound 0.4758    transfer 0.0024    finalize 0.0185    
Length of domains: 0
Time: pickout 0.0011    decision 0.0403    set_bounds 0.0214    solve 0.0708    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0857    set_bounds 0.0372    solve 0.5295    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.6666038036346436

Result: safe in 6.7257 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.12947845, -2.23707151, -1.69564116, -2.87418461, 13.77114773,
         -3.54241061, -2.41747451,  1.68153822, -2.08168793,  3.28032207]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.56092763, -3.54165030, -2.26541638, -1.61515832,  9.80881977,
          -2.15055680, -3.45325112,  1.11882949, -0.40204930,  5.86047077],
         [-3.56092763, -3.54165030, -2.26541638, -1.61515832,  9.80881977,
          -2.15055680, -3.45325112,  1.11882949, -0.40204930,  5.86047077]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.36974716, 13.35046959, 12.07423592, 11.42397785, 11.95937634,
          13.26207066,  8.68999004, 10.21086884,  3.94834900]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5718 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.12947893, -2.23707175, -1.69564056, -2.87418413, 13.77114773,
         -3.54241085, -2.41747499,  1.68153811, -2.08168793,  3.28032207]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [717]; unstable size 717; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 136, 1, 717] with unstable size 135 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 717] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 717] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [135]; unstable size 135; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 135] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 135] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.53338432,  7.53572941,  4.89646626,  4.64367294,  4.52248716,
          6.46924973,  1.56103492,  3.65660787, -0.66820264]], device='cuda:0') None

all verified at 8th iter
best_l after optimization: 45.65497589111328
alpha/beta optimization time: 0.351668119430542
initial alpha-crown bounds: tensor([[8.96566105, 7.90404129, 5.34800148, 5.10087681, 5.07928419, 7.02126503,
         2.03525019, 4.14426184, 0.05633032]], device='cuda:0')
Worst class: (+ rhs) 0.056330323219299316
verified with init bound!
Result: safe-incomplete in 0.9933 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[14.35566044, -3.04855156,  3.87620044, -1.32422650, -4.90707636,
         -1.52176583, -3.17947769, -1.95578980, -1.17944252, -1.36535800]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[12.28542423, -1.46743822,  5.24984407,  0.28241980, -5.28794432,
          -2.06906390, -5.41513824, -1.18864644, -1.51129079, -1.06141877],
         [12.28542423, -1.46743822,  5.24984407,  0.28241980, -5.28794432,
          -2.06906390, -5.41513824, -1.18864644, -1.51129079, -1.06141877]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.75286293,  7.03558016, 12.00300407, 17.57336807, 14.35448837,
          17.70056152, 13.47407055, 13.79671478, 13.34684277]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5621 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[14.35566044, -3.04855132,  3.87620068, -1.32422578, -4.90707684,
         -1.52176547, -3.17947745, -1.95579004, -1.17944252, -1.36535823]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [640]; unstable size 640; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 134, 1, 640] with unstable size 133 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 640] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [133]; unstable size 133; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 133] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.01006889,  2.56657362,  6.10554790, 12.18263054,  5.90568686,
         11.62575150,  7.85691452,  7.95029926,  7.52278662]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6285 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.52621555,  7.97831726, -0.95799655, -0.44691497,  0.88916755,
         -0.51093429,  0.10882106, -1.93606102,  2.97489429, -3.73641014]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.81it/s]100%|██████████| 1/1 [00:00<00:00,  1.81it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.23587179,  6.40522766, -0.90577304, -0.51890820,  0.50808930,
          -0.34122151,  0.36511937, -1.80706739,  4.49277496, -3.11830139],
         [-5.23587179,  6.40522766, -0.90577304, -0.51890820,  0.50808930,
          -0.34122151,  0.36511937, -1.80706739,  4.49277496, -3.11830139]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.64109993,  7.31100082,  6.92413568,  5.89713860,  6.74644899,
           6.04010820,  8.21229553,  1.91245270,  9.52352905]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5594 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.52621508,  7.97831774, -0.95799625, -0.44691524,  0.88916767,
         -0.51093477,  0.10882118, -1.93606102,  2.97489429, -3.73641038]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [694]; unstable size 694; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 254, 1, 694] with unstable size 253 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 694] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [253]; unstable size 253; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 253] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.66825104,  2.40311718,  0.58691204,  1.60824049,  2.04217315,
          2.24922228,  2.67392683, -2.09350872,  2.28736496]], device='cuda:0') None
best_l after optimization: 25.95716094970703
alpha/beta optimization time: 4.362463712692261
initial alpha-crown bounds: tensor([[ 7.31930017,  2.99721956,  1.27282655,  2.49709702,  2.63881207,
          2.76570702,  3.37209296, -0.76329744,  3.85740280]], device='cuda:0')
Worst class: (+ rhs) -0.763297438621521
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0089190006256
##### Instance 28 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.319300174713135.

Properties batch 1, size 1
Remaining timeout: 294.89250659942627
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9972195625305176.

Properties batch 2, size 1
Remaining timeout: 294.77833008766174
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2728265523910522.

Properties batch 3, size 1
Remaining timeout: 294.67366313934326
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4970970153808594.

Properties batch 4, size 1
Remaining timeout: 294.56870126724243
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6388120651245117.

Properties batch 5, size 1
Remaining timeout: 294.4639735221863
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.765707015991211.

Properties batch 6, size 1
Remaining timeout: 294.3590199947357
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3720929622650146.

Properties batch 7, size 1
Remaining timeout: 294.2544069290161
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76329744]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.52621508,  7.97831774, -0.95799625, -0.44691524,  0.88916767,
        -0.51093477,  0.10882118, -1.93606102,  2.97489429, -3.73641038],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76329744]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 252
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 974
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 25] 
split level 3: [/input.11, 48] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 17] 
split level 6: [/input.11, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0007    finalize 0.0058    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08474564552307129


Properties batch 8, size 1
Remaining timeout: 294.01059889793396
##### Instance 28 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.857402801513672.
Result: safe in 6.0978 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.56104136, -2.20441794, -1.79023004, 15.66008091, -6.06493330,
          4.89737320, -8.86336231, -0.46705243,  0.55515838,  1.86663878]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.43740559, -3.11726522, -2.48474216, 13.43037128, -5.36926985,
           6.73792410, -7.56559992, -0.74519342, -0.13961288,  2.70160937],
         [-3.43740559, -3.11726522, -2.48474216, 13.43037128, -5.36926985,
           6.73792410, -7.56559992, -0.74519342, -0.13961288,  2.70160937]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.86777687, 16.54763603, 15.91511345, 18.79964066,  6.69244719,
          20.99597168, 14.17556477, 13.56998444, 10.72876167]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5646 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.56104183, -2.20441914, -1.79023015, 15.66008186, -6.06493330,
          4.89737463, -8.86336231, -0.46705219,  0.55515862,  1.86663902]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [659]; unstable size 659; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 97, 1, 659] with unstable size 96 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 27, 1, 659] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [96]; unstable size 96; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 27, 1, 96] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 96] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.85578918,  8.41277122,  8.76945877, 11.19265366,  2.70130301,
         14.25147438,  6.73480082,  6.96848679,  4.63201952]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6282 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.01225853,  7.04731703, -1.11970997, -0.63358331,  0.83698332,
         -1.45114815, -1.12147748, -0.49177703,  1.89779317, -1.08717239]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.45914268e+00,  5.13044071e+00, -1.79922831e+00,  6.63729727e-01,
           6.06620610e-01, -9.14662004e-01, -1.35996342e+00, -5.69048941e-01,
           2.60682631e+00, -3.00169829e-03],
         [-4.45914268e+00,  5.13044071e+00, -1.79922831e+00,  6.63729727e-01,
           6.06620610e-01, -9.14662004e-01, -1.35996342e+00, -5.69048941e-01,
           2.60682631e+00, -3.00169829e-03]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.58958340, 6.92966890, 4.46671104, 4.52381992, 6.04510260,
          6.49040413, 5.69948959, 2.52361441, 5.13344240]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5761 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.01225901,  7.04731750, -1.11970997, -0.63358343,  0.83698344,
         -1.45114827, -1.12147748, -0.49177715,  1.89779317, -1.08717275]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [687]; unstable size 687; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 282, 1, 687] with unstable size 281 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 687] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 687] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [281]; unstable size 281; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 281] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 281] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.59715366,  2.38092113,  0.15647340,  0.94296193,  1.74613595,
          2.78980994,  0.95751548, -0.46201164,  0.16461897]], device='cuda:0') None

all verified at 10th iter
best_l after optimization: 19.423044204711914
alpha/beta optimization time: 0.42861223220825195
initial alpha-crown bounds: tensor([[6.09653378, 2.95425224, 0.87994647, 1.42196536, 2.31195354, 3.28937769,
         1.54258275, 0.01582599, 0.91060591]], device='cuda:0')
Worst class: (+ rhs) 0.015825986862182617
verified with init bound!
Result: safe-incomplete in 1.0731 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.81963491, -1.66200829,  0.27310765, 15.44809437, -6.22207260,
          5.19005203, -6.00235891, -1.93765807,  1.91030633, -1.26184607]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.83it/s]100%|██████████| 1/1 [00:00<00:00,  1.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60039520, -2.75509977, -0.43316361, 13.14392376, -5.73043537,
           7.89960527, -4.66111135, -2.24857712,  0.96568322, -0.71288991],
         [-5.60039520, -2.75509977, -0.43316361, 13.14392376, -5.73043537,
           7.89960527, -4.66111135, -2.24857712,  0.96568322, -0.71288991]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[18.74431992, 15.89902306, 13.57708740, 18.87435913,  5.24431849,
          17.80503464, 15.39250088, 12.17824078, 13.85681343]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5547 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.81963587, -1.66200805,  0.27310741, 15.44809628, -6.22207212,
          5.19005156, -6.00235796, -1.93765855,  1.91030622, -1.26184595]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [732]; unstable size 732; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 181, 1, 732] with unstable size 180 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 732] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 732] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [180]; unstable size 180; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 180] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.41990662,  7.36908913,  5.17514801,  8.91341591,  0.49804688,
         10.67339993,  7.47215414,  4.37838840,  6.26373672]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6189 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 5.67521238, -1.64591336,  0.32950294, -4.52168846,  7.48443174,
         -0.59894508,  2.74214363, -1.29387796, -3.55385780, -5.07126427]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.35975552, -2.10920024, -0.78856373, -4.32074213,  5.55545282,
          -0.53077865,  2.55305862, -0.61894149, -2.93608713, -4.59793425],
         [ 7.35975552, -2.10920024, -0.78856373, -4.32074213,  5.55545282,
          -0.53077865,  2.55305862, -0.61894149, -2.93608713, -4.59793425]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.80430269,  7.66465282,  6.34401655,  9.87619495,  6.08623123,
           3.00239420,  6.17439413,  8.49153996, 10.15338707]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0149 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0159 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.42899442,   0.67767745,   5.06865501,   3.77573800,  -5.00349760,
          -6.91734457, -13.45639896,  16.51133728,   0.91990662,   0.75029165]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.08144081,   0.42323214,   6.52678967,   3.60878134,  -5.97361422,
           -6.05277586, -12.46350956,  12.88487434,   1.93742263,   0.13267253],
         [ -1.08144081,   0.42323214,   6.52678967,   3.60878134,  -5.97361422,
           -6.05277586, -12.46350956,  12.88487434,   1.93742263,   0.13267253]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.96631527, 12.46164227,  6.35808468,  9.27609253, 18.85848808,
          18.93765068, 25.34838486, 10.94745159, 12.75220203]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5737 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -2.42899513,   0.67767757,   5.06865597,   3.77573991,  -5.00349760,
          -6.91734648, -13.45639896,  16.51133728,   0.91990650,   0.75029218]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [666]; unstable size 666; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 164, 1, 666] with unstable size 163 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 21, 1, 666] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [163]; unstable size 163; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 21, 1, 163] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 163] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.08269310,  7.79116631,  3.90177250,  3.64700127, 14.27836990,
         12.65966320, 19.55551147,  5.67279911,  6.43809986]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6395 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.82913047,  4.93779373, 11.34549427,  3.66764879, -6.13173866,
         -5.54396200, -8.63004017,  1.56718802,  0.49066296, -2.63494635]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.05349801,  7.58490467,  9.91854668,  2.88194060, -4.62320852,
          -3.95370626, -7.47983646,  1.05116689, -1.19866335, -4.27301264],
         [-0.05349801,  7.58490467,  9.91854668,  2.88194060, -4.62320852,
          -3.95370626, -7.47983646,  1.05116689, -1.19866335, -4.27301264]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.97204494,  2.33364201,  7.03660583, 14.54175568, 13.87225342,
          17.39838409,  8.86738014, 11.11721039, 14.19155884]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5677 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.82913011,  4.93779325, 11.34549427,  3.66764855, -6.13173866,
         -5.54396152, -8.63004112,  1.56718826,  0.49066326, -2.63494611]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [757]; unstable size 757; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 96, 1, 757] with unstable size 95 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 757] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 757] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [95]; unstable size 95; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 95] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 95] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81710505, -0.78815198, -1.40080380,  8.83794212,  3.24500179,
          8.05664921,  3.68930101,  2.06293631,  3.52833605]], device='cuda:0') None
best_l after optimization: 36.12925720214844
alpha/beta optimization time: 4.313662767410278
initial alpha-crown bounds: tensor([[ 4.27656412, -0.28010893, -0.90343285,  9.29218292,  3.91465235,
          8.74693394,  4.03257751,  2.68518043,  4.36470604]], device='cuda:0')
Worst class: (+ rhs) -0.9034328460693359
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0543689727783
##### Instance 34 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.276564121246338.

Properties batch 1, size 1
Remaining timeout: 294.9402723312378
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.28010893]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.82913011,  4.93779325, 11.34549427,  3.66764855, -6.13173866,
        -5.54396152, -8.63004112,  1.56718826,  0.49066326, -2.63494611],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28010893]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 757
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 91
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 868
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 65] 
split level 2: [/input.11, 9] 
split level 3: [/input.7, 123] 
split level 4: [/input.11, 11] 
split level 5: [/input.11, 60] 
split level 6: [/input.7, 134] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0145    bound 0.0075    transfer 0.0006    finalize 0.0072    func 0.0301    
Accumulated time: func 0.0301    prepare 0.0151    bound 0.0075    transfer 0.0006    finalize 0.0072    
Length of domains: 0
Time: pickout 0.0007    decision 0.0395    set_bounds 0.0169    solve 0.0302    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0395    set_bounds 0.0169    solve 0.0302    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09394407272338867


Properties batch 2, size 1
Remaining timeout: 294.7058889865875
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.90343285]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.82913011,  4.93779325, 11.34549427,  3.66764855, -6.13173866,
        -5.54396152, -8.63004112,  1.56718826,  0.49066326, -2.63494611],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.90343285]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 757
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 91
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 868
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 59] 
split level 4: [/input.11, 56] 
split level 5: [/input.11, 60] 
split level 6: [/input.7, 584] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0145    bound 0.0075    transfer 0.0006    finalize 0.0073    func 0.0301    
Accumulated time: func 0.0301    prepare 0.0150    bound 0.0075    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0169    solve 0.0302    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0169    solve 0.0302    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09528017044067383


Properties batch 3, size 1
Remaining timeout: 294.4657428264618
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.292182922363281.

Properties batch 4, size 1
Remaining timeout: 294.35788917541504
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9146523475646973.

Properties batch 5, size 1
Remaining timeout: 294.25441336631775
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.746933937072754.

Properties batch 6, size 1
Remaining timeout: 294.1514217853546
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.0325775146484375.

Properties batch 7, size 1
Remaining timeout: 294.0481481552124
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.685180425643921.

Properties batch 8, size 1
Remaining timeout: 293.9449791908264
##### Instance 34 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.364706039428711.
Result: safe in 6.1580 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.22899643,  0.72383946,  5.17172384,  2.29105663, -5.13646078,
         -6.08031130, -7.80481386, 10.91265678,  0.74154460, -0.84655273]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.61350596,  1.28433716,  6.30412626,  2.24246025, -5.27286768,
          -5.95732546, -6.28836393,  7.53990793,  0.70082331, -1.38830841],
         [ 0.61350596,  1.28433716,  6.30412626,  2.24246025, -5.27286768,
          -5.95732546, -6.28836393,  7.53990793,  0.70082331, -1.38830841]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.92640209,  6.25557089,  1.23578167,  5.29744768, 12.81277561,
          13.49723339, 13.82827187,  6.83908463,  8.92821598]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5666 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.22899696,  0.72383934,  5.17172384,  2.29105735, -5.13646126,
         -6.08031082, -7.80481386, 10.91265678,  0.74154490, -0.84655237]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [757]; unstable size 757; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 134, 1, 757] with unstable size 133 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 25, 1, 757] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 757] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [133]; unstable size 133; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 25, 1, 133] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.30494881,  2.34096861, -1.50007510,  1.36860812,  8.74627972,
          7.76050329,  8.87692833,  2.79959106,  4.13782024]], device='cuda:0') None
best_l after optimization: 41.68011474609375
alpha/beta optimization time: 4.321778297424316
initial alpha-crown bounds: tensor([[ 3.65418077,  2.85348415, -1.11748922,  1.85398912,  9.18031693,
          8.25426579,  9.36135101,  3.16361284,  4.47640419]], device='cuda:0')
Worst class: (+ rhs) -1.117489218711853
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0495467185974
##### Instance 35 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6541807651519775.

Properties batch 1, size 1
Remaining timeout: 294.93711709976196
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.8534841537475586.

Properties batch 2, size 1
Remaining timeout: 294.8338074684143
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.11748922]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.22899696,  0.72383934,  5.17172384,  2.29105735, -5.13646126,
        -6.08031082, -7.80481386, 10.91265678,  0.74154490, -0.84655237],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.11748922]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 757
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 131
Node /27 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 910
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 41] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 45] 
split level 4: [/input.11, 50] 
split level 5: [/input.7, 198] 
split level 6: [/input.7, 597] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0145    bound 0.0075    transfer 0.0006    finalize 0.0074    func 0.0302    
Accumulated time: func 0.0302    prepare 0.0151    bound 0.0075    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0168    solve 0.0303    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0168    solve 0.0303    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09400224685668945


Properties batch 3, size 1
Remaining timeout: 294.5995373725891
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8539891242980957.

Properties batch 4, size 1
Remaining timeout: 294.49162316322327
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.180316925048828.

Properties batch 5, size 1
Remaining timeout: 294.38778853416443
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.254265785217285.

Properties batch 6, size 1
Remaining timeout: 294.2845652103424
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.361351013183594.

Properties batch 7, size 1
Remaining timeout: 294.1818599700928
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1636128425598145.

Properties batch 8, size 1
Remaining timeout: 294.07925939559937
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.476404190063477.
Result: safe in 6.0234 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.88640594,  9.33523273, -1.31080353, -1.42553675,  0.37640825,
         -2.09785724, -1.57124984, -0.12740657,  3.02588630, -1.50343347]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.47760725,  8.26459599, -1.02106130, -1.79344404,  0.12571321,
          -1.81601262, -0.46837297,  0.02308514,  4.37380552, -2.40680122],
         [-5.47760725,  8.26459599, -1.02106130, -1.79344404,  0.12571321,
          -1.81601262, -0.46837297,  0.02308514,  4.37380552, -2.40680122]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.74220276,  9.28565693, 10.05803967,  8.13888264, 10.08060837,
           8.73296928,  8.24151039,  3.89079046, 10.67139721]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5667 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.88640547,  9.33523273, -1.31080377, -1.42553699,  0.37640855,
         -2.09785771, -1.57124996, -0.12740621,  3.02588582, -1.50343335]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 260, 1, 688] with unstable size 259 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 688] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [259]; unstable size 259; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 259] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[9.23991966, 4.94690228, 3.71779513, 3.21512341, 4.86890841, 4.97820377,
         2.95284748, 0.50285923, 2.98064232]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6320 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.74111557,  3.10603929,  7.12958097,  3.74202895, -5.59853601,
         -1.71726727, -3.54867840, -0.03491780, -0.48739335, -5.46795130]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.17435241,  3.12937880,  5.09871387,  6.97037983, -6.79965258,
           0.02840094, -4.52470589, -1.49600887, -0.79169983, -3.93096185],
         [ 2.17435241,  3.12937880,  5.09871387,  6.97037983, -6.79965258,
           0.02840094, -4.52470589, -1.49600887, -0.79169983, -3.93096185]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.92436147,  1.96933508, -1.87166595, 11.89836693,  5.07031298,
           9.62341976,  6.59472275,  5.89041376,  9.02967548]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0150 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0160 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.53927159, 10.11748791, -2.37018824, -2.23383427, -1.47556579,
         -2.65586138,  0.29481113, -1.89690340,  3.62818003, -2.12892127]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.65344000,  8.33491611, -2.64386511, -1.78491473, -1.73947382,
          -2.23314881, -0.31973764, -2.31098938,  5.22095680, -1.07964802],
         [-1.65344000,  8.33491611, -2.64386511, -1.78491473, -1.73947382,
          -2.23314881, -0.31973764, -2.31098938,  5.22095680, -1.07964802]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.98835564, 10.97878075, 10.11983109, 10.07439041, 10.56806469,
           8.65465355, 10.64590549,  3.11395931,  9.41456413]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5817 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.53927171, 10.11748791, -2.37018847, -2.23383331, -1.47556603,
         -2.65586090,  0.29481134, -1.89690375,  3.62817955, -2.12892127]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [665]; unstable size 665; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 236, 1, 665] with unstable size 235 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 23, 1, 665] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [235]; unstable size 235; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 23, 1, 235] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.69268465, 6.39408588, 4.29244709, 5.97597504, 5.15857124, 3.50363779,
         5.43892670, 0.21605957, 4.33115959]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6436 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.04454207,  5.08431578, -0.64956647, -0.68721962, -0.45559445,
         -0.86510891, -0.53854424,  0.02385465,  1.19583988, -1.16939032]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.82it/s]100%|██████████| 1/1 [00:00<00:00,  1.82it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.69059372,  3.63736033, -0.38533783, -0.61922795, -1.46052825,
          -0.79528493, -0.22010773,  0.47252995,  2.58958197, -0.62947887],
         [-2.69059372,  3.63736033, -0.38533783, -0.61922795, -1.46052825,
          -0.79528493, -0.22010773,  0.47252995,  2.58958197, -0.62947887]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.32795429, 4.02269840, 4.25658846, 5.09788847, 4.43264532,
          3.85746813, 3.16483045, 1.04777837, 4.26683903]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5572 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
         -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [719]; unstable size 719; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 323, 1, 719] with unstable size 322 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 719] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 719] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [322]; unstable size 322; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 322] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86772251, -0.54727268, -1.41306567,  0.09816122, -0.60420442,
         -0.44041944, -1.04540098, -2.07281327, -1.28263450]], device='cuda:0') None
best_l after optimization: -0.6861617565155029
alpha/beta optimization time: 4.290952682495117
initial alpha-crown bounds: tensor([[ 2.34424496, -0.07566690, -0.77366769,  0.73499811, -0.15321755,
          0.05823398, -0.52787471, -1.56523919, -0.72797275]], device='cuda:0')
Worst class: (+ rhs) -1.5652391910552979
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0829508304596
##### Instance 39 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.344244956970215.

Properties batch 1, size 1
Remaining timeout: 294.96919107437134
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07566690]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07566690]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 41] 
split level 4: [/input.11, 90] 
split level 5: [/input.7, 632] 
split level 6: [/input.11, 48] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0073    func 0.0304    
Accumulated time: func 0.0304    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0168    solve 0.0305    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0398    set_bounds 0.0168    solve 0.0305    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09473085403442383


Properties batch 2, size 1
Remaining timeout: 294.73426485061646
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.77366769]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.77366769]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 80] 
split level 2: [/input.11, 48] 
split level 3: [/input.7, 632] 
split level 4: [/input.7, 642] 
split level 5: [/input.11, 59] 
split level 6: [/input.7, 717] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0144    bound 0.0075    transfer 0.0007    finalize 0.0073    func 0.0301    
Accumulated time: func 0.0301    prepare 0.0150    bound 0.0075    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0169    solve 0.0301    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0169    solve 0.0301    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09404563903808594


Properties batch 3, size 1
Remaining timeout: 294.49493885040283
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7349981069564819.

Properties batch 4, size 1
Remaining timeout: 294.3868000507355
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15321755]], device='cuda:0') need to verify.
torch allclose failed: norm 6.26203473075293e-07
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15321755]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 59] 
split level 4: [/input.11, 25] 
split level 5: [/input.7, 717] 
split level 6: [/input.7, 712] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.034706115722656e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0006    finalize 0.0073    func 0.0304    
Accumulated time: func 0.0304    prepare 0.0151    bound 0.0078    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0168    solve 0.0305    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0168    solve 0.0305    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09465527534484863


Properties batch 5, size 1
Remaining timeout: 294.149085521698
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05823397636413574.

Properties batch 6, size 1
Remaining timeout: 294.041161775589
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.52787471]], device='cuda:0') need to verify.
torch allclose failed: norm 1.0363540923208348e-06
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.52787471]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 14] 
split level 3: [/input.7, 632] 
split level 4: [/input.11, 19] 
split level 5: [/input.7, 707] 
split level 6: [/input.7, 257] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0145    bound 0.0074    transfer 0.0006    finalize 0.0073    func 0.0301    
Accumulated time: func 0.0301    prepare 0.0151    bound 0.0074    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0169    solve 0.0302    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0169    solve 0.0302    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09400820732116699


Properties batch 7, size 1
Remaining timeout: 293.8043177127838
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.56523919]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.56523919]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 25] 
split level 5: [/input.11, 48] 
split level 6: [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 128 = 0.8671875
pruning-in-iteration extra time: 0.012326478958129883
Time: prepare 0.0076    bound 0.4513    transfer 0.0011    finalize 0.0075    func 0.4675    
Accumulated time: func 0.4675    prepare 0.0082    bound 0.4513    transfer 0.0011    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.44574 (7), -0.43722 (7), -0.39147 (7), -0.38912 (7), -0.38828 (7), -0.37328 (7), -0.37003 (7), -0.35674 (7), -0.35315 (7), -0.34693 (7), -0.33532 (7), -0.30967 (7), -0.29108 (7), -0.29023 (7), -0.28778 (7), -0.23692 (7), -0.00828 (7), 
Length of domains: 17
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0156    solve 0.4676    add 0.0019    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0156    solve 0.4676    add 0.0019    
Current (lb-rhs): -0.44573652744293213
17 domains visited
Cumulative time: 0.5324141979217529

BaB round 2
batch: 17
splitting decisions: 
split level 0: [/input.7, 192] [/input.7, 192] [/input.7, 192] [/input.7, 588] [/input.7, 192] [/input.7, 192] [/input.7, 192] [/input.7, 192] [/input.7, 192] [/input.7, 192] 
split level 1: [/input.11, 59] [/input.7, 713] [/input.11, 59] [/input.7, 192] [/input.7, 717] [/input.7, 713] [/input.7, 713] [/input.11, 59] [/input.7, 717] [/input.7, 592] 
split level 2: [/input.7, 713] [/input.11, 59] [/input.7, 262] [/input.11, 59] [/input.7, 642] [/input.7, 717] [/input.7, 717] [/input.7, 717] [/input.7, 262] [/input.11, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 136 = 0.8161764705882353
pruning-in-iteration extra time: 0.013456344604492188
Time: prepare 0.0203    bound 0.4706    transfer 0.0012    finalize 0.0104    func 0.5025    
Accumulated time: func 0.9700    prepare 0.0288    bound 0.9219    transfer 0.0023    finalize 0.0178    
Current worst splitting domains lb-rhs (depth):
-0.22656 (10), -0.20634 (10), -0.20013 (10), -0.19432 (10), -0.18730 (10), -0.17623 (10), -0.17199 (10), -0.14282 (10), -0.14258 (10), -0.13288 (10), -0.11428 (10), -0.09528 (10), -0.09507 (10), -0.08309 (10), -0.08245 (10), -0.07549 (10), -0.06861 (10), -0.05937 (10), -0.05373 (10), -0.02735 (10), 
Length of domains: 25
Time: pickout 0.0011    decision 0.0300    set_bounds 0.0107    solve 0.5026    add 0.0020    
Accumulated time: pickout 0.0018    decision 0.0694    set_bounds 0.0263    solve 0.9702    add 0.0038    
Current (lb-rhs): -0.2265552282333374
42 domains visited
Cumulative time: 1.0803210735321045

BaB round 3
batch: 25
splitting decisions: 
split level 0: [/input.7, 713] [/input.3, 2306] [/input.7, 588] [/input.11, 59] [/input.7, 703] [/input.7, 713] [/input.3, 2306] [/input.7, 703] [/input.7, 703] [/input.3, 2306] 
split level 1: [/input.11, 59] [/input.7, 713] [/input.7, 713] [/input.7, 703] [/input.11, 59] [/input.7, 712] [/input.7, 713] [/input.7, 588] [/input.7, 713] [/input.7, 713] 
split level 2: [/input.7, 712] [/input.7, 717] [/input.7, 717] [/input.7, 262] [/input.7, 262] [/input.7, 262] [/input.7, 712] [/input.11, 59] [/input.7, 262] [/input.7, 712] 
pruning_in_iteration open status: True
ratio of positive domain = 194 / 200 = 0.97
pruning-in-iteration extra time: 0.01160430908203125
Time: prepare 0.0317    bound 0.4169    transfer 0.0016    finalize 0.0155    func 0.4665    
Accumulated time: func 1.4365    prepare 0.0608    bound 1.3388    transfer 0.0040    finalize 0.0334    
Current worst splitting domains lb-rhs (depth):
-0.08539 (13), -0.07028 (13), -0.06955 (13), -0.05477 (13), -0.02199 (13), -0.00970 (13), 
Length of domains: 6
Time: pickout 0.0014    decision 0.0366    set_bounds 0.0164    solve 0.4666    add 0.0014    
Accumulated time: pickout 0.0032    decision 0.1059    set_bounds 0.0427    solve 1.4368    add 0.0053    
Current (lb-rhs): -0.08539468050003052
48 domains visited
Cumulative time: 1.6048932075500488

BaB round 4
batch: 6
splitting decisions: 
split level 0: [/input.7, 588] [/input.3, 2306] [/input.3, 2306] [/input.7, 588] [/input.3, 2228] [/input.7, 588] 
split level 1: [/input.3, 2230] [/input.3, 2230] [/input.7, 263] [/input.3, 2230] [/input.3, 2230] [/input.7, 597] 
split level 2: [/input.7, 712] [/input.7, 263] [/input.3, 2230] [/input.7, 263] [/input.11, 9] [/input.3, 2230] 
split level 3: [/input.11, 9] [/input.7, 262] [/input.11, 9] [/input.7, 712] [/input.7, 262] [/input.7, 263] 
split level 4: [/input.7, 263] [/input.7, 712] [/input.7, 262] [/input.7, 262] [/input.7, 717] [/input.7, 262] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0376    bound 0.0075    transfer 0.0008    finalize 0.0138    func 0.0599    
Accumulated time: func 1.4964    prepare 0.0989    bound 1.3463    transfer 0.0048    finalize 0.0472    
Length of domains: 0
Time: pickout 0.0016    decision 0.0336    set_bounds 0.0243    solve 0.0600    add 0.0001    
Accumulated time: pickout 0.0047    decision 0.1396    set_bounds 0.0670    solve 1.4968    add 0.0054    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
48 domains visited
Cumulative time: 1.7256793975830078


Properties batch 8, size 1
Remaining timeout: 291.93345737457275
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.72797275]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.04454231,  5.08431625, -0.64956641, -0.68721992, -0.45559445,
        -0.86510915, -0.53854406,  0.02385471,  1.19584012, -1.16939056],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.72797275]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 318
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1069
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 48] 
split level 5: [/input.11, 90] 
split level 6: [/input.7, 717] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0146    bound 0.0075    transfer 0.0006    finalize 0.0073    func 0.0302    
Accumulated time: func 0.0302    prepare 0.0152    bound 0.0075    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0167    solve 0.0303    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0167    solve 0.0303    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09456014633178711

Result: safe in 8.3071 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.51781881,  1.28223801,  4.37435865,  2.20392227, -3.81582117,
         -4.17280531, -7.47607040, 10.47912979, -0.56575000, -0.98853463]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.84998810,  1.22005975,  5.68771315,  2.46760392, -3.48399472,
          -5.17242575, -5.77875280,  8.15335178,  0.05113240, -1.44840169],
         [-1.84998810,  1.22005975,  5.68771315,  2.46760392, -3.48399472,
          -5.17242575, -5.77875280,  8.15335178,  0.05113240, -1.44840169]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.00333977,  6.93329191,  2.46563864,  5.68574810, 11.63734627,
          13.32577705, 13.93210411,  8.10221958,  9.60175323]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5631 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.51781845,  1.28223813,  4.37435865,  2.20392251, -3.81582141,
         -4.17280531, -7.47607040, 10.47912979, -0.56575048, -0.98853505]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [736]; unstable size 736; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 170, 1, 736] with unstable size 169 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 736] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 736] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [169]; unstable size 169; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 169] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.88534832,  1.74766850, -2.23845887,  0.59507728,  6.20629025,
          5.38393021,  7.51742792,  1.95108223,  2.17368674]], device='cuda:0') None
best_l after optimization: 36.5753288269043
alpha/beta optimization time: 4.3931121826171875
initial alpha-crown bounds: tensor([[ 4.80088377,  2.64942384, -0.59225690,  1.34606874,  6.72102308,
          6.35363388,  8.74806976,  3.64192891,  2.90655160]], device='cuda:0')
Worst class: (+ rhs) -0.5922569036483765
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.97692227363586
##### Instance 40 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.800883769989014.

Properties batch 1, size 1
Remaining timeout: 294.8650336265564
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.649423837661743.

Properties batch 2, size 1
Remaining timeout: 294.76117873191833
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.59225690]], device='cuda:0') need to verify.
torch allclose failed: norm 9.62942522164667e-07
Model prediction is: tensor([-1.51781845,  1.28223813,  4.37435865,  2.20392251, -3.81582141,
        -4.17280531, -7.47607040, 10.47912979, -0.56575048, -0.98853505],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.59225690]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 736
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 166
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 933
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 41] 
split level 1: [/input.11, 90] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 25] 
split level 4: [/input.7, 597] 
split level 5: [/input.11, 96] 
split level 6: [/input.11, 33] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0145    bound 0.0075    transfer 0.0006    finalize 0.0074    func 0.0303    
Accumulated time: func 0.0303    prepare 0.0151    bound 0.0075    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0173    solve 0.0304    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0173    solve 0.0304    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09447169303894043


Properties batch 3, size 1
Remaining timeout: 294.523535490036
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3460687398910522.

Properties batch 4, size 1
Remaining timeout: 294.41483330726624
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.721023082733154.

Properties batch 5, size 1
Remaining timeout: 294.311238527298
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.353633880615234.

Properties batch 6, size 1
Remaining timeout: 294.2079107761383
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.748069763183594.

Properties batch 7, size 1
Remaining timeout: 294.10490012168884
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6419289112091064.

Properties batch 8, size 1
Remaining timeout: 294.00200629234314
##### Instance 40 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9065515995025635.
Result: safe in 6.1008 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.50427914,  2.34914589, -5.42878389, -0.72488856, 10.87075901,
         -6.96301985, -3.11218190,  3.38019323,  1.27401996,  2.66321778]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.20919275,  2.60232496, -5.34508562,  0.21973941,  8.14280987,
          -6.98449945, -3.55886245,  5.32008362,  1.22793210,  2.37925363],
         [-4.20919275,  2.60232496, -5.34508562,  0.21973941,  8.14280987,
          -6.98449945, -3.55886245,  5.32008362,  1.22793210,  2.37925363]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.35200310,  5.54048491, 13.48789597,  7.92307043, 15.12730980,
          11.70167255,  2.82272625,  6.91487789,  5.76355648]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5641 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.50427866,  2.34914613, -5.42878485, -0.72488809, 10.87075901,
         -6.96302080, -3.11218238,  3.38019323,  1.27402055,  2.66321826]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [689]; unstable size 689; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 119, 1, 689] with unstable size 118 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 689] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [118]; unstable size 118; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 118] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 118] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.15567493,  0.54714727,  6.23490047,  0.79299092,  6.28078222,
          5.21879101, -0.94972229, -1.27933264, -1.16332221]], device='cuda:0') None
best_l after optimization: 27.70205307006836
alpha/beta optimization time: 3.698331594467163
initial alpha-crown bounds: tensor([[ 7.56832790,  1.06067085,  6.79762363,  1.56808972,  6.84864521,
          5.61913490, -0.47744250, -0.63403046, -0.64896774]], device='cuda:0')
Worst class: (+ rhs) -0.6489677429199219
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.6698453426361
##### Instance 41 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.568327903747559.

Properties batch 1, size 1
Remaining timeout: 295.5559868812561
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0606708526611328.

Properties batch 2, size 1
Remaining timeout: 295.45229983329773
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.797623634338379.

Properties batch 3, size 1
Remaining timeout: 295.3489279747009
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5680897235870361.

Properties batch 4, size 1
Remaining timeout: 295.2459602355957
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.848645210266113.

Properties batch 5, size 1
Remaining timeout: 295.142765045166
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.619134902954102.

Properties batch 6, size 1
Remaining timeout: 295.0398871898651
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47744250]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.50427866,  2.34914613, -5.42878485, -0.72488809, 10.87075901,
        -6.96302080, -3.11218238,  3.38019323,  1.27402055,  2.66321826],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47744250]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 689
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 117
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 832
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 86] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 25] 
split level 3: [/input.11, 58] 
split level 4: [/input.11, 12] 
split level 5: [/input.7, 258] 
split level 6: [/input.7, 636] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0146    bound 0.0075    transfer 0.0010    finalize 0.0082    func 0.0316    
Accumulated time: func 0.0316    prepare 0.0152    bound 0.0075    transfer 0.0010    finalize 0.0082    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0171    solve 0.0316    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0171    solve 0.0316    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0957021713256836


Properties batch 7, size 1
Remaining timeout: 294.8038194179535
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63403046]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.50427866,  2.34914613, -5.42878485, -0.72488809, 10.87075901,
        -6.96302080, -3.11218238,  3.38019323,  1.27402055,  2.66321826],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63403046]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 689
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 117
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 832
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 58] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 17] 
split level 5: [/input.11, 65] 
split level 6: [/input.11, 25] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0075    bound 0.0074    transfer 0.0010    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0081    bound 0.0074    transfer 0.0010    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08462214469909668


Properties batch 8, size 1
Remaining timeout: 294.57427525520325
##### Instance 41 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64896774]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.50427866,  2.34914613, -5.42878485, -0.72488809, 10.87075901,
        -6.96302080, -3.11218238,  3.38019323,  1.27402055,  2.66321826],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64896774]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 689
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 117
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 832
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 12] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 25] 
split level 4: [/input.11, 0] 
split level 5: [/input.11, 70] 
split level 6: [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0076    bound 0.0075    transfer 0.0007    finalize 0.0065    func 0.0224    
Accumulated time: func 0.0224    prepare 0.0082    bound 0.0075    transfer 0.0007    finalize 0.0065    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0157    solve 0.0225    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0157    solve 0.0225    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08492875099182129

Result: safe in 5.6553 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.06968212,  1.55979502,  8.68427753,  1.83822691,  2.51933646,
         -1.23180139, -0.63508040, -0.14444122, -0.56230050, -8.98727989]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.17353058,  3.77660847,  6.34019089,  0.95856339,  2.19657063,
          -1.61539710, -0.86661065, -0.13351229, -1.13461792, -7.35747528],
         [-2.17353058,  3.77660847,  6.34019089,  0.95856339,  2.19657063,
          -1.61539710, -0.86661065, -0.13351229, -1.13461792, -7.35747528]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.51372147,  2.56358242,  5.38162756,  4.14362049,  7.95558786,
           7.20680141,  6.47370338,  7.47480869, 13.69766617]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5675 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.06968260,  1.55979443,  8.68427753,  1.83822691,  2.51933670,
         -1.23180151, -0.63508034, -0.14444134, -0.56229997, -8.98728180]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [757]; unstable size 757; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 174, 1, 757] with unstable size 173 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 757] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 757] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [173]; unstable size 173; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 173] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.35915422, -1.22008967, -1.00936127, -0.68893743,  1.66350126,
          2.07907844,  2.91878581,  2.62098289,  8.07278061]], device='cuda:0') None

all verified at 9th iter
best_l after optimization: 27.082786560058594
alpha/beta optimization time: 0.3936786651611328
initial alpha-crown bounds: tensor([[5.23540878, 0.08149719, 0.29272175, 0.87421381, 2.31613708, 2.77752399,
         3.77188659, 3.00663137, 8.72676563]], device='cuda:0')
Worst class: (+ rhs) 0.0814971923828125
verified with init bound!
Result: safe-incomplete in 1.0281 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.09440184, -0.35028821,  0.89401877,  9.43594551, -4.08964491,
          4.52933216, -1.49298286, -2.21611285,  1.55284202, -3.22942472]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.70it/s]100%|██████████| 1/1 [00:00<00:00,  1.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.18645525, -0.62556642, -0.55767131,  7.84004641, -3.36882353,
           6.60960531,  0.12293883, -3.69998741,  1.78570938, -3.02279258],
         [-5.18645525, -0.62556642, -0.55767131,  7.84004641, -3.36882353,
           6.60960531,  0.12293883, -3.69998741,  1.78570938, -3.02279258]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.02650166,  8.46561241,  8.39771748, 11.20886993,  1.23044109,
           7.71710777, 11.54003334,  6.05433702, 10.86283875]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5947 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.09440231, -0.35028785,  0.89401972,  9.43594551, -4.08964396,
          4.52933121, -1.49298239, -2.21611309,  1.55284166, -3.22942543]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [679]; unstable size 679; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 161, 1, 679] with unstable size 160 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 679] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [160]; unstable size 160; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 160] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 160] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.26382351,  0.33494759,  0.79335308,  2.61952448, -2.81907988,
          1.71611810,  3.50606394, -0.87605119,  2.70457244]], device='cuda:0') None
best_l after optimization: 22.783021926879883
alpha/beta optimization time: 4.2967369556427
initial alpha-crown bounds: tensor([[ 7.01628971,  1.12592316,  1.82762837,  3.51851535, -1.83536518,
          2.44661975,  4.49642038,  0.28293717,  3.90405321]], device='cuda:0')
Worst class: (+ rhs) -1.8353651762008667
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.04479146003723
##### Instance 43 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.016289710998535.

Properties batch 1, size 1
Remaining timeout: 294.93110036849976
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1259231567382812.

Properties batch 2, size 1
Remaining timeout: 294.82713437080383
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8276283740997314.

Properties batch 3, size 1
Remaining timeout: 294.72427892684937
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5185153484344482.

Properties batch 4, size 1
Remaining timeout: 294.62154722213745
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.83536518]], device='cuda:0') need to verify.
torch allclose failed: norm 8.128989748001914e-07
Model prediction is: tensor([-5.09440231, -0.35028785,  0.89401972,  9.43594551, -4.08964396,
         4.52933121, -1.49298239, -2.21611309,  1.55284166, -3.22942543],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.83536518]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 679
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 11] 
split level 1: [/input.11, 81] 
split level 2: [/input.11, 52] 
split level 3: [/input.11, 65] 
split level 4: [/input.11, 8] 
split level 5: [/input.7, 132] 
split level 6: [/input.7, 313] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.012281179428100586
Time: prepare 0.0145    bound 0.4332    transfer 0.0011    finalize 0.0090    func 0.4578    
Accumulated time: func 0.4578    prepare 0.0151    bound 0.4332    transfer 0.0011    finalize 0.0090    
Current worst splitting domains lb-rhs (depth):
-0.27595 (7), -0.25255 (7), -0.22924 (7), -0.20939 (7), -0.20125 (7), -0.19962 (7), -0.17492 (7), -0.15444 (7), -0.15244 (7), -0.14610 (7), -0.13983 (7), -0.12904 (7), -0.12057 (7), -0.09907 (7), -0.09389 (7), -0.05157 (7), 
Length of domains: 16
Time: pickout 0.0007    decision 0.0396    set_bounds 0.0168    solve 0.4579    add 0.0021    
Accumulated time: pickout 0.0007    decision 0.0396    set_bounds 0.0168    solve 0.4579    add 0.0021    
Current (lb-rhs): -0.27594947814941406
16 domains visited
Cumulative time: 0.5245542526245117

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.7, 193] 
split level 1: [/input.7, 193] [/input.7, 193] [/input.7, 708] [/input.7, 193] [/input.7, 193] [/input.7, 193] [/input.7, 193] [/input.7, 708] [/input.7, 406] [/input.11, 92] 
split level 2: [/input.7, 406] [/input.7, 406] [/input.7, 193] [/input.7, 708] [/input.7, 708] [/input.7, 406] [/input.7, 406] [/input.7, 193] [/input.7, 193] [/input.7, 406] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0169    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0328    
Accumulated time: func 0.4906    prepare 0.0324    bound 0.4408    transfer 0.0018    finalize 0.0163    
Length of domains: 0
Time: pickout 0.0014    decision 0.0308    set_bounds 0.0127    solve 0.0329    add 0.0001    
Accumulated time: pickout 0.0021    decision 0.0704    set_bounds 0.0295    solve 0.4908    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16 domains visited
Cumulative time: 0.6032345294952393


Properties batch 5, size 1
Remaining timeout: 293.87610268592834
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.446619749069214.

Properties batch 6, size 1
Remaining timeout: 293.74714159965515
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.496420383453369.

Properties batch 7, size 1
Remaining timeout: 293.64251708984375
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2829371690750122.

Properties batch 8, size 1
Remaining timeout: 293.53936672210693
##### Instance 43 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.904053211212158.
Result: safe in 6.5636 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.67849731, -4.89584351, -2.60102940,  2.50932503, -4.34845829,
         10.13931370,  1.26049483, -5.23276854,  4.04386854,  0.65951109]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.24719310, -3.72550368, -1.04786158,  1.06519461, -3.35387564,
           6.13130760,  1.97733235, -5.19353676,  6.13189268, -0.85855663],
         [-1.24719310, -3.72550368, -1.04786158,  1.06519461, -3.35387564,
           6.13130760,  1.97733235, -5.19353676,  6.13189268, -0.85855663]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.37850094e+00,  9.85681152e+00,  7.17916918e+00,  5.06611300e+00,
           9.48518372e+00,  4.15397549e+00,  1.13248444e+01, -5.85079193e-04,
           6.98986435e+00]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0219 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0231 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.74753141,  8.95804596,  1.32382917,  0.68284261,  0.56081831,
         -1.19988370, -2.11041355, -2.06327724,  4.49359131, -2.95285439]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.92095470,  7.24484062,  1.21875429,  1.73836005, -0.60865176,
          -0.97941524, -2.41880441, -2.14493299,  5.66989708, -1.81719148],
         [-7.92095470,  7.24484062,  1.21875429,  1.73836005, -0.60865176,
          -0.97941524, -2.41880441, -2.14493299,  5.66989708, -1.81719148]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.16579533,  6.02608633,  5.50648069,  7.85349226,  8.22425556,
           9.66364479,  9.38977337,  1.57494354,  9.06203175]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5667 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-7.74753141,  8.95804691,  1.32382834,  0.68284333,  0.56081808,
         -1.19988370, -2.11041355, -2.06327677,  4.49359035, -2.95285487]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [655]; unstable size 655; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 198, 1, 655] with unstable size 197 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 27, 1, 655] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 655] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [197]; unstable size 197; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 27, 1, 197] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.20673943,  1.60932529,  0.83034575,  3.09683275,  4.28709316,
          6.00562477,  4.14765549, -0.97964716,  4.10653353]], device='cuda:0') None
best_l after optimization: 36.88349151611328
alpha/beta optimization time: 4.325334548950195
initial alpha-crown bounds: tensor([[11.39186192,  2.00891376,  1.18143523,  3.36856842,  4.59782982,
          6.20052528,  4.45115566, -0.72978836,  4.41299295]], device='cuda:0')
Worst class: (+ rhs) -0.7297883629798889
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0413157939911
##### Instance 45 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.391861915588379.

Properties batch 1, size 1
Remaining timeout: 294.9245433807373
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.00891375541687.

Properties batch 2, size 1
Remaining timeout: 294.821280002594
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.181435227394104.

Properties batch 3, size 1
Remaining timeout: 294.7185447216034
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3685684204101562.

Properties batch 4, size 1
Remaining timeout: 294.61585664749146
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.597829818725586.

Properties batch 5, size 1
Remaining timeout: 294.5128655433655
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.200525283813477.

Properties batch 6, size 1
Remaining timeout: 294.41032671928406
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.451155662536621.

Properties batch 7, size 1
Remaining timeout: 294.3077108860016
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.72978836]], device='cuda:0') need to verify.
torch allclose failed: norm 8.301966545332107e-07
Model prediction is: tensor([-7.74753141,  8.95804691,  1.32382834,  0.68284333,  0.56081808,
        -1.19988370, -2.11041355, -2.06327677,  4.49359035, -2.95285487],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.72978836]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 655
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 197
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 878
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 17] 
split level 2: [/input.11, 59] 
split level 3: [/input.11, 48] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 25] 
split level 6: [/input.7, 632] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0145    bound 0.0075    transfer 0.0007    finalize 0.0073    func 0.0303    
Accumulated time: func 0.0303    prepare 0.0151    bound 0.0075    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0170    solve 0.0304    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0398    set_bounds 0.0170    solve 0.0304    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09475207328796387


Properties batch 8, size 1
Remaining timeout: 294.0657594203949
##### Instance 45 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.41299295425415.
Result: safe in 6.0442 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.23628354,  1.14409852,  8.92071342,  0.35244542,  0.62620497,
         -2.65048695, -0.28258887, -0.18082771, -1.00589335, -5.74062252]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.94754159,  0.92422754,  6.10796833, -0.48590979,  3.27853179,
          -2.77847004, -0.88283598,  0.24471578, -1.80665565, -3.70414567],
         [-0.94754159,  0.92422754,  6.10796833, -0.48590979,  3.27853179,
          -2.77847004, -0.88283598,  0.24471578, -1.80665565, -3.70414567]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.05551004, 5.18374062, 6.59387827, 2.82943654, 8.88643837,
          6.99080420, 5.86325264, 7.91462421, 9.81211376]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5764 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
         -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [751]; unstable size 751; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 179, 1, 751] with unstable size 178 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 46, 1, 751] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 751] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [178]; unstable size 178; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 46, 1, 178] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.44416714, -2.86196470, -3.17944765, -3.63870001, -2.41727304,
         -2.07317591, -0.71595573, -2.12713623, -0.74236202]], device='cuda:0') None
best_l after optimization: -9.524124145507812
alpha/beta optimization time: 4.33137321472168
initial alpha-crown bounds: tensor([[ 1.29403448, -2.13468361, -2.29353881, -2.74832892, -1.53780031,
         -1.11394548, -0.02107286, -1.27411985,  0.30533123]], device='cuda:0')
Worst class: (+ rhs) -2.748328924179077
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.021901845932
##### Instance 46 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.294034481048584.

Properties batch 1, size 1
Remaining timeout: 294.90213680267334
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.13468361]], device='cuda:0') need to verify.
torch allclose failed: norm 9.524220558887464e-07
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.13468361]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 47] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 92] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 9] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0076    bound 0.0075    transfer 0.0006    finalize 0.0059    func 0.0218    
Accumulated time: func 0.0218    prepare 0.0082    bound 0.0075    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0219    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0219    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08430910110473633


Properties batch 2, size 1
Remaining timeout: 294.6743187904358
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.29353881]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.29353881]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 80] 
split level 5: [/input.11, 56] 
split level 6: [/input.11, 47] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0006    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0159    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0159    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08478665351867676


Properties batch 3, size 1
Remaining timeout: 294.4446151256561
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.74832892]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.74832892]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 7] 
split level 2: [/input.11, 8] 
split level 3: [/input.11, 60] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 19] 
split level 6: [/input.11, 9] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.013277053833007812
Time: prepare 0.0076    bound 0.4608    transfer 0.0013    finalize 0.0077    func 0.4775    
Accumulated time: func 0.4775    prepare 0.0082    bound 0.4608    transfer 0.0013    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.85852 (7), -0.83662 (7), -0.59858 (7), -0.42298 (7), -0.36512 (7), -0.08364 (7), 
Length of domains: 6
Time: pickout 0.0007    decision 0.0396    set_bounds 0.0157    solve 0.4776    add 0.0015    
Accumulated time: pickout 0.0007    decision 0.0396    set_bounds 0.0157    solve 0.4776    add 0.0015    
Current (lb-rhs): -0.8585186004638672
6 domains visited
Cumulative time: 0.542447566986084

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.11, 84] [/input.7, 122] [/input.7, 122] [/input.11, 84] [/input.7, 122] [/input.7, 641] 
split level 1: [/input.7, 122] [/input.11, 84] [/input.7, 642] [/input.7, 122] [/input.11, 84] [/input.7, 122] 
split level 2: [/input.7, 123] [/input.7, 123] [/input.11, 84] [/input.7, 123] [/input.7, 123] [/input.7, 642] 
split level 3: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 84] 
split level 4: [/input.11, 37] [/input.11, 37] [/input.7, 247] [/input.11, 37] [/input.7, 642] [/input.7, 123] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0265    bound 0.0077    transfer 0.0009    finalize 0.0117    func 0.0468    
Accumulated time: func 0.5243    prepare 0.0352    bound 0.4685    transfer 0.0022    finalize 0.0194    
Length of domains: 0
Time: pickout 0.0011    decision 0.0345    set_bounds 0.0213    solve 0.0470    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0741    set_bounds 0.0371    solve 0.5245    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.6477837562561035


Properties batch 4, size 1
Remaining timeout: 293.6521873474121
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.53780031]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.53780031]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 65] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.273124694824219e-05
Time: prepare 0.0076    bound 0.0075    transfer 0.0007    finalize 0.0058    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0082    bound 0.0075    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0157    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0157    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08410358428955078


Properties batch 5, size 1
Remaining timeout: 293.4225389957428
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.11394548]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.11394548]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 11] 
split level 3: [/input.11, 65] 
split level 4: [/input.11, 47] 
split level 5: [/input.7, 128] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0146    bound 0.0075    transfer 0.0006    finalize 0.0073    func 0.0302    
Accumulated time: func 0.0302    prepare 0.0152    bound 0.0075    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0168    solve 0.0303    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0168    solve 0.0303    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09443473815917969


Properties batch 6, size 1
Remaining timeout: 293.18333435058594
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02107286]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02107286]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 47] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 19] 
split level 4: [/input.11, 6] 
split level 5: [/input.11, 65] 
split level 6: [/input.11, 97] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0007    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0158    solve 0.0217    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0158    solve 0.0217    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0845484733581543


Properties batch 7, size 1
Remaining timeout: 292.95384526252747
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.27411985]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.23628366,  1.14409876,  8.92071438,  0.35244477,  0.62620509,
        -2.65048695, -0.28258869, -0.18082735, -1.00589347, -5.74062300],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.27411985]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 751
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 177
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 973
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.11, 65] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 9] 
split level 5: [/input.11, 11] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0006    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0394    set_bounds 0.0158    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0842292308807373


Properties batch 8, size 1
Remaining timeout: 292.72487902641296
##### Instance 46 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3053312301635742.
Result: safe in 7.3831 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.36215925, -2.52594471, -6.32798910, -1.01716733, 14.01765156,
         -3.22702980, -6.39827204,  1.95988429,  4.50231647,  4.21173000]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.72232676, -3.45403266, -5.55001354,  0.99929190,  9.69934654,
          -2.32831931, -7.26023912,  0.19857049,  8.84473419,  4.45539951],
         [-5.72232676, -3.45403266, -5.55001354,  0.99929190,  9.69934654,
          -2.32831931, -7.26023912,  0.19857049,  8.84473419,  4.45539951]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.42167282, 13.15337944, 15.24936008,  8.70005417, 12.02766609,
          16.95958519,  9.50077629,  0.85461235,  5.24394703]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5746 seconds.
PGD attack failed
torch allclose failed: norm 1.3354633665585425e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.36215973, -2.52594519, -6.32798958, -1.01716757, 14.01765251,
         -3.22702980, -6.39827251,  1.95988357,  4.50231838,  4.21172905]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [571]; unstable size 571; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 135, 1, 571] with unstable size 134 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 571] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [134]; unstable size 134; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 134] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 134] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.12221050,  6.96864796,  8.79346275,  0.85807687,  2.66391444,
         10.11544895, -0.13176870, -4.95437431, -3.44729137]], device='cuda:0') None
best_l after optimization: 37.23431396484375
alpha/beta optimization time: 4.338926553726196
initial alpha-crown bounds: tensor([[ 9.76407242,  7.56885433,  9.12889385,  1.91415691,  3.43566251,
         10.61025333,  1.00994921, -3.95825768, -2.23926997]], device='cuda:0')
Worst class: (+ rhs) -3.9582576751708984
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0169746875763
##### Instance 47 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.76407241821289.

Properties batch 1, size 1
Remaining timeout: 294.90405535697937
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.568854331970215.

Properties batch 2, size 1
Remaining timeout: 294.8005723953247
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.128893852233887.

Properties batch 3, size 1
Remaining timeout: 294.69719910621643
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9141569137573242.

Properties batch 4, size 1
Remaining timeout: 294.59410309791565
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4356625080108643.

Properties batch 5, size 1
Remaining timeout: 294.49122190475464
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.61025333404541.

Properties batch 6, size 1
Remaining timeout: 294.3882555961609
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0099492073059082.

Properties batch 7, size 1
Remaining timeout: 294.2850751876831
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.95825768]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.36215973, -2.52594519, -6.32798958, -1.01716757, 14.01765251,
        -3.22702980, -6.39827251,  1.95988357,  4.50231838,  4.21172905],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.95825768]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 571
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 132
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 729
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.7, 193] 
split level 1: [/input.11, 58] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 17] 
split level 4: [/input.11, 11] 
split level 5: [/input.11, 99] 
split level 6: [/input.11, 51] 
pruning_in_iteration open status: True
ratio of positive domain = 98 / 128 = 0.765625
pruning-in-iteration extra time: 0.011971235275268555
Time: prepare 0.0146    bound 0.4489    transfer 0.0012    finalize 0.0091    func 0.4739    
Accumulated time: func 0.4739    prepare 0.0152    bound 0.4489    transfer 0.0012    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-1.63737 (7), -1.58925 (7), -1.44503 (7), -1.27837 (7), -1.22923 (7), -1.13327 (7), -0.89721 (7), -0.89020 (7), -0.85071 (7), -0.61726 (7), -0.58216 (7), -0.49514 (7), -0.47682 (7), -0.44300 (7), -0.33405 (7), -0.31331 (7), -0.30728 (7), -0.30188 (7), -0.29295 (7), -0.29070 (7), 
Length of domains: 30
Time: pickout 0.0007    decision 0.0395    set_bounds 0.0170    solve 0.4739    add 0.0020    
Accumulated time: pickout 0.0007    decision 0.0395    set_bounds 0.0170    solve 0.4739    add 0.0020    
Current (lb-rhs): -1.6373716592788696
30 domains visited
Cumulative time: 0.5404298305511475

BaB round 2
batch: 30
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 56] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 120 = 0.8833333333333333
pruning-in-iteration extra time: 0.011958599090576172
Time: prepare 0.0160    bound 0.4338    transfer 0.0012    finalize 0.0086    func 0.4596    
Accumulated time: func 0.9334    prepare 0.0315    bound 0.8827    transfer 0.0023    finalize 0.0177    
Current worst splitting domains lb-rhs (depth):
-1.26194 (9), -1.23223 (9), -1.06467 (9), -0.86484 (9), -0.85895 (9), -0.76002 (9), -0.53612 (9), -0.49978 (9), -0.48881 (9), -0.22984 (9), -0.21561 (9), -0.12532 (9), -0.05740 (9), -0.05377 (9), 
Length of domains: 14
Time: pickout 0.0013    decision 0.0309    set_bounds 0.0073    solve 0.4597    add 0.0016    
Accumulated time: pickout 0.0020    decision 0.0704    set_bounds 0.0243    solve 0.9336    add 0.0036    
Current (lb-rhs): -1.2619402408599854
44 domains visited
Cumulative time: 1.0425136089324951

BaB round 3
batch: 14
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 56] [/input.11, 97] [/input.11, 56] [/input.11, 56] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 56] 
split level 1: [/input.11, 56] [/input.11, 56] [/input.7, 707] [/input.11, 56] [/input.7, 707] [/input.7, 707] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 707] 
split level 2: [/input.7, 317] [/input.7, 312] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 636] [/input.7, 707] [/input.7, 138] [/input.7, 707] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 112 = 0.8214285714285714
pruning-in-iteration extra time: 0.012956619262695312
Time: prepare 0.0156    bound 0.4394    transfer 0.0011    finalize 0.0089    func 0.4650    
Accumulated time: func 1.3984    prepare 0.0474    bound 1.3221    transfer 0.0034    finalize 0.0265    
Current worst splitting domains lb-rhs (depth):
-0.92046 (12), -0.80807 (12), -0.76751 (12), -0.62171 (12), -0.57301 (12), -0.56561 (12), -0.53378 (12), -0.46969 (12), -0.39923 (12), -0.36387 (12), -0.25432 (12), -0.21004 (12), -0.18295 (12), -0.16098 (12), -0.10549 (12), -0.07416 (12), -0.07066 (12), -0.05704 (12), -0.01074 (12), -0.00328 (12), 
Length of domains: 20
Time: pickout 0.0012    decision 0.0286    set_bounds 0.0111    solve 0.4652    add 0.0019    
Accumulated time: pickout 0.0032    decision 0.0990    set_bounds 0.0354    solve 1.3988    add 0.0054    
Current (lb-rhs): -0.9204553365707397
64 domains visited
Cumulative time: 1.5519044399261475

BaB round 4
batch: 20
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.3, 2242] [/input.3, 2242] [/input.11, 97] [/input.7, 639] [/input.11, 97] [/input.11, 97] 
split level 1: [/input.7, 639] [/input.7, 639] [/input.7, 639] [/input.7, 639] [/input.7, 639] [/input.7, 639] [/input.7, 639] [/input.7, 708] [/input.7, 639] [/input.7, 639] 
split level 2: [/input.7, 312] [/input.7, 138] [/input.7, 258] [/input.7, 312] [/input.7, 272] [/input.7, 708] [/input.7, 258] [/input.7, 707] [/input.7, 138] [/input.7, 312] 
pruning_in_iteration open status: True
ratio of positive domain = 138 / 160 = 0.8625
pruning-in-iteration extra time: 0.014715433120727539
Time: prepare 0.0232    bound 0.4621    transfer 0.0013    finalize 0.0121    func 0.4988    
Accumulated time: func 1.8973    prepare 0.0709    bound 1.7842    transfer 0.0047    finalize 0.0386    
Current worst splitting domains lb-rhs (depth):
-0.77652 (15), -0.65081 (15), -0.62567 (15), -0.55982 (15), -0.54607 (15), -0.53259 (15), -0.42035 (15), -0.38740 (15), -0.34280 (15), -0.32821 (15), -0.28251 (15), -0.23724 (15), -0.23703 (15), -0.22508 (15), -0.20234 (15), -0.17071 (15), -0.15406 (15), -0.13325 (15), -0.10821 (15), -0.08912 (15), 
Length of domains: 22
Time: pickout 0.0013    decision 0.0304    set_bounds 0.0146    solve 0.4989    add 0.0018    
Accumulated time: pickout 0.0045    decision 0.1295    set_bounds 0.0500    solve 1.8977    add 0.0073    
Current (lb-rhs): -0.7765235900878906
86 domains visited
Cumulative time: 2.100799560546875

BaB round 5
batch: 22
splitting decisions: 
split level 0: [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] 
split level 1: [/input.7, 707] [/input.7, 258] [/input.7, 138] [/input.7, 258] [/input.7, 258] [/input.7, 707] [/input.7, 138] [/input.7, 258] [/input.7, 707] [/input.7, 317] 
split level 2: [/input.7, 317] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 317] [/input.7, 636] [/input.7, 636] [/input.7, 317] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 147 / 176 = 0.8352272727272727
pruning-in-iteration extra time: 0.014394521713256836
Time: prepare 0.0278    bound 0.4704    transfer 0.0013    finalize 0.0132    func 0.5129    
Accumulated time: func 2.4101    prepare 0.0990    bound 2.2547    transfer 0.0061    finalize 0.0518    
Current worst splitting domains lb-rhs (depth):
-0.43414 (18), -0.40419 (18), -0.37880 (18), -0.37025 (18), -0.36030 (18), -0.34541 (18), -0.32868 (18), -0.32800 (18), -0.28314 (18), -0.26202 (18), -0.25714 (18), -0.25659 (18), -0.21531 (18), -0.21126 (18), -0.18140 (18), -0.16997 (18), -0.13555 (18), -0.13461 (18), -0.10979 (18), -0.09148 (18), 
Length of domains: 29
Time: pickout 0.0014    decision 0.0307    set_bounds 0.0166    solve 0.5130    add 0.0018    
Accumulated time: pickout 0.0060    decision 0.1601    set_bounds 0.0666    solve 2.4107    add 0.0091    
Current (lb-rhs): -0.4341442584991455
115 domains visited
Cumulative time: 2.6660068035125732

BaB round 6
batch: 29
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 258] [/input.11, 1] [/input.7, 258] [/input.7, 258] [/input.3, 2242] [/input.7, 312] [/input.7, 258] [/input.3, 2242] [/input.7, 317] 
split level 1: [/input.7, 317] [/input.7, 317] [/input.7, 258] [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.7, 317] [/input.3, 2255] [/input.7, 272] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 116 = 0.7586206896551724
pruning-in-iteration extra time: 0.013558626174926758
Time: prepare 0.0219    bound 0.4641    transfer 0.0011    finalize 0.0097    func 0.4970    
Accumulated time: func 2.9071    prepare 0.1212    bound 2.7187    transfer 0.0072    finalize 0.0615    
Current worst splitting domains lb-rhs (depth):
-0.30364 (20), -0.26447 (20), -0.26087 (20), -0.25999 (20), -0.25579 (20), -0.25266 (20), -0.24277 (20), -0.23361 (20), -0.18041 (20), -0.16118 (20), -0.15072 (20), -0.13747 (20), -0.11528 (20), -0.10943 (20), -0.10489 (20), -0.09042 (20), -0.07844 (20), -0.06953 (20), -0.05940 (20), -0.05634 (20), 
Length of domains: 28
Time: pickout 0.0014    decision 0.0336    set_bounds 0.0078    solve 0.4971    add 0.0019    
Accumulated time: pickout 0.0074    decision 0.1937    set_bounds 0.0744    solve 2.9077    add 0.0110    
Current (lb-rhs): -0.3036360740661621
143 domains visited
Cumulative time: 3.2090721130371094

BaB round 7
batch: 28
splitting decisions: 
split level 0: [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] [/input.7, 312] 
split level 1: [/input.7, 722] [/input.7, 722] [/input.7, 722] [/input.7, 317] [/input.7, 722] [/input.7, 722] [/input.7, 317] [/input.7, 722] [/input.7, 317] [/input.7, 722] 
pruning_in_iteration open status: True
ratio of positive domain = 99 / 112 = 0.8839285714285714
pruning-in-iteration extra time: 0.01314854621887207
Time: prepare 0.0225    bound 0.4395    transfer 0.0010    finalize 0.0103    func 0.4734    
Accumulated time: func 3.3804    prepare 0.1441    bound 3.1582    transfer 0.0082    finalize 0.0718    
Current worst splitting domains lb-rhs (depth):
-0.17648 (22), -0.14898 (22), -0.14817 (22), -0.13999 (22), -0.13297 (22), -0.12786 (22), -0.12340 (22), -0.10597 (22), -0.06309 (22), -0.03741 (22), -0.02806 (22), -0.01251 (22), -0.00196 (22), 
Length of domains: 13
Time: pickout 0.0010    decision 0.0252    set_bounds 0.0071    solve 0.4735    add 0.0017    
Accumulated time: pickout 0.0084    decision 0.2189    set_bounds 0.0815    solve 3.3813    add 0.0127    
Current (lb-rhs): -0.1764817237854004
156 domains visited
Cumulative time: 3.718960762023926

BaB round 8
batch: 13
splitting decisions: 
split level 0: [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] 
split level 1: [/input.7, 722] [/input.7, 272] [/input.3, 2272] [/input.7, 272] [/input.3, 2272] [/input.7, 272] [/input.7, 722] [/input.7, 272] [/input.7, 722] [/input.7, 272] 
split level 2: [/input.7, 272] [/input.3, 2255] [/input.7, 636] [/input.3, 2255] [/input.7, 636] [/input.3, 2255] [/input.7, 272] [/input.3, 2255] [/input.7, 272] [/input.3, 2255] 

all verified at 2th iter
pruning_in_iteration open status: True
ratio of positive domain = 104 / 104 = 1.0
pruning-in-iteration extra time: 0.0014243125915527344
Time: prepare 0.0197    bound 0.0851    transfer 0.0009    finalize 0.0090    func 0.1148    
Accumulated time: func 3.4952    prepare 0.1641    bound 3.2433    transfer 0.0090    finalize 0.0808    
Length of domains: 0
Time: pickout 0.0012    decision 0.0281    set_bounds 0.0117    solve 0.1149    add 0.0001    
Accumulated time: pickout 0.0096    decision 0.2470    set_bounds 0.0932    solve 3.4961    add 0.0128    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
156 domains visited
Cumulative time: 3.8761026859283447


Properties batch 8, size 1
Remaining timeout: 290.2688536643982
##### Instance 47 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.23926997]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.36215973, -2.52594519, -6.32798958, -1.01716757, 14.01765251,
        -3.22702980, -6.39827251,  1.95988357,  4.50231838,  4.21172905],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.23926997]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 571
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 132
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 729
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 51] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 99] 
split level 4: [/input.11, 95] 
split level 5: [/input.7, 707] 
split level 6: [/input.11, 11] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.367134094238281e-05
Time: prepare 0.0146    bound 0.0075    transfer 0.0006    finalize 0.0074    func 0.0304    
Accumulated time: func 0.0304    prepare 0.0152    bound 0.0075    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0170    solve 0.0305    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0170    solve 0.0305    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09456229209899902

Result: safe in 9.9730 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.67061615, -2.86705399, -1.82044530, -2.78320408, 12.07415009,
         -4.03471756, -0.48626181,  1.65581572, -2.55250406,  3.17024541]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.54221082, -3.65259933, -1.98903871, -1.74555874,  9.45448208,
          -3.73127270, -1.62856174,  2.36134100, -2.19108391,  5.41574955],
         [-2.54221082, -3.65259933, -1.98903871, -1.74555874,  9.45448208,
          -3.73127270, -1.62856174,  2.36134100, -2.19108391,  5.41574955]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.99669266, 13.10708141, 11.44352055, 11.20004082, 13.18575478,
          11.08304405,  7.09314108, 11.64556599,  4.03873253]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5738 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.67061639, -2.86705351, -1.82044518, -2.78320312, 12.07415009,
         -4.03471708, -0.48626167,  1.65581608, -2.55250287,  3.17024374]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [743]; unstable size 743; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 122, 1, 743] with unstable size 121 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 743] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [121]; unstable size 121; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 121] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 121] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.25442934,  7.39317560,  3.77333879,  4.94038534,  5.93945980,
          4.05607510,  0.53461170,  3.95925045, -0.80210233]], device='cuda:0') None
best_l after optimization: 41.03663635253906
alpha/beta optimization time: 4.342039346694946
initial alpha-crown bounds: tensor([[ 6.74545288,  7.78640985,  4.34904861,  5.59891701,  6.45800447,
          4.57062435,  1.10802484,  4.54620790, -0.12605500]], device='cuda:0')
Worst class: (+ rhs) -0.12605500221252441
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.01688957214355
##### Instance 48 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.745452880859375.

Properties batch 1, size 1
Remaining timeout: 294.9032084941864
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.786409854888916.

Properties batch 2, size 1
Remaining timeout: 294.7993309497833
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.349048614501953.

Properties batch 3, size 1
Remaining timeout: 294.6959910392761
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.598917007446289.

Properties batch 4, size 1
Remaining timeout: 294.59301114082336
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.458004474639893.

Properties batch 5, size 1
Remaining timeout: 294.4901325702667
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.570624351501465.

Properties batch 6, size 1
Remaining timeout: 294.3872756958008
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1080248355865479.

Properties batch 7, size 1
Remaining timeout: 294.2843978404999
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.546207904815674.

Properties batch 8, size 1
Remaining timeout: 294.1815173625946
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12605500]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.67061639, -2.86705351, -1.82044518, -2.78320312, 12.07415009,
        -4.03471708, -0.48626167,  1.65581608, -2.55250287,  3.17024374],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12605500]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 743
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 118
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 890
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 99] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 5] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0007    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0082    bound 0.0075    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0397    set_bounds 0.0158    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0397    set_bounds 0.0158    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08477973937988281

Result: safe in 6.0433 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.09985304, -4.32207203, -1.29180455, -0.46191633, -1.62319160,
          3.42278767, 10.78753471, -5.95717812,  1.11765277, -4.25070190]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.09356594, -3.54740977, -1.61557508,  0.49546117, -3.37432098,
           5.53495359,  8.60437298, -5.49177599,  0.81306589, -2.98859453],
         [ 1.09356594, -3.54740977, -1.61557508,  0.49546117, -3.37432098,
           5.53495359,  8.60437298, -5.49177599,  0.81306589, -2.98859453]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.51080704, 12.15178299, 10.21994781,  8.10891151, 11.97869396,
           3.06941938, 14.09614944,  7.79130697, 11.59296799]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5705 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.09985256, -4.32207203, -1.29180360, -0.46191692, -1.62319171,
          3.42278814, 10.78753471, -5.95717812,  1.11765337, -4.25070238]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [719]; unstable size 719; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 222, 1, 719] with unstable size 221 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 719] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 719] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [221]; unstable size 221; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 221] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.42832899,  3.98348904,  2.12636185,  0.90870309,  2.75461555,
         -2.52500844,  5.10645962,  1.02785707,  3.20563936]], device='cuda:0') None
best_l after optimization: 25.60995101928711
alpha/beta optimization time: 4.431319236755371
initial alpha-crown bounds: tensor([[ 1.43632591,  4.96902275,  3.00849366,  1.74670196,  3.55867600,
         -1.54234684,  6.30391359,  2.01654863,  4.11261463]], device='cuda:0')
Worst class: (+ rhs) -1.5423468351364136
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.9311923980713
##### Instance 49 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4363259077072144.

Properties batch 1, size 1
Remaining timeout: 294.8160970211029
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.969022750854492.

Properties batch 2, size 1
Remaining timeout: 294.71246576309204
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.008493661880493.

Properties batch 3, size 1
Remaining timeout: 294.60910725593567
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.746701955795288.

Properties batch 4, size 1
Remaining timeout: 294.50568175315857
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.55867600440979.

Properties batch 5, size 1
Remaining timeout: 294.4026246070862
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.54234684]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.09985256, -4.32207203, -1.29180360, -0.46191692, -1.62319171,
         3.42278814, 10.78753471, -5.95717812,  1.11765337, -4.25070238],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.54234684]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 217
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 970
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 81] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 52] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00014138221740722656
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0398    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08461165428161621


Properties batch 6, size 1
Remaining timeout: 294.1782124042511
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.303913593292236.

Properties batch 7, size 1
Remaining timeout: 294.0699450969696
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0165486335754395.

Properties batch 8, size 1
Remaining timeout: 293.96610927581787
##### Instance 49 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.112614631652832.
Result: safe in 6.1372 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.46244600, -4.08030605,  2.07545161, 14.65477562, -8.92735577,
          3.05798769, -5.66375923, -2.43173790,  3.49068022, -1.82722771]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.10711072, -5.49229670,  1.06971681, 11.57330322, -8.40805817,
           6.72233057, -4.58629322, -3.58271837,  2.97034979, -0.35408282],
         [-0.10711072, -5.49229670,  1.06971681, 11.57330322, -8.40805817,
           6.72233057, -4.58629322, -3.58271837,  2.97034979, -0.35408282]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.68041420, 17.06559944, 10.50358677, 19.98136139,  4.85097265,
          16.15959549, 15.15602112,  8.60295296, 11.92738628]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5647 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.46244624, -4.08030558,  2.07545114, 14.65477657, -8.92735577,
          3.05798793, -5.66375971, -2.43173695,  3.49067974, -1.82722771]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [603]; unstable size 603; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 95, 1, 603] with unstable size 94 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 603] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 603] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 94] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 94] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.19784069,  7.44722795,  0.62941527,  8.56716251, -0.40803832,
          7.81074429,  5.99117947,  0.65082240,  4.57466173]], device='cuda:0') None

all verified at 6th iter
best_l after optimization: 42.79587173461914
alpha/beta optimization time: 0.273237943649292
initial alpha-crown bounds: tensor([[4.55514193, 7.67069435, 1.03502667, 8.91521072, 0.01862758, 8.21810246,
         6.28895473, 1.08233380, 5.01178074]], device='cuda:0')
Worst class: (+ rhs) 0.018627583980560303
verified with init bound!
Result: safe-incomplete in 0.9028 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.34657148, -5.49839067, -4.17538977,  2.12342191, -2.56496072,
         11.46442318, -0.36016342, -1.93742204, -1.19581664,  2.31340122]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]100%|██████████| 1/1 [00:00<00:00,  1.76it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.73003381, -3.71920204, -2.33038020,  4.65723991, -2.08583879,
           8.64069271, -1.88951492, -1.53952348, -2.68495107,  1.49268985],
         [-0.73003381, -3.71920204, -2.33038020,  4.65723991, -2.08583879,
           8.64069271, -1.88951492, -1.53952348, -2.68495107,  1.49268985]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.37072659, 12.35989475, 10.97107315,  3.98345280, 10.72653198,
          10.53020763, 10.18021584, 11.32564354,  7.14800262]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5781 seconds.
PGD attack failed
torch allclose failed: norm 1.5591485862387344e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.34657159, -5.49839163, -4.17539072,  2.12342167, -2.56496119,
         11.46442318, -0.36016342, -1.93742251, -1.19581640,  2.31340194]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [736]; unstable size 736; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 116, 1, 736] with unstable size 115 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 736] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 736] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [115]; unstable size 115; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 115] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.43188071,  4.54925680,  1.74882936, -1.89068437,  1.42291498,
          2.12165999, -0.71756220,  0.96062517, -0.71084237]], device='cuda:0') None
best_l after optimization: 15.997652053833008
alpha/beta optimization time: 4.38307785987854
initial alpha-crown bounds: tensor([[ 1.21865106,  5.65145731,  2.68385458, -1.17324710,  2.44599032,
          2.90319610,  0.19478846,  1.71473026,  0.35823083]], device='cuda:0')
Worst class: (+ rhs) -1.1732470989227295
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.9661076068878
##### Instance 51 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2186510562896729.

Properties batch 1, size 1
Remaining timeout: 294.85059094429016
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.6514573097229.

Properties batch 2, size 1
Remaining timeout: 294.74614119529724
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.683854579925537.

Properties batch 3, size 1
Remaining timeout: 294.64251732826233
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.17324710]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.34657159, -5.49839163, -4.17539072,  2.12342167, -2.56496119,
        11.46442318, -0.36016342, -1.93742251, -1.19581640,  2.31340194],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.17324710]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 736
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 114
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 886
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 80] 
split level 1: [/input.7, 108] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 74] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 41] 
split level 6: [/input.11, 5] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.702278137207031e-05
Time: prepare 0.0145    bound 0.0076    transfer 0.0007    finalize 0.0076    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0076    transfer 0.0007    finalize 0.0076    
Length of domains: 0
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0176    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0398    set_bounds 0.0176    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09569787979125977


Properties batch 4, size 1
Remaining timeout: 294.4046275615692
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4459903240203857.

Properties batch 5, size 1
Remaining timeout: 294.29642629623413
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.903196096420288.

Properties batch 6, size 1
Remaining timeout: 294.1926941871643
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19478845596313477.

Properties batch 7, size 1
Remaining timeout: 294.0894064903259
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7147302627563477.

Properties batch 8, size 1
Remaining timeout: 293.9863498210907
##### Instance 51 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3582308292388916.
Result: safe in 6.1169 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.49061894, -3.29995799, -3.94966030,  2.38503122, -2.86528182,
          8.94428825, -0.47837973, -1.33409083,  0.62107581,  2.33573484]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.78it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.79457617, -2.27210045, -2.38391590,  4.90955591, -4.31575489,
           6.64612436, -1.86626029, -2.48059464,  1.67330182,  2.81202197],
         [-2.79457617, -2.27210045, -2.38391590,  4.90955591, -4.31575489,
           6.64612436, -1.86626029, -2.48059464,  1.67330182,  2.81202197]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.44070053,  8.91822433,  9.03004074,  1.73656845, 10.96187973,
           8.51238441,  9.12671852,  4.97282267,  3.83410239]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5715 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
          8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [784]; unstable size 784; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 157, 1, 784] with unstable size 156 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 48, 1, 784] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 784] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [156]; unstable size 156; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 48, 1, 156] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 156] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.36236811, -1.33445263, -3.51262093, -6.05109787, -2.45821905,
         -2.07483673, -3.54423475, -4.02699566, -4.27577686]], device='cuda:0') None
best_l after optimization: -17.368310928344727
alpha/beta optimization time: 4.374574899673462
initial alpha-crown bounds: tensor([[-1.21332741, -0.21229506, -2.00039530, -4.08981514, -1.06356192,
         -0.99241734, -2.02019596, -2.85151005, -2.92479205]], device='cuda:0')
Worst class: (+ rhs) -4.089815139770508
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.98677682876587
##### Instance 52 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.21332741]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.21332741]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 41] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 63] 
split level 6: [/input.11, 74] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0076    bound 0.0075    transfer 0.0010    finalize 0.0064    func 0.0226    
Accumulated time: func 0.0226    prepare 0.0082    bound 0.0075    transfer 0.0010    finalize 0.0064    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.0227    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.0227    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08542156219482422


Properties batch 1, size 1
Remaining timeout: 294.7493369579315
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21229506]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21229506]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 36] 
split level 1: [/input.11, 30] 
split level 2: [/input.11, 37] 
split level 3: [/input.11, 80] 
split level 4: [/input.11, 45] 
split level 5: [/input.11, 74] 
split level 6: [/input.11, 96] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0006    finalize 0.0064    func 0.0223    
Accumulated time: func 0.0223    prepare 0.0081    bound 0.0075    transfer 0.0006    finalize 0.0064    
Length of domains: 0
Time: pickout 0.0006    decision 0.0406    set_bounds 0.0159    solve 0.0224    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0406    set_bounds 0.0159    solve 0.0224    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08646607398986816


Properties batch 2, size 1
Remaining timeout: 294.5180721282959
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.00039530]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.00039530]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 41] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 74] 
split level 5: [/input.11, 80] 
split level 6: [/input.11, 51] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0006    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0157    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0157    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0845937728881836


Properties batch 3, size 1
Remaining timeout: 294.2884154319763
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.08981514]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.08981514]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 80] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 36] 
split level 5: [/input.11, 74] 
split level 6: [/input.11, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 128 = 0.6875
pruning-in-iteration extra time: 0.014281749725341797
Time: prepare 0.0075    bound 0.4878    transfer 0.0010    finalize 0.0065    func 0.5030    
Accumulated time: func 0.5030    prepare 0.0081    bound 0.4878    transfer 0.0010    finalize 0.0065    
Current worst splitting domains lb-rhs (depth):
-1.31967 (7), -1.30877 (7), -1.25972 (7), -1.17900 (7), -1.16191 (7), -1.15073 (7), -1.14503 (7), -1.14413 (7), -1.12995 (7), -1.12901 (7), -1.12402 (7), -1.11218 (7), -1.10049 (7), -1.10039 (7), -1.09513 (7), -1.09073 (7), -1.08935 (7), -1.05722 (7), -1.05488 (7), -1.05334 (7), 
Length of domains: 40
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.5030    add 0.0024    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.5030    add 0.0024    
Current (lb-rhs): -1.3196699619293213
40 domains visited
Cumulative time: 0.5683925151824951

BaB round 2
batch: 40
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.7, 107] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.7, 107] 
split level 1: [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 631] [/input.11, 56] [/input.7, 107] [/input.11, 56] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 91 / 160 = 0.56875
pruning-in-iteration extra time: 0.014096260070800781
Time: prepare 0.0198    bound 0.4692    transfer 0.0014    finalize 0.0127    func 0.5032    
Accumulated time: func 1.0062    prepare 0.0283    bound 0.9570    transfer 0.0024    finalize 0.0192    
Current worst splitting domains lb-rhs (depth):
-0.99415 (9), -0.98207 (9), -0.92820 (9), -0.88546 (9), -0.85950 (9), -0.85671 (9), -0.84179 (9), -0.80395 (9), -0.78118 (9), -0.77437 (9), -0.74662 (9), -0.74003 (9), -0.73258 (9), -0.71280 (9), -0.70568 (9), -0.69980 (9), -0.68103 (9), -0.65899 (9), -0.63263 (9), -0.62660 (9), 
Length of domains: 69
Time: pickout 0.0014    decision 0.0274    set_bounds 0.0102    solve 0.5033    add 0.0025    
Accumulated time: pickout 0.0020    decision 0.0669    set_bounds 0.0260    solve 1.0064    add 0.0049    
Current (lb-rhs): -0.9941487312316895
109 domains visited
Cumulative time: 1.1144890785217285

BaB round 3
batch: 69
splitting decisions: 
split level 0: [/input.11, 41] [/input.7, 631] [/input.11, 41] [/input.7, 631] [/input.11, 41] [/input.11, 5] [/input.11, 41] [/input.11, 5] [/input.11, 7] [/input.11, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 138 = 0.536231884057971
pruning-in-iteration extra time: 0.013869524002075195
Time: prepare 0.0192    bound 0.5252    transfer 0.0013    finalize 0.0108    func 0.5565    
Accumulated time: func 1.5627    prepare 0.0478    bound 1.4822    transfer 0.0037    finalize 0.0300    
Current worst splitting domains lb-rhs (depth):
-0.87299 (10), -0.83157 (10), -0.81919 (10), -0.70933 (10), -0.67565 (10), -0.62749 (10), -0.62701 (10), -0.60920 (10), -0.60232 (10), -0.59596 (10), -0.58671 (10), -0.57141 (10), -0.55886 (10), -0.53452 (10), -0.51634 (10), -0.50175 (10), -0.49906 (10), -0.47005 (10), -0.45285 (10), -0.45142 (10), 
Length of domains: 64
Time: pickout 0.0015    decision 0.0333    set_bounds 0.0060    solve 0.5566    add 0.0026    
Accumulated time: pickout 0.0035    decision 0.1002    set_bounds 0.0320    solve 1.5630    add 0.0075    
Current (lb-rhs): -0.8729918003082275
173 domains visited
Cumulative time: 1.7158644199371338

BaB round 4
batch: 64
splitting decisions: 
split level 0: [/input.7, 631] [/input.11, 7] [/input.7, 108] [/input.11, 56] [/input.7, 631] [/input.11, 7] [/input.7, 108] [/input.11, 56] [/input.11, 41] [/input.11, 7] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 128 = 0.5859375
pruning-in-iteration extra time: 0.013261556625366211
Time: prepare 0.0184    bound 0.4727    transfer 0.0011    finalize 0.0108    func 0.5031    
Accumulated time: func 2.0658    prepare 0.0665    bound 1.9549    transfer 0.0049    finalize 0.0408    
Current worst splitting domains lb-rhs (depth):
-0.78372 (11), -0.70573 (11), -0.65190 (11), -0.65066 (11), -0.60633 (11), -0.58710 (11), -0.55823 (11), -0.54714 (11), -0.49391 (11), -0.41430 (11), -0.41041 (11), -0.38931 (11), -0.37689 (11), -0.36959 (11), -0.34273 (11), -0.34042 (11), -0.33936 (11), -0.30996 (11), -0.30450 (11), -0.29644 (11), 
Length of domains: 53
Time: pickout 0.0015    decision 0.0328    set_bounds 0.0058    solve 0.5032    add 0.0023    
Accumulated time: pickout 0.0050    decision 0.1330    set_bounds 0.0378    solve 2.0662    add 0.0098    
Current (lb-rhs): -0.7837247848510742
226 domains visited
Cumulative time: 2.262556791305542

BaB round 5
batch: 53
splitting decisions: 
split level 0: [/input.7, 108] [/input.7, 108] [/input.7, 631] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 631] [/input.7, 108] [/input.7, 108] [/input.7, 108] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 106 = 0.5283018867924528
pruning-in-iteration extra time: 0.013262033462524414
Time: prepare 0.0151    bound 0.4742    transfer 0.0011    finalize 0.0080    func 0.4986    
Accumulated time: func 2.5643    prepare 0.0820    bound 2.4291    transfer 0.0059    finalize 0.0487    
Current worst splitting domains lb-rhs (depth):
-0.64099 (12), -0.59370 (12), -0.57562 (12), -0.47886 (12), -0.42268 (12), -0.37491 (12), -0.37169 (12), -0.35778 (12), -0.31659 (12), -0.30283 (12), -0.28736 (12), -0.28698 (12), -0.24494 (12), -0.23847 (12), -0.23640 (12), -0.22588 (12), -0.21786 (12), -0.20222 (12), -0.19560 (12), -0.17114 (12), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0368    set_bounds 0.0049    solve 0.4987    add 0.0023    
Accumulated time: pickout 0.0064    decision 0.1698    set_bounds 0.0427    solve 2.5648    add 0.0121    
Current (lb-rhs): -0.6409871578216553
276 domains visited
Cumulative time: 2.8076109886169434

BaB round 6
batch: 50
splitting decisions: 
split level 0: [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 631] [/input.7, 108] [/input.7, 107] [/input.7, 631] 
split level 1: [/input.11, 56] [/input.11, 56] [/input.7, 112] [/input.7, 112] [/input.11, 7] [/input.7, 112] [/input.11, 7] [/input.7, 112] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 200 = 0.96
pruning-in-iteration extra time: 0.014092206954956055
Time: prepare 0.0283    bound 0.4354    transfer 0.0014    finalize 0.0142    func 0.4794    
Accumulated time: func 3.0438    prepare 0.1107    bound 2.8645    transfer 0.0074    finalize 0.0629    
Current worst splitting domains lb-rhs (depth):
-0.26822 (14), -0.20236 (14), -0.19449 (14), -0.16806 (14), -0.11864 (14), -0.07879 (14), -0.07278 (14), -0.00301 (14), 
Length of domains: 8
Time: pickout 0.0013    decision 0.0290    set_bounds 0.0147    solve 0.4796    add 0.0014    
Accumulated time: pickout 0.0078    decision 0.1988    set_bounds 0.0574    solve 3.0444    add 0.0134    
Current (lb-rhs): -0.2682201862335205
284 domains visited
Cumulative time: 3.3357043266296387

BaB round 7
batch: 8
splitting decisions: 
split level 0: [/input.7, 138] [/input.7, 138] [/input.11, 32] [/input.7, 138] [/input.11, 32] [/input.7, 138] [/input.7, 138] [/input.7, 138] 
split level 1: [/input.11, 12] [/input.11, 7] [/input.7, 138] [/input.11, 32] [/input.7, 138] [/input.11, 32] [/input.7, 706] [/input.7, 706] 
split level 2: [/input.7, 706] [/input.11, 12] [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.11, 12] [/input.11, 7] [/input.11, 7] 
split level 3: [/input.7, 112] [/input.7, 706] [/input.7, 112] [/input.7, 112] [/input.7, 112] [/input.7, 112] [/input.11, 12] [/input.11, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0175    bound 0.0074    transfer 0.0006    finalize 0.0077    func 0.0334    
Accumulated time: func 3.0772    prepare 0.1286    bound 2.8719    transfer 0.0080    finalize 0.0706    
Length of domains: 0
Time: pickout 0.0014    decision 0.0272    set_bounds 0.0143    solve 0.0335    add 0.0001    
Accumulated time: pickout 0.0091    decision 0.2260    set_bounds 0.0717    solve 3.0779    add 0.0135    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
284 domains visited
Cumulative time: 3.4129934310913086


Properties batch 4, size 1
Remaining timeout: 290.73076128959656
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.06356192]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.06356192]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 60] 
split level 2: [/input.11, 27] 
split level 3: [/input.11, 19] 
split level 4: [/input.11, 37] 
split level 5: [/input.11, 30] 
split level 6: [/input.11, 96] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0075    bound 0.0075    transfer 0.0006    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0075    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08429408073425293


Properties batch 5, size 1
Remaining timeout: 290.4979519844055
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.99241734]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.99241734]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 74] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 80] 
split level 4: [/input.11, 96] 
split level 5: [/input.11, 11] 
split level 6: [/input.11, 37] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.821487426757812e-05
Time: prepare 0.0075    bound 0.0074    transfer 0.0006    finalize 0.0059    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0081    bound 0.0074    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0158    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08447051048278809


Properties batch 6, size 1
Remaining timeout: 290.26866269111633
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.02019596]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.02019596]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 74] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 63] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 80] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.320808410644531e-05
Time: prepare 0.0076    bound 0.0076    transfer 0.0007    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0076    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0397    set_bounds 0.0159    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0397    set_bounds 0.0159    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08528280258178711


Properties batch 7, size 1
Remaining timeout: 290.0370993614197
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.85151005]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.85151005]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 30] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.013318061828613281
Time: prepare 0.0076    bound 0.4204    transfer 0.0011    finalize 0.0080    func 0.4372    
Accumulated time: func 0.4372    prepare 0.0082    bound 0.4204    transfer 0.0011    finalize 0.0080    
Current worst splitting domains lb-rhs (depth):
-0.54104 (7), -0.25476 (7), -0.24699 (7), -0.21688 (7), -0.08534 (7), -0.05403 (7), -0.04304 (7), -0.02421 (7), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0396    set_bounds 0.0159    solve 0.4373    add 0.0015    
Accumulated time: pickout 0.0007    decision 0.0396    set_bounds 0.0159    solve 0.4373    add 0.0015    
Current (lb-rhs): -0.541043758392334
8 domains visited
Cumulative time: 0.5020217895507812

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] 
split level 1: [/input.11, 58] [/input.11, 58] [/input.11, 80] [/input.11, 58] [/input.11, 80] [/input.11, 58] [/input.11, 80] [/input.11, 7] 
split level 2: [/input.11, 80] [/input.11, 80] [/input.11, 58] [/input.11, 80] [/input.11, 58] [/input.11, 80] [/input.11, 7] [/input.11, 80] 
split level 3: [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.7, 112] [/input.7, 112] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0119    bound 0.0075    transfer 0.0007    finalize 0.0066    func 0.0267    
Accumulated time: func 0.4639    prepare 0.0204    bound 0.4279    transfer 0.0018    finalize 0.0147    
Length of domains: 0
Time: pickout 0.0013    decision 0.0288    set_bounds 0.0119    solve 0.0268    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0684    set_bounds 0.0278    solve 0.4640    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.571558952331543


Properties batch 8, size 1
Remaining timeout: 289.29838943481445
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.92479205]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.49061966, -3.29995799, -3.94966030,  2.38503194, -2.86528230,
         8.94428921, -0.47837970, -1.33409107,  0.62107611,  2.33573508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.92479205]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 784
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 979
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 12] 
split level 1: [/input.11, 51] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 60] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 128 = 0.90625
pruning-in-iteration extra time: 0.013394355773925781
Time: prepare 0.0075    bound 0.4194    transfer 0.0011    finalize 0.0074    func 0.4354    
Accumulated time: func 0.4354    prepare 0.0081    bound 0.4194    transfer 0.0011    finalize 0.0074    
Current worst splitting domains lb-rhs (depth):
-0.58236 (7), -0.50545 (7), -0.44920 (7), -0.43475 (7), -0.33502 (7), -0.22341 (7), -0.10611 (7), -0.08616 (7), -0.07673 (7), -0.07284 (7), -0.06497 (7), -0.00799 (7), 
Length of domains: 12
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.4355    add 0.0017    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0158    solve 0.4355    add 0.0017    
Current (lb-rhs): -0.5823562145233154
12 domains visited
Cumulative time: 0.5002748966217041

BaB round 2
batch: 12
splitting decisions: 
split level 0: [/input.11, 27] [/input.11, 8] [/input.11, 8] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 90] [/input.11, 90] [/input.11, 90] 
split level 1: [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 8] [/input.11, 8] [/input.11, 27] [/input.11, 8] [/input.11, 27] 
split level 2: [/input.11, 8] [/input.11, 27] [/input.11, 27] [/input.11, 8] [/input.11, 8] [/input.11, 90] [/input.11, 90] [/input.11, 8] [/input.11, 27] [/input.11, 8] 
split level 3: [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 74] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0143    bound 0.0079    transfer 0.0009    finalize 0.0087    func 0.0318    
Accumulated time: func 0.4672    prepare 0.0228    bound 0.4272    transfer 0.0019    finalize 0.0161    
Length of domains: 0
Time: pickout 0.0011    decision 0.0346    set_bounds 0.0170    solve 0.0319    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0742    set_bounds 0.0328    solve 0.4675    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.5860104560852051

Result: safe in 11.4332 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.54990691, -1.53654432, -3.80206442, -3.69472027, -1.10986543,
          3.34884238, 13.81716824, -5.89104366,  2.97808313, -5.14879990]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]100%|██████████| 1/1 [00:00<00:00,  1.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.87619728, -1.15389001, -2.69239426, -3.33446980, -1.30321395,
           1.98516321, 10.43393517, -5.74268532,  6.41522026, -4.11171341],
         [-0.87619728, -1.15389001, -2.69239426, -3.33446980, -1.30321395,
           1.98516321, 10.43393517, -5.74268532,  6.41522026, -4.11171341]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.31013203, 11.58782482, 13.12632942, 13.76840496, 11.73714924,
           8.44877243, 16.17662048,  4.01871490, 14.54564857]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5665 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.54990715, -1.53654480, -3.80206442, -3.69472027, -1.10986555,
          3.34884357, 13.81716919, -5.89104414,  2.97808337, -5.14879990]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [651]; unstable size 651; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 131, 1, 651] with unstable size 130 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 40, 1, 651] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 651] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [130]; unstable size 130; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 40, 1, 130] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 130] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.78866220,  2.86529016,  2.73595572,  3.41831303,  3.86732650,
         -1.69264174,  6.23571014, -2.49035311,  4.98514032]], device='cuda:0') None
best_l after optimization: 31.795412063598633
alpha/beta optimization time: 4.360057353973389
initial alpha-crown bounds: tensor([[ 3.72002554,  3.74608302,  3.81619716,  4.47689295,  4.49034595,
         -0.49822235,  7.36146307, -1.49673152,  6.17935801]], device='cuda:0')
Worst class: (+ rhs) -1.4967315196990967
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0016932487488
##### Instance 53 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7200255393981934.

Properties batch 1, size 1
Remaining timeout: 294.88604831695557
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7460830211639404.

Properties batch 2, size 1
Remaining timeout: 294.78230571746826
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.816197156906128.

Properties batch 3, size 1
Remaining timeout: 294.67900562286377
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.476892948150635.

Properties batch 4, size 1
Remaining timeout: 294.5760192871094
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.4903459548950195.

Properties batch 5, size 1
Remaining timeout: 294.4725751876831
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.49822235]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.54990715, -1.53654480, -3.80206442, -3.69472027, -1.10986555,
         3.34884357, 13.81716919, -5.89104414,  2.97808337, -5.14879990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.49822235]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 651
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 817
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 48] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 92] 
split level 4: [/input.11, 81] 
split level 5: [/input.11, 99] 
split level 6: [/input.11, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.0001373291015625
Time: prepare 0.0076    bound 0.0075    transfer 0.0007    finalize 0.0058    func 0.0218    
Accumulated time: func 0.0218    prepare 0.0082    bound 0.0075    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0157    solve 0.0219    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0157    solve 0.0219    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0845944881439209


Properties batch 6, size 1
Remaining timeout: 294.2476155757904
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.3614630699157715.

Properties batch 7, size 1
Remaining timeout: 294.139643907547
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.49673152]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.54990715, -1.53654480, -3.80206442, -3.69472027, -1.10986555,
         3.34884357, 13.81716919, -5.89104414,  2.97808337, -5.14879990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.49673152]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 651
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 128
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 817
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 32] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 30] 
split level 5: [/input.11, 58] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0076    bound 0.0074    transfer 0.0006    finalize 0.0058    func 0.0217    
Accumulated time: func 0.0217    prepare 0.0082    bound 0.0074    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0157    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0157    solve 0.0218    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08461737632751465


Properties batch 8, size 1
Remaining timeout: 293.9142949581146
##### Instance 53 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.179358005523682.
Result: safe in 6.1937 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.16713619, -3.01966143,  1.11797082, -4.47568321, -2.62343335,
          0.07480143,  1.62258792, -0.88020498,  1.28562057, -4.54575157]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.61251926, -3.32757807,  0.13447398, -5.23714972, -0.69702357,
          -0.18262692,  3.97106528, -1.69731450,  1.41379619, -4.34259796],
         [ 9.61251926, -3.32757807,  0.13447398, -5.23714972, -0.69702357,
          -0.18262692,  3.97106528, -1.69731450,  1.41379619, -4.34259796]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.94009781,  9.47804546, 14.84966850, 10.30954266,  9.79514599,
           5.64145374, 11.30983353,  8.19872284, 13.95511723]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5833 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.16713715, -3.01966214,  1.11797178, -4.47568417, -2.62343383,
          0.07480101,  1.62258744, -0.88020462,  1.28562081, -4.54575157]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [642]; unstable size 642; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 158, 1, 642] with unstable size 157 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 40, 1, 642] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [157]; unstable size 157; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 40, 1, 157] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 157] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.87275076,  1.13024950,  4.92774487,  2.03809881, -1.12584615,
          1.71358681,  1.65182781, -1.14151454,  2.63240910]], device='cuda:0') None
best_l after optimization: 26.725387573242188
alpha/beta optimization time: 4.246714115142822
initial alpha-crown bounds: tensor([[ 5.85150051,  2.18720889,  5.88864231,  3.59951854,  0.05153370,
          2.72181988,  2.77363467, -0.11224127,  3.76377106]], device='cuda:0')
Worst class: (+ rhs) -0.11224126815795898
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.1050193309784
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.851500511169434.

Properties batch 1, size 1
Remaining timeout: 294.98682284355164
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.187208890914917.

Properties batch 2, size 1
Remaining timeout: 294.88256883621216
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.888642311096191.

Properties batch 3, size 1
Remaining timeout: 294.7794017791748
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5995185375213623.

Properties batch 4, size 1
Remaining timeout: 294.67618441581726
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05153369903564453.

Properties batch 5, size 1
Remaining timeout: 294.5732934474945
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7218198776245117.

Properties batch 6, size 1
Remaining timeout: 294.4701232910156
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.773634672164917.

Properties batch 7, size 1
Remaining timeout: 294.36717343330383
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11224127]], device='cuda:0') need to verify.
Model prediction is: tensor([11.16713715, -3.01966214,  1.11797178, -4.47568417, -2.62343383,
         0.07480101,  1.62258744, -0.88020462,  1.28562081, -4.54575157],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11224127]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 642
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 156
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 836
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.11, 95] 
split level 2: [/input.11, 32] 
split level 3: [/input.11, 30] 
split level 4: [/input.11, 58] 
split level 5: [/input.11, 84] 
split level 6: [/input.11, 50] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0076    bound 0.0075    transfer 0.0006    finalize 0.0058    func 0.0218    
Accumulated time: func 0.0218    prepare 0.0082    bound 0.0075    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0398    set_bounds 0.0158    solve 0.0219    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0398    set_bounds 0.0158    solve 0.0219    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08489322662353516


Properties batch 8, size 1
Remaining timeout: 294.14137506484985
##### Instance 54 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7637710571289062.
Result: safe in 5.9748 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.55396795, -1.40001535, -4.01258516, -4.37413931, 15.52653790,
         -2.94625330, -1.69773483,  1.65780067, -0.64236510,  1.13308227]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.26004124, -1.82488680, -5.08957911, -3.47060037, 12.01380062,
          -2.07398748, -2.66908312,  4.24490261, -0.01874407,  1.86090934],
         [-3.26004124, -1.82488680, -5.08957911, -3.47060037, 12.01380062,
          -2.07398748, -2.66908312,  4.24490261, -0.01874407,  1.86090934]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.27384186, 13.83868790, 17.10338020, 15.48440075, 14.08778763,
          14.68288422,  7.76889801, 12.03254509, 10.15289116]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5645 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.55396771, -1.40001547, -4.01258516, -4.37413931, 15.52653885,
         -2.94625401, -1.69773543,  1.65780044, -0.64236510,  1.13308263]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [703]; unstable size 703; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 98, 1, 703] with unstable size 97 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 703] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [97]; unstable size 97; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 97] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.00527859,  7.66011477,  8.19627571,  6.80565596,  5.00196028,
          6.36744213,  1.92173100,  2.84896827,  3.19477367]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6235 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.72795784,  8.23671913, -0.72991294, -1.13958645, -0.10453155,
         -3.28500843, -2.53229284,  1.91215575,  0.44330439, -1.19574678]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.82it/s]100%|██████████| 1/1 [00:00<00:00,  1.82it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.94616485,  6.82046556, -0.47863758, -0.56774056, -0.73867428,
          -2.73716736, -3.01639962,  3.26220179,  0.17862627, -0.89391792],
         [-1.94616485,  6.82046556, -0.47863758, -0.56774056, -0.73867428,
          -2.73716736, -3.01639962,  3.26220179,  0.17862627, -0.89391792]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[8.76663017, 7.29910326, 7.38820601, 7.55913973, 9.55763245,
          9.83686543, 3.55826378, 6.64183950, 7.71438360]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5574 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.72795796,  8.23671913, -0.72991288, -1.13958657, -0.10453209,
         -3.28500819, -2.53229308,  1.91215587,  0.44330493, -1.19574702]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [713]; unstable size 713; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 271, 1, 713] with unstable size 270 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 27, 1, 713] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 713] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [270]; unstable size 270; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 27, 1, 270] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.46255398, 2.52942705, 2.03587508, 3.11207080, 4.33423901, 4.81503868,
         0.62369490, 1.36653173, 2.00785303]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6205 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.60929132, -8.17447376, -2.77477670,  0.82659400,  5.12195635,
         -1.96723211, -6.89024496,  5.17513657, -0.82529157, 12.97241879]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.22939539, -7.64442825, -1.12939072, -0.58233076,  7.69874907,
          -1.84678888, -6.21231985,  4.67638683, -0.91529644, 10.02853584],
         [-4.22939539, -7.64442825, -1.12939072, -0.58233076,  7.69874907,
          -1.84678888, -6.21231985,  4.67638683, -0.91529644, 10.02853584]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.25793076, 17.67296410, 11.15792656, 10.61086655,  2.32978678,
          11.87532425, 16.24085617,  5.35214901, 10.94383240]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5729 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.60929155, -8.17447376, -2.77477622,  0.82659388,  5.12195635,
         -1.96723247, -6.89024448,  5.17513561, -0.82529128, 12.97241783]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [666]; unstable size 666; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 121, 1, 666] with unstable size 120 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 666] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [120]; unstable size 120; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 120] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 120] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.00307417,  8.81351662,  2.21903419,  1.07670259, -3.00273609,
          2.95010686,  8.35322952, -4.51052380,  2.01532912]], device='cuda:0') None
best_l after optimization: 31.41407012939453
alpha/beta optimization time: 4.306069612503052
initial alpha-crown bounds: tensor([[ 6.63811207,  9.56302643,  3.01905799,  1.72614074, -1.76790428,
          3.60111356,  9.04238033, -3.44892192,  3.04106569]], device='cuda:0')
Worst class: (+ rhs) -3.4489219188690186
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0545563697815
##### Instance 57 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.6381120681762695.

Properties batch 1, size 1
Remaining timeout: 294.94172072410583
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.563026428222656.

Properties batch 2, size 1
Remaining timeout: 294.83827018737793
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0190579891204834.

Properties batch 3, size 1
Remaining timeout: 294.7352087497711
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7261407375335693.

Properties batch 4, size 1
Remaining timeout: 294.632199048996
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.76790428]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.60929155, -8.17447376, -2.77477622,  0.82659388,  5.12195635,
        -1.96723247, -6.89024448,  5.17513561, -0.82529128, 12.97241783],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.76790428]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 666
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 116
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 811
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 33] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 17] 
split level 5: [/input.11, 1] 
split level 6: [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.012910842895507812
Time: prepare 0.0076    bound 0.4107    transfer 0.0011    finalize 0.0074    func 0.4268    
Accumulated time: func 0.4268    prepare 0.0082    bound 0.4107    transfer 0.0011    finalize 0.0074    
Current worst splitting domains lb-rhs (depth):
-0.11258 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0158    solve 0.4269    add 0.0008    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0158    solve 0.4269    add 0.0008    
Current (lb-rhs): -0.11258339881896973
1 domains visited
Cumulative time: 0.49075794219970703

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.11, 50] 
split level 1: [/input.11, 58] 
split level 2: [/input.7, 408] 
split level 3: [/input.11, 14] 
split level 4: [/input.7, 407] 
split level 5: [/input.7, 307] 
split level 6: [/input.7, 182] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0167    bound 0.0073    transfer 0.0006    finalize 0.0075    func 0.0323    
Accumulated time: func 0.4591    prepare 0.0256    bound 0.4181    transfer 0.0018    finalize 0.0149    
Length of domains: 0
Time: pickout 0.0009    decision 0.0417    set_bounds 0.0184    solve 0.0324    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0813    set_bounds 0.0342    solve 0.4593    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.585040807723999


Properties batch 5, size 1
Remaining timeout: 293.90725684165955
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6011135578155518.

Properties batch 6, size 1
Remaining timeout: 293.79858231544495
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.042380332946777.

Properties batch 7, size 1
Remaining timeout: 293.69455075263977
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.44892192]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.60929155, -8.17447376, -2.77477622,  0.82659388,  5.12195635,
        -1.96723247, -6.89024448,  5.17513561, -0.82529128, 12.97241783],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.44892192]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 666
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 116
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 811
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 14] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.0129547119140625
Time: prepare 0.0075    bound 0.4214    transfer 0.0011    finalize 0.0077    func 0.4378    
Accumulated time: func 0.4378    prepare 0.0081    bound 0.4214    transfer 0.0011    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.03527 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0395    set_bounds 0.0157    solve 0.4379    add 0.0008    
Accumulated time: pickout 0.0006    decision 0.0395    set_bounds 0.0157    solve 0.4379    add 0.0008    
Current (lb-rhs): -0.035271644592285156
1 domains visited
Cumulative time: 0.5014641284942627

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 50] 
split level 2: [/input.11, 58] 
split level 3: [/input.11, 65] 
split level 4: [/input.7, 636] 
split level 5: [/input.7, 137] 
split level 6: [/input.7, 182] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0169    bound 0.0074    transfer 0.0006    finalize 0.0075    func 0.0324    
Accumulated time: func 0.4703    prepare 0.0256    bound 0.4288    transfer 0.0018    finalize 0.0152    
Length of domains: 0
Time: pickout 0.0009    decision 0.0420    set_bounds 0.0184    solve 0.0325    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0815    set_bounds 0.0341    solve 0.4704    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.5961508750915527


Properties batch 8, size 1
Remaining timeout: 292.95851731300354
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0410656929016113.
Result: safe in 7.1504 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.54622489, -3.21013689, -3.89524698, -0.58221376, -3.17845798,
          7.10512447, -1.86128974,  2.93527460,  1.53375971,  0.56889915]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]100%|██████████| 1/1 [00:00<00:00,  1.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.72153121, -2.36108136, -3.56865335, -0.56360203, -2.42872810,
           5.31818008, -2.68528628,  4.46109343,  0.57623130,  0.48648006],
         [ 0.72153121, -2.36108136, -3.56865335, -0.56360203, -2.42872810,
           5.31818008, -2.68528628,  4.46109343,  0.57623130,  0.48648006]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[4.59664869, 7.67926121, 8.88683319, 5.88178205, 7.74690819,
          8.00346661, 0.85708666, 4.74194860, 4.83169985]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5640 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.54622525, -3.21013665, -3.89524746, -0.58221412, -3.17845798,
          7.10512447, -1.86128986,  2.93527460,  1.53375971,  0.56889975]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [742]; unstable size 742; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 256, 1, 742] with unstable size 255 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 35, 1, 742] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 742] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [255]; unstable size 255; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 35, 1, 255] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.81532598,  0.90229273,  1.28190041,  0.07845592,  0.59447527,
          2.01013827, -3.90773082, -1.07710481, -0.32402706]], device='cuda:0') None
best_l after optimization: 9.073619842529297
alpha/beta optimization time: 4.399410009384155
initial alpha-crown bounds: tensor([[ 0.28616834,  2.03015518,  2.42842531,  1.37567139,  1.84913921,
          2.99725199, -2.64424467,  0.02204752,  0.72900486]], device='cuda:0')
Worst class: (+ rhs) -2.64424467086792
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.96904587745667
##### Instance 58 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28616833686828613.

Properties batch 1, size 1
Remaining timeout: 294.8555545806885
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0301551818847656.

Properties batch 2, size 1
Remaining timeout: 294.7517626285553
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4284253120422363.

Properties batch 3, size 1
Remaining timeout: 294.64832401275635
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.37567138671875.

Properties batch 4, size 1
Remaining timeout: 294.5447623729706
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8491392135620117.

Properties batch 5, size 1
Remaining timeout: 294.44141125679016
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9972519874572754.

Properties batch 6, size 1
Remaining timeout: 294.33820700645447
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.64424467]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.54622525, -3.21013665, -3.89524746, -0.58221412, -3.17845798,
         7.10512447, -1.86128986,  2.93527460,  1.53375971,  0.56889975],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.64424467]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 250
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1024
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 36] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 1] 
split level 4: [/input.7, 141] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 60] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 128 = 0.578125
pruning-in-iteration extra time: 0.013025522232055664
Time: prepare 0.0147    bound 0.4169    transfer 0.0011    finalize 0.0091    func 0.4419    
Accumulated time: func 0.4419    prepare 0.0153    bound 0.4169    transfer 0.0011    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-1.32647 (7), -1.32032 (7), -1.30600 (7), -1.30536 (7), -1.29904 (7), -1.29859 (7), -1.29214 (7), -1.29016 (7), -1.26896 (7), -1.25766 (7), -1.19158 (7), -1.18595 (7), -1.03287 (7), -1.02297 (7), -0.99070 (7), -0.97740 (7), -0.97297 (7), -0.97267 (7), -0.93119 (7), -0.92269 (7), 
Length of domains: 54
Time: pickout 0.0007    decision 0.0397    set_bounds 0.0170    solve 0.4420    add 0.0023    
Accumulated time: pickout 0.0007    decision 0.0397    set_bounds 0.0170    solve 0.4420    add 0.0023    
Current (lb-rhs): -1.326472282409668
54 domains visited
Cumulative time: 0.5087795257568359

BaB round 2
batch: 54
splitting decisions: 
split level 0: [/input.11, 14] [/input.7, 308] [/input.11, 14] [/input.7, 636] [/input.11, 14] [/input.7, 308] [/input.11, 14] [/input.11, 14] [/input.7, 308] [/input.7, 234] 
pruning_in_iteration open status: True
ratio of positive domain = 41 / 108 = 0.37962962962962965
pruning-in-iteration extra time: 0.010803699493408203
Time: prepare 0.0152    bound 0.4596    transfer 0.0009    finalize 0.0072    func 0.4831    
Accumulated time: func 0.9251    prepare 0.0309    bound 0.8765    transfer 0.0021    finalize 0.0163    
Current worst splitting domains lb-rhs (depth):
-1.23447 (8), -1.22199 (8), -1.22110 (8), -1.21703 (8), -1.20656 (8), -1.19550 (8), -1.18698 (8), -1.17174 (8), -1.15203 (8), -1.13008 (8), -1.11826 (8), -1.06577 (8), -1.04698 (8), -1.03777 (8), -0.99016 (8), -0.98444 (8), -0.95725 (8), -0.94883 (8), -0.94824 (8), -0.94823 (8), 
Length of domains: 67
Time: pickout 0.0014    decision 0.0367    set_bounds 0.0050    solve 0.4832    add 0.0025    
Accumulated time: pickout 0.0020    decision 0.0764    set_bounds 0.0220    solve 0.9252    add 0.0047    
Current (lb-rhs): -1.2344677448272705
121 domains visited
Cumulative time: 1.0384113788604736

BaB round 3
batch: 67
splitting decisions: 
split level 0: [/input.11, 14] [/input.7, 409] [/input.7, 108] [/input.7, 233] [/input.7, 409] [/input.7, 108] [/input.7, 308] [/input.7, 636] [/input.7, 108] [/input.7, 233] 
pruning_in_iteration open status: True
ratio of positive domain = 35 / 134 = 0.26119402985074625
pruning-in-iteration extra time: 0.009428977966308594
Time: prepare 0.0186    bound 0.4742    transfer 0.0011    finalize 0.0088    func 0.5028    
Accumulated time: func 1.4279    prepare 0.0498    bound 1.3507    transfer 0.0032    finalize 0.0251    
Current worst splitting domains lb-rhs (depth):
-1.16438 (9), -1.16280 (9), -1.13138 (9), -1.12402 (9), -1.12113 (9), -1.10465 (9), -1.10362 (9), -1.08165 (9), -1.05880 (9), -1.00471 (9), -0.99869 (9), -0.98922 (9), -0.97349 (9), -0.94017 (9), -0.92030 (9), -0.91826 (9), -0.88305 (9), -0.88270 (9), -0.87353 (9), -0.87153 (9), 
Length of domains: 99
Time: pickout 0.0014    decision 0.0378    set_bounds 0.0060    solve 0.5029    add 0.0028    
Accumulated time: pickout 0.0034    decision 0.1142    set_bounds 0.0279    solve 1.4281    add 0.0075    
Current (lb-rhs): -1.164384126663208
220 domains visited
Cumulative time: 1.590146780014038

BaB round 4
batch: 99
splitting decisions: 
split level 0: [/input.7, 234] [/input.7, 233] [/input.11, 14] [/input.7, 233] [/input.11, 14] [/input.7, 234] [/input.7, 636] [/input.7, 109] [/input.7, 108] [/input.7, 241] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 198 = 0.398989898989899
pruning-in-iteration extra time: 0.011241912841796875
Time: prepare 0.0273    bound 0.5800    transfer 0.0014    finalize 0.0130    func 0.6217    
Accumulated time: func 2.0496    prepare 0.0774    bound 1.9307    transfer 0.0045    finalize 0.0381    
Current worst splitting domains lb-rhs (depth):
-1.05715 (10), -1.05318 (10), -1.05135 (10), -1.03900 (10), -1.03295 (10), -1.01898 (10), -1.01715 (10), -0.99139 (10), -0.94207 (10), -0.93909 (10), -0.93887 (10), -0.88025 (10), -0.86200 (10), -0.85480 (10), -0.83534 (10), -0.83218 (10), -0.82583 (10), -0.82253 (10), -0.80777 (10), -0.80035 (10), 
Length of domains: 119
Time: pickout 0.0015    decision 0.0358    set_bounds 0.0089    solve 0.6219    add 0.0030    
Accumulated time: pickout 0.0049    decision 0.1499    set_bounds 0.0368    solve 2.0500    add 0.0105    
Current (lb-rhs): -1.057154893875122
339 domains visited
Cumulative time: 2.262530565261841

BaB round 5
batch: 119
splitting decisions: 
split level 0: [/input.11, 14] [/input.7, 238] [/input.11, 14] [/input.7, 409] [/input.7, 409] [/input.11, 14] [/input.7, 233] [/input.11, 14] [/input.11, 14] [/input.7, 308] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 238 = 0.4453781512605042
pruning-in-iteration extra time: 0.011681318283081055
Time: prepare 0.0333    bound 0.6660    transfer 0.0018    finalize 0.0176    func 0.7190    
Accumulated time: func 2.7686    prepare 0.1110    bound 2.5968    transfer 0.0063    finalize 0.0557    
Current worst splitting domains lb-rhs (depth):
-1.01950 (11), -1.00573 (11), -0.94882 (11), -0.94800 (11), -0.94075 (11), -0.92506 (11), -0.90479 (11), -0.90125 (11), -0.88358 (11), -0.83695 (11), -0.83366 (11), -0.83079 (11), -0.80801 (11), -0.76156 (11), -0.74318 (11), -0.73433 (11), -0.72404 (11), -0.71324 (11), -0.71176 (11), -0.70820 (11), 
Length of domains: 132
Time: pickout 0.0017    decision 0.0423    set_bounds 0.0099    solve 0.7191    add 0.0032    
Accumulated time: pickout 0.0065    decision 0.1923    set_bounds 0.0467    solve 2.7691    add 0.0136    
Current (lb-rhs): -1.0195047855377197
471 domains visited
Cumulative time: 3.0406432151794434

BaB round 6
batch: 132
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 409] [/input.7, 233] [/input.7, 112] [/input.7, 409] [/input.7, 409] [/input.7, 241] [/input.11, 89] [/input.7, 309] [/input.7, 241] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 264 = 0.44318181818181823
pruning-in-iteration extra time: 0.011017322540283203
Time: prepare 0.0368    bound 0.5552    transfer 0.0016    finalize 0.0195    func 0.6132    
Accumulated time: func 3.3818    prepare 0.1482    bound 3.1519    transfer 0.0080    finalize 0.0752    
Current worst splitting domains lb-rhs (depth):
-0.91833 (12), -0.91334 (12), -0.89795 (12), -0.87920 (12), -0.82024 (12), -0.81815 (12), -0.79171 (12), -0.78860 (12), -0.77181 (12), -0.76624 (12), -0.72753 (12), -0.71749 (12), -0.71013 (12), -0.69889 (12), -0.69448 (12), -0.69004 (12), -0.68024 (12), -0.67382 (12), -0.66362 (12), -0.65006 (12), 
Length of domains: 147
Time: pickout 0.0019    decision 0.0444    set_bounds 0.0109    solve 0.6133    add 0.0032    
Accumulated time: pickout 0.0084    decision 0.2367    set_bounds 0.0576    solve 3.3825    add 0.0168    
Current (lb-rhs): -0.9183270931243896
618 domains visited
Cumulative time: 3.716161012649536

BaB round 7
batch: 147
splitting decisions: 
split level 0: [/input.11, 14] [/input.7, 109] [/input.11, 14] [/input.11, 7] [/input.7, 234] [/input.7, 109] [/input.11, 14] [/input.7, 233] [/input.7, 234] [/input.7, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 134 / 294 = 0.45578231292517
pruning-in-iteration extra time: 0.013535022735595703
Time: prepare 0.0413    bound 0.5630    transfer 0.0020    finalize 0.0210    func 0.6273    
Accumulated time: func 4.0090    prepare 0.1898    bound 3.7149    transfer 0.0099    finalize 0.0962    
Current worst splitting domains lb-rhs (depth):
-0.88210 (13), -0.81136 (13), -0.79297 (13), -0.78914 (13), -0.77099 (13), -0.74937 (13), -0.74466 (13), -0.73930 (13), -0.72416 (13), -0.71172 (13), -0.68885 (13), -0.67078 (13), -0.66332 (13), -0.65698 (13), -0.65128 (13), -0.65014 (13), -0.62905 (13), -0.62744 (13), -0.56076 (13), -0.55531 (13), 
Length of domains: 160
Time: pickout 0.0018    decision 0.0394    set_bounds 0.0120    solve 0.6275    add 0.0033    
Accumulated time: pickout 0.0102    decision 0.2761    set_bounds 0.0696    solve 4.0099    add 0.0201    
Current (lb-rhs): -0.8820974826812744
778 domains visited
Cumulative time: 4.402379989624023

BaB round 8
batch: 160
splitting decisions: 
split level 0: [/input.7, 308] [/input.7, 109] [/input.7, 308] [/input.7, 241] [/input.7, 234] [/input.7, 108] [/input.7, 238] [/input.11, 7] [/input.7, 409] [/input.7, 241] 
pruning_in_iteration open status: True
ratio of positive domain = 145 / 320 = 0.453125
pruning-in-iteration extra time: 0.01071619987487793
Time: prepare 0.0448    bound 0.6553    transfer 0.0017    finalize 0.0209    func 0.7227    
Accumulated time: func 4.7318    prepare 0.2349    bound 4.3703    transfer 0.0116    finalize 0.1170    
Current worst splitting domains lb-rhs (depth):
-0.77991 (14), -0.75100 (14), -0.70876 (14), -0.70061 (14), -0.67472 (14), -0.66389 (14), -0.64329 (14), -0.63579 (14), -0.63457 (14), -0.62131 (14), -0.62055 (14), -0.61675 (14), -0.61466 (14), -0.61462 (14), -0.58909 (14), -0.58510 (14), -0.58170 (14), -0.58161 (14), -0.58043 (14), -0.53860 (14), 
Length of domains: 175
Time: pickout 0.0020    decision 0.0467    set_bounds 0.0130    solve 0.7229    add 0.0031    
Accumulated time: pickout 0.0122    decision 0.3227    set_bounds 0.0827    solve 4.7329    add 0.0232    
Current (lb-rhs): -0.7799053192138672
953 domains visited
Cumulative time: 5.192193031311035

BaB round 9
batch: 175
splitting decisions: 
split level 0: [/input.7, 109] [/input.7, 109] [/input.7, 238] [/input.7, 238] [/input.7, 233] [/input.11, 89] [/input.7, 109] [/input.7, 409] [/input.7, 109] [/input.7, 109] 
pruning_in_iteration open status: True
ratio of positive domain = 161 / 350 = 0.45999999999999996
pruning-in-iteration extra time: 0.011811494827270508
Time: prepare 0.0482    bound 0.6328    transfer 0.0019    finalize 0.0213    func 0.7043    
Accumulated time: func 5.4361    prepare 0.2834    bound 5.0031    transfer 0.0135    finalize 0.1383    
Current worst splitting domains lb-rhs (depth):
-0.72685 (15), -0.61654 (15), -0.61142 (15), -0.60998 (15), -0.60922 (15), -0.60772 (15), -0.59429 (15), -0.58568 (15), -0.58361 (15), -0.58177 (15), -0.56825 (15), -0.55480 (15), -0.54734 (15), -0.54340 (15), -0.53901 (15), -0.53703 (15), -0.53305 (15), -0.53159 (15), -0.51965 (15), -0.51622 (15), 
Length of domains: 189
Time: pickout 0.0019    decision 0.0463    set_bounds 0.0140    solve 0.7045    add 0.0036    
Accumulated time: pickout 0.0140    decision 0.3691    set_bounds 0.0967    solve 5.4373    add 0.0268    
Current (lb-rhs): -0.7268545627593994
1142 domains visited
Cumulative time: 5.9647536277771

BaB round 10
batch: 189
splitting decisions: 
split level 0: [/input.11, 89] [/input.7, 109] [/input.11, 89] [/input.7, 238] [/input.11, 89] [/input.11, 89] [/input.7, 109] [/input.7, 241] [/input.7, 109] [/input.7, 109] 
pruning_in_iteration open status: True
ratio of positive domain = 201 / 378 = 0.5317460317460317
pruning-in-iteration extra time: 0.012976646423339844
Time: prepare 0.0524    bound 0.4973    transfer 0.0024    finalize 0.0259    func 0.5781    
Accumulated time: func 6.0143    prepare 0.3361    bound 5.5003    transfer 0.0159    finalize 0.1642    
Current worst splitting domains lb-rhs (depth):
-0.58292 (16), -0.56451 (16), -0.54188 (16), -0.53443 (16), -0.53065 (16), -0.52172 (16), -0.52051 (16), -0.51175 (16), -0.50874 (16), -0.49740 (16), -0.49619 (16), -0.48417 (16), -0.46856 (16), -0.46447 (16), -0.46326 (16), -0.44975 (16), -0.44836 (16), -0.44428 (16), -0.43626 (16), -0.43554 (16), 
Length of domains: 177
Time: pickout 0.0019    decision 0.0478    set_bounds 0.0153    solve 0.5783    add 0.0033    
Accumulated time: pickout 0.0159    decision 0.4168    set_bounds 0.1120    solve 6.0156    add 0.0302    
Current (lb-rhs): -0.5829191207885742
1319 domains visited
Cumulative time: 6.614148139953613

BaB round 11
batch: 177
splitting decisions: 
split level 0: [/input.7, 309] [/input.7, 109] [/input.7, 109] [/input.11, 7] [/input.7, 241] [/input.11, 89] [/input.11, 17] [/input.7, 112] [/input.7, 109] [/input.7, 309] 
pruning_in_iteration open status: True
ratio of positive domain = 183 / 354 = 0.5169491525423728
pruning-in-iteration extra time: 0.011240482330322266
Time: prepare 0.0492    bound 0.5535    transfer 0.0020    finalize 0.0219    func 0.6268    
Accumulated time: func 6.6410    prepare 0.3856    bound 6.0538    transfer 0.0179    finalize 0.1862    
Current worst splitting domains lb-rhs (depth):
-0.54199 (17), -0.51708 (17), -0.49071 (17), -0.48305 (17), -0.43815 (17), -0.42676 (17), -0.41069 (17), -0.40811 (17), -0.40678 (17), -0.39582 (17), -0.39252 (17), -0.38660 (17), -0.37089 (17), -0.36499 (17), -0.36346 (17), -0.35933 (17), -0.35846 (17), -0.35752 (17), -0.35095 (17), -0.33708 (17), 
Length of domains: 171
Time: pickout 0.0021    decision 0.0462    set_bounds 0.0147    solve 0.6269    add 0.0032    
Accumulated time: pickout 0.0180    decision 0.4630    set_bounds 0.1266    solve 6.6426    add 0.0333    
Current (lb-rhs): -0.5419917106628418
1490 domains visited
Cumulative time: 7.30977725982666

BaB round 12
batch: 171
splitting decisions: 
split level 0: [/input.7, 109] [/input.7, 413] [/input.11, 89] [/input.7, 233] [/input.7, 238] [/input.7, 413] [/input.7, 309] [/input.7, 636] [/input.11, 89] [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 342 = 0.6052631578947368
pruning-in-iteration extra time: 0.012729883193969727
Time: prepare 0.0479    bound 0.5159    transfer 0.0022    finalize 0.0229    func 0.5891    
Accumulated time: func 7.2301    prepare 0.4339    bound 6.5698    transfer 0.0200    finalize 0.2090    
Current worst splitting domains lb-rhs (depth):
-0.47525 (18), -0.45426 (18), -0.41299 (18), -0.40607 (18), -0.37844 (18), -0.35268 (18), -0.32752 (18), -0.32135 (18), -0.31687 (18), -0.31439 (18), -0.30700 (18), -0.30114 (18), -0.28677 (18), -0.27962 (18), -0.27843 (18), -0.27773 (18), -0.27528 (18), -0.27464 (18), -0.27312 (18), -0.27080 (18), 
Length of domains: 135
Time: pickout 0.0019    decision 0.0455    set_bounds 0.0137    solve 0.5892    add 0.0029    
Accumulated time: pickout 0.0200    decision 0.5085    set_bounds 0.1403    solve 7.2318    add 0.0362    
Current (lb-rhs): -0.47525250911712646
1625 domains visited
Cumulative time: 7.965900659561157

BaB round 13
batch: 135
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 413] [/input.11, 89] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 109] [/input.7, 309] [/input.11, 89] [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 270 = 0.6444444444444444
pruning-in-iteration extra time: 0.011710405349731445
Time: prepare 0.0381    bound 0.5184    transfer 0.0015    finalize 0.0169    func 0.5750    
Accumulated time: func 7.8051    prepare 0.4723    bound 7.0882    transfer 0.0216    finalize 0.2259    
Current worst splitting domains lb-rhs (depth):
-0.37505 (19), -0.34596 (19), -0.31617 (19), -0.30035 (19), -0.29574 (19), -0.27538 (19), -0.25603 (19), -0.24930 (19), -0.23866 (19), -0.23576 (19), -0.22648 (19), -0.21628 (19), -0.20837 (19), -0.20166 (19), -0.19745 (19), -0.19461 (19), -0.19406 (19), -0.19112 (19), -0.18745 (19), -0.18507 (19), 
Length of domains: 96
Time: pickout 0.0020    decision 0.0424    set_bounds 0.0113    solve 0.5751    add 0.0025    
Accumulated time: pickout 0.0219    decision 0.5509    set_bounds 0.1516    solve 7.8070    add 0.0388    
Current (lb-rhs): -0.37505292892456055
1721 domains visited
Cumulative time: 8.601421594619751

BaB round 14
batch: 96
splitting decisions: 
split level 0: [/input.7, 413] [/input.7, 413] [/input.7, 238] [/input.7, 238] [/input.11, 89] [/input.7, 309] [/input.7, 309] [/input.7, 413] [/input.7, 413] [/input.7, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 192 = 0.6614583333333333
pruning-in-iteration extra time: 0.01350855827331543
Time: prepare 0.0275    bound 0.4489    transfer 0.0016    finalize 0.0144    func 0.4926    
Accumulated time: func 8.2977    prepare 0.5002    bound 7.5371    transfer 0.0232    finalize 0.2403    
Current worst splitting domains lb-rhs (depth):
-0.24601 (20), -0.24473 (20), -0.22841 (20), -0.21565 (20), -0.21022 (20), -0.20887 (20), -0.19826 (20), -0.19642 (20), -0.19110 (20), -0.18980 (20), -0.16240 (20), -0.15712 (20), -0.15451 (20), -0.14042 (20), -0.13821 (20), -0.13669 (20), -0.13620 (20), -0.13503 (20), -0.13475 (20), -0.12625 (20), 
Length of domains: 65
Time: pickout 0.0019    decision 0.0390    set_bounds 0.0081    solve 0.4927    add 0.0023    
Accumulated time: pickout 0.0238    decision 0.5899    set_bounds 0.1597    solve 8.2997    add 0.0411    
Current (lb-rhs): -0.24600911140441895
1786 domains visited
Cumulative time: 9.147249698638916

BaB round 15
batch: 65
splitting decisions: 
split level 0: [/input.7, 184] [/input.7, 112] [/input.7, 112] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 112] [/input.7, 636] [/input.7, 413] [/input.7, 184] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 130 = 0.6615384615384615
pruning-in-iteration extra time: 0.012886524200439453
Time: prepare 0.0184    bound 0.4308    transfer 0.0011    finalize 0.0097    func 0.4601    
Accumulated time: func 8.7578    prepare 0.5189    bound 7.9679    transfer 0.0243    finalize 0.2500    
Current worst splitting domains lb-rhs (depth):
-0.16400 (21), -0.15900 (21), -0.15173 (21), -0.14694 (21), -0.14693 (21), -0.14680 (21), -0.14613 (21), -0.14521 (21), -0.10972 (21), -0.10838 (21), -0.10442 (21), -0.09859 (21), -0.09807 (21), -0.09509 (21), -0.09323 (21), -0.07554 (21), -0.07049 (21), -0.06417 (21), -0.06263 (21), -0.05786 (21), 
Length of domains: 44
Time: pickout 0.0012    decision 0.0330    set_bounds 0.0058    solve 0.4602    add 0.0021    
Accumulated time: pickout 0.0250    decision 0.6229    set_bounds 0.1655    solve 8.7599    add 0.0432    
Current (lb-rhs): -0.1640024185180664
1830 domains visited
Cumulative time: 9.6512930393219

BaB round 16
batch: 44
splitting decisions: 
split level 0: [/input.7, 112] [/input.11, 17] [/input.7, 408] [/input.7, 112] [/input.7, 413] [/input.7, 413] [/input.7, 112] [/input.11, 17] [/input.11, 17] [/input.7, 413] 
split level 1: [/input.11, 17] [/input.7, 241] [/input.11, 17] [/input.11, 17] [/input.7, 241] [/input.11, 17] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 241] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 176 = 0.9886363636363636
pruning-in-iteration extra time: 0.013350248336791992
Time: prepare 0.0249    bound 0.4509    transfer 0.0014    finalize 0.0129    func 0.4901    
Accumulated time: func 9.2479    prepare 0.5442    bound 8.4188    transfer 0.0256    finalize 0.2629    
Current worst splitting domains lb-rhs (depth):
-0.08489 (23), -0.06787 (23), 
Length of domains: 2
Time: pickout 0.0014    decision 0.0279    set_bounds 0.0131    solve 0.4903    add 0.0012    
Accumulated time: pickout 0.0265    decision 0.6508    set_bounds 0.1785    solve 9.2502    add 0.0444    
Current (lb-rhs): -0.08488643169403076
1832 domains visited
Cumulative time: 10.18731427192688

BaB round 17
batch: 2
splitting decisions: 
split level 0: [/input.7, 183] [/input.11, 32] 
split level 1: [/input.11, 32] [/input.11, 56] 
split level 2: [/input.11, 56] [/input.7, 183] 
split level 3: [/input.7, 241] [/input.7, 241] 
split level 4: [/input.3, 2270] [/input.7, 412] 
split level 5: [/input.7, 711] [/input.7, 711] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0213    bound 0.0075    transfer 0.0007    finalize 0.0083    func 0.0380    
Accumulated time: func 9.2859    prepare 0.5660    bound 8.4263    transfer 0.0263    finalize 0.2712    
Length of domains: 0
Time: pickout 0.0015    decision 0.0376    set_bounds 0.0186    solve 0.0380    add 0.0001    
Accumulated time: pickout 0.0279    decision 0.6884    set_bounds 0.1971    solve 9.2882    add 0.0445    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1832 domains visited
Cumulative time: 10.284111976623535


Properties batch 7, size 1
Remaining timeout: 283.91388177871704
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.02204751968383789.

Properties batch 8, size 1
Remaining timeout: 283.7994797229767
##### Instance 58 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7290048599243164.
Result: safe in 16.3045 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.84803653, -1.49636924,  0.28398275,  3.26559544, -6.81787443,
          3.80883455, -7.73969603, 12.04579830, -3.54846096,  1.99126971]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.73952889, -1.39045823, -0.36505896,  3.64124537, -7.23303223,
           5.26531458, -6.91761351,  9.87426281, -2.94040608,  1.74783039],
         [-1.73952889, -1.39045823, -0.36505896,  3.64124537, -7.23303223,
           5.26531458, -6.91761351,  9.87426281, -2.94040608,  1.74783039]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.61379147, 11.26472092, 10.23932171,  6.23301744, 17.10729599,
           4.60894823, 16.79187584, 12.81466866,  8.12643242]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5836 seconds.
PGD attack failed
torch allclose failed: norm 6.625572837037907e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.84803641, -1.49636924,  0.28398293,  3.26559544, -6.81787443,
          3.80883503, -7.73969555, 12.04579926, -3.54846096,  1.99126971]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [666]; unstable size 666; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 151, 1, 666] with unstable size 150 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 15, 1, 666] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [150]; unstable size 150; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 15, 1, 150] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 150] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.68708706,  8.89180183,  7.30149412,  2.68203974, 14.52019882,
          2.91656685, 14.48291874, 10.31318188,  5.41594124]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6468 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.27748635, -9.81902790,  4.14099503,  2.51811552, -5.48287582,
          1.79690647, -2.39683223, -3.82387900,  9.92395115,  3.42686439]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.99280559e-03, -8.55667210e+00,  7.00771189e+00,  3.42962790e+00,
          -5.48503113e+00,  7.70215631e-01, -4.73133421e+00, -2.16305518e+00,
           6.92294741e+00,  2.83390379e+00],
         [-5.99280559e-03, -8.55667210e+00,  7.00771189e+00,  3.42962790e+00,
          -5.48503113e+00,  7.70215631e-01, -4.73133421e+00, -2.16305518e+00,
           6.92294741e+00,  2.83390379e+00]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.92894030, 15.47961998, -0.08476448,  3.49331951, 12.40797806,
           6.15273190, 11.65428162,  9.08600235,  4.08904362]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0146 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0156 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.99484539, -3.70461082, -1.72417307, -2.12917113,  0.13273761,
          2.81022978, -0.88000834,  0.60629719,  1.70872986,  6.04712296]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.04221106, -3.42239022, -1.49788356, -1.48388183, -0.37807128,
           4.13170671, -0.42872849,  0.27581951,  2.44245958,  3.23343349],
         [-3.04221106, -3.42239022, -1.49788356, -1.48388183, -0.37807128,
           4.13170671, -0.42872849,  0.27581951,  2.44245958,  3.23343349]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.27564430,  6.65582371,  4.73131704,  4.71731520,  3.61150479,
          -0.89827323,  3.66216207,  2.95761395,  0.79097390]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0145 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0154 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.19612455, -2.95263696,  4.17527342, 12.17987919, -7.50005293,
         -0.22082205, -7.39633656, -1.58245587,  4.27053928,  1.40310967]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]100%|██████████| 1/1 [00:00<00:00,  1.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.58209419, -2.33787155,  6.39375257,  9.13336372, -5.76852179,
          -0.71615487, -4.90422058, -1.56199539,  3.55699563, -1.08629477],
         [-2.58209419, -2.33787155,  6.39375257,  9.13336372, -5.76852179,
          -0.71615487, -4.90422058, -1.56199539,  3.55699563, -1.08629477]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.71545792, 11.47123528,  2.73961115, 14.90188599,  9.84951878,
          14.03758430, 10.69535923,  5.57636833, 10.21965885]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.5816 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.19612455, -2.95263696,  4.17527390, 12.17988014, -7.50005293,
         -0.22082134, -7.39633656, -1.58245564,  4.27053928,  1.40310919]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [732]; unstable size 732; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 179, 1, 732] with unstable size 178 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 732] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 732] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [178]; unstable size 178; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 178] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.07521820,  3.28443098, -2.68957901,  5.48862076,  2.70907187,
          7.68492794,  2.42061710, -1.41692698,  0.71928191]], device='cuda:0') None
best_l after optimization: 32.496829986572266
alpha/beta optimization time: 4.316134214401245
initial alpha-crown bounds: tensor([[ 5.96549702,  4.24736357, -1.87763762,  6.71103239,  3.43262577,
          8.64842510,  3.63339758, -0.31666809,  2.05279231]], device='cuda:0')
Worst class: (+ rhs) -1.8776376247406006
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 295.0356090068817
##### Instance 62 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.965497016906738.

Properties batch 1, size 1
Remaining timeout: 294.92225408554077
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.247363567352295.

Properties batch 2, size 1
Remaining timeout: 294.81889843940735
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.87763762]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.19612455, -2.95263696,  4.17527390, 12.17988014, -7.50005293,
        -0.22082134, -7.39633656, -1.58245564,  4.27053928,  1.40310919],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.87763762]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 732
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 169
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 931
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 14] 
split level 3: [/input.11, 33] 
split level 4: [/input.11, 45] 
split level 5: [/input.11, 90] 
split level 6: [/input.11, 30] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0075    bound 0.0076    transfer 0.0006    finalize 0.0059    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0081    bound 0.0076    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0407    set_bounds 0.0158    solve 0.0219    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0407    set_bounds 0.0158    solve 0.0219    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08584260940551758


Properties batch 3, size 1
Remaining timeout: 294.59303092956543
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.711032390594482.

Properties batch 4, size 1
Remaining timeout: 294.48481822013855
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4326257705688477.

Properties batch 5, size 1
Remaining timeout: 294.3810284137726
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.648425102233887.

Properties batch 6, size 1
Remaining timeout: 294.277715921402
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6333975791931152.

Properties batch 7, size 1
Remaining timeout: 294.1744182109833
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31666809]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.19612455, -2.95263696,  4.17527390, 12.17988014, -7.50005293,
        -0.22082134, -7.39633656, -1.58245564,  4.27053928,  1.40310919],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31666809]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 732
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 169
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 931
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 30] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 25] 
split level 5: [/input.11, 14] 
split level 6: [/input.7, 142] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0146    bound 0.0075    transfer 0.0006    finalize 0.0073    func 0.0303    
Accumulated time: func 0.0303    prepare 0.0152    bound 0.0075    transfer 0.0006    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0396    set_bounds 0.0169    solve 0.0303    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0396    set_bounds 0.0169    solve 0.0303    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09440088272094727


Properties batch 8, size 1
Remaining timeout: 293.9400613307953
##### Instance 62 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0527923107147217.
Result: safe in 6.1679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.44385195,  -5.32020283,   1.26839447,   7.30836725,  -1.42836499,
          -4.94516039, -10.62840462,  15.83819580,   1.80445778,   2.41985250]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.67it/s]100%|██████████| 1/1 [00:00<00:00,  1.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.39987421,  -5.44784832,   2.06025314,   9.05458450,  -1.71268725,
           -4.14839983, -11.27180767,  14.43607426,   1.24297297,   2.12324834],
         [ -6.39987421,  -5.44784832,   2.06025314,   9.05458450,  -1.71268725,
           -4.14839983, -11.27180767,  14.43607426,   1.24297297,   2.12324834]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[20.83594894, 19.88392258, 12.37582111,  5.38148975, 16.14876175,
          18.58447456, 25.70788193, 13.19310093, 12.31282616]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6073 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -6.44385195,  -5.32020283,   1.26839352,   7.30836821,  -1.42836487,
          -4.94515991, -10.62840366,  15.83819580,   1.80445778,   2.41985250]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [732]; unstable size 732; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 115, 1, 732] with unstable size 114 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 732] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 732] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [114]; unstable size 114; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 114] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 114] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.92961884, 12.76685905,  4.94135380,  0.51811028,  7.76488590,
          9.19393921, 13.77919769,  4.06424141,  2.30023026]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.6659 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.26825714, -1.39532077, -1.56084096, -0.70209825,  5.89451265,
          0.42153096, -1.68658590, -1.23620224,  0.48471120,  3.03129530]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.61769271, -1.41398871, -2.41505814, -0.03766831,  4.33429480,
           0.04831677, -2.46553588, -1.11883557,  0.95755041,  4.75377417],
         [-2.61769271, -1.41398871, -2.41505814, -0.03766831,  4.33429480,
           0.04831677, -2.46553588, -1.11883557,  0.95755041,  4.75377417]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.95198727,  5.74828339,  6.74935293,  4.37196302,  4.28597784,
           6.79983044,  5.45313025,  3.37674427, -0.41947937]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0149 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0159 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.22710705, -0.35594279, -0.68247092, -0.30594575,  0.08306012,
          0.22870676,  7.51573277, -4.30111742, -0.23098776, -3.43167996]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.72it/s]100%|██████████| 1/1 [00:00<00:00,  1.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.57793278, -0.51368940,  0.37714022,  3.33608675, -1.50238109,
           0.06807111,  3.86466122, -3.97548914,  0.34017146, -2.76074314],
         [ 0.57793278, -0.51368940,  0.37714022,  3.33608675, -1.50238109,
           0.06807111,  3.86466122, -3.97548914,  0.34017146, -2.76074314]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[3.28672838, 4.37835073, 3.48752093, 0.52857447, 5.36704254,
          3.79659009, 7.84015036, 3.52448988, 6.62540436]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5895 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
          0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [691]; unstable size 691; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 143, 1, 691] with unstable size 142 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 44, 1, 691] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 691] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [142]; unstable size 142; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 44, 1, 142] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [43]; unstable size 43; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-5.06303883, -5.50341368, -7.56323481, -8.33275986, -4.81169415,
         -5.81166649, -6.43853331, -5.48593378, -4.67294359]], device='cuda:0') None
best_l after optimization: -37.58667755126953
alpha/beta optimization time: 4.345033645629883
initial alpha-crown bounds: tensor([[-3.37993383, -3.78632164, -5.65783978, -6.21632862, -3.14562321,
         -3.98774385, -4.26916170, -4.34247065, -2.80125594]], device='cuda:0')
Worst class: (+ rhs) -6.2163286209106445
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.9981689453125
##### Instance 65 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.37993383]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.37993383]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 41] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 109 / 128 = 0.8515625
pruning-in-iteration extra time: 0.013724327087402344
Time: prepare 0.0075    bound 0.4224    transfer 0.0015    finalize 0.0081    func 0.4396    
Accumulated time: func 0.4396    prepare 0.0082    bound 0.4224    transfer 0.0015    finalize 0.0081    
Current worst splitting domains lb-rhs (depth):
-1.30207 (7), -1.29805 (7), -1.26736 (7), -1.23114 (7), -1.22002 (7), -1.20639 (7), -1.11487 (7), -1.08972 (7), -0.65858 (7), -0.59035 (7), -0.42865 (7), -0.40608 (7), -0.36277 (7), -0.36231 (7), -0.31947 (7), -0.30981 (7), -0.24942 (7), -0.17569 (7), -0.03534 (7), 
Length of domains: 19
Time: pickout 0.0007    decision 0.0408    set_bounds 0.0162    solve 0.4397    add 0.0019    
Accumulated time: pickout 0.0007    decision 0.0408    set_bounds 0.0162    solve 0.4397    add 0.0019    
Current (lb-rhs): -1.302074670791626
19 domains visited
Cumulative time: 0.5062530040740967

BaB round 2
batch: 19
splitting decisions: 
split level 0: [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] 
split level 1: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.7, 183] [/input.11, 59] [/input.11, 59] 
split level 2: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 238] [/input.7, 581] [/input.7, 581] [/input.11, 81] [/input.7, 581] [/input.7, 238] [/input.7, 581] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 152 = 0.7894736842105263
pruning-in-iteration extra time: 0.012993097305297852
Time: prepare 0.0193    bound 0.4399    transfer 0.0015    finalize 0.0118    func 0.4727    
Accumulated time: func 0.9122    prepare 0.0278    bound 0.8623    transfer 0.0030    finalize 0.0198    
Current worst splitting domains lb-rhs (depth):
-0.92661 (10), -0.92224 (10), -0.90194 (10), -0.88935 (10), -0.85953 (10), -0.85650 (10), -0.85393 (10), -0.85134 (10), -0.84193 (10), -0.82818 (10), -0.81897 (10), -0.81600 (10), -0.78895 (10), -0.77736 (10), -0.74292 (10), -0.72676 (10), -0.71500 (10), -0.70672 (10), -0.41922 (10), -0.33628 (10), 
Length of domains: 32
Time: pickout 0.0013    decision 0.0319    set_bounds 0.0127    solve 0.4728    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.0727    set_bounds 0.0288    solve 0.9125    add 0.0040    
Current (lb-rhs): -0.9266132712364197
51 domains visited
Cumulative time: 1.0286905765533447

BaB round 3
batch: 32
splitting decisions: 
split level 0: [/input.7, 113] [/input.7, 113] [/input.7, 113] [/input.7, 113] [/input.11, 59] [/input.7, 113] [/input.11, 5] [/input.7, 238] [/input.7, 238] [/input.7, 113] 
split level 1: [/input.7, 238] [/input.7, 183] [/input.7, 577] [/input.7, 581] [/input.7, 238] [/input.11, 59] [/input.11, 0] [/input.11, 5] [/input.11, 5] [/input.7, 183] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 128 = 0.515625
pruning-in-iteration extra time: 0.013198614120483398
Time: prepare 0.0172    bound 0.4278    transfer 0.0011    finalize 0.0095    func 0.4556    
Accumulated time: func 1.3679    prepare 0.0454    bound 1.2901    transfer 0.0040    finalize 0.0293    
Current worst splitting domains lb-rhs (depth):
-0.81290 (12), -0.74747 (12), -0.72856 (12), -0.71109 (12), -0.67872 (12), -0.65603 (12), -0.64997 (12), -0.64801 (12), -0.64704 (12), -0.63131 (12), -0.62296 (12), -0.62184 (12), -0.59451 (12), -0.58637 (12), -0.58395 (12), -0.57461 (12), -0.55792 (12), -0.55708 (12), -0.52470 (12), -0.51999 (12), 
Length of domains: 62
Time: pickout 0.0015    decision 0.0263    set_bounds 0.0086    solve 0.4557    add 0.0023    
Accumulated time: pickout 0.0034    decision 0.0990    set_bounds 0.0374    solve 1.3682    add 0.0063    
Current (lb-rhs): -0.8129047751426697
113 domains visited
Cumulative time: 1.5241518020629883

BaB round 4
batch: 62
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 113] [/input.11, 0] [/input.11, 97] [/input.11, 0] [/input.7, 238] [/input.7, 113] [/input.11, 0] [/input.11, 81] [/input.7, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 40 / 124 = 0.32258064516129037
pruning-in-iteration extra time: 0.012089729309082031
Time: prepare 0.0175    bound 0.4389    transfer 0.0013    finalize 0.0097    func 0.4674    
Accumulated time: func 1.8353    prepare 0.0632    bound 1.7290    transfer 0.0053    finalize 0.0390    
Current worst splitting domains lb-rhs (depth):
-0.68957 (13), -0.67797 (13), -0.63685 (13), -0.61873 (13), -0.61281 (13), -0.61261 (13), -0.61040 (13), -0.58981 (13), -0.58296 (13), -0.55197 (13), -0.53996 (13), -0.53188 (13), -0.52121 (13), -0.52062 (13), -0.50483 (13), -0.50395 (13), -0.50334 (13), -0.49328 (13), -0.49174 (13), -0.45945 (13), 
Length of domains: 84
Time: pickout 0.0013    decision 0.0325    set_bounds 0.0051    solve 0.4675    add 0.0026    
Accumulated time: pickout 0.0047    decision 0.1315    set_bounds 0.0425    solve 1.8358    add 0.0088    
Current (lb-rhs): -0.6895740628242493
197 domains visited
Cumulative time: 2.0341269969940186

BaB round 5
batch: 84
splitting decisions: 
split level 0: [/input.7, 113] [/input.11, 0] [/input.7, 113] [/input.7, 581] [/input.7, 113] [/input.7, 113] [/input.7, 238] [/input.7, 113] [/input.7, 113] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 168 = 0.3571428571428571
pruning-in-iteration extra time: 0.01307821273803711
Time: prepare 0.0238    bound 0.4749    transfer 0.0013    finalize 0.0128    func 0.5128    
Accumulated time: func 2.3481    prepare 0.0873    bound 2.2038    transfer 0.0067    finalize 0.0518    
Current worst splitting domains lb-rhs (depth):
-0.54920 (14), -0.54541 (14), -0.54263 (14), -0.50476 (14), -0.50380 (14), -0.49452 (14), -0.48819 (14), -0.48579 (14), -0.48411 (14), -0.47742 (14), -0.47436 (14), -0.47345 (14), -0.45234 (14), -0.45125 (14), -0.45124 (14), -0.44598 (14), -0.43719 (14), -0.43442 (14), -0.42960 (14), -0.41830 (14), 
Length of domains: 108
Time: pickout 0.0014    decision 0.0351    set_bounds 0.0074    solve 0.5130    add 0.0028    
Accumulated time: pickout 0.0061    decision 0.1666    set_bounds 0.0499    solve 2.3488    add 0.0116    
Current (lb-rhs): -0.5492035746574402
305 domains visited
Cumulative time: 2.594996213912964

BaB round 6
batch: 108
splitting decisions: 
split level 0: [/input.11, 97] [/input.7, 183] [/input.7, 183] [/input.7, 113] [/input.7, 581] [/input.7, 632] [/input.7, 183] [/input.7, 183] [/input.7, 581] [/input.7, 183] 
pruning_in_iteration open status: True
ratio of positive domain = 85 / 216 = 0.3935185185185185
pruning-in-iteration extra time: 0.013523101806640625
Time: prepare 0.0301    bound 0.4704    transfer 0.0015    finalize 0.0149    func 0.5170    
Accumulated time: func 2.8651    prepare 0.1177    bound 2.6743    transfer 0.0082    finalize 0.0666    
Current worst splitting domains lb-rhs (depth):
-0.44007 (15), -0.43466 (15), -0.43270 (15), -0.41575 (15), -0.41511 (15), -0.40888 (15), -0.40732 (15), -0.37806 (15), -0.37641 (15), -0.37439 (15), -0.37055 (15), -0.36851 (15), -0.36551 (15), -0.36517 (15), -0.35959 (15), -0.35876 (15), -0.35699 (15), -0.35606 (15), -0.35388 (15), -0.34407 (15), 
Length of domains: 131
Time: pickout 0.0013    decision 0.0433    set_bounds 0.0091    solve 0.5172    add 0.0030    
Accumulated time: pickout 0.0074    decision 0.2099    set_bounds 0.0590    solve 2.8660    add 0.0146    
Current (lb-rhs): -0.440065860748291
436 domains visited
Cumulative time: 3.1707956790924072

BaB round 7
batch: 131
splitting decisions: 
split level 0: [/input.7, 581] [/input.11, 0] [/input.7, 183] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 0] [/input.7, 183] [/input.11, 97] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 262 = 0.29007633587786263
pruning-in-iteration extra time: 0.014114618301391602
Time: prepare 0.0356    bound 0.4570    transfer 0.0019    finalize 0.0183    func 0.5130    
Accumulated time: func 3.3781    prepare 0.1537    bound 3.1313    transfer 0.0101    finalize 0.0849    
Current worst splitting domains lb-rhs (depth):
-0.37610 (16), -0.35078 (16), -0.34152 (16), -0.30488 (16), -0.30190 (16), -0.30040 (16), -0.29576 (16), -0.29384 (16), -0.28478 (16), -0.28126 (16), -0.27934 (16), -0.26447 (16), -0.26073 (16), -0.25582 (16), -0.25501 (16), -0.25475 (16), -0.25235 (16), -0.24892 (16), -0.24609 (16), -0.24130 (16), 
Length of domains: 186
Time: pickout 0.0018    decision 0.0449    set_bounds 0.0112    solve 0.5131    add 0.0038    
Accumulated time: pickout 0.0092    decision 0.2549    set_bounds 0.0702    solve 3.3791    add 0.0184    
Current (lb-rhs): -0.37610185146331787
622 domains visited
Cumulative time: 3.7472574710845947

BaB round 8
batch: 186
splitting decisions: 
split level 0: [/input.7, 577] [/input.7, 581] [/input.7, 577] [/input.11, 81] [/input.7, 577] [/input.7, 577] [/input.7, 577] [/input.7, 577] [/input.7, 632] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 204 / 372 = 0.5483870967741935
pruning-in-iteration extra time: 0.013801336288452148
Time: prepare 0.0502    bound 0.4569    transfer 0.0024    finalize 0.0245    func 0.5352    
Accumulated time: func 3.9133    prepare 0.2042    bound 3.5882    transfer 0.0125    finalize 0.1094    
Current worst splitting domains lb-rhs (depth):
-0.28033 (17), -0.26301 (17), -0.25769 (17), -0.25730 (17), -0.25099 (17), -0.22806 (17), -0.22436 (17), -0.22061 (17), -0.21901 (17), -0.21048 (17), -0.20428 (17), -0.20308 (17), -0.20164 (17), -0.19905 (17), -0.19788 (17), -0.19430 (17), -0.18795 (17), -0.18607 (17), -0.17926 (17), -0.17904 (17), 
Length of domains: 168
Time: pickout 0.0019    decision 0.0502    set_bounds 0.0151    solve 0.5354    add 0.0035    
Accumulated time: pickout 0.0111    decision 0.3051    set_bounds 0.0853    solve 3.9145    add 0.0219    
Current (lb-rhs): -0.2803295850753784
790 domains visited
Cumulative time: 4.356017112731934

BaB round 9
batch: 168
splitting decisions: 
split level 0: [/input.11, 65] [/input.7, 581] [/input.11, 0] [/input.11, 65] [/input.11, 81] [/input.3, 2241] [/input.7, 183] [/input.7, 577] [/input.11, 81] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 214 / 336 = 0.6369047619047619
pruning-in-iteration extra time: 0.013365745544433594
Time: prepare 0.0483    bound 0.4999    transfer 0.0026    finalize 0.0228    func 0.5739    
Accumulated time: func 4.4872    prepare 0.2528    bound 4.0881    transfer 0.0152    finalize 0.1322    
Current worst splitting domains lb-rhs (depth):
-0.25379 (18), -0.22808 (18), -0.22116 (18), -0.19220 (18), -0.19209 (18), -0.18265 (18), -0.17856 (18), -0.17810 (18), -0.16758 (18), -0.16131 (18), -0.15936 (18), -0.15691 (18), -0.15575 (18), -0.15524 (18), -0.15000 (18), -0.14990 (18), -0.14340 (18), -0.13315 (18), -0.13270 (18), -0.12853 (18), 
Length of domains: 122
Time: pickout 0.0019    decision 0.0456    set_bounds 0.0132    solve 0.5740    add 0.0028    
Accumulated time: pickout 0.0130    decision 0.3506    set_bounds 0.0985    solve 4.4885    add 0.0247    
Current (lb-rhs): -0.25379395484924316
912 domains visited
Cumulative time: 4.996459484100342

BaB round 10
batch: 122
splitting decisions: 
split level 0: [/input.7, 631] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.3, 2241] [/input.11, 65] [/input.11, 97] [/input.7, 183] [/input.11, 97] [/input.7, 577] 
pruning_in_iteration open status: True
ratio of positive domain = 178 / 244 = 0.7295081967213115
pruning-in-iteration extra time: 0.013468027114868164
Time: prepare 0.0368    bound 0.4659    transfer 0.0018    finalize 0.0182    func 0.5235    
Accumulated time: func 5.0107    prepare 0.2900    bound 4.5540    transfer 0.0169    finalize 0.1504    
Current worst splitting domains lb-rhs (depth):
-0.22404 (19), -0.21796 (19), -0.21630 (19), -0.15833 (19), -0.15382 (19), -0.12794 (19), -0.11899 (19), -0.11822 (19), -0.11575 (19), -0.11402 (19), -0.11317 (19), -0.10160 (19), -0.09370 (19), -0.09197 (19), -0.08774 (19), -0.08765 (19), -0.08648 (19), -0.08016 (19), -0.08016 (19), -0.07608 (19), 
Length of domains: 66
Time: pickout 0.0020    decision 0.0424    set_bounds 0.0097    solve 0.5236    add 0.0024    
Accumulated time: pickout 0.0150    decision 0.3931    set_bounds 0.1083    solve 5.0121    add 0.0271    
Current (lb-rhs): -0.22403669357299805
978 domains visited
Cumulative time: 5.579031705856323

BaB round 11
batch: 66
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 81] [/input.11, 97] [/input.7, 581] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 97] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 132 = 0.7954545454545454
pruning-in-iteration extra time: 0.013559103012084961
Time: prepare 0.0217    bound 0.4417    transfer 0.0012    finalize 0.0110    func 0.4757    
Accumulated time: func 5.4864    prepare 0.3121    bound 4.9957    transfer 0.0182    finalize 0.1614    
Current worst splitting domains lb-rhs (depth):
-0.11953 (20), -0.10402 (20), -0.08267 (20), -0.07727 (20), -0.07402 (20), -0.07362 (20), -0.07282 (20), -0.07169 (20), -0.05506 (20), -0.05153 (20), -0.04974 (20), -0.04571 (20), -0.04346 (20), -0.04319 (20), -0.02590 (20), -0.02392 (20), -0.02036 (20), -0.01437 (20), -0.01420 (20), -0.01121 (20), 
Length of domains: 27
Time: pickout 0.0018    decision 0.0275    set_bounds 0.0057    solve 0.4758    add 0.0020    
Accumulated time: pickout 0.0168    decision 0.4206    set_bounds 0.1139    solve 5.4879    add 0.0291    
Current (lb-rhs): -0.11952728033065796
1005 domains visited
Cumulative time: 6.093353271484375

BaB round 12
batch: 27
splitting decisions: 
split level 0: [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 706] [/input.11, 65] [/input.11, 65] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.11, 65] [/input.7, 706] [/input.7, 706] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 108 / 108 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0183    bound 0.0076    transfer 0.0006    finalize 0.0072    func 0.0337    
Accumulated time: func 5.5201    prepare 0.3307    bound 5.0032    transfer 0.0188    finalize 0.1686    
Length of domains: 0
Time: pickout 0.0014    decision 0.0254    set_bounds 0.0084    solve 0.0338    add 0.0001    
Accumulated time: pickout 0.0182    decision 0.4461    set_bounds 0.1223    solve 5.5217    add 0.0292    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1005 domains visited
Cumulative time: 6.16320538520813


Properties batch 1, size 1
Remaining timeout: 288.6849675178528
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.78632164]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.78632164]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 36] 
split level 3: [/input.11, 45] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 89] 
split level 6: [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 101 / 128 = 0.7890625
pruning-in-iteration extra time: 0.013568878173828125
Time: prepare 0.0076    bound 0.4336    transfer 0.0011    finalize 0.0076    func 0.4501    
Accumulated time: func 0.4501    prepare 0.0082    bound 0.4336    transfer 0.0011    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-1.45464 (7), -1.21276 (7), -1.11881 (7), -1.09971 (7), -1.09318 (7), -1.03749 (7), -1.00504 (7), -1.00390 (7), -0.82297 (7), -0.80251 (7), -0.76863 (7), -0.76698 (7), -0.75918 (7), -0.73549 (7), -0.65300 (7), -0.61678 (7), -0.60393 (7), -0.56611 (7), -0.53009 (7), -0.50225 (7), 
Length of domains: 27
Time: pickout 0.0006    decision 0.0397    set_bounds 0.0156    solve 0.4501    add 0.0019    
Accumulated time: pickout 0.0006    decision 0.0397    set_bounds 0.0156    solve 0.4501    add 0.0019    
Current (lb-rhs): -1.4546432495117188
27 domains visited
Cumulative time: 0.514934778213501

BaB round 2
batch: 27
splitting decisions: 
split level 0: [/input.11, 47] [/input.11, 37] [/input.11, 47] [/input.11, 5] [/input.11, 47] [/input.11, 37] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] 
split level 1: [/input.11, 37] [/input.11, 5] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 5] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 108 = 0.7037037037037037
pruning-in-iteration extra time: 0.0130767822265625
Time: prepare 0.0090    bound 0.4254    transfer 0.0010    finalize 0.0071    func 0.4427    
Accumulated time: func 0.8928    prepare 0.0176    bound 0.8590    transfer 0.0021    finalize 0.0147    
Current worst splitting domains lb-rhs (depth):
-0.95903 (9), -0.81531 (9), -0.72892 (9), -0.63273 (9), -0.62173 (9), -0.56547 (9), -0.54395 (9), -0.47152 (9), -0.41750 (9), -0.35626 (9), -0.34994 (9), -0.29901 (9), -0.23440 (9), -0.22251 (9), -0.21459 (9), -0.21272 (9), -0.19552 (9), -0.17159 (9), -0.14383 (9), -0.12521 (9), 
Length of domains: 32
Time: pickout 0.0013    decision 0.0253    set_bounds 0.0071    solve 0.4428    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.0650    set_bounds 0.0227    solve 0.8930    add 0.0040    
Current (lb-rhs): -0.9590253829956055
59 domains visited
Cumulative time: 0.9945487976074219

BaB round 3
batch: 32
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 47] [/input.11, 5] [/input.11, 47] 
split level 1: [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.7, 636] [/input.7, 238] [/input.11, 58] [/input.11, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 110 / 128 = 0.859375
pruning-in-iteration extra time: 0.014172792434692383
Time: prepare 0.0150    bound 0.4449    transfer 0.0011    finalize 0.0088    func 0.4699    
Accumulated time: func 1.3627    prepare 0.0329    bound 1.3039    transfer 0.0033    finalize 0.0235    
Current worst splitting domains lb-rhs (depth):
-0.66931 (11), -0.45667 (11), -0.42908 (11), -0.30860 (11), -0.18781 (11), -0.13902 (11), -0.10995 (11), -0.10491 (11), -0.09208 (11), -0.07468 (11), -0.05883 (11), -0.05275 (11), -0.03997 (11), -0.03759 (11), -0.03026 (11), -0.02137 (11), -0.01997 (11), -0.00256 (11), 
Length of domains: 18
Time: pickout 0.0012    decision 0.0262    set_bounds 0.0086    solve 0.4700    add 0.0018    
Accumulated time: pickout 0.0031    decision 0.0912    set_bounds 0.0313    solve 1.3629    add 0.0058    
Current (lb-rhs): -0.669309139251709
77 domains visited
Cumulative time: 1.5037972927093506

BaB round 4
batch: 18
splitting decisions: 
split level 0: [/input.11, 30] [/input.11, 58] [/input.11, 30] [/input.11, 30] [/input.7, 238] [/input.11, 30] [/input.7, 238] [/input.11, 58] [/input.11, 30] [/input.11, 30] 
split level 1: [/input.7, 636] [/input.7, 636] [/input.11, 58] [/input.11, 58] [/input.11, 30] [/input.7, 636] [/input.11, 58] [/input.7, 636] [/input.7, 238] [/input.7, 636] 
split level 2: [/input.11, 58] [/input.7, 141] [/input.7, 413] [/input.7, 413] [/input.7, 636] [/input.11, 58] [/input.7, 413] [/input.7, 413] [/input.7, 636] [/input.11, 58] 

all verified at 17th iter
pruning_in_iteration open status: True
ratio of positive domain = 144 / 144 = 1.0
pruning-in-iteration extra time: 0.011439085006713867
Time: prepare 0.0199    bound 0.3724    transfer 0.0013    finalize 0.0110    func 0.4046    
Accumulated time: func 1.7673    prepare 0.0531    bound 1.6762    transfer 0.0046    finalize 0.0346    
Length of domains: 0
Time: pickout 0.0013    decision 0.0249    set_bounds 0.0137    solve 0.4047    add 0.0001    
Accumulated time: pickout 0.0045    decision 0.1161    set_bounds 0.0450    solve 1.7676    add 0.0059    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
77 domains visited
Cumulative time: 1.9499800205230713


Properties batch 2, size 1
Remaining timeout: 286.58340096473694
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.65783978]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.65783978]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 45] 
split level 5: [/input.11, 14] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 64 / 128 = 0.5
pruning-in-iteration extra time: 0.01329660415649414
Time: prepare 0.0076    bound 0.4199    transfer 0.0010    finalize 0.0065    func 0.4350    
Accumulated time: func 0.4350    prepare 0.0082    bound 0.4199    transfer 0.0010    finalize 0.0065    
Current worst splitting domains lb-rhs (depth):
-3.35149 (7), -3.25675 (7), -3.23099 (7), -3.17980 (7), -3.17279 (7), -3.14076 (7), -3.12198 (7), -3.11678 (7), -3.10123 (7), -3.08280 (7), -3.07693 (7), -3.06548 (7), -2.96256 (7), -2.94805 (7), -2.94580 (7), -2.89698 (7), -2.79508 (7), -2.78572 (7), -2.74572 (7), -2.72805 (7), 
Length of domains: 64
Time: pickout 0.0007    decision 0.0403    set_bounds 0.0157    solve 0.4351    add 0.0024    
Accumulated time: pickout 0.0007    decision 0.0403    set_bounds 0.0157    solve 0.4351    add 0.0024    
Current (lb-rhs): -3.3514862060546875
64 domains visited
Cumulative time: 0.5013349056243896

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 99] [/input.11, 33] [/input.11, 99] [/input.11, 33] [/input.11, 99] [/input.11, 33] [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 27 / 128 = 0.2109375
pruning-in-iteration extra time: 0.0008320808410644531
Time: prepare 0.0098    bound 0.3731    transfer 0.0012    finalize 0.0075    func 0.3919    
Accumulated time: func 0.8269    prepare 0.0184    bound 0.7929    transfer 0.0023    finalize 0.0140    
Current worst splitting domains lb-rhs (depth):
-3.07864 (8), -2.98363 (8), -2.98000 (8), -2.93673 (8), -2.93388 (8), -2.89754 (8), -2.87333 (8), -2.86458 (8), -2.86416 (8), -2.85242 (8), -2.83383 (8), -2.82918 (8), -2.73967 (8), -2.71049 (8), -2.70711 (8), -2.65654 (8), -2.50076 (8), -2.46984 (8), -2.44972 (8), -2.41170 (8), 
Length of domains: 101
Time: pickout 0.0013    decision 0.0276    set_bounds 0.0059    solve 0.3920    add 0.0027    
Accumulated time: pickout 0.0020    decision 0.0679    set_bounds 0.0215    solve 0.8271    add 0.0050    
Current (lb-rhs): -3.07863712310791
165 domains visited
Cumulative time: 0.9314994812011719

BaB round 3
batch: 101
splitting decisions: 
split level 0: [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 99] [/input.11, 33] [/input.11, 99] [/input.11, 99] [/input.11, 1] [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 79 / 202 = 0.3910891089108911
pruning-in-iteration extra time: 0.009467840194702148
Time: prepare 0.0158    bound 0.3946    transfer 0.0014    finalize 0.0103    func 0.4222    
Accumulated time: func 1.2491    prepare 0.0344    bound 1.1876    transfer 0.0037    finalize 0.0243    
Current worst splitting domains lb-rhs (depth):
-2.79564 (9), -2.75448 (9), -2.75218 (9), -2.73733 (9), -2.70904 (9), -2.68319 (9), -2.66811 (9), -2.65441 (9), -2.64609 (9), -2.63872 (9), -2.59944 (9), -2.55466 (9), -2.52615 (9), -2.48799 (9), -2.43616 (9), -2.39569 (9), -2.30673 (9), -2.26688 (9), -2.21264 (9), -2.14934 (9), 
Length of domains: 123
Time: pickout 0.0014    decision 0.0429    set_bounds 0.0093    solve 0.4223    add 0.0029    
Accumulated time: pickout 0.0035    decision 0.1108    set_bounds 0.0308    solve 1.2495    add 0.0080    
Current (lb-rhs): -2.7956368923187256
288 domains visited
Cumulative time: 1.4117510318756104

BaB round 4
batch: 123
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 33] [/input.11, 99] [/input.11, 33] [/input.11, 33] [/input.11, 17] [/input.11, 1] [/input.7, 183] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 109 / 246 = 0.44308943089430897
pruning-in-iteration extra time: 0.01217961311340332
Time: prepare 0.0199    bound 0.4972    transfer 0.0016    finalize 0.0136    func 0.5326    
Accumulated time: func 1.7817    prepare 0.0547    bound 1.6848    transfer 0.0053    finalize 0.0379    
Current worst splitting domains lb-rhs (depth):
-2.52752 (10), -2.52681 (10), -2.49325 (10), -2.49165 (10), -2.46060 (10), -2.42117 (10), -2.41466 (10), -2.38716 (10), -2.38389 (10), -2.38319 (10), -2.38195 (10), -2.34177 (10), -2.25609 (10), -2.22478 (10), -2.21746 (10), -2.17489 (10), -2.01716 (10), -2.01478 (10), -1.99982 (10), -1.96627 (10), 
Length of domains: 137
Time: pickout 0.0015    decision 0.0425    set_bounds 0.0099    solve 0.5327    add 0.0029    
Accumulated time: pickout 0.0050    decision 0.1533    set_bounds 0.0408    solve 1.7822    add 0.0109    
Current (lb-rhs): -2.5275230407714844
425 domains visited
Cumulative time: 2.003095865249634

BaB round 5
batch: 137
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.7, 636] [/input.7, 636] [/input.11, 81] [/input.11, 17] [/input.11, 81] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 90 / 274 = 0.3284671532846716
pruning-in-iteration extra time: 0.013552427291870117
Time: prepare 0.0227    bound 0.4838    transfer 0.0017    finalize 0.0144    func 0.5227    
Accumulated time: func 2.3043    prepare 0.0777    bound 2.1686    transfer 0.0070    finalize 0.0524    
Current worst splitting domains lb-rhs (depth):
-2.33523 (11), -2.27814 (11), -2.25676 (11), -2.23099 (11), -2.21886 (11), -2.20971 (11), -2.16604 (11), -2.13674 (11), -2.13233 (11), -2.11748 (11), -2.11723 (11), -2.08593 (11), -2.05987 (11), -1.99473 (11), -1.95948 (11), -1.91954 (11), -1.86599 (11), -1.81246 (11), -1.79048 (11), -1.76921 (11), 
Length of domains: 184
Time: pickout 0.0014    decision 0.0428    set_bounds 0.0114    solve 0.5228    add 0.0034    
Accumulated time: pickout 0.0064    decision 0.1961    set_bounds 0.0522    solve 2.3050    add 0.0143    
Current (lb-rhs): -2.3352277278900146
609 domains visited
Cumulative time: 2.5868842601776123

BaB round 6
batch: 184
splitting decisions: 
split level 0: [/input.11, 41] [/input.11, 41] [/input.11, 41] [/input.11, 81] [/input.11, 41] [/input.11, 81] [/input.7, 631] [/input.7, 636] [/input.7, 586] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 194 / 368 = 0.5271739130434783
pruning-in-iteration extra time: 0.011236190795898438
Time: prepare 0.0372    bound 0.5422    transfer 0.0022    finalize 0.0218    func 0.6035    
Accumulated time: func 2.9079    prepare 0.1152    bound 2.7107    transfer 0.0092    finalize 0.0742    
Current worst splitting domains lb-rhs (depth):
-2.12811 (12), -2.08792 (12), -2.03243 (12), -2.00073 (12), -1.99991 (12), -1.96877 (12), -1.94902 (12), -1.93692 (12), -1.93631 (12), -1.89030 (12), -1.87902 (12), -1.83512 (12), -1.83147 (12), -1.80752 (12), -1.80104 (12), -1.75960 (12), -1.75230 (12), -1.72395 (12), -1.72050 (12), -1.65794 (12), 
Length of domains: 174
Time: pickout 0.0019    decision 0.0492    set_bounds 0.0125    solve 0.6037    add 0.0032    
Accumulated time: pickout 0.0083    decision 0.2453    set_bounds 0.0648    solve 2.9087    add 0.0175    
Current (lb-rhs): -2.1281139850616455
783 domains visited
Cumulative time: 3.2600812911987305

BaB round 7
batch: 174
splitting decisions: 
split level 0: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 706] [/input.11, 81] [/input.11, 81] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 164 / 348 = 0.47126436781609193
pruning-in-iteration extra time: 0.012946605682373047
Time: prepare 0.0394    bound 0.5333    transfer 0.0021    finalize 0.0216    func 0.5967    
Accumulated time: func 3.5045    prepare 0.1549    bound 3.2440    transfer 0.0114    finalize 0.0958    
Current worst splitting domains lb-rhs (depth):
-1.95464 (13), -1.91976 (13), -1.86218 (13), -1.83270 (13), -1.82459 (13), -1.78352 (13), -1.76218 (13), -1.73335 (13), -1.73061 (13), -1.71832 (13), -1.70895 (13), -1.67247 (13), -1.56458 (13), -1.55063 (13), -1.54935 (13), -1.53415 (13), -1.53282 (13), -1.52939 (13), -1.52462 (13), -1.51070 (13), 
Length of domains: 184
Time: pickout 0.0020    decision 0.0459    set_bounds 0.0124    solve 0.5968    add 0.0034    
Accumulated time: pickout 0.0103    decision 0.2912    set_bounds 0.0772    solve 3.5055    add 0.0209    
Current (lb-rhs): -1.954637050628662
967 domains visited
Cumulative time: 3.9231932163238525

BaB round 8
batch: 184
splitting decisions: 
split level 0: [/input.11, 81] [/input.7, 631] [/input.11, 81] [/input.11, 81] [/input.7, 631] [/input.7, 631] [/input.7, 631] [/input.7, 636] [/input.7, 636] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 139 / 368 = 0.3777173913043478
pruning-in-iteration extra time: 0.011109113693237305
Time: prepare 0.0500    bound 0.6030    transfer 0.0022    finalize 0.0235    func 0.6788    
Accumulated time: func 4.1833    prepare 0.2052    bound 3.8470    transfer 0.0136    finalize 0.1193    
Current worst splitting domains lb-rhs (depth):
-1.62502 (14), -1.59812 (14), -1.59656 (14), -1.58960 (14), -1.58040 (14), -1.57614 (14), -1.56017 (14), -1.53754 (14), -1.53429 (14), -1.51418 (14), -1.47628 (14), -1.47473 (14), -1.46357 (14), -1.46334 (14), -1.46069 (14), -1.44352 (14), -1.43130 (14), -1.40207 (14), -1.40070 (14), -1.39659 (14), 
Length of domains: 229
Time: pickout 0.0021    decision 0.0390    set_bounds 0.0120    solve 0.6790    add 0.0037    
Accumulated time: pickout 0.0124    decision 0.3301    set_bounds 0.0892    solve 4.1845    add 0.0245    
Current (lb-rhs): -1.6250224113464355
1196 domains visited
Cumulative time: 4.661280870437622

BaB round 9
batch: 229
splitting decisions: 
split level 0: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 238] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 203 / 458 = 0.4432314410480349
pruning-in-iteration extra time: 0.011816263198852539
Time: prepare 0.0634    bound 0.5926    transfer 0.0027    finalize 0.0305    func 0.6894    
Accumulated time: func 4.8727    prepare 0.2689    bound 4.4396    transfer 0.0163    finalize 0.1498    
Current worst splitting domains lb-rhs (depth):
-1.50590 (15), -1.48490 (15), -1.43629 (15), -1.42456 (15), -1.38698 (15), -1.37382 (15), -1.36406 (15), -1.35054 (15), -1.34955 (15), -1.31684 (15), -1.30501 (15), -1.29897 (15), -1.29051 (15), -1.28699 (15), -1.28073 (15), -1.26512 (15), -1.25301 (15), -1.24048 (15), -1.23807 (15), -1.23368 (15), 
Length of domains: 255
Time: pickout 0.0020    decision 0.0514    set_bounds 0.0186    solve 0.6896    add 0.0038    
Accumulated time: pickout 0.0144    decision 0.3815    set_bounds 0.1078    solve 4.8741    add 0.0283    
Current (lb-rhs): -1.5059044361114502
1451 domains visited
Cumulative time: 5.429683446884155

BaB round 10
batch: 255
splitting decisions: 
split level 0: [/input.7, 113] [/input.7, 141] [/input.11, 51] [/input.7, 238] [/input.11, 36] [/input.11, 36] [/input.7, 631] [/input.7, 113] [/input.11, 81] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 276 / 510 = 0.5411764705882354
pruning-in-iteration extra time: 0.01106572151184082
Time: prepare 0.0708    bound 0.5431    transfer 0.0026    finalize 0.0308    func 0.6474    
Accumulated time: func 5.5201    prepare 0.3400    bound 4.9827    transfer 0.0189    finalize 0.1806    
Current worst splitting domains lb-rhs (depth):
-1.31306 (16), -1.30448 (16), -1.26031 (16), -1.25675 (16), -1.24449 (16), -1.23780 (16), -1.23459 (16), -1.23329 (16), -1.20513 (16), -1.16760 (16), -1.16128 (16), -1.12517 (16), -1.10947 (16), -1.10892 (16), -1.10300 (16), -1.10181 (16), -1.10084 (16), -1.09363 (16), -1.09161 (16), -1.08898 (16), 
Length of domains: 234
Time: pickout 0.0022    decision 0.0548    set_bounds 0.0204    solve 0.6476    add 0.0035    
Accumulated time: pickout 0.0167    decision 0.4363    set_bounds 0.1282    solve 5.5217    add 0.0318    
Current (lb-rhs): -1.3130557537078857
1685 domains visited
Cumulative time: 6.161895275115967

BaB round 11
batch: 234
splitting decisions: 
split level 0: [/input.7, 631] [/input.11, 81] [/input.11, 36] [/input.7, 631] [/input.7, 631] [/input.7, 113] [/input.7, 238] [/input.7, 631] [/input.7, 631] [/input.7, 183] 
pruning_in_iteration open status: True
ratio of positive domain = 214 / 468 = 0.4572649572649573
pruning-in-iteration extra time: 0.012352943420410156
Time: prepare 0.0647    bound 0.5404    transfer 0.0025    finalize 0.0283    func 0.6361    
Accumulated time: func 6.1562    prepare 0.4050    bound 5.5231    transfer 0.0214    finalize 0.2089    
Current worst splitting domains lb-rhs (depth):
-1.17405 (17), -1.15674 (17), -1.14904 (17), -1.12349 (17), -1.10508 (17), -1.09935 (17), -1.08076 (17), -1.07493 (17), -1.07107 (17), -1.02620 (17), -1.02501 (17), -1.02189 (17), -1.01516 (17), -0.99358 (17), -0.98864 (17), -0.97154 (17), -0.96817 (17), -0.95109 (17), -0.94759 (17), -0.94487 (17), 
Length of domains: 254
Time: pickout 0.0023    decision 0.0515    set_bounds 0.0192    solve 0.6363    add 0.0037    
Accumulated time: pickout 0.0190    decision 0.4878    set_bounds 0.1473    solve 6.1580    add 0.0354    
Current (lb-rhs): -1.1740524768829346
1939 domains visited
Cumulative time: 6.878087997436523

BaB round 12
batch: 254
splitting decisions: 
split level 0: [/input.11, 51] [/input.7, 183] [/input.7, 238] [/input.7, 631] [/input.7, 706] [/input.7, 238] [/input.7, 183] [/input.11, 51] [/input.7, 113] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 244 / 508 = 0.4803149606299213
pruning-in-iteration extra time: 0.012499809265136719
Time: prepare 0.0688    bound 0.5862    transfer 0.0029    finalize 0.0310    func 0.6890    
Accumulated time: func 6.8452    prepare 0.4741    bound 6.1093    transfer 0.0243    finalize 0.2398    
Current worst splitting domains lb-rhs (depth):
-1.07611 (18), -1.07198 (18), -1.04962 (18), -0.99386 (18), -0.96834 (18), -0.96730 (18), -0.96342 (18), -0.94291 (18), -0.93939 (18), -0.92329 (18), -0.91704 (18), -0.90316 (18), -0.89609 (18), -0.88456 (18), -0.87923 (18), -0.86005 (18), -0.83463 (18), -0.82531 (18), -0.81861 (18), -0.81678 (18), 
Length of domains: 264
Time: pickout 0.0023    decision 0.0543    set_bounds 0.0206    solve 0.6892    add 0.0039    
Accumulated time: pickout 0.0213    decision 0.5421    set_bounds 0.1680    solve 6.8472    add 0.0393    
Current (lb-rhs): -1.0761103630065918
2203 domains visited
Cumulative time: 7.651991844177246

BaB round 13
batch: 264
splitting decisions: 
split level 0: [/input.7, 183] [/input.7, 238] [/input.7, 183] [/input.7, 238] [/input.7, 113] [/input.7, 183] [/input.7, 238] [/input.7, 183] [/input.7, 706] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 281 / 528 = 0.5321969696969697
pruning-in-iteration extra time: 0.012766838073730469
Time: prepare 0.0713    bound 0.5694    transfer 0.0027    finalize 0.0313    func 0.6748    
Accumulated time: func 7.5200    prepare 0.5457    bound 6.6787    transfer 0.0269    finalize 0.2711    
Current worst splitting domains lb-rhs (depth):
-1.01963 (19), -0.96766 (19), -0.90748 (19), -0.88646 (19), -0.87284 (19), -0.86924 (19), -0.85049 (19), -0.83417 (19), -0.82730 (19), -0.80881 (19), -0.78759 (19), -0.77954 (19), -0.77765 (19), -0.77649 (19), -0.77345 (19), -0.75490 (19), -0.75279 (19), -0.73913 (19), -0.73582 (19), -0.73208 (19), 
Length of domains: 247
Time: pickout 0.0024    decision 0.0545    set_bounds 0.0215    solve 0.6750    add 0.0038    
Accumulated time: pickout 0.0237    decision 0.5967    set_bounds 0.1895    solve 7.5222    add 0.0431    
Current (lb-rhs): -1.0196316242218018
2450 domains visited
Cumulative time: 8.412988424301147

BaB round 14
batch: 247
splitting decisions: 
split level 0: [/input.7, 632] [/input.7, 632] [/input.7, 238] [/input.7, 183] [/input.7, 183] [/input.7, 706] [/input.7, 183] [/input.7, 183] [/input.7, 183] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 255 / 494 = 0.5161943319838056
pruning-in-iteration extra time: 0.013130426406860352
Time: prepare 0.0660    bound 0.4831    transfer 0.0025    finalize 0.0285    func 0.5804    
Accumulated time: func 8.1004    prepare 0.6121    bound 7.1619    transfer 0.0295    finalize 0.2997    
Current worst splitting domains lb-rhs (depth):
-0.87706 (20), -0.84584 (20), -0.79949 (20), -0.76907 (20), -0.74853 (20), -0.74823 (20), -0.73413 (20), -0.72565 (20), -0.72102 (20), -0.71727 (20), -0.71513 (20), -0.70584 (20), -0.70404 (20), -0.69240 (20), -0.68288 (20), -0.67445 (20), -0.67264 (20), -0.66820 (20), -0.66704 (20), -0.66593 (20), 
Length of domains: 239
Time: pickout 0.0023    decision 0.0534    set_bounds 0.0195    solve 0.5806    add 0.0034    
Accumulated time: pickout 0.0260    decision 0.6500    set_bounds 0.2090    solve 8.1028    add 0.0465    
Current (lb-rhs): -0.8770570755004883
2689 domains visited
Cumulative time: 9.075732946395874

BaB round 15
batch: 239
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 238] [/input.7, 706] [/input.7, 256] [/input.7, 141] [/input.7, 141] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 263 / 478 = 0.5502092050209205
pruning-in-iteration extra time: 0.012025594711303711
Time: prepare 0.0644    bound 0.5953    transfer 0.0026    finalize 0.0284    func 0.6909    
Accumulated time: func 8.7913    prepare 0.6768    bound 7.7572    transfer 0.0321    finalize 0.3281    
Current worst splitting domains lb-rhs (depth):
-0.75190 (21), -0.62814 (21), -0.61439 (21), -0.61093 (21), -0.60977 (21), -0.60809 (21), -0.59278 (21), -0.58810 (21), -0.58343 (21), -0.58279 (21), -0.56475 (21), -0.54881 (21), -0.54818 (21), -0.53932 (21), -0.53873 (21), -0.53659 (21), -0.53094 (21), -0.52446 (21), -0.51822 (21), -0.51813 (21), 
Length of domains: 215
Time: pickout 0.0023    decision 0.0529    set_bounds 0.0189    solve 0.6911    add 0.0034    
Accumulated time: pickout 0.0283    decision 0.7029    set_bounds 0.2279    solve 8.7940    add 0.0499    
Current (lb-rhs): -0.7518959045410156
2904 domains visited
Cumulative time: 9.847847700119019

BaB round 16
batch: 215
splitting decisions: 
split level 0: [/input.7, 256] [/input.7, 706] [/input.7, 238] [/input.7, 632] [/input.7, 706] [/input.7, 238] [/input.7, 706] [/input.7, 632] [/input.7, 706] [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 241 / 430 = 0.5604651162790697
pruning-in-iteration extra time: 0.013455867767333984
Time: prepare 0.0604    bound 0.4482    transfer 0.0023    finalize 0.0275    func 0.5385    
Accumulated time: func 9.3298    prepare 0.7375    bound 8.2053    transfer 0.0344    finalize 0.3556    
Current worst splitting domains lb-rhs (depth):
-0.71319 (22), -0.58036 (22), -0.56597 (22), -0.50881 (22), -0.50654 (22), -0.50159 (22), -0.49586 (22), -0.46908 (22), -0.46478 (22), -0.46257 (22), -0.45631 (22), -0.45357 (22), -0.43678 (22), -0.43177 (22), -0.43096 (22), -0.42527 (22), -0.41258 (22), -0.41253 (22), -0.40756 (22), -0.39975 (22), 
Length of domains: 189
Time: pickout 0.0023    decision 0.0501    set_bounds 0.0171    solve 0.5387    add 0.0033    
Accumulated time: pickout 0.0306    decision 0.7530    set_bounds 0.2450    solve 9.3327    add 0.0532    
Current (lb-rhs): -0.713188886642456
3093 domains visited
Cumulative time: 10.462384700775146

BaB round 17
batch: 189
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 238] [/input.7, 256] [/input.7, 238] [/input.7, 256] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 238 / 378 = 0.6296296296296297
pruning-in-iteration extra time: 0.013014078140258789
Time: prepare 0.0510    bound 0.4551    transfer 0.0023    finalize 0.0230    func 0.5316    
Accumulated time: func 9.8614    prepare 0.7888    bound 8.6604    transfer 0.0367    finalize 0.3786    
Current worst splitting domains lb-rhs (depth):
-0.46568 (23), -0.45992 (23), -0.44915 (23), -0.44650 (23), -0.41000 (23), -0.40845 (23), -0.38278 (23), -0.37613 (23), -0.36878 (23), -0.36193 (23), -0.35302 (23), -0.33486 (23), -0.32284 (23), -0.32101 (23), -0.30957 (23), -0.30871 (23), -0.30551 (23), -0.29597 (23), -0.29580 (23), -0.28996 (23), 
Length of domains: 140
Time: pickout 0.0020    decision 0.0379    set_bounds 0.0155    solve 0.5318    add 0.0028    
Accumulated time: pickout 0.0326    decision 0.7909    set_bounds 0.2605    solve 9.8644    add 0.0560    
Current (lb-rhs): -0.46567606925964355
3233 domains visited
Cumulative time: 11.055256128311157

BaB round 18
batch: 140
splitting decisions: 
split level 0: [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.11, 12] [/input.7, 256] [/input.7, 141] [/input.7, 141] [/input.7, 141] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 280 = 0.7107142857142856
pruning-in-iteration extra time: 0.013649225234985352
Time: prepare 0.0379    bound 0.4355    transfer 0.0018    finalize 0.0197    func 0.4951    
Accumulated time: func 10.3564    prepare 0.8270    bound 9.0959    transfer 0.0386    finalize 0.3983    
Current worst splitting domains lb-rhs (depth):
-0.33076 (24), -0.32590 (24), -0.30302 (24), -0.29715 (24), -0.28557 (24), -0.26448 (24), -0.26206 (24), -0.26180 (24), -0.25980 (24), -0.25507 (24), -0.25128 (24), -0.24835 (24), -0.24666 (24), -0.24292 (24), -0.23834 (24), -0.23752 (24), -0.22693 (24), -0.22292 (24), -0.22234 (24), -0.21732 (24), 
Length of domains: 81
Time: pickout 0.0012    decision 0.0426    set_bounds 0.0114    solve 0.4952    add 0.0025    
Accumulated time: pickout 0.0338    decision 0.8336    set_bounds 0.2720    solve 10.3597    add 0.0585    
Current (lb-rhs): -0.33075547218322754
3314 domains visited
Cumulative time: 11.611173391342163

BaB round 19
batch: 81
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 113] [/input.11, 12] [/input.7, 413] [/input.7, 711] [/input.7, 413] [/input.7, 711] [/input.7, 711] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 162 = 0.7407407407407407
pruning-in-iteration extra time: 0.013972043991088867
Time: prepare 0.0223    bound 0.4473    transfer 0.0013    finalize 0.0126    func 0.4836    
Accumulated time: func 10.8400    prepare 0.8496    bound 9.5432    transfer 0.0399    finalize 0.4109    
Current worst splitting domains lb-rhs (depth):
-0.25780 (25), -0.25007 (25), -0.23573 (25), -0.21692 (25), -0.18230 (25), -0.18203 (25), -0.15106 (25), -0.14585 (25), -0.14242 (25), -0.12852 (25), -0.12806 (25), -0.12789 (25), -0.11675 (25), -0.11541 (25), -0.11517 (25), -0.11072 (25), -0.10470 (25), -0.09854 (25), -0.09410 (25), -0.08811 (25), 
Length of domains: 42
Time: pickout 0.0020    decision 0.0382    set_bounds 0.0070    solve 0.4838    add 0.0022    
Accumulated time: pickout 0.0358    decision 0.8717    set_bounds 0.2789    solve 10.8435    add 0.0607    
Current (lb-rhs): -0.25780224800109863
3356 domains visited
Cumulative time: 12.145969152450562

BaB round 20
batch: 42
splitting decisions: 
split level 0: [/input.11, 12] [/input.7, 418] [/input.7, 177] [/input.11, 12] [/input.7, 581] [/input.11, 12] [/input.7, 581] [/input.7, 418] [/input.7, 711] [/input.11, 12] 
split level 1: [/input.7, 711] [/input.11, 12] [/input.7, 418] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.11, 12] [/input.11, 12] [/input.7, 413] [/input.7, 711] 
pruning_in_iteration open status: True
ratio of positive domain = 167 / 168 = 0.9940476190476191
pruning-in-iteration extra time: 0.013514041900634766
Time: prepare 0.0239    bound 0.4296    transfer 0.0013    finalize 0.0111    func 0.4658    
Accumulated time: func 11.3059    prepare 0.8739    bound 9.9728    transfer 0.0412    finalize 0.4220    
Current worst splitting domains lb-rhs (depth):
-0.00937 (27), 
Length of domains: 1
Time: pickout 0.0017    decision 0.0279    set_bounds 0.0121    solve 0.4659    add 0.0007    
Accumulated time: pickout 0.0375    decision 0.8996    set_bounds 0.2910    solve 11.3094    add 0.0614    
Current (lb-rhs): -0.009370088577270508
3357 domains visited
Cumulative time: 12.655670642852783

BaB round 21
batch: 1
splitting decisions: 
split level 0: [/input.7, 177] 
split level 1: [/input.11, 95] 
split level 2: [/input.7, 590] 
split level 3: [/input.7, 418] 
split level 4: [/input.7, 577] 
split level 5: [/input.11, 92] 
split level 6: [/input.7, 36] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0169    bound 0.0074    transfer 0.0006    finalize 0.0073    func 0.0324    
Accumulated time: func 11.3383    prepare 0.8914    bound 9.9802    transfer 0.0418    finalize 0.4293    
Length of domains: 0
Time: pickout 0.0012    decision 0.0397    set_bounds 0.0200    solve 0.0325    add 0.0001    
Accumulated time: pickout 0.0387    decision 0.9393    set_bounds 0.3110    solve 11.3419    add 0.0615    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3357 domains visited
Cumulative time: 12.74994683265686


Properties batch 3, size 1
Remaining timeout: 273.6802875995636
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.21632862]], device='cuda:0') need to verify.
torch allclose failed: norm 5.481116431838018e-07
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.21632862]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 80] 
split level 5: [/input.11, 5] 
split level 6: [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 128 = 0.734375
pruning-in-iteration extra time: 0.013890743255615234
Time: prepare 0.0075    bound 0.4356    transfer 0.0012    finalize 0.0076    func 0.4521    
Accumulated time: func 0.4521    prepare 0.0081    bound 0.4356    transfer 0.0012    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-3.96804 (7), -3.92676 (7), -3.51372 (7), -3.39502 (7), -3.25442 (7), -3.19328 (7), -3.01795 (7), -2.93195 (7), -2.87446 (7), -2.82869 (7), -2.80144 (7), -2.76419 (7), -2.70868 (7), -2.66914 (7), -2.61072 (7), -2.56186 (7), -2.50004 (7), -2.12855 (7), -2.01688 (7), -1.99631 (7), 
Length of domains: 34
Time: pickout 0.0006    decision 0.0399    set_bounds 0.0158    solve 0.4522    add 0.0020    
Accumulated time: pickout 0.0006    decision 0.0399    set_bounds 0.0158    solve 0.4522    add 0.0020    
Current (lb-rhs): -3.9680395126342773
34 domains visited
Cumulative time: 0.5177326202392578

BaB round 2
batch: 34
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.11, 59] [/input.11, 59] 
split level 1: [/input.11, 51] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 631] [/input.7, 631] [/input.7, 631] [/input.11, 51] [/input.11, 51] 
pruning_in_iteration open status: True
ratio of positive domain = 28 / 136 = 0.20588235294117652
pruning-in-iteration extra time: 0.00014925003051757812
Time: prepare 0.0144    bound 0.4018    transfer 0.0010    finalize 0.0097    func 0.4270    
Accumulated time: func 0.8791    prepare 0.0229    bound 0.8374    transfer 0.0022    finalize 0.0174    
Current worst splitting domains lb-rhs (depth):
-3.54354 (9), -3.52289 (9), -3.48394 (9), -3.41109 (9), -3.02895 (9), -2.93540 (9), -2.89868 (9), -2.85645 (9), -2.80669 (9), -2.74109 (9), -2.68696 (9), -2.48385 (9), -2.43357 (9), -2.41761 (9), -2.26725 (9), -2.24000 (9), -2.22826 (9), -2.22505 (9), -2.19346 (9), -2.17561 (9), 
Length of domains: 108
Time: pickout 0.0014    decision 0.0266    set_bounds 0.0089    solve 0.4271    add 0.0028    
Accumulated time: pickout 0.0020    decision 0.0666    set_bounds 0.0247    solve 0.8793    add 0.0048    
Current (lb-rhs): -3.54353928565979
142 domains visited
Cumulative time: 0.985271692276001

BaB round 3
batch: 108
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 56] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.7, 636] [/input.11, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 216 = 0.3287037037037037
pruning-in-iteration extra time: 0.010221481323242188
Time: prepare 0.0261    bound 0.4316    transfer 0.0017    finalize 0.0153    func 0.4748    
Accumulated time: func 1.3539    prepare 0.0494    bound 1.2690    transfer 0.0039    finalize 0.0327    
Current worst splitting domains lb-rhs (depth):
-3.42268 (10), -3.39146 (10), -3.33627 (10), -3.24819 (10), -2.90861 (10), -2.75168 (10), -2.70014 (10), -2.62854 (10), -2.61989 (10), -2.61977 (10), -2.54482 (10), -2.52450 (10), -2.44012 (10), -2.31087 (10), -2.28430 (10), -2.22641 (10), -2.20519 (10), -2.09986 (10), -2.09053 (10), -2.08212 (10), 
Length of domains: 145
Time: pickout 0.0014    decision 0.0325    set_bounds 0.0086    solve 0.4750    add 0.0029    
Accumulated time: pickout 0.0034    decision 0.0991    set_bounds 0.0333    solve 1.3543    add 0.0077    
Current (lb-rhs): -3.4226810932159424
287 domains visited
Cumulative time: 1.5069687366485596

BaB round 4
batch: 145
splitting decisions: 
split level 0: [/input.7, 631] [/input.7, 631] [/input.7, 631] [/input.11, 56] [/input.7, 631] [/input.7, 631] [/input.11, 56] [/input.11, 56] [/input.7, 631] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 81 / 290 = 0.2793103448275862
pruning-in-iteration extra time: 0.00990915298461914
Time: prepare 0.0402    bound 0.4487    transfer 0.0018    finalize 0.0181    func 0.5089    
Accumulated time: func 1.8628    prepare 0.0899    bound 1.7177    transfer 0.0057    finalize 0.0507    
Current worst splitting domains lb-rhs (depth):
-3.27834 (11), -3.24433 (11), -3.15878 (11), -3.04710 (11), -2.92563 (11), -2.74847 (11), -2.74334 (11), -2.66761 (11), -2.65488 (11), -2.57618 (11), -2.50326 (11), -2.44760 (11), -2.39628 (11), -2.38317 (11), -2.32354 (11), -2.31768 (11), -2.30200 (11), -2.26551 (11), -2.22174 (11), -2.20865 (11), 
Length of domains: 209
Time: pickout 0.0015    decision 0.0439    set_bounds 0.0101    solve 0.5091    add 0.0034    
Accumulated time: pickout 0.0050    decision 0.1430    set_bounds 0.0434    solve 1.8634    add 0.0111    
Current (lb-rhs): -3.2783381938934326
496 domains visited
Cumulative time: 2.076718330383301

BaB round 5
batch: 209
splitting decisions: 
split level 0: [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.11, 56] [/input.11, 56] [/input.7, 636] [/input.7, 631] [/input.7, 636] [/input.11, 7] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 418 = 0.26555023923444976
pruning-in-iteration extra time: 0.007923364639282227
Time: prepare 0.0594    bound 0.6214    transfer 0.0021    finalize 0.0250    func 0.7080    
Accumulated time: func 2.5708    prepare 0.1496    bound 2.3391    transfer 0.0077    finalize 0.0757    
Current worst splitting domains lb-rhs (depth):
-2.99173 (12), -2.96004 (12), -2.92440 (12), -2.86802 (12), -2.86731 (12), -2.86178 (12), -2.84032 (12), -2.59032 (12), -2.58456 (12), -2.55742 (12), -2.44894 (12), -2.42253 (12), -2.40977 (12), -2.38695 (12), -2.34933 (12), -2.33875 (12), -2.30266 (12), -2.26997 (12), -2.25858 (12), -2.24716 (12), 
Length of domains: 307
Time: pickout 0.0015    decision 0.0506    set_bounds 0.0168    solve 0.7082    add 0.0040    
Accumulated time: pickout 0.0065    decision 0.1936    set_bounds 0.0602    solve 2.5716    add 0.0151    
Current (lb-rhs): -2.9917335510253906
803 domains visited
Cumulative time: 2.8601980209350586

BaB round 6
batch: 307
splitting decisions: 
split level 0: [/input.7, 706] [/input.7, 256] [/input.7, 706] [/input.11, 99] [/input.11, 7] [/input.11, 7] [/input.7, 706] [/input.11, 7] [/input.11, 99] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 178 / 614 = 0.2899022801302932
pruning-in-iteration extra time: 0.00873565673828125
Time: prepare 0.0853    bound 0.6800    transfer 0.0025    finalize 0.0374    func 0.8053    
Accumulated time: func 3.3761    prepare 0.2353    bound 3.0191    transfer 0.0103    finalize 0.1131    
Current worst splitting domains lb-rhs (depth):
-2.81060 (13), -2.76738 (13), -2.75371 (13), -2.72137 (13), -2.68419 (13), -2.68205 (13), -2.64268 (13), -2.54366 (13), -2.47627 (13), -2.47502 (13), -2.43251 (13), -2.37961 (13), -2.35086 (13), -2.34006 (13), -2.32817 (13), -2.30129 (13), -2.29256 (13), -2.29000 (13), -2.25709 (13), -2.24509 (13), 
Length of domains: 436
Time: pickout 0.0021    decision 0.0597    set_bounds 0.0245    solve 0.8056    add 0.0052    
Accumulated time: pickout 0.0086    decision 0.2533    set_bounds 0.0848    solve 3.3771    add 0.0203    
Current (lb-rhs): -2.8105967044830322
1239 domains visited
Cumulative time: 3.760519027709961

BaB round 7
batch: 436
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 7] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.7, 581] [/input.7, 256] [/input.7, 706] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 240 / 872 = 0.27522935779816515
pruning-in-iteration extra time: 0.008884906768798828
Time: prepare 0.1222    bound 0.6347    transfer 0.0041    finalize 0.0561    func 0.8172    
Accumulated time: func 4.1933    prepare 0.3578    bound 3.6538    transfer 0.0144    finalize 0.1692    
Current worst splitting domains lb-rhs (depth):
-2.75216 (14), -2.69692 (14), -2.68456 (14), -2.61839 (14), -2.53101 (14), -2.47571 (14), -2.45588 (14), -2.44805 (14), -2.40223 (14), -2.38903 (14), -2.37521 (14), -2.35263 (14), -2.28462 (14), -2.23369 (14), -2.21160 (14), -2.19401 (14), -2.16263 (14), -2.16017 (14), -2.15099 (14), -2.14820 (14), 
Length of domains: 632
Time: pickout 0.0027    decision 0.0743    set_bounds 0.0347    solve 0.8175    add 0.0062    
Accumulated time: pickout 0.0113    decision 0.3276    set_bounds 0.1195    solve 4.1947    add 0.0265    
Current (lb-rhs): -2.75215744972229
1871 domains visited
Cumulative time: 4.7002644538879395

BaB round 8
batch: 632
splitting decisions: 
split level 0: [/input.11, 32] [/input.7, 581] [/input.7, 706] [/input.7, 706] [/input.11, 7] [/input.7, 632] [/input.7, 706] [/input.11, 7] [/input.11, 99] [/input.7, 266] 
pruning_in_iteration open status: True
ratio of positive domain = 316 / 1264 = 0.25
pruning-in-iteration extra time: 0.007444620132446289
Time: prepare 0.1778    bound 0.6507    transfer 0.0089    finalize 0.0887    func 0.9264    
Accumulated time: func 5.1197    prepare 0.5360    bound 4.3045    transfer 0.0232    finalize 0.2579    
Current worst splitting domains lb-rhs (depth):
-2.71216 (15), -2.63928 (15), -2.63708 (15), -2.54460 (15), -2.43027 (15), -2.40575 (15), -2.37690 (15), -2.35528 (15), -2.35104 (15), -2.29830 (15), -2.29355 (15), -2.27353 (15), -2.20571 (15), -2.16108 (15), -2.09663 (15), -2.09279 (15), -2.07810 (15), -2.07274 (15), -2.06709 (15), -2.06196 (15), 
Length of domains: 948
Time: pickout 0.0033    decision 0.0951    set_bounds 0.0497    solve 0.9268    add 0.0086    
Accumulated time: pickout 0.0146    decision 0.4227    set_bounds 0.1692    solve 5.1215    add 0.0351    
Current (lb-rhs): -2.7121593952178955
2819 domains visited
Cumulative time: 5.789370775222778

BaB round 9
batch: 948
splitting decisions: 
split level 0: [/input.11, 89] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.11, 99] [/input.11, 99] [/input.11, 32] [/input.11, 99] [/input.7, 581] [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 726 / 1896 = 0.38291139240506333
pruning-in-iteration extra time: 0.008972644805908203
Time: prepare 0.2646    bound 0.6998    transfer 0.0060    finalize 0.1168    func 1.0874    
Accumulated time: func 6.2070    prepare 0.8009    bound 5.0043    transfer 0.0292    finalize 0.3747    
Current worst splitting domains lb-rhs (depth):
-2.60516 (16), -2.52668 (16), -2.47095 (16), -2.39419 (16), -2.29919 (16), -2.29453 (16), -2.28752 (16), -2.24719 (16), -2.22053 (16), -2.19743 (16), -2.14801 (16), -2.09712 (16), -2.08002 (16), -2.05069 (16), -2.03214 (16), -2.02084 (16), -1.99326 (16), -1.99324 (16), -1.98543 (16), -1.98314 (16), 
Length of domains: 1170
Time: pickout 0.0043    decision 0.1269    set_bounds 0.0749    solve 1.0880    add 0.0111    
Accumulated time: pickout 0.0189    decision 0.5496    set_bounds 0.2441    solve 6.2094    add 0.0462    
Current (lb-rhs): -2.605164051055908
3989 domains visited
Cumulative time: 7.104308128356934

BaB round 10
batch: 1170
splitting decisions: 
split level 0: [/input.7, 716] [/input.7, 256] [/input.7, 716] [/input.7, 716] [/input.7, 266] [/input.7, 266] [/input.7, 706] [/input.7, 716] [/input.7, 256] [/input.7, 716] 
pruning_in_iteration open status: True
ratio of positive domain = 1052 / 2340 = 0.44957264957264953
pruning-in-iteration extra time: 0.010203838348388672
Time: prepare 0.3308    bound 0.7371    transfer 0.0079    finalize 0.1525    func 1.2286    
Accumulated time: func 7.4356    prepare 1.1321    bound 5.7414    transfer 0.0371    finalize 0.5272    
Current worst splitting domains lb-rhs (depth):
-2.46019 (17), -2.39624 (17), -2.39511 (17), -2.31100 (17), -2.21552 (17), -2.16036 (17), -2.13087 (17), -2.10752 (17), -2.10641 (17), -2.08248 (17), -2.07816 (17), -2.06743 (17), -2.00571 (17), -1.99401 (17), -1.98115 (17), -1.97811 (17), -1.93197 (17), -1.90241 (17), -1.90055 (17), -1.89436 (17), 
Length of domains: 1288
Time: pickout 0.0055    decision 0.2671    set_bounds 0.0917    solve 1.2293    add 0.0106    
Accumulated time: pickout 0.0244    decision 0.8167    set_bounds 0.3357    solve 7.4388    add 0.0568    
Current (lb-rhs): -2.4601919651031494
5277 domains visited
Cumulative time: 8.724953651428223

BaB round 11
batch: 1288
splitting decisions: 
split level 0: [/input.7, 192] [/input.11, 99] [/input.11, 89] [/input.7, 706] [/input.7, 192] [/input.7, 581] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 1271 / 2576 = 0.4934006211180124
pruning-in-iteration extra time: 0.010058879852294922
Time: prepare 0.3637    bound 0.7769    transfer 0.0203    finalize 0.1756    func 1.3368    
Accumulated time: func 8.7724    prepare 1.4961    bound 6.5183    transfer 0.0574    finalize 0.7028    
Current worst splitting domains lb-rhs (depth):
-2.33098 (18), -2.29713 (18), -2.26424 (18), -2.21500 (18), -2.09510 (18), -2.03788 (18), -1.99229 (18), -1.99136 (18), -1.97844 (18), -1.96514 (18), -1.95064 (18), -1.92133 (18), -1.90731 (18), -1.89604 (18), -1.86434 (18), -1.84409 (18), -1.84101 (18), -1.80468 (18), -1.76742 (18), -1.76617 (18), 
Length of domains: 1305
Time: pickout 0.0069    decision 0.1631    set_bounds 0.1010    solve 1.3376    add 0.0107    
Accumulated time: pickout 0.0313    decision 0.9798    set_bounds 0.4367    solve 8.7764    add 0.0675    
Current (lb-rhs): -2.3309803009033203
6582 domains visited
Cumulative time: 10.36323881149292

BaB round 12
batch: 1305
splitting decisions: 
split level 0: [/input.7, 706] [/input.7, 706] [/input.11, 89] [/input.11, 36] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 636] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 1200 / 2610 = 0.45977011494252873
pruning-in-iteration extra time: 0.009931087493896484
Time: prepare 0.3660    bound 0.7732    transfer 0.0208    finalize 0.1767    func 1.3380    
Accumulated time: func 10.1104    prepare 1.8625    bound 7.2915    transfer 0.0782    finalize 0.8796    
Current worst splitting domains lb-rhs (depth):
-2.24558 (19), -2.16708 (19), -2.13871 (19), -2.08626 (19), -2.04738 (19), -1.97438 (19), -1.94434 (19), -1.90062 (19), -1.87617 (19), -1.85776 (19), -1.85544 (19), -1.82556 (19), -1.78154 (19), -1.77688 (19), -1.76923 (19), -1.75835 (19), -1.73216 (19), -1.69859 (19), -1.67977 (19), -1.67779 (19), 
Length of domains: 1410
Time: pickout 0.0075    decision 0.1636    set_bounds 0.2215    solve 1.3388    add 0.0114    
Accumulated time: pickout 0.0388    decision 1.1434    set_bounds 0.6582    solve 10.1151    add 0.0789    
Current (lb-rhs): -2.245577812194824
7992 domains visited
Cumulative time: 12.124808073043823

BaB round 13
batch: 1410
splitting decisions: 
split level 0: [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.11, 36] [/input.11, 36] [/input.7, 256] [/input.7, 256] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 1290 / 2820 = 0.45744680851063835
pruning-in-iteration extra time: 0.010203838348388672
Time: prepare 0.3937    bound 0.7470    transfer 0.0221    finalize 0.1897    func 1.3540    
Accumulated time: func 11.4645    prepare 2.2565    bound 8.0385    transfer 0.1003    finalize 1.0693    
Current worst splitting domains lb-rhs (depth):
-2.12524 (20), -2.02916 (20), -2.00972 (20), -1.98587 (20), -1.95007 (20), -1.92168 (20), -1.88099 (20), -1.80391 (20), -1.76951 (20), -1.74838 (20), -1.72653 (20), -1.71911 (20), -1.64907 (20), -1.64621 (20), -1.64402 (20), -1.63606 (20), -1.62924 (20), -1.60995 (20), -1.59788 (20), -1.57790 (20), 
Length of domains: 1530
Time: pickout 0.0078    decision 0.1772    set_bounds 0.1124    solve 1.3548    add 0.0123    
Accumulated time: pickout 0.0465    decision 1.3206    set_bounds 0.7706    solve 11.4700    add 0.0912    
Current (lb-rhs): -2.1252408027648926
9522 domains visited
Cumulative time: 13.809488534927368

BaB round 14
batch: 1530
splitting decisions: 
split level 0: [/input.7, 577] [/input.7, 577] [/input.7, 256] [/input.7, 256] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 256] [/input.7, 238] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 1370 / 3060 = 0.44771241830065356
pruning-in-iteration extra time: 0.010015249252319336
Time: prepare 0.4339    bound 0.6941    transfer 0.0240    finalize 0.2095    func 1.3628    
Accumulated time: func 12.8273    prepare 2.6907    bound 8.7326    transfer 0.1243    finalize 1.2788    
Current worst splitting domains lb-rhs (depth):
-2.04900 (21), -1.95283 (21), -1.92645 (21), -1.90458 (21), -1.85317 (21), -1.82215 (21), -1.75814 (21), -1.73510 (21), -1.71052 (21), -1.68966 (21), -1.66767 (21), -1.61276 (21), -1.59578 (21), -1.58615 (21), -1.58599 (21), -1.57059 (21), -1.55066 (21), -1.54873 (21), -1.51557 (21), -1.51481 (21), 
Length of domains: 1690
Time: pickout 0.0082    decision 0.1892    set_bounds 0.2413    solve 1.3638    add 0.0128    
Accumulated time: pickout 0.0547    decision 1.5099    set_bounds 1.0120    solve 12.8338    add 0.1041    
Current (lb-rhs): -2.0490009784698486
11212 domains visited
Cumulative time: 15.646556377410889

BaB round 15
batch: 1690
splitting decisions: 
split level 0: [/input.3, 2241] [/input.7, 577] [/input.7, 577] [/input.7, 256] [/input.7, 577] [/input.7, 256] [/input.7, 266] [/input.7, 577] [/input.3, 2241] [/input.7, 177] 
pruning_in_iteration open status: True
ratio of positive domain = 1570 / 3380 = 0.4644970414201184
pruning-in-iteration extra time: 0.011356830596923828
Time: prepare 0.4889    bound 0.5928    transfer 0.0305    finalize 0.2361    func 1.3499    
Accumulated time: func 14.1772    prepare 3.1800    bound 9.3254    transfer 0.1548    finalize 1.5149    
Current worst splitting domains lb-rhs (depth):
-1.99013 (22), -1.86366 (22), -1.81619 (22), -1.78192 (22), -1.74163 (22), -1.72606 (22), -1.66226 (22), -1.65605 (22), -1.65332 (22), -1.62751 (22), -1.60701 (22), -1.57334 (22), -1.53570 (22), -1.52764 (22), -1.51551 (22), -1.50963 (22), -1.47750 (22), -1.46295 (22), -1.44915 (22), -1.44316 (22), 
Length of domains: 1810
Time: pickout 0.0082    decision 0.2073    set_bounds 0.1340    solve 1.3510    add 0.0156    
Accumulated time: pickout 0.0629    decision 1.7172    set_bounds 1.1460    solve 14.1848    add 0.1196    
Current (lb-rhs): -1.990128993988037
13022 domains visited
Cumulative time: 17.38941502571106

BaB round 16
batch: 1810
splitting decisions: 
split level 0: [/input.7, 177] [/input.7, 177] [/input.7, 177] [/input.3, 2241] [/input.7, 177] [/input.7, 177] [/input.7, 577] [/input.7, 177] [/input.7, 177] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 1704 / 3620 = 0.47071823204419894
pruning-in-iteration extra time: 0.010802268981933594
Time: prepare 0.5212    bound 0.6048    transfer 0.0296    finalize 0.2533    func 1.4093    
Accumulated time: func 15.5865    prepare 3.7016    bound 9.9302    transfer 0.1843    finalize 1.7682    
Current worst splitting domains lb-rhs (depth):
-1.93380 (23), -1.80757 (23), -1.74158 (23), -1.67582 (23), -1.65126 (23), -1.63625 (23), -1.59193 (23), -1.58784 (23), -1.54235 (23), -1.53322 (23), -1.53107 (23), -1.50477 (23), -1.46109 (23), -1.43311 (23), -1.42718 (23), -1.39599 (23), -1.37609 (23), -1.37187 (23), -1.36908 (23), -1.36845 (23), 
Length of domains: 1916
Time: pickout 0.0065    decision 0.3450    set_bounds 0.1432    solve 1.4109    add 0.0160    
Accumulated time: pickout 0.0694    decision 2.0622    set_bounds 1.2892    solve 15.5956    add 0.1356    
Current (lb-rhs): -1.9338030815124512
14938 domains visited
Cumulative time: 19.336028337478638

BaB round 17
batch: 1916
splitting decisions: 
split level 0: [/input.7, 192] [/input.3, 2241] [/input.3, 2241] [/input.7, 177] [/input.3, 2241] [/input.7, 192] [/input.3, 2241] [/input.3, 2241] [/input.7, 590] [/input.7, 177] 
pruning_in_iteration open status: True
ratio of positive domain = 1799 / 3832 = 0.4694676409185804
pruning-in-iteration extra time: 0.01078486442565918
Time: prepare 0.5591    bound 0.5866    transfer 0.0122    finalize 0.2680    func 1.4274    
Accumulated time: func 17.0139    prepare 4.2611    bound 10.5168    transfer 0.1965    finalize 2.0362    
Current worst splitting domains lb-rhs (depth):
-1.85765 (24), -1.71243 (24), -1.60168 (24), -1.57856 (24), -1.51323 (24), -1.48124 (24), -1.46468 (24), -1.46116 (24), -1.42932 (24), -1.41027 (24), -1.40162 (24), -1.39783 (24), -1.35297 (24), -1.33518 (24), -1.33007 (24), -1.32890 (24), -1.29498 (24), -1.29168 (24), -1.28198 (24), -1.24602 (24), 
Length of domains: 2033
Time: pickout 0.0095    decision 0.2325    set_bounds 0.2771    solve 1.4285    add 0.0173    
Accumulated time: pickout 0.0789    decision 2.2947    set_bounds 1.5662    solve 17.0241    add 0.1529    
Current (lb-rhs): -1.857654094696045
16971 domains visited
Cumulative time: 21.328709363937378

BaB round 18
batch: 2033
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 266] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 192] [/input.7, 266] [/input.7, 192] [/input.7, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 1945 / 4066 = 0.47835710772257745
pruning-in-iteration extra time: 0.010991334915161133
Time: prepare 0.6089    bound 0.6022    transfer 0.0163    finalize 0.2937    func 1.5223    
Accumulated time: func 18.5362    prepare 4.8703    bound 11.1190    transfer 0.2128    finalize 2.3298    
Current worst splitting domains lb-rhs (depth):
-1.72237 (25), -1.63622 (25), -1.51844 (25), -1.51715 (25), -1.42985 (25), -1.40395 (25), -1.38727 (25), -1.35160 (25), -1.34192 (25), -1.33863 (25), -1.33292 (25), -1.32013 (25), -1.25875 (25), -1.25166 (25), -1.22956 (25), -1.21440 (25), -1.20909 (25), -1.16942 (25), -1.16670 (25), -1.16390 (25), 
Length of domains: 2121
Time: pickout 0.0072    decision 0.2469    set_bounds 0.1613    solve 1.5234    add 0.0210    
Accumulated time: pickout 0.0861    decision 2.5416    set_bounds 1.7275    solve 18.5475    add 0.1739    
Current (lb-rhs): -1.7223680019378662
19092 domains visited
Cumulative time: 23.314862728118896

BaB round 19
batch: 2048
splitting decisions: 
split level 0: [/input.7, 266] [/input.11, 36] [/input.7, 711] [/input.11, 36] [/input.7, 577] [/input.11, 36] [/input.11, 36] [/input.7, 266] [/input.7, 266] [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 2033 / 4096 = 0.496337890625
pruning-in-iteration extra time: 0.011462211608886719
Time: prepare 0.6077    bound 0.5952    transfer 0.0235    finalize 0.2961    func 1.5240    
Accumulated time: func 20.0602    prepare 5.4784    bound 11.7142    transfer 0.2363    finalize 2.6260    
Current worst splitting domains lb-rhs (depth):
-1.64690 (26), -1.55859 (26), -1.46407 (26), -1.45187 (26), -1.37505 (26), -1.33947 (26), -1.30924 (26), -1.29363 (26), -1.26921 (26), -1.25212 (26), -1.24022 (26), -1.22984 (26), -1.20409 (26), -1.17217 (26), -1.15901 (26), -1.15249 (26), -1.13370 (26), -1.09988 (26), -1.09403 (26), -1.08421 (26), 
Length of domains: 2136
Time: pickout 0.0106    decision 0.3720    set_bounds 0.1629    solve 1.5252    add 0.0158    
Accumulated time: pickout 0.0967    decision 2.9136    set_bounds 1.8904    solve 20.0727    add 0.1898    
Current (lb-rhs): -1.6468970775604248
21155 domains visited
Cumulative time: 25.43198251724243

BaB round 20
batch: 2048
splitting decisions: 
split level 0: [/input.7, 192] [/input.7, 711] [/input.7, 637] [/input.3, 2241] [/input.7, 266] [/input.7, 266] [/input.7, 711] [/input.7, 177] [/input.3, 2241] [/input.7, 641] 
pruning_in_iteration open status: True
ratio of positive domain = 2042 / 4096 = 0.49853515625
pruning-in-iteration extra time: 0.010965347290039062
Time: prepare 0.6191    bound 0.5531    transfer 0.0133    finalize 0.2904    func 1.4774    
Accumulated time: func 21.5376    prepare 6.0979    bound 12.2674    transfer 0.2496    finalize 2.9164    
Current worst splitting domains lb-rhs (depth):
-1.49026 (27), -1.40527 (27), -1.39859 (27), -1.32553 (27), -1.32344 (27), -1.29456 (27), -1.23290 (27), -1.22937 (27), -1.19067 (27), -1.18095 (27), -1.17406 (27), -1.15330 (27), -1.15204 (27), -1.12674 (27), -1.12350 (27), -1.10663 (27), -1.09620 (27), -1.09600 (27), -1.06268 (27), -1.03096 (27), 
Length of domains: 2142
Time: pickout 0.0074    decision 0.2418    set_bounds 0.2867    solve 1.4786    add 0.0159    
Accumulated time: pickout 0.1041    decision 3.1554    set_bounds 2.1771    solve 21.5513    add 0.2057    
Current (lb-rhs): -1.4902567863464355
23209 domains visited
Cumulative time: 27.493468284606934

BaB round 21
batch: 2048
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 238] [/input.7, 177] [/input.7, 266] [/input.7, 183] [/input.7, 707] [/input.7, 581] [/input.3, 2241] [/input.7, 192] [/input.7, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 2062 / 4096 = 0.50341796875
pruning-in-iteration extra time: 0.011508703231811523
Time: prepare 0.6144    bound 0.5222    transfer 0.0144    finalize 0.2879    func 1.4401    
Accumulated time: func 22.9777    prepare 6.7126    bound 12.7896    transfer 0.2640    finalize 3.2043    
Current worst splitting domains lb-rhs (depth):
-1.36821 (28), -1.28270 (28), -1.26736 (28), -1.26338 (28), -1.26110 (28), -1.20263 (28), -1.20217 (28), -1.15894 (28), -1.15597 (28), -1.12414 (28), -1.12350 (28), -1.10848 (28), -1.06775 (28), -1.06293 (28), -1.02981 (28), -1.02862 (28), -1.01964 (28), -1.00673 (28), -1.00413 (28), -1.00042 (28), 
Length of domains: 2128
Time: pickout 0.0075    decision 0.2416    set_bounds 0.1619    solve 1.4415    add 0.0156    
Accumulated time: pickout 0.1116    decision 3.3970    set_bounds 2.3390    solve 22.9928    add 0.2213    
Current (lb-rhs): -1.3682057857513428
25243 domains visited
Cumulative time: 29.392733812332153

BaB round 22
batch: 2048
splitting decisions: 
split level 0: [/input.7, 266] [/input.3, 2229] [/input.11, 12] [/input.7, 192] [/input.7, 266] [/input.11, 12] [/input.7, 192] [/input.7, 192] [/input.7, 711] [/input.7, 711] 
pruning_in_iteration open status: True
ratio of positive domain = 2043 / 4096 = 0.498779296875
pruning-in-iteration extra time: 0.011372089385986328
Time: prepare 0.6239    bound 0.4908    transfer 0.0379    finalize 0.2896    func 1.4427    
Accumulated time: func 24.4204    prepare 7.3369    bound 13.2804    transfer 0.3020    finalize 3.4939    
Current worst splitting domains lb-rhs (depth):
-1.25923 (29), -1.25537 (29), -1.23305 (29), -1.21311 (29), -1.15256 (29), -1.14363 (29), -1.12820 (29), -1.12534 (29), -1.09573 (29), -1.09428 (29), -1.07663 (29), -1.04727 (29), -1.02237 (29), -1.01729 (29), -0.99643 (29), -0.95992 (29), -0.95490 (29), -0.95440 (29), -0.95355 (29), -0.95299 (29), 
Length of domains: 2133
Time: pickout 0.0073    decision 0.3648    set_bounds 0.1617    solve 1.4445    add 0.0172    
Accumulated time: pickout 0.1189    decision 3.7618    set_bounds 2.5007    solve 24.4373    add 0.2385    
Current (lb-rhs): -1.2592339515686035
27296 domains visited
Cumulative time: 31.417861700057983

BaB round 23
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 177] [/input.7, 36] [/input.7, 251] [/input.7, 261] [/input.7, 36] [/input.7, 261] [/input.7, 641] [/input.7, 711] [/input.7, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 2137 / 4096 = 0.521728515625
pruning-in-iteration extra time: 0.011506319046020508
Time: prepare 0.6365    bound 0.5318    transfer 0.0136    finalize 0.2903    func 1.4725    
Accumulated time: func 25.8929    prepare 7.9737    bound 13.8122    transfer 0.3156    finalize 3.7842    
Current worst splitting domains lb-rhs (depth):
-1.22668 (30), -1.15455 (30), -1.12042 (30), -1.11973 (30), -1.07796 (30), -1.06075 (30), -1.05076 (30), -1.02259 (30), -1.01478 (30), -1.01413 (30), -1.00968 (30), -1.00245 (30), -0.97862 (30), -0.96329 (30), -0.96152 (30), -0.95316 (30), -0.95044 (30), -0.92152 (30), -0.89520 (30), -0.89472 (30), 
Length of domains: 2044
Time: pickout 0.0107    decision 0.2417    set_bounds 0.2839    solve 1.4741    add 0.0148    
Accumulated time: pickout 0.1296    decision 4.0034    set_bounds 2.7847    solve 25.9115    add 0.2534    
Current (lb-rhs): -1.226684331893921
29255 domains visited
Cumulative time: 33.47070288658142

BaB round 24
batch: 2044
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.11, 12] [/input.7, 711] [/input.3, 2241] [/input.7, 266] [/input.7, 266] [/input.7, 177] [/input.7, 238] 
pruning_in_iteration open status: True
ratio of positive domain = 2051 / 4088 = 0.5017123287671232
pruning-in-iteration extra time: 0.012938737869262695
Time: prepare 0.6480    bound 0.5192    transfer 0.0156    finalize 0.2951    func 1.4793    
Accumulated time: func 27.3722    prepare 8.6222    bound 14.3314    transfer 0.3312    finalize 4.0793    
Current worst splitting domains lb-rhs (depth):
-1.15639 (31), -1.10166 (31), -1.06836 (31), -1.03428 (31), -1.03185 (31), -0.99031 (31), -0.98057 (31), -0.96144 (31), -0.96002 (31), -0.94385 (31), -0.93693 (31), -0.93352 (31), -0.92574 (31), -0.90694 (31), -0.87538 (31), -0.87192 (31), -0.86823 (31), -0.86553 (31), -0.86531 (31), -0.86504 (31), 
Length of domains: 2037
Time: pickout 0.0107    decision 0.2488    set_bounds 0.1598    solve 1.4805    add 0.0156    
Accumulated time: pickout 0.1403    decision 4.2522    set_bounds 2.9444    solve 27.3920    add 0.2689    
Current (lb-rhs): -1.1563873291015625
31292 domains visited
Cumulative time: 35.41721272468567

BaB round 25
batch: 2037
splitting decisions: 
split level 0: [/input.7, 266] [/input.7, 637] [/input.7, 711] [/input.7, 266] [/input.7, 238] [/input.7, 637] [/input.3, 2241] [/input.7, 711] [/input.7, 118] [/input.7, 118] 
pruning_in_iteration open status: True
ratio of positive domain = 2005 / 4074 = 0.4921453117329406
pruning-in-iteration extra time: 0.011809110641479492
Time: prepare 0.6708    bound 0.5446    transfer 0.0147    finalize 0.2948    func 1.5253    
Accumulated time: func 28.8974    prepare 9.2934    bound 14.8760    transfer 0.3459    finalize 4.3741    
Current worst splitting domains lb-rhs (depth):
-1.10552 (32), -1.00321 (32), -0.99928 (32), -0.97358 (32), -0.95461 (32), -0.94985 (32), -0.93577 (32), -0.90684 (32), -0.89854 (32), -0.89407 (32), -0.88891 (32), -0.88095 (32), -0.84335 (32), -0.84013 (32), -0.83441 (32), -0.83063 (32), -0.82608 (32), -0.80563 (32), -0.80435 (32), -0.79828 (32), 
Length of domains: 2069
Time: pickout 0.0074    decision 0.3936    set_bounds 0.1590    solve 1.5269    add 0.0164    
Accumulated time: pickout 0.1477    decision 4.6458    set_bounds 3.1034    solve 28.9189    add 0.2853    
Current (lb-rhs): -1.1055240631103516
33361 domains visited
Cumulative time: 37.548744201660156

BaB round 26
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 192] [/input.7, 192] [/input.7, 590] [/input.7, 423] [/input.7, 590] [/input.7, 423] [/input.3, 2241] [/input.7, 423] [/input.7, 192] 
pruning_in_iteration open status: True
ratio of positive domain = 2074 / 4096 = 0.50634765625
pruning-in-iteration extra time: 0.01199650764465332
Time: prepare 0.6785    bound 0.5142    transfer 0.0144    finalize 0.3017    func 1.5099    
Accumulated time: func 30.4073    prepare 9.9722    bound 15.3902    transfer 0.3603    finalize 4.6759    
Current worst splitting domains lb-rhs (depth):
-0.96406 (33), -0.95122 (33), -0.93310 (33), -0.93155 (33), -0.86649 (33), -0.86337 (33), -0.83759 (33), -0.83071 (33), -0.82027 (33), -0.81731 (33), -0.80890 (33), -0.80044 (33), -0.79389 (33), -0.79360 (33), -0.78412 (33), -0.76780 (33), -0.76640 (33), -0.76184 (33), -0.76091 (33), -0.75671 (33), 
Length of domains: 2043
Time: pickout 0.0097    decision 0.2408    set_bounds 0.2897    solve 1.5111    add 0.0163    
Accumulated time: pickout 0.1574    decision 4.8867    set_bounds 3.3931    solve 30.4300    add 0.3016    
Current (lb-rhs): -0.9640603065490723
35383 domains visited
Cumulative time: 39.64571475982666

BaB round 27
batch: 2043
splitting decisions: 
split level 0: [/input.11, 12] [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.11, 12] [/input.3, 2229] [/input.7, 641] [/input.7, 716] [/input.7, 637] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 2011 / 4086 = 0.4921683798335781
pruning-in-iteration extra time: 0.011948585510253906
Time: prepare 0.7038    bound 0.5722    transfer 0.0148    finalize 0.3011    func 1.5931    
Accumulated time: func 32.0004    prepare 10.6764    bound 15.9624    transfer 0.3751    finalize 4.9770    
Current worst splitting domains lb-rhs (depth):
-0.94505 (34), -0.92973 (34), -0.84895 (34), -0.82044 (34), -0.81059 (34), -0.80898 (34), -0.80791 (34), -0.79982 (34), -0.79879 (34), -0.79608 (34), -0.77382 (34), -0.77202 (34), -0.76504 (34), -0.74918 (34), -0.74874 (34), -0.72440 (34), -0.71809 (34), -0.71615 (34), -0.71310 (34), -0.69964 (34), 
Length of domains: 2075
Time: pickout 0.0091    decision 0.2476    set_bounds 0.1562    solve 1.5943    add 0.0156    
Accumulated time: pickout 0.1664    decision 5.1342    set_bounds 3.5493    solve 32.0243    add 0.3172    
Current (lb-rhs): -0.9450457096099854
37458 domains visited
Cumulative time: 41.6955885887146

BaB round 28
batch: 2048
splitting decisions: 
split level 0: [/input.3, 2241] [/input.11, 12] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 31] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 716] 
pruning_in_iteration open status: True
ratio of positive domain = 1992 / 4096 = 0.486328125
pruning-in-iteration extra time: 0.011992216110229492
Time: prepare 0.7233    bound 0.5255    transfer 0.0141    finalize 0.3132    func 1.5775    
Accumulated time: func 33.5779    prepare 11.4001    bound 16.4879    transfer 0.3892    finalize 5.2902    
Current worst splitting domains lb-rhs (depth):
-0.80471 (35), -0.79273 (35), -0.78945 (35), -0.78364 (35), -0.76975 (35), -0.74862 (35), -0.74600 (35), -0.74046 (35), -0.73703 (35), -0.72693 (35), -0.71934 (35), -0.70887 (35), -0.69695 (35), -0.68096 (35), -0.67509 (35), -0.66546 (35), -0.66381 (35), -0.66126 (35), -0.65898 (35), -0.64572 (35), 
Length of domains: 2131
Time: pickout 0.0104    decision 0.3752    set_bounds 0.1537    solve 1.5787    add 0.0174    
Accumulated time: pickout 0.1769    decision 5.5094    set_bounds 3.7030    solve 33.6031    add 0.3346    
Current (lb-rhs): -0.8047077655792236
39562 domains visited
Cumulative time: 43.86096382141113

BaB round 29
batch: 2048
splitting decisions: 
split level 0: [/input.7, 707] [/input.3, 2229] [/input.7, 251] [/input.7, 41] [/input.3, 2229] [/input.7, 707] [/input.7, 176] [/input.7, 707] [/input.7, 707] [/input.7, 176] 
pruning_in_iteration open status: True
ratio of positive domain = 1958 / 4096 = 0.47802734375
pruning-in-iteration extra time: 0.012102127075195312
Time: prepare 0.7327    bound 0.5160    transfer 0.0145    finalize 0.3076    func 1.5717    
Accumulated time: func 35.1496    prepare 12.1331    bound 17.0039    transfer 0.4036    finalize 5.5977    
Current worst splitting domains lb-rhs (depth):
-0.76975 (36), -0.74398 (36), -0.71782 (36), -0.70666 (36), -0.69410 (36), -0.68715 (36), -0.68331 (36), -0.67717 (36), -0.67412 (36), -0.67216 (36), -0.66866 (36), -0.66532 (36), -0.66135 (36), -0.64339 (36), -0.64064 (36), -0.63654 (36), -0.63080 (36), -0.62520 (36), -0.61940 (36), -0.61767 (36), 
Length of domains: 2221
Time: pickout 0.0074    decision 0.2419    set_bounds 0.2856    solve 1.5729    add 0.0174    
Accumulated time: pickout 0.1843    decision 5.7513    set_bounds 3.9886    solve 35.1759    add 0.3520    
Current (lb-rhs): -0.7697453498840332
41700 domains visited
Cumulative time: 46.014195919036865

BaB round 30
batch: 2048
splitting decisions: 
split level 0: [/input.7, 36] [/input.7, 36] [/input.7, 251] [/input.7, 251] [/input.3, 2229] [/input.7, 590] [/input.7, 251] [/input.7, 251] [/input.7, 251] [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 2013 / 4096 = 0.491455078125
pruning-in-iteration extra time: 0.012169837951660156
Time: prepare 0.7430    bound 0.4978    transfer 0.0156    finalize 0.3119    func 1.5686    
Accumulated time: func 36.7183    prepare 12.8765    bound 17.5016    transfer 0.4193    finalize 5.9096    
Current worst splitting domains lb-rhs (depth):
-0.73014 (37), -0.71359 (37), -0.70225 (37), -0.68975 (37), -0.68284 (37), -0.67906 (37), -0.67170 (37), -0.66886 (37), -0.66763 (37), -0.66534 (37), -0.65826 (37), -0.65543 (37), -0.65203 (37), -0.62243 (37), -0.62071 (37), -0.61713 (36), -0.61496 (37), -0.61264 (37), -0.60709 (37), -0.60346 (37), 
Length of domains: 2256
Time: pickout 0.0082    decision 0.2412    set_bounds 0.1574    solve 1.5704    add 0.0159    
Accumulated time: pickout 0.1925    decision 5.9926    set_bounds 4.1461    solve 36.7463    add 0.3680    
Current (lb-rhs): -0.7301392555236816
43783 domains visited
Cumulative time: 48.036221981048584

BaB round 31
batch: 2048
splitting decisions: 
split level 0: [/input.7, 712] [/input.7, 712] [/input.3, 2229] [/input.7, 32] [/input.3, 2229] [/input.7, 32] [/input.7, 176] [/input.7, 31] [/input.7, 176] [/input.3, 2229] 
pruning_in_iteration open status: True
ratio of positive domain = 2020 / 4096 = 0.4931640625
pruning-in-iteration extra time: 0.012848615646362305
Time: prepare 0.7617    bound 0.5045    transfer 0.0144    finalize 0.3154    func 1.5963    
Accumulated time: func 38.3146    prepare 13.6386    bound 18.0061    transfer 0.4336    finalize 6.2250    
Current worst splitting domains lb-rhs (depth):
-0.70359 (38), -0.69226 (38), -0.67985 (38), -0.67280 (38), -0.66869 (38), -0.66534 (38), -0.65819 (38), -0.65640 (38), -0.65543 (38), -0.65203 (38), -0.62933 (38), -0.62165 (38), -0.61713 (36), -0.61092 (38), -0.60701 (38), -0.60477 (38), -0.60247 (38), -0.60145 (38), -0.59844 (38), -0.59470 (38), 
Length of domains: 2284
Time: pickout 0.0081    decision 0.2424    set_bounds 0.2791    solve 1.5978    add 0.0159    
Accumulated time: pickout 0.2006    decision 6.2350    set_bounds 4.4252    solve 38.3441    add 0.3838    
Current (lb-rhs): -0.7035906314849854
45859 domains visited
Cumulative time: 50.206141233444214

BaB round 32
batch: 2048
splitting decisions: 
split level 0: [/input.7, 635] [/input.7, 251] [/input.7, 635] [/input.7, 176] [/input.7, 139] [/input.7, 423] [/input.7, 251] [/input.7, 251] [/input.7, 251] [/input.3, 2229] 
pruning_in_iteration open status: True
ratio of positive domain = 2138 / 4096 = 0.52197265625
pruning-in-iteration extra time: 0.011844396591186523
Time: prepare 0.7725    bound 0.5422    transfer 0.0142    finalize 0.3182    func 1.7794    
Accumulated time: func 40.0940    prepare 14.4115    bound 18.5483    transfer 0.4478    finalize 6.5432    
Current worst splitting domains lb-rhs (depth):
-0.69217 (39), -0.67961 (39), -0.67267 (39), -0.66331 (39), -0.65592 (39), -0.65294 (39), -0.64998 (39), -0.64591 (39), -0.61845 (39), -0.61713 (36), -0.60190 (39), -0.60184 (39), -0.59709 (39), -0.59425 (39), -0.59382 (39), -0.58972 (39), -0.58956 (39), -0.58480 (39), -0.58293 (39), -0.58035 (34), 
Length of domains: 2194
Time: pickout 0.0110    decision 0.2409    set_bounds 0.1583    solve 1.7805    add 0.0145    
Accumulated time: pickout 0.2116    decision 6.4759    set_bounds 4.5835    solve 40.1247    add 0.3983    
Current (lb-rhs): -0.6921741962432861
47817 domains visited
Cumulative time: 52.44223093986511

BaB round 33
batch: 2048
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 31] [/input.7, 637] [/input.7, 139] [/input.7, 139] [/input.7, 139] [/input.7, 139] [/input.7, 139] [/input.7, 176] [/input.7, 251] 
pruning_in_iteration open status: True
ratio of positive domain = 2253 / 4096 = 0.550048828125
pruning-in-iteration extra time: 0.010765314102172852
Time: prepare 0.7729    bound 0.5501    transfer 0.0143    finalize 0.3204    func 1.6581    
Accumulated time: func 41.7521    prepare 15.1847    bound 19.0984    transfer 0.4621    finalize 6.8636    
Current worst splitting domains lb-rhs (depth):
-0.62744 (40), -0.61713 (36), -0.61517 (40), -0.60789 (40), -0.60701 (40), -0.60303 (40), -0.60188 (40), -0.60165 (40), -0.59813 (40), -0.59512 (40), -0.59185 (40), -0.58035 (34), -0.55714 (36), -0.55680 (40), -0.55009 (40), -0.54796 (37), -0.54265 (40), -0.54199 (40), -0.54150 (40), -0.53766 (40), 
Length of domains: 1989
Time: pickout 0.0078    decision 0.2419    set_bounds 0.1592    solve 1.6598    add 0.0138    
Accumulated time: pickout 0.2194    decision 6.7178    set_bounds 4.7427    solve 41.7844    add 0.4121    
Current (lb-rhs): -0.6274402141571045
49660 domains visited
Cumulative time: 54.556867599487305

BaB round 34
batch: 1989
splitting decisions: 
split level 0: [/input.7, 251] [/input.7, 707] [/input.7, 707] [/input.7, 423] [/input.7, 423] [/input.7, 423] [/input.7, 192] [/input.7, 632] [/input.3, 2241] [/input.3, 2241] 
pruning_in_iteration open status: True
ratio of positive domain = 2198 / 3978 = 0.5525389643036702
pruning-in-iteration extra time: 0.010887622833251953
Time: prepare 0.7482    bound 0.5722    transfer 0.0129    finalize 0.4343    func 1.7688    
Accumulated time: func 43.5209    prepare 15.9333    bound 19.6706    transfer 0.4750    finalize 7.2979    
Current worst splitting domains lb-rhs (depth):
-0.61230 (41), -0.59828 (37), -0.59747 (41), -0.59293 (41), -0.57884 (41), -0.57821 (41), -0.57710 (41), -0.57694 (41), -0.55540 (41), -0.55028 (41), -0.55009 (41), -0.54816 (41), -0.54796 (38), -0.54205 (41), -0.53942 (37), -0.53144 (41), -0.53085 (41), -0.52073 (41), -0.51929 (41), -0.51710 (41), 
Length of domains: 1780
Time: pickout 0.0076    decision 0.2417    set_bounds 0.1536    solve 1.7699    add 0.0140    
Accumulated time: pickout 0.2270    decision 6.9596    set_bounds 4.8963    solve 43.5543    add 0.4261    
Current (lb-rhs): -0.6123018264770508
51440 domains visited
Cumulative time: 56.77636671066284

BaB round 35
batch: 1780
splitting decisions: 
split level 0: [/input.7, 707] [/input.3, 2241] [/input.3, 2241] [/input.7, 176] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 2020 / 3560 = 0.5674157303370786
pruning-in-iteration extra time: 0.010258197784423828
Time: prepare 0.6816    bound 0.6871    transfer 0.0115    finalize 0.2810    func 1.6616    
Accumulated time: func 45.1824    prepare 16.6152    bound 20.3577    transfer 0.4865    finalize 7.5789    
Current worst splitting domains lb-rhs (depth):
-0.58320 (42), -0.56858 (42), -0.56635 (42), -0.56632 (42), -0.56090 (42), -0.56090 (42), -0.54639 (42), -0.54322 (38), -0.53609 (42), -0.53364 (42), -0.53164 (42), -0.52577 (42), -0.52102 (38), -0.52073 (42), -0.51600 (42), -0.50761 (42), -0.49377 (39), -0.49372 (42), -0.48961 (42), -0.48400 (42), 
Length of domains: 1540
Time: pickout 0.0070    decision 0.2177    set_bounds 0.1396    solve 1.6631    add 0.0123    
Accumulated time: pickout 0.2340    decision 7.1773    set_bounds 5.0359    solve 45.2175    add 0.4384    
Current (lb-rhs): -0.5831968784332275
52980 domains visited
Cumulative time: 58.84302067756653

BaB round 36
batch: 1540
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 707] [/input.7, 176] [/input.7, 251] [/input.7, 176] [/input.7, 139] [/input.7, 31] [/input.7, 139] [/input.7, 712] [/input.7, 635] 
pruning_in_iteration open status: True
ratio of positive domain = 1708 / 3080 = 0.5545454545454546
pruning-in-iteration extra time: 0.010624408721923828
Time: prepare 0.7141    bound 0.7381    transfer 0.0099    finalize 0.2271    func 1.6907    
Accumulated time: func 46.8731    prepare 17.3297    bound 21.0958    transfer 0.4964    finalize 7.8061    
Current worst splitting domains lb-rhs (depth):
-0.57428 (43), -0.55732 (43), -0.55730 (43), -0.55058 (43), -0.54482 (43), -0.54322 (39), -0.53484 (43), -0.52479 (43), -0.52090 (43), -0.51997 (43), -0.51600 (43), -0.51332 (43), -0.50936 (43), -0.50761 (43), -0.49802 (43), -0.49057 (40), -0.47471 (39), -0.47109 (43), -0.47059 (43), -0.46551 (43), 
Length of domains: 1372
Time: pickout 0.0088    decision 0.1903    set_bounds 0.1205    solve 1.6916    add 0.0116    
Accumulated time: pickout 0.2428    decision 7.3676    set_bounds 5.1564    solve 46.9091    add 0.4500    
Current (lb-rhs): -0.57427978515625
54352 domains visited
Cumulative time: 60.88988518714905

BaB round 37
batch: 1372
splitting decisions: 
split level 0: [/input.7, 590] [/input.7, 31] [/input.7, 251] [/input.7, 423] [/input.7, 635] [/input.7, 251] [/input.7, 251] [/input.11, 12] [/input.7, 176] [/input.7, 31] 
pruning_in_iteration open status: True
ratio of positive domain = 1567 / 2744 = 0.5710641399416909
pruning-in-iteration extra time: 0.010127067565917969
Time: prepare 0.5294    bound 0.7101    transfer 0.0090    finalize 0.1960    func 1.4449    
Accumulated time: func 48.3180    prepare 17.8595    bound 21.8059    transfer 0.5055    finalize 8.0021    
Current worst splitting domains lb-rhs (depth):
-0.55024 (44), -0.53547 (44), -0.53205 (44), -0.53205 (40), -0.51295 (44), -0.50920 (44), -0.50716 (44), -0.50538 (44), -0.50158 (44), -0.49750 (44), -0.49653 (44), -0.49056 (44), -0.48838 (44), -0.47429 (41), -0.47226 (44), -0.46109 (44), -0.45950 (44), -0.45565 (44), -0.45023 (44), -0.44693 (44), 
Length of domains: 1177
Time: pickout 0.0053    decision 0.1724    set_bounds 0.1081    solve 1.4457    add 0.0099    
Accumulated time: pickout 0.2481    decision 7.5399    set_bounds 5.2645    solve 48.3548    add 0.4599    
Current (lb-rhs): -0.5502414703369141
55529 domains visited
Cumulative time: 62.65214419364929

BaB round 38
batch: 1177
splitting decisions: 
split level 0: [/input.7, 176] [/input.7, 635] [/input.7, 176] [/input.7, 31] [/input.7, 635] [/input.7, 423] [/input.7, 176] [/input.7, 176] [/input.7, 176] [/input.7, 251] 
pruning_in_iteration open status: True
ratio of positive domain = 1344 / 2354 = 0.5709430756159728
pruning-in-iteration extra time: 0.010133981704711914
Time: prepare 0.4597    bound 0.7663    transfer 0.0082    finalize 0.1651    func 1.4010    
Accumulated time: func 49.7190    prepare 18.3196    bound 22.5722    transfer 0.5137    finalize 8.1672    
Current worst splitting domains lb-rhs (depth):
-0.52134 (45), -0.50685 (45), -0.49540 (45), -0.48675 (41), -0.47681 (45), -0.46427 (42), -0.45922 (45), -0.45226 (45), -0.45124 (45), -0.44749 (45), -0.43421 (45), -0.43295 (45), -0.42938 (45), -0.42823 (45), -0.42534 (45), -0.42534 (45), -0.42162 (45), -0.42111 (45), -0.41784 (45), -0.41738 (45), 
Length of domains: 1010
Time: pickout 0.0062    decision 0.1502    set_bounds 0.0918    solve 1.4017    add 0.0088    
Accumulated time: pickout 0.2544    decision 7.6902    set_bounds 5.3562    solve 49.7565    add 0.4686    
Current (lb-rhs): -0.5213446617126465
56539 domains visited
Cumulative time: 64.32830691337585

BaB round 39
batch: 1010
splitting decisions: 
split level 0: [/input.7, 176] [/input.7, 176] [/input.7, 176] [/input.7, 32] [/input.7, 32] [/input.7, 712] [/input.11, 12] [/input.7, 36] [/input.7, 176] [/input.7, 176] 
pruning_in_iteration open status: True
ratio of positive domain = 1121 / 2020 = 0.554950495049505
pruning-in-iteration extra time: 0.010477304458618164
Time: prepare 0.3989    bound 0.6657    transfer 0.0087    finalize 0.2653    func 1.3389    
Accumulated time: func 51.0579    prepare 18.7189    bound 23.2379    transfer 0.5224    finalize 8.4325    
Current worst splitting domains lb-rhs (depth):
-0.47210 (42), -0.44094 (43), -0.43203 (46), -0.42721 (46), -0.42643 (46), -0.42043 (46), -0.41752 (46), -0.41539 (46), -0.40965 (46), -0.40854 (46), -0.40145 (46), -0.40075 (46), -0.40034 (46), -0.39940 (46), -0.39750 (46), -0.39668 (46), -0.39248 (46), -0.38977 (46), -0.38452 (45), -0.38081 (46), 
Length of domains: 899
Time: pickout 0.0100    decision 0.1429    set_bounds 0.0832    solve 1.3403    add 0.0088    
Accumulated time: pickout 0.2643    decision 7.8330    set_bounds 5.4394    solve 51.0968    add 0.4774    
Current (lb-rhs): -0.47209620475769043
57438 domains visited
Cumulative time: 65.93183994293213

BaB round 40
batch: 899
splitting decisions: 
split level 0: [/input.7, 176] [/input.7, 176] [/input.7, 176] [/input.7, 32] [/input.7, 176] [/input.7, 176] [/input.7, 423] [/input.7, 262] [/input.7, 262] [/input.7, 635] 
pruning_in_iteration open status: True
ratio of positive domain = 1055 / 1798 = 0.5867630700778643
pruning-in-iteration extra time: 0.010530233383178711
Time: prepare 0.3503    bound 0.7301    transfer 0.0099    finalize 0.1354    func 1.2260    
Accumulated time: func 52.2839    prepare 19.0695    bound 23.9680    transfer 0.5324    finalize 8.5679    
Current worst splitting domains lb-rhs (depth):
-0.44144 (43), -0.43230 (44), -0.41080 (47), -0.40333 (47), -0.40231 (47), -0.39884 (47), -0.38639 (47), -0.38367 (47), -0.37541 (47), -0.37259 (47), -0.36476 (47), -0.35602 (47), -0.35583 (47), -0.35457 (47), -0.35389 (47), -0.35131 (47), -0.35063 (47), -0.33051 (47), -0.32785 (47), -0.32329 (47), 
Length of domains: 743
Time: pickout 0.0043    decision 0.1210    set_bounds 0.0714    solve 1.2265    add 0.0078    
Accumulated time: pickout 0.2686    decision 7.9540    set_bounds 5.5108    solve 52.3234    add 0.4853    
Current (lb-rhs): -0.4414353370666504
58181 domains visited
Cumulative time: 67.37837791442871

BaB round 41
batch: 743
splitting decisions: 
split level 0: [/input.7, 176] [/input.7, 31] [/input.7, 635] [/input.7, 262] [/input.7, 262] [/input.7, 635] [/input.7, 262] [/input.7, 635] [/input.7, 31] [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 891 / 1486 = 0.5995962314939435
pruning-in-iteration extra time: 0.010128974914550781
Time: prepare 0.2919    bound 0.6849    transfer 0.0055    finalize 0.1068    func 1.0894    
Accumulated time: func 53.3733    prepare 19.3618    bound 24.6529    transfer 0.5378    finalize 8.6747    
Current worst splitting domains lb-rhs (depth):
-0.41166 (44), -0.40409 (45), -0.38311 (48), -0.37251 (48), -0.37218 (48), -0.36991 (48), -0.36574 (48), -0.34922 (48), -0.34912 (48), -0.34700 (48), -0.34465 (48), -0.34379 (48), -0.33349 (48), -0.32351 (48), -0.32042 (48), -0.30952 (48), -0.30900 (48), -0.30444 (48), -0.30288 (48), -0.30078 (48), 
Length of domains: 595
Time: pickout 0.0044    decision 0.1056    set_bounds 0.0587    solve 1.0898    add 0.0060    
Accumulated time: pickout 0.2730    decision 8.0597    set_bounds 5.5695    solve 53.4132    add 0.4913    
Current (lb-rhs): -0.4116644859313965
58776 domains visited
Cumulative time: 68.65632963180542

BaB round 42
batch: 595
splitting decisions: 
split level 0: [/input.7, 635] [/input.7, 712] [/input.7, 712] [/input.7, 712] [/input.7, 635] [/input.7, 262] [/input.7, 635] [/input.7, 712] [/input.7, 712] [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 729 / 1190 = 0.6126050420168068
pruning-in-iteration extra time: 0.010332107543945312
Time: prepare 0.2344    bound 0.6981    transfer 0.0072    finalize 0.0942    func 1.0341    
Accumulated time: func 54.4073    prepare 19.5965    bound 25.3510    transfer 0.5451    finalize 8.7689    
Current worst splitting domains lb-rhs (depth):
-0.35738 (45), -0.34564 (49), -0.34310 (49), -0.33111 (49), -0.32915 (49), -0.32886 (49), -0.32240 (49), -0.32179 (49), -0.32129 (49), -0.32038 (49), -0.31838 (49), -0.30784 (49), -0.30268 (46), -0.30018 (49), -0.29420 (46), -0.29168 (49), -0.28765 (49), -0.28716 (49), -0.27430 (46), -0.26881 (49), 
Length of domains: 461
Time: pickout 0.0033    decision 0.0840    set_bounds 0.0463    solve 1.0345    add 0.0064    
Accumulated time: pickout 0.2763    decision 8.1437    set_bounds 5.6158    solve 54.4476    add 0.4977    
Current (lb-rhs): -0.3573777675628662
59237 domains visited
Cumulative time: 69.840891122818

BaB round 43
batch: 461
splitting decisions: 
split level 0: [/input.7, 36] [/input.7, 176] [/input.7, 36] [/input.7, 712] [/input.7, 176] [/input.7, 176] [/input.7, 635] [/input.7, 176] [/input.7, 712] [/input.7, 176] 
pruning_in_iteration open status: True
ratio of positive domain = 563 / 922 = 0.6106290672451193
pruning-in-iteration extra time: 0.011580705642700195
Time: prepare 0.1797    bound 0.5992    transfer 0.0039    finalize 0.0659    func 0.8506    
Accumulated time: func 55.2579    prepare 19.7766    bound 25.9502    transfer 0.5490    finalize 8.8348    
Current worst splitting domains lb-rhs (depth):
-0.33320 (50), -0.31814 (50), -0.30419 (50), -0.30208 (50), -0.30015 (50), -0.29918 (50), -0.29562 (47), -0.29546 (50), -0.29374 (50), -0.27191 (50), -0.26086 (46), -0.25945 (50), -0.25798 (50), -0.25199 (50), -0.24957 (50), -0.24838 (47), -0.24193 (46), -0.24093 (50), -0.23653 (46), -0.23357 (50), 
Length of domains: 359
Time: pickout 0.0041    decision 0.0657    set_bounds 0.0360    solve 0.8509    add 0.0045    
Accumulated time: pickout 0.2804    decision 8.2094    set_bounds 5.6518    solve 55.2985    add 0.5022    
Current (lb-rhs): -0.33319997787475586
59596 domains visited
Cumulative time: 70.80973935127258

BaB round 44
batch: 359
splitting decisions: 
split level 0: [/input.7, 36] [/input.7, 176] [/input.7, 176] [/input.7, 176] [/input.7, 317] [/input.7, 317] [/input.7, 36] [/input.7, 36] [/input.7, 257] [/input.7, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 433 / 718 = 0.6030640668523677
pruning-in-iteration extra time: 0.011316776275634766
Time: prepare 0.1389    bound 0.6433    transfer 0.0030    finalize 0.0510    func 0.8363    
Accumulated time: func 56.0943    prepare 19.9158    bound 26.5935    transfer 0.5520    finalize 8.8858    
Current worst splitting domains lb-rhs (depth):
-0.26696 (48), -0.24530 (51), -0.24113 (48), -0.23751 (47), -0.23259 (51), -0.23122 (51), -0.22955 (51), -0.22854 (51), -0.22840 (51), -0.22622 (51), -0.22514 (47), -0.21605 (51), -0.21389 (51), -0.21340 (51), -0.21051 (51), -0.20972 (51), -0.20968 (51), -0.20678 (51), -0.20583 (51), -0.20380 (51), 
Length of domains: 285
Time: pickout 0.0034    decision 0.0547    set_bounds 0.0283    solve 0.8366    add 0.0036    
Accumulated time: pickout 0.2838    decision 8.2641    set_bounds 5.6801    solve 56.1351    add 0.5058    
Current (lb-rhs): -0.26695871353149414
59881 domains visited
Cumulative time: 71.74269580841064

BaB round 45
batch: 285
splitting decisions: 
split level 0: [/input.7, 257] [/input.7, 423] [/input.7, 194] [/input.7, 183] [/input.7, 183] [/input.7, 257] [/input.3, 2214] [/input.7, 183] [/input.3, 2214] [/input.7, 194] 
pruning_in_iteration open status: True
ratio of positive domain = 375 / 570 = 0.6578947368421053
pruning-in-iteration extra time: 0.01202249526977539
Time: prepare 0.1110    bound 0.5579    transfer 0.0032    finalize 0.0423    func 0.7145    
Accumulated time: func 56.8088    prepare 20.0271    bound 27.1514    transfer 0.5551    finalize 8.9281    
Current worst splitting domains lb-rhs (depth):
-0.22528 (49), -0.22234 (52), -0.22115 (49), -0.20758 (52), -0.20604 (52), -0.20402 (52), -0.19753 (52), -0.19286 (52), -0.19186 (52), -0.18253 (52), -0.17738 (52), -0.17616 (48), -0.17550 (48), -0.17378 (52), -0.17303 (52), -0.16980 (52), -0.16928 (52), -0.16887 (52), -0.16449 (52), -0.16089 (52), 
Length of domains: 195
Time: pickout 0.0031    decision 0.0570    set_bounds 0.0231    solve 0.7147    add 0.0033    
Accumulated time: pickout 0.2869    decision 8.3211    set_bounds 5.7032    solve 56.8498    add 0.5091    
Current (lb-rhs): -0.2252819538116455
60076 domains visited
Cumulative time: 72.5492091178894

BaB round 46
batch: 195
splitting decisions: 
split level 0: [/input.7, 194] [/input.7, 194] [/input.3, 2214] [/input.3, 2214] [/input.3, 2214] [/input.3, 2214] [/input.3, 2214] [/input.7, 194] [/input.7, 118] [/input.7, 118] 
pruning_in_iteration open status: True
ratio of positive domain = 245 / 390 = 0.6282051282051282
pruning-in-iteration extra time: 0.012177705764770508
Time: prepare 0.0775    bound 0.5108    transfer 0.0026    finalize 0.0312    func 0.6224    
Accumulated time: func 57.4312    prepare 20.1049    bound 27.6622    transfer 0.5577    finalize 8.9593    
Current worst splitting domains lb-rhs (depth):
-0.19715 (53), -0.19479 (50), -0.18724 (53), -0.18233 (53), -0.18000 (53), -0.17755 (53), -0.17242 (53), -0.16724 (53), -0.16540 (49), -0.15896 (53), -0.15668 (53), -0.15425 (53), -0.14516 (53), -0.13634 (50), -0.13549 (53), -0.13332 (53), -0.13228 (53), -0.13178 (53), -0.13108 (53), -0.12852 (53), 
Length of domains: 145
Time: pickout 0.0026    decision 0.0485    set_bounds 0.0157    solve 0.6225    add 0.0029    
Accumulated time: pickout 0.2895    decision 8.3696    set_bounds 5.7189    solve 57.4724    add 0.5120    
Current (lb-rhs): -0.19715213775634766
60221 domains visited
Cumulative time: 73.24496030807495

BaB round 47
batch: 145
splitting decisions: 
split level 0: [/input.7, 257] [/input.7, 238] [/input.7, 238] [/input.7, 257] [/input.7, 257] [/input.7, 146] [/input.7, 146] [/input.7, 146] [/input.7, 238] [/input.7, 146] 
pruning_in_iteration open status: True
ratio of positive domain = 202 / 290 = 0.6965517241379311
pruning-in-iteration extra time: 0.011710166931152344
Time: prepare 0.0569    bound 0.5262    transfer 0.0017    finalize 0.0220    func 0.6070    
Accumulated time: func 58.0381    prepare 20.1622    bound 28.1884    transfer 0.5594    finalize 8.9814    
Current worst splitting domains lb-rhs (depth):
-0.16979 (54), -0.16037 (54), -0.15903 (51), -0.15474 (54), -0.14659 (54), -0.14174 (54), -0.13200 (54), -0.11913 (54), -0.11561 (51), -0.11554 (54), -0.11031 (54), -0.10986 (54), -0.10819 (54), -0.10366 (54), -0.10291 (54), -0.09506 (54), -0.09034 (54), -0.09022 (54), -0.08960 (54), -0.08933 (54), 
Length of domains: 88
Time: pickout 0.0022    decision 0.0394    set_bounds 0.0119    solve 0.6072    add 0.0024    
Accumulated time: pickout 0.2918    decision 8.4090    set_bounds 5.7307    solve 58.0795    add 0.5144    
Current (lb-rhs): -0.16979336738586426
60309 domains visited
Cumulative time: 73.91101002693176

BaB round 48
batch: 88
splitting decisions: 
split level 0: [/input.3, 2241] [/input.7, 247] [/input.7, 183] [/input.7, 183] [/input.7, 183] [/input.3, 2241] [/input.7, 183] [/input.7, 183] [/input.7, 183] [/input.7, 183] 
pruning_in_iteration open status: True
ratio of positive domain = 125 / 176 = 0.7102272727272727
pruning-in-iteration extra time: 0.01302790641784668
Time: prepare 0.0339    bound 0.5003    transfer 0.0013    finalize 0.0142    func 0.5499    
Accumulated time: func 58.5880    prepare 20.1965    bound 28.6888    transfer 0.5607    finalize 8.9956    
Current worst splitting domains lb-rhs (depth):
-0.11334 (55), -0.10695 (55), -0.08864 (55), -0.08780 (55), -0.08409 (55), -0.07986 (52), -0.07918 (55), -0.07591 (55), -0.07182 (55), -0.07125 (55), -0.07122 (55), -0.07092 (52), -0.06622 (55), -0.05615 (55), -0.05392 (55), -0.05349 (51), -0.04863 (55), -0.04800 (55), -0.04623 (55), -0.04566 (55), 
Length of domains: 51
Time: pickout 0.0019    decision 0.0334    set_bounds 0.0074    solve 0.5500    add 0.0023    
Accumulated time: pickout 0.2937    decision 8.4424    set_bounds 5.7381    solve 58.6295    add 0.5166    
Current (lb-rhs): -0.11333727836608887
60360 domains visited
Cumulative time: 74.50810694694519

BaB round 49
batch: 51
splitting decisions: 
split level 0: [/input.7, 303] [/input.7, 183] [/input.7, 247] [/input.7, 247] [/input.7, 247] [/input.7, 247] [/input.7, 146] [/input.7, 118] [/input.7, 262] [/input.7, 238] 
split level 1: [/input.3, 2283] [/input.3, 2241] [/input.7, 418] [/input.7, 418] [/input.7, 418] [/input.7, 418] [/input.3, 2283] [/input.7, 183] [/input.3, 2241] [/input.7, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 193 / 204 = 0.946078431372549
pruning-in-iteration extra time: 0.013496160507202148
Time: prepare 0.0398    bound 0.4504    transfer 0.0015    finalize 0.0167    func 0.5085    
Accumulated time: func 59.0965    prepare 20.2366    bound 29.1392    transfer 0.5622    finalize 9.0123    
Current worst splitting domains lb-rhs (depth):
-0.03479 (57), -0.02337 (57), -0.01889 (57), -0.01269 (57), -0.00990 (57), -0.00765 (57), -0.00694 (57), -0.00333 (57), -0.00317 (57), -0.00303 (57), -0.00128 (57), 
Length of domains: 11
Time: pickout 0.0016    decision 0.0295    set_bounds 0.0142    solve 0.5087    add 0.0016    
Accumulated time: pickout 0.2953    decision 8.4719    set_bounds 5.7524    solve 59.1382    add 0.5182    
Current (lb-rhs): -0.03478646278381348
60371 domains visited
Cumulative time: 75.06612372398376

BaB round 50
batch: 11
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 317] [/input.7, 183] [/input.7, 303] [/input.7, 303] [/input.7, 238] [/input.7, 238] [/input.3, 2243] [/input.7, 317] [/input.7, 317] 
split level 1: [/input.3, 2241] [/input.7, 303] [/input.7, 303] [/input.7, 260] [/input.7, 260] [/input.3, 2241] [/input.3, 2241] [/input.7, 303] [/input.7, 260] [/input.3, 2243] 
split level 2: [/input.3, 2243] [/input.7, 260] [/input.7, 260] [/input.11, 84] [/input.11, 84] [/input.3, 2243] [/input.3, 2243] [/input.3, 2241] [/input.3, 2243] [/input.3, 2241] 
split level 3: [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 176 / 176 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0350    bound 0.0077    transfer 0.0008    finalize 0.0131    func 0.0566    
Accumulated time: func 59.1531    prepare 20.2719    bound 29.1468    transfer 0.5631    finalize 9.0254    
Length of domains: 0
Time: pickout 0.0018    decision 0.0353    set_bounds 0.0199    solve 0.0567    add 0.0001    
Accumulated time: pickout 0.2971    decision 8.5072    set_bounds 5.7723    solve 59.1949    add 0.5183    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
60371 domains visited
Cumulative time: 75.18128681182861


Properties batch 4, size 1
Remaining timeout: 198.30506134033203
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.14562321]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.14562321]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 7] 
split level 4: [/input.11, 33] 
split level 5: [/input.11, 84] 
split level 6: [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 128 = 0.921875
pruning-in-iteration extra time: 0.012146472930908203
Time: prepare 0.0076    bound 0.4751    transfer 0.0011    finalize 0.0082    func 0.4920    
Accumulated time: func 0.4920    prepare 0.0082    bound 0.4751    transfer 0.0011    finalize 0.0082    
Current worst splitting domains lb-rhs (depth):
-0.80000 (7), -0.76699 (7), -0.60171 (7), -0.54938 (7), -0.48623 (7), -0.45240 (7), -0.43978 (7), -0.38809 (7), -0.27525 (7), -0.01063 (7), 
Length of domains: 10
Time: pickout 0.0006    decision 0.0494    set_bounds 0.0159    solve 0.4921    add 0.0016    
Accumulated time: pickout 0.0006    decision 0.0494    set_bounds 0.0159    solve 0.4921    add 0.0016    
Current (lb-rhs): -0.8000016212463379
10 domains visited
Cumulative time: 0.5670249462127686

BaB round 2
batch: 10
splitting decisions: 
split level 0: [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] 
split level 1: [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.11, 14] [/input.7, 238] 
split level 2: [/input.11, 81] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 81] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 238] [/input.11, 14] 
split level 3: [/input.11, 14] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 14] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0208    bound 0.0120    transfer 0.0008    finalize 0.0092    func 0.0429    
Accumulated time: func 0.5349    prepare 0.0295    bound 0.4871    transfer 0.0019    finalize 0.0174    
Length of domains: 0
Time: pickout 0.0013    decision 0.0363    set_bounds 0.0157    solve 0.0430    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0857    set_bounds 0.0317    solve 0.5351    add 0.0017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 0.6647160053253174


Properties batch 5, size 1
Remaining timeout: 197.32025241851807
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.98774385]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.98774385]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 95] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 99] 
split level 6: [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.011605501174926758
Time: prepare 0.0075    bound 0.4690    transfer 0.0011    finalize 0.0070    func 0.4847    
Accumulated time: func 0.4847    prepare 0.0081    bound 0.4690    transfer 0.0011    finalize 0.0070    
Current worst splitting domains lb-rhs (depth):
-1.35793 (7), -1.32980 (7), -1.21680 (7), -1.21437 (7), -0.89785 (7), -0.87452 (7), -0.84002 (7), -0.82118 (7), -0.81691 (7), -0.81249 (7), -0.69470 (7), -0.44761 (7), -0.42811 (7), -0.42672 (7), -0.24725 (7), -0.01452 (7), 
Length of domains: 16
Time: pickout 0.0007    decision 0.0416    set_bounds 0.0159    solve 0.4848    add 0.0019    
Accumulated time: pickout 0.0007    decision 0.0416    set_bounds 0.0159    solve 0.4848    add 0.0019    
Current (lb-rhs): -1.357933521270752
16 domains visited
Cumulative time: 0.5522890090942383

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] 
split level 1: [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
split level 2: [/input.7, 636] [/input.7, 636] [/input.11, 63] [/input.11, 63] [/input.7, 636] [/input.7, 716] [/input.7, 716] [/input.7, 636] [/input.7, 636] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 102 / 128 = 0.796875
pruning-in-iteration extra time: 0.011466264724731445
Time: prepare 0.0146    bound 0.4471    transfer 0.0010    finalize 0.0076    func 0.4704    
Accumulated time: func 0.9551    prepare 0.0230    bound 0.9161    transfer 0.0021    finalize 0.0147    
Current worst splitting domains lb-rhs (depth):
-0.81148 (10), -0.76961 (10), -0.58924 (10), -0.58462 (10), -0.58035 (10), -0.57825 (10), -0.43630 (10), -0.38997 (10), -0.36161 (10), -0.33625 (10), -0.33366 (10), -0.31586 (10), -0.31107 (10), -0.28432 (10), -0.19686 (10), -0.18820 (10), -0.17500 (10), -0.17253 (10), -0.15354 (10), -0.12528 (10), 
Length of domains: 26
Time: pickout 0.0011    decision 0.0305    set_bounds 0.0105    solve 0.4705    add 0.0019    
Accumulated time: pickout 0.0018    decision 0.0721    set_bounds 0.0264    solve 0.9553    add 0.0038    
Current (lb-rhs): -0.8114750385284424
42 domains visited
Cumulative time: 1.0680999755859375

BaB round 3
batch: 26
splitting decisions: 
split level 0: [/input.11, 89] [/input.7, 641] [/input.7, 641] [/input.7, 641] [/input.11, 89] [/input.7, 641] [/input.11, 89] [/input.7, 641] [/input.7, 641] [/input.7, 641] 
split level 1: [/input.7, 41] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.7, 41] [/input.11, 89] [/input.7, 41] [/input.11, 89] [/input.11, 89] [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 90 / 104 = 0.8653846153846154
pruning-in-iteration extra time: 0.013688087463378906
Time: prepare 0.0144    bound 0.4705    transfer 0.0011    finalize 0.0081    func 0.4941    
Accumulated time: func 1.4492    prepare 0.0377    bound 1.3866    transfer 0.0032    finalize 0.0227    
Current worst splitting domains lb-rhs (depth):
-0.56852 (12), -0.51926 (12), -0.32505 (12), -0.31927 (12), -0.31771 (12), -0.31540 (12), -0.16525 (12), -0.13080 (12), -0.12420 (12), -0.11483 (12), -0.09238 (12), -0.08509 (12), -0.02653 (12), -0.01412 (12), 
Length of domains: 14
Time: pickout 0.0014    decision 0.0302    set_bounds 0.0083    solve 0.4941    add 0.0016    
Accumulated time: pickout 0.0032    decision 0.1023    set_bounds 0.0347    solve 1.4495    add 0.0055    
Current (lb-rhs): -0.5685184001922607
56 domains visited
Cumulative time: 1.6052041053771973

BaB round 4
batch: 14
splitting decisions: 
split level 0: [/input.7, 41] [/input.7, 41] [/input.7, 641] [/input.7, 192] [/input.7, 641] [/input.7, 41] [/input.7, 641] [/input.7, 641] [/input.7, 641] [/input.7, 641] 
split level 1: [/input.7, 716] [/input.11, 63] [/input.7, 716] [/input.7, 636] [/input.7, 636] [/input.11, 63] [/input.7, 41] [/input.11, 63] [/input.11, 63] [/input.7, 636] 
split level 2: [/input.7, 636] [/input.7, 716] [/input.7, 636] [/input.7, 261] [/input.7, 261] [/input.7, 716] [/input.7, 636] [/input.7, 261] [/input.7, 261] [/input.7, 261] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 112 = 0.9464285714285714
pruning-in-iteration extra time: 0.013378143310546875
Time: prepare 0.0149    bound 0.4588    transfer 0.0012    finalize 0.0086    func 0.4836    
Accumulated time: func 1.9328    prepare 0.0529    bound 1.8454    transfer 0.0044    finalize 0.0314    
Current worst splitting domains lb-rhs (depth):
-0.17084 (15), -0.14737 (15), -0.14435 (15), -0.09804 (15), -0.07857 (15), -0.06155 (15), 
Length of domains: 6
Time: pickout 0.0015    decision 0.0302    set_bounds 0.0097    solve 0.4837    add 0.0015    
Accumulated time: pickout 0.0047    decision 0.1326    set_bounds 0.0444    solve 1.9332    add 0.0070    
Current (lb-rhs): -0.17084050178527832
62 domains visited
Cumulative time: 2.1331706047058105

BaB round 5
batch: 6
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 716] [/input.7, 716] [/input.7, 266] [/input.7, 716] [/input.7, 716] 
split level 1: [/input.11, 84] [/input.7, 637] [/input.7, 637] [/input.11, 84] [/input.7, 637] [/input.7, 637] 
split level 2: [/input.7, 192] [/input.11, 84] [/input.11, 84] [/input.7, 192] [/input.11, 84] [/input.11, 84] 
split level 3: [/input.7, 261] [/input.7, 192] [/input.7, 192] [/input.7, 261] [/input.7, 192] [/input.7, 192] 
split level 4: [/input.7, 423] [/input.7, 423] [/input.7, 423] [/input.7, 423] [/input.7, 423] [/input.7, 423] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0252    bound 0.0130    transfer 0.0009    finalize 0.0111    func 0.0503    
Accumulated time: func 1.9831    prepare 0.0786    bound 1.8584    transfer 0.0053    finalize 0.0425    
Length of domains: 0
Time: pickout 0.0014    decision 0.0356    set_bounds 0.0237    solve 0.0503    add 0.0001    
Accumulated time: pickout 0.0061    decision 0.1682    set_bounds 0.0680    solve 1.9835    add 0.0070    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
62 domains visited
Cumulative time: 2.2457311153411865


Properties batch 6, size 1
Remaining timeout: 194.9005148410797
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.26916170]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.26916170]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 14] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 119 / 128 = 0.9296875
pruning-in-iteration extra time: 0.013278961181640625
Time: prepare 0.0075    bound 0.4513    transfer 0.0012    finalize 0.0077    func 0.4679    
Accumulated time: func 0.4679    prepare 0.0081    bound 0.4513    transfer 0.0012    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-1.23194 (7), -1.04047 (7), -0.93227 (7), -0.21765 (7), -0.15663 (7), -0.14446 (7), -0.11805 (7), -0.04726 (7), -0.03519 (7), 
Length of domains: 9
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0158    solve 0.4679    add 0.0015    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0158    solve 0.4679    add 0.0015    
Current (lb-rhs): -1.2319369316101074
9 domains visited
Cumulative time: 0.5350017547607422

BaB round 2
batch: 9
splitting decisions: 
split level 0: [/input.11, 89] [/input.11, 99] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 99] [/input.11, 89] [/input.11, 89] 
split level 1: [/input.11, 99] [/input.11, 89] [/input.11, 99] [/input.11, 99] [/input.11, 81] [/input.11, 81] [/input.11, 89] [/input.11, 81] [/input.11, 99] 
split level 2: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 99] [/input.11, 99] [/input.11, 81] [/input.11, 99] [/input.11, 81] 
split level 3: [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 144 / 144 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0109    bound 0.0128    transfer 0.0007    finalize 0.0067    func 0.0311    
Accumulated time: func 0.4990    prepare 0.0194    bound 0.4641    transfer 0.0019    finalize 0.0144    
Length of domains: 0
Time: pickout 0.0011    decision 0.0301    set_bounds 0.0130    solve 0.0312    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0713    set_bounds 0.0287    solve 0.4991    add 0.0016    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9 domains visited
Cumulative time: 0.6112480163574219


Properties batch 7, size 1
Remaining timeout: 194.13980627059937
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.34247065]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.34247065]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 97] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 128 = 0.6875
pruning-in-iteration extra time: 0.013367176055908203
Time: prepare 0.0076    bound 0.4667    transfer 0.0011    finalize 0.0073    func 0.4828    
Accumulated time: func 0.4828    prepare 0.0082    bound 0.4667    transfer 0.0011    finalize 0.0073    
Current worst splitting domains lb-rhs (depth):
-1.46157 (7), -1.37772 (7), -1.22329 (7), -1.21730 (7), -1.19146 (7), -1.11981 (7), -1.10910 (7), -1.08637 (7), -1.06241 (7), -0.99090 (7), -0.97161 (7), -0.92214 (7), -0.81570 (7), -0.79574 (7), -0.72792 (7), -0.65037 (7), -0.57695 (7), -0.55413 (7), -0.49540 (7), -0.49080 (7), 
Length of domains: 40
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0159    solve 0.4829    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0159    solve 0.4829    add 0.0022    
Current (lb-rhs): -1.4615731239318848
40 domains visited
Cumulative time: 0.5505847930908203

BaB round 2
batch: 40
splitting decisions: 
split level 0: [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] 
split level 1: [/input.11, 65] [/input.11, 14] [/input.11, 14] [/input.11, 65] [/input.11, 14] [/input.11, 14] [/input.11, 65] [/input.11, 14] [/input.7, 238] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 160 = 0.7875
pruning-in-iteration extra time: 0.012576818466186523
Time: prepare 0.0130    bound 0.4784    transfer 0.0012    finalize 0.0091    func 0.5018    
Accumulated time: func 0.9846    prepare 0.0216    bound 0.9450    transfer 0.0024    finalize 0.0164    
Current worst splitting domains lb-rhs (depth):
-1.05390 (9), -0.96805 (9), -0.79585 (9), -0.78463 (9), -0.77696 (9), -0.76507 (9), -0.72486 (9), -0.72417 (9), -0.71184 (9), -0.69533 (9), -0.63620 (9), -0.57344 (9), -0.53419 (9), -0.53154 (9), -0.49231 (9), -0.48820 (9), -0.48202 (9), -0.46847 (9), -0.42018 (9), -0.39618 (9), 
Length of domains: 34
Time: pickout 0.0014    decision 0.0282    set_bounds 0.0100    solve 0.5019    add 0.0020    
Accumulated time: pickout 0.0020    decision 0.0694    set_bounds 0.0258    solve 0.9847    add 0.0042    
Current (lb-rhs): -1.0539002418518066
74 domains visited
Cumulative time: 1.0954508781433105

BaB round 3
batch: 34
splitting decisions: 
split level 0: [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.7, 238] [/input.11, 14] [/input.11, 65] [/input.11, 65] [/input.11, 14] [/input.7, 238] [/input.7, 238] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 136 = 0.7867647058823529
pruning-in-iteration extra time: 0.013252496719360352
Time: prepare 0.0146    bound 0.4498    transfer 0.0013    finalize 0.0095    func 0.4752    
Accumulated time: func 1.4598    prepare 0.0365    bound 1.3949    transfer 0.0037    finalize 0.0258    
Current worst splitting domains lb-rhs (depth):
-0.70160 (11), -0.60856 (11), -0.39227 (11), -0.38610 (11), -0.38158 (11), -0.36524 (11), -0.32162 (11), -0.31401 (11), -0.30134 (11), -0.27058 (11), -0.23734 (11), -0.19688 (11), -0.18809 (11), -0.17859 (11), -0.16052 (11), -0.14911 (11), -0.12240 (11), -0.09939 (11), -0.09916 (11), -0.06512 (11), 
Length of domains: 29
Time: pickout 0.0010    decision 0.0307    set_bounds 0.0087    solve 0.4753    add 0.0020    
Accumulated time: pickout 0.0030    decision 0.1001    set_bounds 0.0345    solve 1.4601    add 0.0063    
Current (lb-rhs): -0.7016000747680664
103 domains visited
Cumulative time: 1.6149699687957764

BaB round 4
batch: 29
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 65] [/input.11, 65] [/input.11, 99] [/input.11, 99] [/input.11, 65] [/input.11, 65] [/input.11, 99] [/input.11, 99] 
split level 1: [/input.11, 65] [/input.11, 37] [/input.11, 99] [/input.11, 99] [/input.11, 65] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 113 / 116 = 0.9741379310344828
pruning-in-iteration extra time: 0.01283884048461914
Time: prepare 0.0146    bound 0.4504    transfer 0.0011    finalize 0.0083    func 0.4744    
Accumulated time: func 1.9342    prepare 0.0514    bound 1.8452    transfer 0.0047    finalize 0.0341    
Current worst splitting domains lb-rhs (depth):
-0.24297 (13), -0.14378 (13), -0.10981 (13), 
Length of domains: 3
Time: pickout 0.0013    decision 0.0326    set_bounds 0.0072    solve 0.4745    add 0.0013    
Accumulated time: pickout 0.0043    decision 0.1327    set_bounds 0.0418    solve 1.9346    add 0.0075    
Current (lb-rhs): -0.2429676055908203
106 domains visited
Cumulative time: 2.1331899166107178

BaB round 5
batch: 3
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.11, 99] 
split level 1: [/input.11, 37] [/input.11, 37] [/input.11, 17] 
split level 2: [/input.11, 7] [/input.11, 7] [/input.11, 7] 
split level 3: [/input.7, 577] [/input.7, 577] [/input.7, 636] 
split level 4: [/input.7, 636] [/input.7, 636] [/input.7, 577] 
split level 5: [/input.7, 418] [/input.7, 418] [/input.7, 36] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.939338684082031e-05
Time: prepare 0.0251    bound 0.0078    transfer 0.0009    finalize 0.0110    func 0.0448    
Accumulated time: func 1.9790    prepare 0.0771    bound 1.8530    transfer 0.0056    finalize 0.0451    
Length of domains: 0
Time: pickout 0.0014    decision 0.0402    set_bounds 0.0267    solve 0.0449    add 0.0001    
Accumulated time: pickout 0.0057    decision 0.1729    set_bounds 0.0685    solve 1.9794    add 0.0076    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
106 domains visited
Cumulative time: 2.2477736473083496


Properties batch 8, size 1
Remaining timeout: 191.74258518218994
##### Instance 65 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.80125594]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.22710729, -0.35594279, -0.68247008, -0.30594504,  0.08305917,
         0.22870617,  7.51573181, -4.30111694, -0.23098761, -3.43167901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.80125594]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 873
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 81] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 97] 
split level 5: [/input.11, 6] 
split level 6: [/input.11, 5] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08653879165649414

Result: safe in 108.4994 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.00085115, -1.57206154, -0.27096975, -1.08342838, 11.36164474,
         -3.48878479, -2.04742360,  0.29883066, -1.16580844,  0.68711078]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.50it/s]100%|██████████| 1/1 [00:00<00:00,  1.50it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.92665792e+00, -2.45852900e+00,  2.76866531e+00, -5.59362024e-03,
           8.63267517e+00, -2.67703199e+00, -1.76409793e+00, -8.20315897e-01,
          -3.41522545e-02, -9.20937240e-01],
         [-2.92665792e+00, -2.45852900e+00,  2.76866531e+00, -5.59362024e-03,
           8.63267517e+00, -2.67703199e+00, -1.76409793e+00, -8.20315897e-01,
          -3.41522545e-02, -9.20937240e-01]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.55933285, 11.09120369,  5.86400986,  8.63826847, 11.30970764,
          10.39677334,  9.45299149,  8.66682720,  9.55361271]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6769 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.00085115, -1.57206106, -0.27096963, -1.08342850, 11.36164570,
         -3.48878431, -2.04742312,  0.29883057, -1.16580868,  0.68711007]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [819]; unstable size 819; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 169, 1, 819] with unstable size 168 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 819] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 819] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [168]; unstable size 168; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 168] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 168] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.45317268, 4.79539394, 0.47364855, 2.38314176, 3.32418823, 3.42474484,
         1.43475080, 0.61105752, 0.50773382]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7438 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.00618458,  -4.08662367,  -0.40171456,  18.90551567,  -8.39998341,
           2.33103347, -10.88582706,  -0.93972844,   5.34581184,   2.28138041]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.53480291,  -4.07651663,  -0.91104758,  15.24608898,  -6.40005302,
            1.46244967, -10.03031254,  -1.70813584,   6.95688057,   3.16468978],
         [ -3.53480291,  -4.07651663,  -0.91104758,  15.24608898,  -6.40005302,
            1.46244967, -10.03031254,  -1.70813584,   6.95688057,   3.16468978]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[18.78089142, 19.32260513, 16.15713692, 21.64614105, 13.78363895,
          25.27640152, 16.95422554,  8.28920841, 12.08139896]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6589 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -4.00618410,  -4.08662367,  -0.40171432,  18.90551758,  -8.39998341,
           2.33103418, -10.88582706,  -0.93972868,   5.34581184,   2.28138041]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [660]; unstable size 660; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 150, 1, 660] with unstable size 149 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 660] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [149]; unstable size 149; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 149] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[12.21775341, 11.81087685,  8.88035583, 13.71571445,  4.86650848,
         17.85779572,  9.14345360,  2.87501764,  5.47913647]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7257 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[10.64176178, -1.14673913,  1.60965097, -1.17684758, -2.23027515,
         -0.62012184,  0.75952315, -2.11953259, -4.53289795, -1.69912064]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.51it/s]100%|██████████| 1/1 [00:00<00:00,  1.51it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.86937857, -0.72664988,  0.92986917, -0.31774986, -3.24885821,
           3.21846890, -0.97592592, -1.89774179, -3.95353317, -1.38277662],
         [ 7.86937857, -0.72664988,  0.92986917, -0.31774986, -3.24885821,
           3.21846890, -0.97592592, -1.89774179, -3.95353317, -1.38277662]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.59602833,  6.93950939,  8.18712807, 11.11823654,  4.65090942,
           8.84530449,  9.76712036, 11.82291222,  9.25215530]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6695 seconds.
PGD attack failed
torch allclose failed: norm 1.1079091564170085e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[10.64176178, -1.14673960,  1.60965085, -1.17684746, -2.23027492,
         -0.62012160,  0.75952369, -2.11953259, -4.53289843, -1.69912112]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [654]; unstable size 654; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 127, 1, 654] with unstable size 126 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 654] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [126]; unstable size 126; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 126] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.95996237, 2.05739999, 3.92565322, 5.87862301, 0.22383380, 3.80792093,
         3.99484205, 6.51990461, 4.47148514]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7375 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.15224317, -1.20666552,  3.44143748,  1.69106233, -5.18077040,
         -2.31352997, -7.81986237, 13.47819424, -4.81902313,  2.79054356]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.36274913, -0.96159810,  3.85057402,  2.19614363, -5.35930729,
          -1.14586604, -6.36898613,  9.56385708, -3.82799602,  1.64636481],
         [ 0.36274913, -0.96159810,  3.85057402,  2.19614363, -5.35930729,
          -1.14586604, -6.36898613,  9.56385708, -3.82799602,  1.64636481]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.20110798, 10.52545547,  5.71328306,  7.36771345, 14.92316437,
          10.70972347, 15.93284321, 13.39185333,  7.91749239]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6673 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.15224305, -1.20666611,  3.44143724,  1.69106257, -5.18077135,
         -2.31353092, -7.81986284, 13.47819519, -4.81902361,  2.79054427]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [658]; unstable size 658; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 144, 1, 658] with unstable size 143 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 658] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 658] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [143]; unstable size 143; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 143] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 143] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.80100965,  7.64883089,  3.02539492,  2.66618395, 11.61331558,
          5.98541403, 11.65840530,  9.92227268,  2.52124000]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7347 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[18.21411133, -2.47902441,  1.44987679, -3.67235088, -2.42366552,
         -4.11482954,  1.81495357, -2.45847249, -5.39704704, -1.49734974]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[15.68613911, -0.84816682,  2.86476111, -2.46918106, -3.01102138,
          -3.28930497,  0.53395820, -2.42161465, -5.83649969, -1.73690474],
         [15.68613911, -0.84816682,  2.86476111, -2.46918106, -3.01102138,
          -3.28930497,  0.53395820, -2.42161465, -5.83649969, -1.73690474]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.53430557, 12.82137775, 18.15531921, 18.69716072, 18.97544479,
          15.15218067, 18.10775375, 21.52263832, 17.42304420]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6584 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[18.21411133, -2.47902417,  1.44987702, -3.67235041, -2.42366600,
         -4.11482954,  1.81495428, -2.45847273, -5.39704704, -1.49734938]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [519]; unstable size 519; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 88, 1, 519] with unstable size 87 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 519] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 519] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [87]; unstable size 87; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 87] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 87] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.51428413,  7.49409008, 13.00249863, 13.32978249, 12.04684830,
         10.14931107, 12.24013901, 13.90743828, 11.26637268]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7276 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.63101721,  0.71050280, 10.08089161,  3.80652189, -5.91157866,
         -4.65056181, -6.50892591,  1.59204268,  0.26347962, -2.17050958]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.55it/s]100%|██████████| 1/1 [00:00<00:00,  1.55it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.13834286,  0.87456715,  8.48539829,  6.04501677, -6.98800993,
          -1.82622647, -6.72868013,  0.06417891, -0.36340195, -1.87859821],
         [ 2.13834286,  0.87456715,  8.48539829,  6.04501677, -6.98800993,
          -1.82622647, -6.72868013,  0.06417891, -0.36340195, -1.87859821]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.34705544,  7.61083126,  2.44038153, 15.47340775, 10.31162453,
          15.21407890,  8.42121983,  8.84880066, 10.36399651]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6544 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.63101721,  0.71050280, 10.08089256,  3.80652118, -5.91157866,
         -4.65056181, -6.50892544,  1.59204221,  0.26347962, -2.17050910]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [679]; unstable size 679; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 162, 1, 679] with unstable size 161 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 679] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [161]; unstable size 161; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 161] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 161] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.01362896,  3.20116615, -1.73238540,  8.75052738,  3.51184511,
          7.20721149,  2.72497296,  3.49315119,  4.27908134]], device='cuda:0') None
best_l after optimization: 35.827186584472656
alpha/beta optimization time: 4.537242889404297
initial alpha-crown bounds: tensor([[ 1.45060134,  3.48659539, -1.32517147,  9.11376190,  3.95791674,
          7.59668875,  3.05885243,  3.92276788,  4.56517124]], device='cuda:0')
Worst class: (+ rhs) -1.3251714706420898
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.73791885375977
##### Instance 71 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.45060133934021.

Properties batch 1, size 1
Remaining timeout: 294.6145226955414
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.486595392227173.

Properties batch 2, size 1
Remaining timeout: 294.5084295272827
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.32517147]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.63101721,  0.71050280, 10.08089256,  3.80652118, -5.91157866,
        -4.65056181, -6.50892544,  1.59204221,  0.26347962, -2.17050910],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.32517147]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 679
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 161
Node /27 input 0: size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 865
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 9] 
split level 1: [/input.11, 80] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 59] 
split level 4: [/input.7, 646] 
split level 5: [/input.11, 60] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0414    set_bounds 0.0170    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0414    set_bounds 0.0170    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09689879417419434


Properties batch 3, size 1
Remaining timeout: 294.26806354522705
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.113761901855469.

Properties batch 4, size 1
Remaining timeout: 294.15809988975525
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.957916736602783.

Properties batch 5, size 1
Remaining timeout: 294.0524823665619
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.596688747406006.

Properties batch 6, size 1
Remaining timeout: 293.9474811553955
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.058852434158325.

Properties batch 7, size 1
Remaining timeout: 293.84250235557556
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9227678775787354.

Properties batch 8, size 1
Remaining timeout: 293.73777627944946
##### Instance 71 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.565171241760254.
Result: safe in 6.3671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.40019202,  -2.11103702,  -0.24069166,   1.97604835,  -0.56067729,
          -2.60293889, -12.10233974,   3.19020391,   5.51778793,   9.50486755]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.14794230,  -2.19250917,   1.38181078,   1.61316562,  -1.62892091,
           -2.21261954, -11.32880116,   1.81334567,   8.15004253,   6.73834467],
         [ -2.14794230,  -2.19250917,   1.38181078,   1.61316562,  -1.62892091,
           -2.21261954, -11.32880116,   1.81334567,   8.15004253,   6.73834467]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.88628674,  8.93085384,  5.35653400,  5.12517929,  8.36726570,
           8.95096397, 18.06714630,  4.92499924, -1.41169786]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0186 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0198 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.74744415,  9.19877338, -2.56948423, -1.34534323,  0.01635823,
         -1.23521852, -2.03123355, -0.38305292,  3.49249887, -0.61510527]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.55it/s]100%|██████████| 1/1 [00:00<00:00,  1.55it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.14957571,  7.92561626, -3.32421422, -1.59234178,  0.43034691,
          -0.89317644, -1.16632378, -1.06146932,  5.06742859, -0.44803858],
         [-5.14957571,  7.92561626, -3.32421422, -1.59234178,  0.43034691,
          -0.89317644, -1.16632378, -1.06146932,  5.06742859, -0.44803858]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.07519150, 11.24983025,  9.51795769,  7.49526930,  8.81879234,
           9.09193993,  8.98708534,  2.85818768,  8.37365532]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6526 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.74744415,  9.19877338, -2.56948400, -1.34534347,  0.01635811,
         -1.23521805, -2.03123355, -0.38305327,  3.49249935, -0.61510551]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [654]; unstable size 654; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 228, 1, 654] with unstable size 227 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 654] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [227]; unstable size 227; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 227] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 227] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[9.04551792, 5.97646761, 3.99465990, 3.07083559, 4.25258255, 5.13642931,
         3.15383601, 0.14270684, 1.95924520]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7189 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.86398554, -1.03637838,  0.75351131,  5.10128546,  0.41241989,
         -4.29383802, -7.71949291, 12.93486595, -0.51077425, -0.90518796]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.46709394, -1.81283855,  0.31822067,  6.13190699, -0.56037998,
          -3.26638865, -7.99911499, 10.19007969,  0.40684268,  0.99283111],
         [-4.46709394, -1.81283855,  0.31822067,  6.13190699, -0.56037998,
          -3.26638865, -7.99911499, 10.19007969,  0.40684268,  0.99283111]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.65717316, 12.00291824,  9.87185860,  4.05817270, 10.75045967,
          13.45646858, 18.18919373,  9.78323746,  9.19724846]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6669 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.86398554, -1.03637815,  0.75351179,  5.10128593,  0.41241929,
         -4.29383707, -7.71949244, 12.93486786, -0.51077449, -0.90518844]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [693]; unstable size 693; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 173, 1, 693] with unstable size 172 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 693] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 693] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [172]; unstable size 172; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 172] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.41288376, 4.15411043, 2.44442630, 0.02375889, 2.88838291, 6.01364326,
         9.71865749, 2.69090390, 1.87221241]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7342 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.86824942, -1.97346306, -0.86330116, 12.29742146, -5.17432547,
          3.11383104, -4.83164835, -2.75803614,  3.53756189,  0.49302471]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.99509931, -1.57856357, -1.77121711,  8.18878651, -3.02774882,
           2.70148802, -3.27249241, -3.14347553,  4.94481421,  0.90976447],
         [-3.99509931, -1.57856357, -1.77121711,  8.18878651, -3.02774882,
           2.70148802, -3.27249241, -3.14347553,  4.94481421,  0.90976447]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.18388557,  9.76735020,  9.96000385, 11.21653557,  5.48729849,
          11.46127892, 11.33226204,  3.24397230,  7.27902222]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6590 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.86824942, -1.97346306, -0.86330140, 12.29742146, -5.17432499,
          3.11383200, -4.83164883, -2.75803661,  3.53756237,  0.49302471]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [682]; unstable size 682; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 171, 1, 682] with unstable size 170 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 682] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [170]; unstable size 170; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 170] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 170] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.57646513,  1.41646051,  3.04692268,  3.38507271, -2.35638213,
          4.69149637,  4.57156086, -0.43520403,  0.77676010]], device='cuda:0') None
best_l after optimization: 27.342761993408203
alpha/beta optimization time: 4.475367546081543
initial alpha-crown bounds: tensor([[ 6.14247990,  2.14923716,  3.64544249,  4.22004700, -1.45060277,
          5.52786589,  5.32200050,  0.10827065,  1.67802072]], device='cuda:0')
Worst class: (+ rhs) -1.4506027698516846
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.79353189468384
##### Instance 75 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.14247989654541.

Properties batch 1, size 1
Remaining timeout: 294.68179631233215
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1492371559143066.

Properties batch 2, size 1
Remaining timeout: 294.5763838291168
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.645442485809326.

Properties batch 3, size 1
Remaining timeout: 294.47167801856995
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.2200469970703125.

Properties batch 4, size 1
Remaining timeout: 294.3665826320648
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.45060277]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.86824942, -1.97346306, -0.86330140, 12.29742146, -5.17432499,
         3.11383200, -4.83164883, -2.75803661,  3.53756237,  0.49302471],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.45060277]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 170
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 885
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 11] 
split level 1: [/input.11, 81] 
split level 2: [/input.11, 65] 
split level 3: [/input.11, 52] 
split level 4: [/input.11, 96] 
split level 5: [/input.11, 25] 
split level 6: [/input.7, 132] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09663629531860352


Properties batch 5, size 1
Remaining timeout: 294.12679409980774
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.527865886688232.

Properties batch 6, size 1
Remaining timeout: 294.0167350769043
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.322000503540039.

Properties batch 7, size 1
Remaining timeout: 293.91098976135254
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10827064514160156.

Properties batch 8, size 1
Remaining timeout: 293.8059883117676
##### Instance 75 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.678020715713501.
Result: safe in 6.2988 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.34041262,  1.43511987,  8.44707298,  0.55069494, -4.09979534,
         -4.37340879, -4.79471874,  2.34798479,  0.53759903, -2.41708684]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.48it/s]100%|██████████| 1/1 [00:00<00:00,  1.48it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.83142173,  0.09934449,  6.39115906,  0.35124969, -3.58533931,
          -4.40204668, -5.68196297,  5.27311611,  0.35673326, -0.69859475],
         [ 1.83142173,  0.09934449,  6.39115906,  0.35124969, -3.58533931,
          -4.40204668, -5.68196297,  5.27311611,  0.35673326, -0.69859475]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.55973721,  6.29181480,  6.03990936,  9.97649860, 10.79320526,
          12.07312202,  1.11804295,  6.03442574,  7.08975363]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6861 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.34041238,  1.43511987,  8.44707394,  0.55069518, -4.09979582,
         -4.37340927, -4.79471874,  2.34798479,  0.53759944, -2.41708684]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [703]; unstable size 703; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 117, 1, 703] with unstable size 116 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 703] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [116]; unstable size 116; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 116] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 116] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.46411443, -0.83289862, -0.66130543,  2.56922150,  0.97081280,
          2.95487642, -3.45433807, -0.28313684, -1.46343613]], device='cuda:0') None
best_l after optimization: 4.320569038391113
alpha/beta optimization time: 4.419749021530151
initial alpha-crown bounds: tensor([[ 0.08664060, -0.38801813, -0.15180635,  2.98880720,  1.55833387,
          3.36621714, -2.72022247,  0.12839389, -0.54777670]], device='cuda:0')
Worst class: (+ rhs) -2.7202224731445312
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.8231158256531
##### Instance 76 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08664059638977051.

Properties batch 1, size 1
Remaining timeout: 294.70873975753784
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38801813]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.34041238,  1.43511987,  8.44707394,  0.55069518, -4.09979582,
        -4.37340927, -4.79471874,  2.34798479,  0.53759944, -2.41708684],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38801813]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 703
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 115
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 47] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 52] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 6] 
split level 6: [/input.11, 9] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0076    bound 0.0078    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0078    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0159    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0159    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08690547943115234


Properties batch 2, size 1
Remaining timeout: 294.47800946235657
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15180635]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.34041238,  1.43511987,  8.44707394,  0.55069518, -4.09979582,
        -4.37340927, -4.79471874,  2.34798479,  0.53759944, -2.41708684],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15180635]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 703
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 115
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 56] 
split level 3: [/input.11, 9] 
split level 4: [/input.7, 123] 
split level 5: [/input.11, 60] 
split level 6: [/input.11, 5] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0075    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0968770980834961


Properties batch 3, size 1
Remaining timeout: 294.23301124572754
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.988807201385498.

Properties batch 4, size 1
Remaining timeout: 294.1233940124512
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5583338737487793.

Properties batch 5, size 1
Remaining timeout: 294.01742029190063
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3662171363830566.

Properties batch 6, size 1
Remaining timeout: 293.9125783443451
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.72022247]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.34041238,  1.43511987,  8.44707394,  0.55069518, -4.09979582,
        -4.37340927, -4.79471874,  2.34798479,  0.53759944, -2.41708684],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.72022247]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 703
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 115
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 47] 
split level 4: [/input.11, 9] 
split level 5: [/input.11, 14] 
split level 6: [/input.7, 123] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.01243734359741211
Time: prepare 0.0146    bound 0.4289    transfer 0.0012    finalize 0.0091    func 0.4539    
Accumulated time: func 0.4539    prepare 0.0152    bound 0.4289    transfer 0.0012    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.78008 (7), -0.70424 (7), -0.38630 (7), -0.38159 (7), -0.31178 (7), -0.20351 (7), -0.14072 (7), -0.07114 (7), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0167    solve 0.4539    add 0.0015    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0167    solve 0.4539    add 0.0015    
Current (lb-rhs): -0.7800829410552979
8 domains visited
Cumulative time: 0.5222823619842529

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 122] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 122] 
split level 1: [/input.11, 60] [/input.11, 97] [/input.11, 97] [/input.11, 56] [/input.11, 60] [/input.11, 97] [/input.11, 97] [/input.11, 56] 
split level 2: [/input.11, 97] [/input.11, 19] [/input.11, 60] [/input.11, 60] [/input.11, 97] [/input.11, 19] [/input.11, 60] [/input.11, 60] 
split level 3: [/input.11, 19] [/input.11, 60] [/input.11, 19] [/input.11, 19] [/input.11, 19] [/input.11, 60] [/input.11, 19] [/input.11, 19] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.012575149536132812
Time: prepare 0.0176    bound 0.4330    transfer 0.0013    finalize 0.0094    func 0.4614    
Accumulated time: func 0.9153    prepare 0.0333    bound 0.8619    transfer 0.0024    finalize 0.0185    
Current worst splitting domains lb-rhs (depth):
-0.07118 (11), -0.01883 (11), 
Length of domains: 2
Time: pickout 0.0013    decision 0.0295    set_bounds 0.0123    solve 0.4616    add 0.0012    
Accumulated time: pickout 0.0020    decision 0.0710    set_bounds 0.0290    solve 0.9156    add 0.0027    
Current (lb-rhs): -0.07118391990661621
10 domains visited
Cumulative time: 1.029618263244629

BaB round 3
batch: 2
splitting decisions: 
split level 0: [/input.11, 65] [/input.11, 65] 
split level 1: [/input.7, 122] [/input.7, 122] 
split level 2: [/input.11, 10] [/input.11, 10] 
split level 3: [/input.11, 81] [/input.11, 81] 
split level 4: [/input.7, 181] [/input.7, 181] 
split level 5: [/input.7, 306] [/input.7, 306] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0170    bound 0.0076    transfer 0.0006    finalize 0.0074    func 0.0329    
Accumulated time: func 0.9481    prepare 0.0509    bound 0.8696    transfer 0.0031    finalize 0.0259    
Length of domains: 0
Time: pickout 0.0014    decision 0.0401    set_bounds 0.0182    solve 0.0329    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.1111    set_bounds 0.0472    solve 0.9485    add 0.0028    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 1.1231176853179932


Properties batch 7, size 1
Remaining timeout: 292.6463370323181
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.12839388847351074.

Properties batch 8, size 1
Remaining timeout: 292.5355293750763
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.54777670]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.34041238,  1.43511987,  8.44707394,  0.55069518, -4.09979582,
        -4.37340927, -4.79471874,  2.34798479,  0.53759944, -2.41708684],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.54777670]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 703
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 115
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 60] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 19] 
split level 6: [/input.7, 123] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0170    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0170    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09684395790100098

Result: safe in 7.7054 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.34127498, -1.02012467, -4.19017076,  0.07293814,  3.22790861,
         -1.38693810, -6.66513395,  0.69562596,  4.33202982,  8.33731365]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.51689434, -1.94586205, -3.62456775,  0.05635994,  3.12464118,
          -0.66259199, -5.13918400, -0.56175756,  6.50564623,  5.80536222],
         [-3.51689434, -1.94586205, -3.62456775,  0.05635994,  3.12464118,
          -0.66259199, -5.13918400, -0.56175756,  6.50564623,  5.80536222]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.32225609,  7.75122452,  9.42992973,  5.74900246,  2.68072104,
           6.46795416, 10.94454575,  6.36711979, -0.70028400]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0176 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0186 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.73034859,  -3.91441154,   4.58499241,   3.33024883,  -5.35669994,
          -3.44541478, -13.71752071,  15.78409481,   1.62106264,   2.81721044]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.85370463,  -4.64922762,   6.13839531,   3.80104327,  -5.82436419,
           -2.55020952, -13.13638210,  11.75866222,   3.33913660,   1.99245691],
         [ -0.85370463,  -4.64922762,   6.13839531,   3.80104327,  -5.82436419,
           -2.55020952, -13.13638210,  11.75866222,   3.33913660,   1.99245691]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.61236668, 16.40789032,  5.62026691,  7.95761871, 17.58302689,
          14.30887222, 24.89504433,  8.41952515,  9.76620483]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6606 seconds.
PGD attack failed
torch allclose failed: norm 7.521766178797407e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -1.73034894,  -3.91441131,   4.58499289,   3.33024979,  -5.35670042,
          -3.44541502, -13.71752071,  15.78409672,   1.62106144,   2.81721044]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [689]; unstable size 689; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 105, 1, 689] with unstable size 104 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 20, 1, 689] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [104]; unstable size 104; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 20, 1, 104] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 104] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.83696365, 13.28713226,  3.67496657,  4.13727713, 13.96034813,
          9.37224960, 20.45116234,  4.33229589,  4.87964058]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7326 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.03550812, -1.19362891, -0.54376733, -2.68386316,  0.09209166,
          1.11390448, -8.09756756, 11.68000698, -5.20158100,  4.78374004]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.50it/s]100%|██████████| 1/1 [00:00<00:00,  1.50it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.45992604, -1.58193815, -1.14130163, -2.62234855,  0.67779684,
           0.59407181, -7.41273355,  8.85648632, -4.58679342,  6.80376720],
         [ 0.45992604, -1.58193815, -1.14130163, -2.62234855,  0.67779684,
           0.59407181, -7.41273355,  8.85648632, -4.58679342,  6.80376720]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.39656067, 10.43842411,  9.99778748, 11.47883511,  8.17868996,
           8.26241493, 16.26922035, 13.44327927,  2.05271912]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6755 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.03550800, -1.19362879, -0.54376698, -2.68386245,  0.09209166,
          1.11390436, -8.09756756, 11.68000793, -5.20158148,  4.78374052]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [685]; unstable size 685; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 147, 1, 685] with unstable size 146 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 685] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [146]; unstable size 146; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 146] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.61996555,  5.22244930,  4.95680046,  5.40048313,  2.94424248,
          1.41087055, 10.33863068,  6.91314363, -2.03621531]], device='cuda:0') None
best_l after optimization: 47.4991569519043
alpha/beta optimization time: 4.598075866699219
initial alpha-crown bounds: tensor([[ 5.36257935,  5.80529690,  5.90256405,  6.49695063,  3.45635605,
          2.51269746, 11.13972855,  8.06546211, -1.24247801]], device='cuda:0')
Worst class: (+ rhs) -1.2424780130386353
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.65542340278625
##### Instance 79 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.362579345703125.

Properties batch 1, size 1
Remaining timeout: 294.5402886867523
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.805296897888184.

Properties batch 2, size 1
Remaining timeout: 294.43425607681274
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.90256404876709.

Properties batch 3, size 1
Remaining timeout: 294.32939314842224
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.496950626373291.

Properties batch 4, size 1
Remaining timeout: 294.22451519966125
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4563560485839844.

Properties batch 5, size 1
Remaining timeout: 294.11943435668945
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.512697458267212.

Properties batch 6, size 1
Remaining timeout: 294.0144453048706
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.139728546142578.

Properties batch 7, size 1
Remaining timeout: 293.9092071056366
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.065462112426758.

Properties batch 8, size 1
Remaining timeout: 293.8043301105499
##### Instance 79 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.24247801]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.03550800, -1.19362879, -0.54376698, -2.68386245,  0.09209166,
         1.11390436, -8.09756756, 11.68000793, -5.20158148,  4.78374052],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.24247801]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 685
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 145
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 861
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 90] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 32] 
split level 5: [/input.11, 30] 
split level 6: [/input.11, 51] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.086761474609375

Result: safe in 6.4259 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.82729292, -4.02935982, -2.28266597, -4.46016788, -2.99680114,
          3.00013590, 11.21774292, -5.58914900,  0.52638263,  2.19904065]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.30172610, -4.23826694, -1.77314723, -3.61796284, -4.47827578,
           2.76343274,  7.93239021, -4.33775568,  0.64346206,  4.28249407],
         [ 2.30172610, -4.23826694, -1.77314723, -3.61796284, -4.47827578,
           2.76343274,  7.93239021, -4.33775568,  0.64346206,  4.28249407]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.63066387, 12.17065716,  9.70553780, 11.55035305, 12.41066551,
           5.16895771, 12.27014542,  7.28892803,  3.64989614]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6648 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.82729256, -4.02935982, -2.28266549, -4.46016741, -2.99680066,
          3.00013614, 11.21774387, -5.58914948,  0.52638263,  2.19904017]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [678]; unstable size 678; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 127, 1, 678] with unstable size 126 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 678] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 678] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [126]; unstable size 126; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 126] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.89346004,  4.59674740,  2.92578554,  4.98772430,  5.62501383,
         -0.39972019,  6.09639454,  1.92925858, -0.97176933]], device='cuda:0') None

all verified at 7th iter
best_l after optimization: 31.84506607055664
alpha/beta optimization time: 0.3463478088378906
initial alpha-crown bounds: tensor([[2.25108337, 5.18413115, 3.40050530, 5.51298714, 6.23409653, 0.15154600,
         6.59252501, 2.43726110, 0.08093107]], device='cuda:0')
Worst class: (+ rhs) 0.08093106746673584
verified with init bound!
Result: safe-incomplete in 1.0802 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.77396637,  1.26433372, 18.71931839,  4.46254635, -4.78870535,
         -7.29279566, -8.17094707,  3.39331865,  0.69577193, -7.52667522]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.03856198,  0.49199221, 14.91924095,  5.41637373, -5.58439350,
          -5.92988634, -8.11910057,  3.29253101,  1.03084719, -5.52790117],
         [-0.03856198,  0.49199221, 14.91924095,  5.41637373, -5.58439350,
          -5.92988634, -8.11910057,  3.29253101,  1.03084719, -5.52790117]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.95780277, 14.42724895,  9.50286674, 20.50363541, 20.84912682,
          23.03834152, 11.62670994, 13.88839340, 20.44714165]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6634 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.77396649,  1.26433301, 18.71931839,  4.46254635, -4.78870630,
         -7.29279518, -8.17094612,  3.39331818,  0.69577229, -7.52667570]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [687]; unstable size 687; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 93, 1, 687] with unstable size 92 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 18, 1, 687] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 687] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [92]; unstable size 92; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 18, 1, 92] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 92] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.08369827,  8.90272713,  5.30081177, 14.13819695, 13.50538540,
         15.56740189,  7.39342594,  9.07082176, 15.35399437]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7330 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.11718940, -0.56625348,  0.27475429, -1.43184865, -1.80534780,
         -1.37969387, -7.40233326, 11.00163078, -3.30803585,  4.44741917]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.15679331, -1.07486439, -0.43356746, -0.86808646, -1.05653214,
          -2.56493282, -6.52293873,  9.07698727, -3.31054544,  6.60110474],
         [ 0.15679331, -1.07486439, -0.43356746, -0.86808646, -1.05653214,
          -2.56493282, -6.52293873,  9.07698727, -3.31054544,  6.60110474]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.92019367, 10.15185165,  9.51055431,  9.94507408, 10.13351917,
          11.64192009, 15.59992599, 12.38753319,  2.47588253]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6654 seconds.
PGD attack failed
torch allclose failed: norm 1.1261965937592322e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.11718889, -0.56625384,  0.27475476, -1.43184853, -1.80534780,
         -1.37969398, -7.40233421, 11.00162983, -3.30803585,  4.44741917]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [691]; unstable size 691; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 122, 1, 691] with unstable size 121 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 35, 1, 691] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 691] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [121]; unstable size 121; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 35, 1, 121] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 121] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81573701,  4.53987360,  3.76472497,  4.77124596,  5.39794636,
          4.62385559,  9.95925426,  6.18400812, -0.87531996]], device='cuda:0') None
best_l after optimization: 46.50556945800781
alpha/beta optimization time: 4.412003993988037
initial alpha-crown bounds: tensor([[ 4.22838593,  5.09735441,  4.23743439,  5.09498978,  5.86494207,
          5.16300678, 10.43592453,  6.69354963, -0.31001878]], device='cuda:0')
Worst class: (+ rhs) -0.31001877784729004
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.8332328796387
##### Instance 82 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.228385925292969.

Properties batch 1, size 1
Remaining timeout: 294.71938276290894
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.097354412078857.

Properties batch 2, size 1
Remaining timeout: 294.6158652305603
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.237434387207031.

Properties batch 3, size 1
Remaining timeout: 294.51295280456543
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.094989776611328.

Properties batch 4, size 1
Remaining timeout: 294.41013407707214
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.8649420738220215.

Properties batch 5, size 1
Remaining timeout: 294.3072955608368
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.163006782531738.

Properties batch 6, size 1
Remaining timeout: 294.2038083076477
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.435924530029297.

Properties batch 7, size 1
Remaining timeout: 294.1005153656006
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.693549633026123.

Properties batch 8, size 1
Remaining timeout: 293.99706840515137
##### Instance 82 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31001878]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.11718889, -0.56625384,  0.27475476, -1.43184853, -1.80534780,
        -1.37969398, -7.40233421, 11.00162983, -3.30803585,  4.44741917],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31001878]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 121
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 846
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 5] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 32] 
split level 5: [/input.11, 90] 
split level 6: [/input.7, 138] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0146    bound 0.0077    transfer 0.0010    finalize 0.0082    func 0.0317    
Accumulated time: func 0.0317    prepare 0.0152    bound 0.0077    transfer 0.0010    finalize 0.0082    
Length of domains: 0
Time: pickout 0.0007    decision 0.0406    set_bounds 0.0169    solve 0.0318    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0406    set_bounds 0.0169    solve 0.0318    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09702587127685547

Result: safe in 6.2418 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.46079111, -2.62821078, -4.00772238, -0.42384928,  1.24607730,
          0.90520185, -0.38834044, -1.84737992, 10.44351292, -1.02125990]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.25060916, -1.64614379, -4.29352903, -1.59721708,  5.24095678,
           0.05487789,  0.76094961, -1.26550078,  7.73351574, -3.00369382],
         [-2.25060916, -1.64614379, -4.29352903, -1.59721708,  5.24095678,
           0.05487789,  0.76094961, -1.26550078,  7.73351574, -3.00369382]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.98412514,  9.37965965, 12.02704430,  9.33073235,  2.49255896,
           7.67863798,  6.97256613,  8.99901676, 10.73720932]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6677 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
          0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [687]; unstable size 687; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 147, 1, 687] with unstable size 146 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 687] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 687] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [146]; unstable size 146; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 146] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54498601, -1.38086700, -0.74534130, -1.37398005, -7.22508907,
         -4.75387144, -2.06533098, -4.53271675, -3.88358903]], device='cuda:0') None
best_l after optimization: -14.870597839355469
alpha/beta optimization time: 4.419116020202637
initial alpha-crown bounds: tensor([[ 0.66563416, -0.06552410,  0.15829992, -0.48338151, -5.22950554,
         -3.66790676, -1.02577591, -3.00881505, -2.21362352]], device='cuda:0')
Worst class: (+ rhs) -5.22950553894043
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.844181060791
##### Instance 83 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6656341552734375.

Properties batch 1, size 1
Remaining timeout: 294.7292981147766
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06552410]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06552410]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 45] 
split level 1: [/input.11, 96] 
split level 2: [/input.11, 36] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 19] 
split level 6: [/input.11, 70] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0075    bound 0.0076    transfer 0.0007    finalize 0.0059    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0081    bound 0.0076    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0407    set_bounds 0.0158    solve 0.0219    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0407    set_bounds 0.0158    solve 0.0219    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0858922004699707


Properties batch 2, size 1
Remaining timeout: 294.50121426582336
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15829992294311523.

Properties batch 3, size 1
Remaining timeout: 294.392853975296
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48338151]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48338151]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 36] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 47] 
split level 4: [/input.11, 8] 
split level 5: [/input.11, 51] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.891654968261719e-05
Time: prepare 0.0076    bound 0.0076    transfer 0.0008    finalize 0.0060    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0082    bound 0.0076    transfer 0.0008    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0406    set_bounds 0.0157    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0406    set_bounds 0.0157    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08612370491027832


Properties batch 4, size 1
Remaining timeout: 294.16478848457336
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.22950554]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.22950554]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 19] 
split level 2: [/input.11, 7] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 90] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 128 = 0.9140625
pruning-in-iteration extra time: 0.012708663940429688
Time: prepare 0.0076    bound 0.4299    transfer 0.0012    finalize 0.0074    func 0.4462    
Accumulated time: func 0.4462    prepare 0.0082    bound 0.4299    transfer 0.0012    finalize 0.0074    
Current worst splitting domains lb-rhs (depth):
-1.38635 (7), -1.29336 (7), -1.24808 (7), -1.17637 (7), -0.51550 (7), -0.51147 (7), -0.48567 (7), -0.45845 (7), -0.05882 (7), -0.05711 (7), -0.04310 (7), 
Length of domains: 11
Time: pickout 0.0006    decision 0.0407    set_bounds 0.0158    solve 0.4463    add 0.0016    
Accumulated time: pickout 0.0006    decision 0.0407    set_bounds 0.0158    solve 0.4463    add 0.0016    
Current (lb-rhs): -1.3863496780395508
11 domains visited
Cumulative time: 0.5124571323394775

BaB round 2
batch: 11
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.11, 63] [/input.7, 107] [/input.7, 107] [/input.7, 107] 
split level 1: [/input.11, 81] [/input.11, 81] [/input.11, 63] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 107] [/input.11, 63] [/input.7, 118] [/input.11, 81] 
split level 2: [/input.7, 107] [/input.7, 118] [/input.11, 81] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 81] [/input.11, 81] [/input.11, 63] [/input.11, 63] 
split level 3: [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.7, 118] [/input.7, 118] [/input.7, 118] [/input.11, 36] [/input.7, 118] [/input.11, 81] [/input.7, 118] 
pruning_in_iteration open status: True
ratio of positive domain = 172 / 176 = 0.9772727272727273
pruning-in-iteration extra time: 0.013373613357543945
Time: prepare 0.0239    bound 0.4478    transfer 0.0013    finalize 0.0122    func 0.4854    
Accumulated time: func 0.9316    prepare 0.0325    bound 0.8778    transfer 0.0025    finalize 0.0197    
Current worst splitting domains lb-rhs (depth):
-0.13931 (11), -0.09738 (11), -0.03839 (11), -0.01180 (11), 
Length of domains: 4
Time: pickout 0.0013    decision 0.0304    set_bounds 0.0171    solve 0.4855    add 0.0013    
Accumulated time: pickout 0.0019    decision 0.0711    set_bounds 0.0329    solve 0.9318    add 0.0029    
Current (lb-rhs): -0.13930702209472656
15 domains visited
Cumulative time: 1.0503184795379639

BaB round 3
batch: 4
splitting decisions: 
split level 0: [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] 
split level 1: [/input.7, 647] [/input.7, 647] [/input.11, 45] [/input.7, 647] 
split level 2: [/input.11, 45] [/input.7, 412] [/input.7, 647] [/input.7, 412] 
split level 3: [/input.11, 36] [/input.7, 648] [/input.11, 36] [/input.7, 648] 
split level 4: [/input.7, 648] [/input.11, 36] [/input.7, 648] [/input.11, 36] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0177    bound 0.0075    transfer 0.0006    finalize 0.0077    func 0.0339    
Accumulated time: func 0.9655    prepare 0.0507    bound 0.8853    transfer 0.0031    finalize 0.0274    
Length of domains: 0
Time: pickout 0.0009    decision 0.0337    set_bounds 0.0160    solve 0.0340    add 0.0001    
Accumulated time: pickout 0.0028    decision 0.1049    set_bounds 0.0489    solve 0.9658    add 0.0030    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
15 domains visited
Cumulative time: 1.1363773345947266


Properties batch 5, size 1
Remaining timeout: 292.8811755180359
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.66790676]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.66790676]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 8] 
split level 1: [/input.11, 19] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 73] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 81] 
split level 6: [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.013564586639404297
Time: prepare 0.0076    bound 0.4318    transfer 0.0012    finalize 0.0076    func 0.4482    
Accumulated time: func 0.4482    prepare 0.0082    bound 0.4318    transfer 0.0012    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-0.73032 (7), -0.66017 (7), -0.28829 (7), -0.07337 (7), -0.06819 (7), -0.04313 (7), 
Length of domains: 6
Time: pickout 0.0006    decision 0.0406    set_bounds 0.0158    solve 0.4483    add 0.0014    
Accumulated time: pickout 0.0006    decision 0.0406    set_bounds 0.0158    solve 0.4483    add 0.0014    
Current (lb-rhs): -0.7303235530853271
6 domains visited
Cumulative time: 0.5142562389373779

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] 
split level 1: [/input.11, 70] [/input.7, 633] [/input.7, 118] [/input.11, 70] [/input.7, 633] [/input.7, 118] 
split level 2: [/input.7, 633] [/input.11, 70] [/input.7, 633] [/input.7, 633] [/input.11, 70] [/input.7, 633] 
split level 3: [/input.11, 90] [/input.7, 597] [/input.11, 90] [/input.7, 597] [/input.7, 597] [/input.11, 90] 
split level 4: [/input.7, 597] [/input.11, 90] [/input.7, 597] [/input.11, 90] [/input.11, 90] [/input.7, 597] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0260    bound 0.0079    transfer 0.0009    finalize 0.0117    func 0.0465    
Accumulated time: func 0.4948    prepare 0.0347    bound 0.4397    transfer 0.0020    finalize 0.0194    
Length of domains: 0
Time: pickout 0.0011    decision 0.0351    set_bounds 0.0213    solve 0.0467    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0757    set_bounds 0.0371    solve 0.4950    add 0.0015    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.6198756694793701


Properties batch 6, size 1
Remaining timeout: 292.1129376888275
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.02577591]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.02577591]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 19] 
split level 2: [/input.11, 8] 
split level 3: [/input.11, 47] 
split level 4: [/input.11, 90] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.390975952148438e-05
Time: prepare 0.0076    bound 0.0076    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0076    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0408    set_bounds 0.0158    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0408    set_bounds 0.0158    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0862429141998291


Properties batch 7, size 1
Remaining timeout: 291.8796501159668
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.00881505]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.00881505]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 86] 
split level 6: [/input.11, 14] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0076    bound 0.0076    transfer 0.0007    finalize 0.0059    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0082    bound 0.0076    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0406    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0406    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08596301078796387


Properties batch 8, size 1
Remaining timeout: 291.6472234725952
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.21362352]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.46079111, -2.62821007, -4.00772238, -0.42384982,  1.24607670,
         0.90520149, -0.38833997, -1.84738016, 10.44351292, -1.02125990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.21362352]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 687
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 146
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 90] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 81] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 6] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.511543273925781e-05
Time: prepare 0.0076    bound 0.0079    transfer 0.0007    finalize 0.0059    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0082    bound 0.0079    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0158    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0158    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08743095397949219

Result: safe in 8.6062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.04837561, -0.73607916, -5.51503038, -1.27653897, 15.07930565,
         -2.48097610, -4.37012672,  2.19298458,  2.52447557, -0.63743031]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.55it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.05279350, -2.03874087, -4.28697443,  0.93177271, 11.10190868,
          -1.69056857, -5.49025393,  1.53562999,  5.70360565, -0.88830030],
         [-5.05279350, -2.03874087, -4.28697443,  0.93177271, 11.10190868,
          -1.69056857, -5.49025393,  1.53562999,  5.70360565, -0.88830030]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.15470123, 13.14064980, 15.38888359, 10.17013550, 12.79247761,
          16.59216309,  9.56627846,  5.39830303, 11.99020863]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6562 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.04837513, -0.73607898, -5.51503038, -1.27653933, 15.07930660,
         -2.48097634, -4.37012672,  2.19298458,  2.52447629, -0.63743150]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [646]; unstable size 646; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 83, 1, 646] with unstable size 82 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 646] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [82]; unstable size 82; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 82] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 82] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.90101624,  7.51830101,  8.69850922,  4.32754326,  5.22394848,
          8.98741913,  2.49333739, -0.63886690,  4.27821922]], device='cuda:0') None

all verified at 11th iter
best_l after optimization: 56.27947235107422
alpha/beta optimization time: 0.522376298904419
initial alpha-crown bounds: tensor([[11.26036263,  7.87529278,  9.23814201,  4.79245043,  5.82632875,
          9.22799301,  3.10060263,  0.02349937,  4.93480682]], device='cuda:0')
Worst class: (+ rhs) 0.023499369621276855
verified with init bound!
Result: safe-incomplete in 1.2487 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.59145665,  -0.52985674,   2.86504602,   3.90149069,  -5.21768045,
          -5.13674355, -13.01788616,  15.66477871,   0.85175812,   3.18567991]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.64504313,  -0.98159766,   3.08484125,   4.85824490,  -6.39389467,
           -4.20662737, -12.40789509,  11.89975739,   2.32062387,   3.50517797],
         [ -1.64504313,  -0.98159766,   3.08484125,   4.85824490,  -6.39389467,
           -4.20662737, -12.40789509,  11.89975739,   2.32062387,   3.50517797]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.54480076, 12.88135529,  8.81491661,  7.04151249, 18.29365158,
          16.10638428, 24.30765152,  9.57913399,  8.39457893]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6668 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -2.59145737,  -0.52985680,   2.86504674,   3.90149021,  -5.21768045,
          -5.13674307, -13.01788521,  15.66477966,   0.85175836,   3.18567920]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [716]; unstable size 716; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 124, 1, 716] with unstable size 123 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 716] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 716] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [123]; unstable size 123; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 123] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 123] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.32905006,  8.09105301,  4.61172295,  2.78714705, 13.48417950,
         10.37476158, 18.97914886,  4.76716375,  3.78361702]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7328 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.57379293,  0.02509583, -0.85028219, 11.14596748, -2.71218848,
          2.94485188, -4.70556116,  1.87485266, -0.71765149, -2.56664443]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.89554024, -0.04422645, -0.90035617,  7.99227190, -1.25867760,
           2.10923457, -4.47710896,  5.51921415, -1.37474501, -2.84066463],
         [-4.89554024, -0.04422645, -0.90035617,  7.99227190, -1.25867760,
           2.10923457, -4.47710896,  5.51921415, -1.37474501, -2.84066463]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.88781166,  8.03649807,  8.89262772,  9.25094986,  5.88303757,
          12.46938133,  2.47305775,  9.36701679, 10.83293629]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6565 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.57379341,  0.02509613, -0.85028195, 11.14596844, -2.71218848,
          2.94485211, -4.70556164,  1.87485337, -0.71765172, -2.56664491]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [724]; unstable size 724; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 132, 1, 724] with unstable size 131 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 35, 1, 724] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 724] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [131]; unstable size 131; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 35, 1, 131] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 131] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.81943941,  0.68470168,  1.77412653,  1.48778915, -0.71308661,
          4.85575199, -2.94988155,  3.32433176,  2.62670255]], device='cuda:0') None
best_l after optimization: 26.72272491455078
alpha/beta optimization time: 4.524346828460693
initial alpha-crown bounds: tensor([[ 7.58358955,  1.57940125,  2.58773327,  2.84199047,  0.02806449,
          5.57587337, -1.70296037,  4.15633774,  4.07269382]], device='cuda:0')
Worst class: (+ rhs) -1.7029603719711304
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7492573261261
##### Instance 86 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.583589553833008.

Properties batch 1, size 1
Remaining timeout: 294.60668778419495
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5794012546539307.

Properties batch 2, size 1
Remaining timeout: 294.5005216598511
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.587733268737793.

Properties batch 3, size 1
Remaining timeout: 294.3956530094147
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.8419904708862305.

Properties batch 4, size 1
Remaining timeout: 294.2907819747925
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.028064489364624023.

Properties batch 5, size 1
Remaining timeout: 294.1858868598938
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.575873374938965.

Properties batch 6, size 1
Remaining timeout: 294.0810978412628
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.70296037]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.57379341,  0.02509613, -0.85028195, 11.14596844, -2.71218848,
         2.94485211, -4.70556164,  1.87485337, -0.71765172, -2.56664491],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.70296037]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 130
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 887
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 86] 
split level 1: [/input.11, 14] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 19] 
split level 4: [/input.11, 11] 
split level 5: [/input.7, 113] 
split level 6: [/input.11, 47] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.012760639190673828
Time: prepare 0.0145    bound 0.4404    transfer 0.0012    finalize 0.0091    func 0.4652    
Accumulated time: func 0.4652    prepare 0.0151    bound 0.4404    transfer 0.0012    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.01658 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0170    solve 0.4653    add 0.0008    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0170    solve 0.4653    add 0.0008    
Current (lb-rhs): -0.0165787935256958
1 domains visited
Cumulative time: 0.5325143337249756

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 37] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 58] 
split level 6: [/input.11, 50] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0167    bound 0.0076    transfer 0.0006    finalize 0.0074    func 0.0325    
Accumulated time: func 0.4977    prepare 0.0325    bound 0.4480    transfer 0.0018    finalize 0.0165    
Length of domains: 0
Time: pickout 0.0008    decision 0.0437    set_bounds 0.0173    solve 0.0325    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0851    set_bounds 0.0343    solve 0.4978    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.6278769969940186


Properties batch 7, size 1
Remaining timeout: 293.3093717098236
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.156337738037109.

Properties batch 8, size 1
Remaining timeout: 293.19854640960693
##### Instance 86 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.072693824768066.
Result: safe in 6.9072 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.11718277, -1.92958903, -2.04535604, -4.07576323,  3.20850825,
          1.21557379, 14.41511631, -6.97790527,  1.48222923, -5.67645025]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.49it/s]100%|██████████| 1/1 [00:00<00:00,  1.49it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.06090698, -1.56226933, -1.60524452, -3.85281968,  4.45040083,
           0.19172515, 11.71066761, -5.40042639,  1.30447602, -5.60345268],
         [-0.06090698, -1.56226933, -1.60524452, -3.85281968,  4.45040083,
           0.19172515, 11.71066761, -5.40042639,  1.30447602, -5.60345268]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.77157497, 13.27293682, 13.31591225, 15.56348705,  7.26026678,
          11.51894283, 17.11109352, 10.40619183, 17.31412125]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6811 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.11718348, -1.92958868, -2.04535580, -4.07576323,  3.20850801,
          1.21557426, 14.41511440, -6.97790527,  1.48222983, -5.67645073]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [643]; unstable size 643; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 167, 1, 643] with unstable size 166 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 643] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 643] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [166]; unstable size 166; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 166] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 166] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.67499161, 5.85692120, 3.54365540, 7.26207829, 1.39683962, 3.17779112,
         7.73305845, 2.72157145, 8.30813694]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.20018768e+00,  7.97022486e+00,  3.25844586e-01, -1.32006693e+00,
         -9.15417075e-01, -1.52041626e+00,  7.66970776e-03, -4.12776262e-01,
          2.83938599e+00, -4.95399714e+00]], device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.51it/s]100%|██████████| 1/1 [00:00<00:00,  1.51it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.83123994,  5.55525589,  0.47759140, -0.58333927, -1.82973552,
           0.07091902,  0.50846022, -1.36062932,  4.64620781, -4.82999134],
         [-2.83123994,  5.55525589,  0.47759140, -0.58333927, -1.82973552,
           0.07091902,  0.50846022, -1.36062932,  4.64620781, -4.82999134]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.38649559,  5.07766438,  6.13859510,  7.38499165,  5.48433685,
           5.04679585,  6.91588497,  0.90904808, 10.38524723]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6720 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.20018816e+00,  7.97022390e+00,  3.25844944e-01, -1.32006657e+00,
         -9.15416718e-01, -1.52041674e+00,  7.66935013e-03, -4.12776321e-01,
          2.83938646e+00, -4.95399666e+00]], device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [679]; unstable size 679; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 234, 1, 679] with unstable size 233 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 679] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [233]; unstable size 233; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 233] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 233] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.24365807,  1.76922476,  2.10705900,  2.96655273,  1.00719583,
          0.70090806,  1.81135678, -1.52233684,  4.99777794]], device='cuda:0') None
best_l after optimization: 24.629314422607422
alpha/beta optimization time: 4.566597938537598
initial alpha-crown bounds: tensor([[ 5.76456261,  2.27996087,  2.70736074,  3.61063099,  1.69010532,
          1.50683701,  2.47461081, -1.01430440,  5.60955238]], device='cuda:0')
Worst class: (+ rhs) -1.0143043994903564
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.6911497116089
##### Instance 88 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.764562606811523.

Properties batch 1, size 1
Remaining timeout: 294.56955075263977
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.279960870742798.

Properties batch 2, size 1
Remaining timeout: 294.4632909297943
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7073607444763184.

Properties batch 3, size 1
Remaining timeout: 294.35778164863586
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.610630989074707.

Properties batch 4, size 1
Remaining timeout: 294.25273966789246
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6901053190231323.

Properties batch 5, size 1
Remaining timeout: 294.14775705337524
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.506837010383606.

Properties batch 6, size 1
Remaining timeout: 294.0428853034973
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4746108055114746.

Properties batch 7, size 1
Remaining timeout: 293.937956571579
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.01430440]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.20018816e+00,  7.97022390e+00,  3.25844944e-01, -1.32006657e+00,
        -9.15416718e-01, -1.52041674e+00,  7.66935013e-03, -4.12776321e-01,
         2.83938646e+00, -4.95399666e+00], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.01430440]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 679
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 231
Node /27 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 928
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 25] 
split level 3: [/input.7, 642] 
split level 4: [/input.7, 187] 
split level 5: [/input.7, 713] 
split level 6: [/input.7, 262] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.013200044631958008
Time: prepare 0.0146    bound 0.4286    transfer 0.0012    finalize 0.0101    func 0.4545    
Accumulated time: func 0.4545    prepare 0.0152    bound 0.4286    transfer 0.0012    finalize 0.0101    
Current worst splitting domains lb-rhs (depth):
-0.09694 (7), -0.01413 (7), 
Length of domains: 2
Time: pickout 0.0007    decision 0.0414    set_bounds 0.0171    solve 0.4546    add 0.0012    
Accumulated time: pickout 0.0007    decision 0.0414    set_bounds 0.0171    solve 0.4546    add 0.0012    
Current (lb-rhs): -0.09694349765777588
2 domains visited
Cumulative time: 0.5227611064910889

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.7, 588] [/input.7, 588] 
split level 1: [/input.7, 703] [/input.7, 703] 
split level 2: [/input.3, 2267] [/input.3, 2267] 
split level 3: [/input.7, 717] [/input.7, 717] 
split level 4: [/input.11, 9] [/input.11, 9] 
split level 5: [/input.11, 14] [/input.11, 14] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0240    bound 0.0077    transfer 0.0007    finalize 0.0089    func 0.0415    
Accumulated time: func 0.4960    prepare 0.0398    bound 0.4364    transfer 0.0018    finalize 0.0190    
Length of domains: 0
Time: pickout 0.0013    decision 0.0401    set_bounds 0.0192    solve 0.0416    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0815    set_bounds 0.0363    solve 0.4962    add 0.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.626107931137085


Properties batch 8, size 1
Remaining timeout: 293.16819190979004
##### Instance 88 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.609552383422852.
Result: safe in 6.9426 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.18704796, -1.85523939, -1.32442558, 13.03547955, -7.09508753,
          3.61044264, -7.33235836, -4.13552094,  3.50350833,  3.78935528]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.94980156, -2.49559140, -1.49519897,  9.85670757, -5.45435381,
           3.55592060, -7.55274153, -3.24840546,  2.69171548,  6.14875031],
         [-1.94980156, -2.49559140, -1.49519897,  9.85670757, -5.45435381,
           3.55592060, -7.55274153, -3.24840546,  2.69171548,  6.14875031]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.80650902, 12.35229874, 11.35190678, 15.31106186,  6.30078697,
          17.40944862, 13.10511303,  7.16499233,  3.70795727]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6578 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.18704748, -1.85523891, -1.32442522, 13.03547955, -7.09508848,
          3.61044264, -7.33235931, -4.13552189,  3.50350857,  3.78935599]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [731]; unstable size 731; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 154, 1, 731] with unstable size 153 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 731] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 731] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [153]; unstable size 153; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 153] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 153] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.45895576,  4.87146282,  4.37632942,  7.87289238, -0.24653745,
         10.78041935,  6.89539099,  0.61582303, -0.54413271]], device='cuda:0') None

all verified at 11th iter
best_l after optimization: 44.93653106689453
alpha/beta optimization time: 0.49626874923706055
initial alpha-crown bounds: tensor([[ 5.95013285,  5.52597237,  4.90698719,  8.47571182,  0.17732060,
         11.19512558,  7.51832724,  1.16530561,  0.02164638]], device='cuda:0')
Worst class: (+ rhs) 0.02164638042449951
verified with init bound!
Result: safe-incomplete in 1.2241 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.77782160, -4.17978239, -0.72026789, -2.05789614, -0.29515782,
          2.67739654, 13.70631886, -6.54093790,  1.19362462, -3.47350621]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.78028387, -4.46960926, -0.36029625, -1.21939147, -0.56066912,
           3.30672288, 10.93521404, -5.61211491,  0.87798023, -2.52237439],
         [-0.78028387, -4.46960926, -0.36029625, -1.21939147, -0.56066912,
           3.30672288, 10.93521404, -5.61211491,  0.87798023, -2.52237439]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.71549797, 15.40482330, 11.29551029, 12.15460587, 11.49588299,
           7.62849140, 16.54732895, 10.05723381, 13.45758820]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6613 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.77782196, -4.17978239, -0.72026777, -2.05789614, -0.29515752,
          2.67739630, 13.70631886, -6.54093838,  1.19362438, -3.47350717]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [696]; unstable size 696; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 203, 1, 696] with unstable size 202 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 696] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 696] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [202]; unstable size 202; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 202] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.44280720, 6.62434196, 2.69670057, 4.52565336, 3.14972830, 1.12151003,
         7.76208830, 1.75658798, 5.81980753]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7288 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.11771870, -1.60072792, -1.82720530,  0.71901155,  2.79447341,
         -1.82535791, -3.64899182,  1.34899712,  1.71193314,  5.45887423]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.93598938, -1.26754379, -1.72263873, -0.08971214,  5.72398329,
          -1.58261740, -2.13482594,  0.89856654,  1.64026248,  2.42784429],
         [-3.93598938, -1.26754379, -1.72263873, -0.08971214,  5.72398329,
          -1.58261740, -2.13482594,  0.89856654,  1.64026248,  2.42784429]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.36383343,  3.69538808,  4.15048313,  2.51755643, -3.29613900,
           4.01046181,  4.56267023,  1.52927780,  0.78758180]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0163 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.29865074,  -3.12069559,  -2.38034558,  15.44449425,  -8.17736912,
           6.66383266, -11.76757622,  -5.36411190,   3.43283987,   6.64293480]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.35395277,  -4.03936052,  -3.92084932,  11.97437668,  -5.57656145,
            6.82198191, -11.86791801,  -5.42276764,   3.63794041,   9.88736725],
         [ -1.35395277,  -4.03936052,  -3.92084932,  11.97437668,  -5.57656145,
            6.82198191, -11.86791801,  -5.42276764,   3.63794041,   9.88736725]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.32832909, 16.01373672, 15.89522552, 17.55093765,  5.15239477,
          23.84229469, 17.39714432,  8.33643627,  2.08700943]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6577 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -1.29865074,  -3.12069631,  -2.38034511,  15.44449425,  -8.17737007,
           6.66383123, -11.76757526,  -5.36411190,   3.43284035,   6.64293575]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [628]; unstable size 628; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 98, 1, 628] with unstable size 97 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 628] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [97]; unstable size 97; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 97] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.51034927,  8.43124866,  9.54669952, 11.74207687, -0.61308980,
         17.61211014, 10.06987667,  3.47149205, -0.93919277]], device='cuda:0') None
best_l after optimization: 73.72158813476562
alpha/beta optimization time: 4.485476732254028
initial alpha-crown bounds: tensor([[ 9.04592037,  9.34819508, 10.10089493, 12.53278160,  0.06546915,
         18.09621429, 10.85285664,  3.97598648, -0.29672527]], device='cuda:0')
Worst class: (+ rhs) -0.2967252731323242
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7888741493225
##### Instance 92 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.045920372009277.

Properties batch 1, size 1
Remaining timeout: 294.6740539073944
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.34819507598877.

Properties batch 2, size 1
Remaining timeout: 294.5683307647705
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.100894927978516.

Properties batch 3, size 1
Remaining timeout: 294.46319818496704
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 12.532781600952148.

Properties batch 4, size 1
Remaining timeout: 294.3580057621002
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.06546914577484131.

Properties batch 5, size 1
Remaining timeout: 294.2531352043152
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 18.096214294433594.

Properties batch 6, size 1
Remaining timeout: 294.1479616165161
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.852856636047363.

Properties batch 7, size 1
Remaining timeout: 294.042781829834
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9759864807128906.

Properties batch 8, size 1
Remaining timeout: 293.93792605400085
##### Instance 92 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.29672527]], device='cuda:0') need to verify.
Model prediction is: tensor([ -1.29865074,  -3.12069631,  -2.38034511,  15.44449425,  -8.17737007,
          6.66383123, -11.76757526,  -5.36411190,   3.43284035,   6.64293575],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.29672527]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 628
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 94
Node /27 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 744
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 30] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 11] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 14] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0076    bound 0.0078    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0078    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08712291717529297

Result: safe in 6.2926 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.13955879, 11.28754425,  0.26386464, -2.94693851,  1.45408165,
         -1.91982341,  0.77597207, -4.12856579,  5.71036148, -4.53412342]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.50649786,  8.75363636, -0.43908256, -3.00021362,  1.86057627,
          -1.96418476,  1.12373614, -4.22913599,  7.81754923, -3.57321787],
         [-6.50649786,  8.75363636, -0.43908256, -3.00021362,  1.86057627,
          -1.96418476,  1.12373614, -4.22913599,  7.81754923, -3.57321787]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.26013374,  9.19271851, 11.75384998,  6.89306021, 10.71782112,
           7.62989998, 12.98277283,  0.93608713, 12.32685471]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6645 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-6.13955927, 11.28754330,  0.26386440, -2.94693899,  1.45408165,
         -1.91982388,  0.77597237, -4.12856579,  5.71036196, -4.53412294]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [669]; unstable size 669; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 210, 1, 669] with unstable size 209 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 669] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 669] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [209]; unstable size 209; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 209] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.05429077,  4.03697634,  5.72305965,  2.41353655,  6.01208782,
          2.80392075,  7.76025867, -2.01438379,  6.02951860]], device='cuda:0') None
best_l after optimization: 48.09449768066406
alpha/beta optimization time: 4.479386329650879
initial alpha-crown bounds: tensor([[11.38620472,  4.43339729,  6.27360678,  2.89087820,  6.60683441,
          3.32265353,  8.20194626, -1.62488842,  6.60386372]], device='cuda:0')
Worst class: (+ rhs) -1.6248884201049805
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7850182056427
##### Instance 93 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.386204719543457.

Properties batch 1, size 1
Remaining timeout: 294.6680064201355
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.43339729309082.

Properties batch 2, size 1
Remaining timeout: 294.56236743927
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.273606777191162.

Properties batch 3, size 1
Remaining timeout: 294.4571976661682
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.890878200531006.

Properties batch 4, size 1
Remaining timeout: 294.35187458992004
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.606834411621094.

Properties batch 5, size 1
Remaining timeout: 294.24685764312744
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3226535320281982.

Properties batch 6, size 1
Remaining timeout: 294.14152431488037
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.201946258544922.

Properties batch 7, size 1
Remaining timeout: 294.03631615638733
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.62488842]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.13955927, 11.28754330,  0.26386440, -2.94693899,  1.45408165,
        -1.91982388,  0.77597237, -4.12856579,  5.71036196, -4.53412294],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.62488842]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 669
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 205
Node /27 input 0: size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 899
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 48] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 25] 
split level 6: [/input.7, 712] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.014202356338500977
Time: prepare 0.0145    bound 0.4556    transfer 0.0011    finalize 0.0096    func 0.4808    
Accumulated time: func 0.4808    prepare 0.0151    bound 0.4556    transfer 0.0011    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-0.39552 (7), -0.19808 (7), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0171    solve 0.4809    add 0.0012    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0171    solve 0.4809    add 0.0012    
Current (lb-rhs): -0.3955228328704834
2 domains visited
Cumulative time: 0.5490145683288574

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] 
split level 1: [/input.3, 2266] [/input.3, 2266] 
split level 2: [/input.7, 598] [/input.7, 598] 
split level 3: [/input.7, 708] [/input.7, 708] 
split level 4: [/input.11, 56] [/input.11, 14] 
split level 5: [/input.11, 14] [/input.11, 56] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0240    bound 0.0078    transfer 0.0007    finalize 0.0089    func 0.0415    
Accumulated time: func 0.5223    prepare 0.0397    bound 0.4633    transfer 0.0018    finalize 0.0184    
Length of domains: 0
Time: pickout 0.0009    decision 0.0402    set_bounds 0.0193    solve 0.0415    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0814    set_bounds 0.0365    solve 0.5225    add 0.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.6523880958557129


Properties batch 8, size 1
Remaining timeout: 293.2403733730316
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.603863716125488.
Result: safe in 6.8706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.88812327, -4.47505093, -3.57568431, -1.44981396, 10.18360615,
         -3.55165386,  3.33907247, -0.72383177,  2.61711597, -0.92583776]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.35580754, -6.13122034, -2.67989969, -0.75646967,  5.89256287,
          -3.52933025,  2.93570232, -1.30059505,  5.92570353,  0.58892524],
         [-1.35580754, -6.13122034, -2.67989969, -0.75646967,  5.89256287,
          -3.52933025,  2.93570232, -1.30059505,  5.92570353,  0.58892524]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.24837017, 12.02378273,  8.57246208,  6.64903259,  9.42189312,
           2.95686054,  7.19315815, -0.03314066,  5.30363750]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0242 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0254 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.85806799,  5.34442329, -1.42424524, -0.57298911,  1.66435111,
         -0.34429663, -2.47125602, -0.23554596,  2.32250643,  0.53639627]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]100%|██████████| 1/1 [00:00<00:00,  1.54it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.17006254,  3.55219197, -2.22969937, -0.93668395,  3.31202912,
           0.09716098, -1.84829807, -0.49315581,  2.03342342,  1.65173805],
         [-5.17006254,  3.55219197, -2.22969937, -0.93668395,  3.31202912,
           0.09716098, -1.84829807, -0.49315581,  2.03342342,  1.65173805]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[8.72225475, 5.78189135, 4.48887587, 0.24016285, 3.45503092,
          5.40048981, 4.04534769, 1.51876855, 1.90045393]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6585 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
         -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [718]; unstable size 718; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 249, 1, 718] with unstable size 248 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 718] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 718] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [248]; unstable size 248; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 248] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 248] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.67713165,  1.15720308, -0.76979899, -1.34108043,  0.14563560,
          3.30155635, -0.76074529, -2.23406076, -2.09410667]], device='cuda:0') None
best_l after optimization: 5.407339096069336
alpha/beta optimization time: 4.503682613372803
initial alpha-crown bounds: tensor([[ 4.95952415,  1.45021939, -0.50200570, -0.90591264,  0.49009490,
          3.54716420, -0.41159761, -1.65130520, -1.56884205]], device='cuda:0')
Worst class: (+ rhs) -1.6513051986694336
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.76722598075867
##### Instance 95 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.959524154663086.

Properties batch 1, size 1
Remaining timeout: 294.65542817115784
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4502193927764893.

Properties batch 2, size 1
Remaining timeout: 294.5495536327362
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50200570]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
        -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50200570]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 718
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 246
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 991
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 80] 
split level 3: [/input.11, 59] 
split level 4: [/input.7, 632] 
split level 5: [/input.7, 597] 
split level 6: [/input.11, 32] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09638237953186035


Properties batch 3, size 1
Remaining timeout: 294.30967235565186
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.90591264]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
        -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.90591264]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 718
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 246
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 991
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.7, 643] 
split level 2: [/input.11, 90] 
split level 3: [/input.11, 48] 
split level 4: [/input.11, 33] 
split level 5: [/input.11, 59] 
split level 6: [/input.7, 712] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.012953996658325195
Time: prepare 0.0145    bound 0.4434    transfer 0.0012    finalize 0.0094    func 0.4686    
Accumulated time: func 0.4686    prepare 0.0151    bound 0.4434    transfer 0.0012    finalize 0.0094    
Current worst splitting domains lb-rhs (depth):
-0.32884 (7), -0.23874 (7), -0.13075 (7), -0.01383 (7), 
Length of domains: 4
Time: pickout 0.0006    decision 0.0417    set_bounds 0.0171    solve 0.4687    add 0.0014    
Accumulated time: pickout 0.0006    decision 0.0417    set_bounds 0.0171    solve 0.4687    add 0.0014    
Current (lb-rhs): -0.3288416862487793
4 domains visited
Cumulative time: 0.5377998352050781

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.3, 2296] [/input.3, 2283] [/input.3, 2283] [/input.3, 2283] 
split level 1: [/input.3, 2283] [/input.7, 581] [/input.11, 14] [/input.7, 581] 
split level 2: [/input.7, 581] [/input.11, 14] [/input.7, 718] [/input.11, 14] 
split level 3: [/input.11, 14] [/input.3, 2280] [/input.3, 2280] [/input.7, 718] 
split level 4: [/input.7, 718] [/input.11, 32] [/input.11, 32] [/input.3, 2280] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 128 = 0.9609375
pruning-in-iteration extra time: 0.013241291046142578
Time: prepare 0.0249    bound 0.4478    transfer 0.0011    finalize 0.0107    func 0.4846    
Accumulated time: func 0.9532    prepare 0.0404    bound 0.8912    transfer 0.0024    finalize 0.0202    
Current worst splitting domains lb-rhs (depth):
-0.10966 (12), -0.08855 (12), -0.02240 (12), -0.00523 (12), -0.00231 (12), 
Length of domains: 5
Time: pickout 0.0014    decision 0.0352    set_bounds 0.0175    solve 0.4847    add 0.0013    
Accumulated time: pickout 0.0020    decision 0.0769    set_bounds 0.0346    solve 0.9534    add 0.0027    
Current (lb-rhs): -0.10966426134109497
9 domains visited
Cumulative time: 1.0800435543060303

BaB round 3
batch: 5
splitting decisions: 
split level 0: [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] 
split level 1: [/input.3, 2296] [/input.3, 2296] [/input.3, 2296] [/input.7, 713] [/input.3, 2296] 
split level 2: [/input.7, 717] [/input.7, 717] [/input.7, 717] [/input.3, 2296] [/input.7, 717] 
split level 3: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.7, 581] [/input.11, 32] 
split level 4: [/input.11, 15] [/input.11, 15] [/input.11, 15] [/input.11, 15] [/input.11, 15] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0299    bound 0.0078    transfer 0.0008    finalize 0.0110    func 0.0496    
Accumulated time: func 1.0028    prepare 0.0709    bound 0.8990    transfer 0.0031    finalize 0.0312    
Length of domains: 0
Time: pickout 0.0016    decision 0.0346    set_bounds 0.0233    solve 0.0497    add 0.0001    
Accumulated time: pickout 0.0036    decision 0.1115    set_bounds 0.0579    solve 1.0031    add 0.0028    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9 domains visited
Cumulative time: 1.1906073093414307


Properties batch 4, size 1
Remaining timeout: 292.9700617790222
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4900949001312256.

Properties batch 5, size 1
Remaining timeout: 292.8595390319824
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.54716420173645.

Properties batch 6, size 1
Remaining timeout: 292.75358152389526
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41159761]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
        -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41159761]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 718
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 246
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 991
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 14] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 1] 
split level 4: [/input.7, 632] 
split level 5: [/input.11, 32] 
split level 6: [/input.7, 581] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0169    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0169    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09659719467163086


Properties batch 7, size 1
Remaining timeout: 292.5131993293762
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.65130520]], device='cuda:0') need to verify.
torch allclose failed: norm 3.5168002909813367e-07
Model prediction is: tensor([-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
        -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.65130520]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 718
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 246
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 991
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 65] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 59] 
split level 4: [/input.7, 598] 
split level 5: [/input.7, 597] 
split level 6: [/input.7, 702] 
pruning_in_iteration open status: True
ratio of positive domain = 98 / 128 = 0.765625
pruning-in-iteration extra time: 0.013875246047973633
Time: prepare 0.0146    bound 0.4636    transfer 0.0011    finalize 0.0091    func 0.4884    
Accumulated time: func 0.4884    prepare 0.0152    bound 0.4636    transfer 0.0011    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.59112 (7), -0.50572 (7), -0.47942 (7), -0.47074 (7), -0.46679 (7), -0.43528 (7), -0.41448 (7), -0.40680 (7), -0.39650 (7), -0.38816 (7), -0.38398 (7), -0.37900 (7), -0.36570 (7), -0.36410 (7), -0.26978 (7), -0.24111 (7), -0.23771 (7), -0.21922 (7), -0.20689 (7), -0.18473 (7), 
Length of domains: 30
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0169    solve 0.4885    add 0.0020    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0169    solve 0.4885    add 0.0020    
Current (lb-rhs): -0.5911170244216919
30 domains visited
Cumulative time: 0.5570173263549805

BaB round 2
batch: 30
splitting decisions: 
split level 0: [/input.11, 25] [/input.11, 84] [/input.11, 14] [/input.11, 14] [/input.11, 84] [/input.11, 14] [/input.11, 84] [/input.11, 14] [/input.11, 84] [/input.11, 14] 
split level 1: [/input.3, 2253] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 120 = 0.7
pruning-in-iteration extra time: 0.013587713241577148
Time: prepare 0.0172    bound 0.4823    transfer 0.0012    finalize 0.0090    func 0.5096    
Accumulated time: func 0.9980    prepare 0.0327    bound 0.9458    transfer 0.0023    finalize 0.0180    
Current worst splitting domains lb-rhs (depth):
-0.41153 (9), -0.32508 (9), -0.28676 (9), -0.26913 (9), -0.26832 (9), -0.26260 (9), -0.25486 (9), -0.24047 (9), -0.23872 (9), -0.23133 (9), -0.21473 (9), -0.21101 (9), -0.20371 (9), -0.20251 (9), -0.20157 (9), -0.19728 (9), -0.19335 (9), -0.17681 (9), -0.16961 (9), -0.15354 (9), 
Length of domains: 36
Time: pickout 0.0015    decision 0.0325    set_bounds 0.0079    solve 0.5097    add 0.0022    
Accumulated time: pickout 0.0021    decision 0.0738    set_bounds 0.0248    solve 0.9982    add 0.0042    
Current (lb-rhs): -0.41152775287628174
66 domains visited
Cumulative time: 1.111886978149414

BaB round 3
batch: 36
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 56] [/input.11, 84] [/input.11, 56] [/input.11, 84] [/input.11, 56] [/input.11, 84] [/input.11, 56] [/input.11, 56] [/input.11, 56] 
split level 1: [/input.11, 14] [/input.11, 14] [/input.11, 56] [/input.11, 14] [/input.7, 581] [/input.11, 14] [/input.11, 56] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 144 = 0.8541666666666666
pruning-in-iteration extra time: 0.012968301773071289
Time: prepare 0.0212    bound 0.4679    transfer 0.0015    finalize 0.0119    func 0.5025    
Accumulated time: func 1.5005    prepare 0.0542    bound 1.4137    transfer 0.0037    finalize 0.0299    
Current worst splitting domains lb-rhs (depth):
-0.28845 (11), -0.19262 (11), -0.14851 (11), -0.13537 (11), -0.13524 (11), -0.12641 (11), -0.09682 (11), -0.09084 (11), -0.08893 (11), -0.08378 (11), -0.07571 (11), -0.05724 (11), -0.05514 (11), -0.04721 (11), -0.03626 (11), -0.02231 (11), -0.01060 (11), -0.00900 (11), -0.00794 (11), -0.00130 (11), 
Length of domains: 21
Time: pickout 0.0011    decision 0.0278    set_bounds 0.0105    solve 0.5026    add 0.0020    
Accumulated time: pickout 0.0032    decision 0.1016    set_bounds 0.0353    solve 1.5008    add 0.0062    
Current (lb-rhs): -0.2884496748447418
87 domains visited
Cumulative time: 1.6587941646575928

BaB round 4
batch: 21
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.7, 712] 
split level 1: [/input.3, 2253] [/input.3, 2253] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 632] [/input.7, 148] [/input.3, 2253] 
split level 2: [/input.7, 581] [/input.7, 581] [/input.3, 2253] [/input.3, 2253] [/input.3, 2253] [/input.3, 2253] [/input.3, 2253] [/input.7, 717] [/input.7, 581] [/input.7, 581] 
pruning_in_iteration open status: True
ratio of positive domain = 159 / 168 = 0.9464285714285714
pruning-in-iteration extra time: 0.01365351676940918
Time: prepare 0.0298    bound 0.4656    transfer 0.0014    finalize 0.0142    func 0.5111    
Accumulated time: func 2.0117    prepare 0.0843    bound 1.8794    transfer 0.0052    finalize 0.0441    
Current worst splitting domains lb-rhs (depth):
-0.13547 (14), -0.09814 (14), -0.05134 (14), -0.04458 (14), -0.03371 (14), -0.01173 (14), -0.00518 (14), -0.00443 (14), -0.00203 (14), 
Length of domains: 9
Time: pickout 0.0017    decision 0.0333    set_bounds 0.0164    solve 0.5112    add 0.0016    
Accumulated time: pickout 0.0049    decision 0.1349    set_bounds 0.0517    solve 2.0121    add 0.0078    
Current (lb-rhs): -0.13547024130821228
96 domains visited
Cumulative time: 2.2254531383514404

BaB round 5
batch: 9
splitting decisions: 
split level 0: [/input.7, 717] [/input.11, 9] [/input.7, 717] [/input.7, 717] [/input.7, 717] [/input.11, 9] [/input.11, 9] [/input.7, 717] [/input.7, 632] 
split level 1: [/input.7, 712] [/input.7, 632] [/input.7, 712] [/input.7, 712] [/input.7, 712] [/input.7, 632] [/input.7, 632] [/input.7, 712] [/input.11, 9] 
split level 2: [/input.7, 148] [/input.11, 15] [/input.7, 148] [/input.7, 148] [/input.7, 148] [/input.11, 7] [/input.11, 7] [/input.7, 148] [/input.11, 7] 
split level 3: [/input.7, 142] [/input.11, 7] [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.11, 15] [/input.11, 15] [/input.7, 142] [/input.11, 15] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 144 / 144 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0276    bound 0.0077    transfer 0.0007    finalize 0.0105    func 0.0466    
Accumulated time: func 2.0582    prepare 0.1124    bound 1.8871    transfer 0.0059    finalize 0.0545    
Length of domains: 0
Time: pickout 0.0017    decision 0.0302    set_bounds 0.0142    solve 0.0466    add 0.0001    
Accumulated time: pickout 0.0066    decision 0.1651    set_bounds 0.0659    solve 2.0587    add 0.0079    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
96 domains visited
Cumulative time: 2.3190395832061768


Properties batch 8, size 1
Remaining timeout: 290.0426342487335
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.56884205]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.85806894,  5.34442377, -1.42424464, -0.57298958,  1.66435051,
        -0.34429663, -2.47125578, -0.23554572,  2.32250667,  0.53639591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.56884205]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 718
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 246
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 991
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 90] 
split level 2: [/input.11, 32] 
split level 3: [/input.11, 6] 
split level 4: [/input.7, 702] 
split level 5: [/input.7, 132] 
split level 6: [/input.7, 581] 
pruning_in_iteration open status: True
ratio of positive domain = 122 / 128 = 0.953125
pruning-in-iteration extra time: 0.013751029968261719
Time: prepare 0.0145    bound 0.4455    transfer 0.0011    finalize 0.0095    func 0.4707    
Accumulated time: func 0.4707    prepare 0.0151    bound 0.4455    transfer 0.0011    finalize 0.0095    
Current worst splitting domains lb-rhs (depth):
-0.12358 (7), -0.11292 (7), -0.04029 (7), -0.02735 (7), -0.01224 (7), -0.00692 (7), 
Length of domains: 6
Time: pickout 0.0007    decision 0.0414    set_bounds 0.0171    solve 0.4708    add 0.0014    
Accumulated time: pickout 0.0007    decision 0.0414    set_bounds 0.0171    solve 0.4708    add 0.0014    
Current (lb-rhs): -0.12357914447784424
6 domains visited
Cumulative time: 0.5394513607025146

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.7, 717] [/input.7, 717] [/input.7, 717] [/input.7, 632] [/input.3, 2253] [/input.7, 632] 
split level 1: [/input.7, 712] [/input.7, 712] [/input.3, 2253] [/input.7, 717] [/input.7, 717] [/input.3, 2253] 
split level 2: [/input.11, 99] [/input.11, 99] [/input.7, 712] [/input.3, 2253] [/input.7, 712] [/input.7, 717] 
split level 3: [/input.3, 2253] [/input.3, 2253] [/input.7, 263] [/input.7, 712] [/input.11, 99] [/input.7, 712] 
split level 4: [/input.7, 263] [/input.7, 263] [/input.11, 99] [/input.7, 263] [/input.7, 263] [/input.7, 263] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0368    bound 0.0082    transfer 0.0009    finalize 0.0141    func 0.0600    
Accumulated time: func 0.5307    prepare 0.0524    bound 0.4537    transfer 0.0020    finalize 0.0236    
Length of domains: 0
Time: pickout 0.0013    decision 0.0358    set_bounds 0.0241    solve 0.0601    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0771    set_bounds 0.0412    solve 0.5309    add 0.0015    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 0.6623742580413818

Result: safe in 10.7706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.54871893, -1.23006511,  2.61265588,  4.83550739, -0.59990859,
         -5.14247751, -7.71608591, 14.50954247,  1.40960729, -4.24528074]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.48it/s]100%|██████████| 1/1 [00:00<00:00,  1.48it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.69703674, -0.87760466,  2.75388861,  6.70697165, -1.35658658,
          -3.87403154, -8.59882545, 11.01143742,  1.70023370, -3.82598829],
         [-3.69703674, -0.87760466,  2.75388861,  6.70697165, -1.35658658,
          -3.87403154, -8.59882545, 11.01143742,  1.70023370, -3.82598829]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.70847416, 11.88904190,  8.25754929,  4.30446577, 12.36802387,
          14.88546944, 19.61026382,  9.31120396, 14.83742523]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6829 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.54871845, -1.23006511,  2.61265564,  4.83550692, -0.59990823,
         -5.14247751, -7.71608496, 14.50954247,  1.40960777, -4.24528122]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [690]; unstable size 690; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 152, 1, 690] with unstable size 151 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 690] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 690] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [151]; unstable size 151; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 151] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.37761307,  4.01345682,  1.55151272, -0.51876289,  4.86853313,
          7.52689075,  8.48427010,  0.55615330,  6.84409952]], device='cuda:0') None
best_l after optimization: 46.907752990722656
alpha/beta optimization time: 4.550722599029541
initial alpha-crown bounds: tensor([[ 7.96888065,  4.76748562,  2.02528787, -0.05842280,  5.71685314,
          8.17237282,  9.43050957,  1.23233485,  7.65245152]], device='cuda:0')
Worst class: (+ rhs) -0.05842279642820358
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7003254890442
##### Instance 96 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.968880653381348.

Properties batch 1, size 1
Remaining timeout: 294.58473324775696
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.767485618591309.

Properties batch 2, size 1
Remaining timeout: 294.47880840301514
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0252878665924072.

Properties batch 3, size 1
Remaining timeout: 294.373642206192
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05842280]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.54871845, -1.23006511,  2.61265564,  4.83550692, -0.59990823,
        -5.14247751, -7.71608496, 14.50954247,  1.40960777, -4.24528122],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05842280]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 690
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 151
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 871
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 80] 
split level 1: [/input.11, 48] 
split level 2: [/input.7, 597] 
split level 3: [/input.11, 10] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 59] 
split level 6: [/input.7, 722] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0009    finalize 0.0079    func 0.0314    
Accumulated time: func 0.0314    prepare 0.0151    bound 0.0078    transfer 0.0009    finalize 0.0079    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0171    solve 0.0314    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0171    solve 0.0314    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09773945808410645


Properties batch 4, size 1
Remaining timeout: 294.13199067115784
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.716853141784668.

Properties batch 5, size 1
Remaining timeout: 294.02163887023926
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.172372817993164.

Properties batch 6, size 1
Remaining timeout: 293.9154815673828
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.430509567260742.

Properties batch 7, size 1
Remaining timeout: 293.810213804245
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.232334852218628.

Properties batch 8, size 1
Remaining timeout: 293.7051217556
##### Instance 96 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.652451515197754.
Result: safe in 6.3997 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 3.26520014, -2.07358694, -1.78818035, -3.67406726, -0.86003697,
          3.16607857,  8.11316395, -3.97900820, -0.40700603, -2.28984213]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.02699757, -1.00393045, -1.63061821, -2.37421465, -2.80324864,
           4.41949081,  5.68438816, -3.56677532, -0.51709557, -1.75749183],
         [ 3.02699757, -1.00393045, -1.63061821, -2.37421465, -2.80324864,
           4.41949081,  5.68438816, -3.56677532, -0.51709557, -1.75749183]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[2.65739059, 6.68831873, 7.31500626, 8.05860329, 8.48763657,
          1.26489735, 9.25116348, 6.20148373, 7.44188023]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6639 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 3.26519966, -2.07358694, -1.78818083, -3.67406726, -0.86003709,
          3.16607857,  8.11316490, -3.97900915, -0.40700617, -2.28984141]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [704]; unstable size 704; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 173, 1, 704] with unstable size 172 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 704] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [172]; unstable size 172; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 172] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.42706537,  0.05266762, -0.73703766,  1.73611498,  0.91776419,
         -3.91960287,  1.65900660, -0.45884633,  0.41017914]], device='cuda:0') None
best_l after optimization: 4.284337520599365
alpha/beta optimization time: 4.50794243812561
initial alpha-crown bounds: tensor([[-1.00651014,  0.84603429,  0.06770468,  2.35929203,  1.32818699,
         -3.32559824,  2.22057009,  0.15895855,  1.63569951]], device='cuda:0')
Worst class: (+ rhs) -3.3255982398986816
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7593357563019
##### Instance 97 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.00651014]], device='cuda:0') need to verify.
Model prediction is: tensor([ 3.26519966, -2.07358694, -1.78818083, -3.67406726, -0.86003709,
         3.16607857,  8.11316490, -3.97900915, -0.40700617, -2.28984141],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.00651014]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 704
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 172
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 904
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 89] 
split level 1: [/input.11, 59] 
split level 2: [/input.7, 707] 
split level 3: [/input.11, 27] 
split level 4: [/input.11, 92] 
split level 5: [/input.7, 632] 
split level 6: [/input.7, 303] 

all verified at 8th iter
pruning_in_iteration open status: True
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.004683017730712891
Time: prepare 0.0146    bound 0.1752    transfer 0.0012    finalize 0.0102    func 0.2013    
Accumulated time: func 0.2013    prepare 0.0152    bound 0.1752    transfer 0.0012    finalize 0.0102    
Length of domains: 0
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0170    solve 0.2014    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0170    solve 0.2014    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.26801156997680664


Properties batch 1, size 1
Remaining timeout: 294.33680272102356
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8460342884063721.

Properties batch 2, size 1
Remaining timeout: 294.22066950798035
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.06770467758178711.

Properties batch 3, size 1
Remaining timeout: 294.1147150993347
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3592920303344727.

Properties batch 4, size 1
Remaining timeout: 294.0094060897827
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3281869888305664.

Properties batch 5, size 1
Remaining timeout: 293.90382266044617
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.32559824]], device='cuda:0') need to verify.
Model prediction is: tensor([ 3.26519966, -2.07358694, -1.78818083, -3.67406726, -0.86003709,
         3.16607857,  8.11316490, -3.97900915, -0.40700617, -2.28984141],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.32559824]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 704
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 172
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 904
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 81] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 128 = 0.8359375
pruning-in-iteration extra time: 0.012115240097045898
Time: prepare 0.0076    bound 0.4092    transfer 0.0011    finalize 0.0077    func 0.4257    
Accumulated time: func 0.4257    prepare 0.0082    bound 0.4092    transfer 0.0011    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-1.24187 (7), -1.17487 (7), -0.95622 (7), -0.78742 (7), -0.78603 (7), -0.75085 (7), -0.73430 (7), -0.70958 (7), -0.57020 (7), -0.49201 (7), -0.42695 (7), -0.39249 (7), -0.31335 (7), -0.25678 (7), -0.24078 (7), -0.21456 (7), -0.20294 (7), -0.20147 (7), -0.06960 (7), -0.05319 (7), 
Length of domains: 21
Time: pickout 0.0007    decision 0.0424    set_bounds 0.0160    solve 0.4258    add 0.0020    
Accumulated time: pickout 0.0007    decision 0.0424    set_bounds 0.0160    solve 0.4258    add 0.0020    
Current (lb-rhs): -1.2418705224990845
21 domains visited
Cumulative time: 0.4942781925201416

BaB round 2
batch: 21
splitting decisions: 
split level 0: [/input.11, 52] [/input.11, 86] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 86] [/input.11, 52] [/input.11, 52] 
split level 1: [/input.11, 86] [/input.11, 52] [/input.7, 636] [/input.11, 86] [/input.11, 86] [/input.7, 636] [/input.11, 86] [/input.11, 52] [/input.7, 636] [/input.11, 86] 
split level 2: [/input.7, 636] [/input.7, 636] [/input.7, 261] [/input.7, 247] [/input.7, 636] [/input.7, 261] [/input.7, 636] [/input.7, 636] [/input.7, 261] [/input.7, 247] 
pruning_in_iteration open status: True
ratio of positive domain = 138 / 168 = 0.8214285714285714
pruning-in-iteration extra time: 0.01353311538696289
Time: prepare 0.0233    bound 0.4436    transfer 0.0014    finalize 0.0119    func 0.4801    
Accumulated time: func 0.9058    prepare 0.0318    bound 0.8527    transfer 0.0025    finalize 0.0196    
Current worst splitting domains lb-rhs (depth):
-0.76115 (10), -0.67557 (10), -0.61996 (10), -0.55636 (10), -0.52202 (10), -0.46530 (10), -0.45385 (10), -0.44259 (10), -0.43286 (10), -0.36393 (10), -0.31092 (10), -0.30983 (10), -0.28956 (10), -0.28418 (10), -0.28227 (10), -0.28162 (10), -0.24284 (10), -0.22957 (10), -0.20677 (10), -0.20172 (10), 
Length of domains: 30
Time: pickout 0.0012    decision 0.0268    set_bounds 0.0138    solve 0.4802    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.0692    set_bounds 0.0298    solve 0.9060    add 0.0040    
Current (lb-rhs): -0.7611451148986816
51 domains visited
Cumulative time: 1.020188570022583

BaB round 3
batch: 30
splitting decisions: 
split level 0: [/input.11, 86] [/input.11, 86] [/input.11, 14] [/input.7, 261] [/input.11, 14] [/input.7, 261] [/input.11, 52] [/input.11, 86] [/input.11, 86] [/input.11, 86] 
split level 1: [/input.7, 632] [/input.7, 632] [/input.11, 33] [/input.7, 632] [/input.7, 261] [/input.7, 632] [/input.11, 86] [/input.7, 632] [/input.7, 266] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 96 / 120 = 0.8
pruning-in-iteration extra time: 0.014073610305786133
Time: prepare 0.0167    bound 0.4618    transfer 0.0011    finalize 0.0093    func 0.4890    
Accumulated time: func 1.3948    prepare 0.0489    bound 1.3145    transfer 0.0036    finalize 0.0288    
Current worst splitting domains lb-rhs (depth):
-0.44083 (12), -0.42144 (12), -0.39635 (12), -0.39345 (12), -0.38504 (12), -0.32404 (12), -0.32392 (12), -0.28433 (12), -0.26275 (12), -0.23108 (12), -0.22890 (12), -0.21582 (12), -0.21366 (12), -0.19459 (12), -0.17506 (12), -0.14340 (12), -0.11785 (12), -0.10909 (12), -0.08612 (12), -0.07761 (12), 
Length of domains: 24
Time: pickout 0.0016    decision 0.0266    set_bounds 0.0088    solve 0.4891    add 0.0020    
Accumulated time: pickout 0.0035    decision 0.0958    set_bounds 0.0386    solve 1.3951    add 0.0060    
Current (lb-rhs): -0.44082939624786377
75 domains visited
Cumulative time: 1.5497090816497803

BaB round 4
batch: 24
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 261] [/input.7, 632] [/input.7, 632] [/input.11, 33] [/input.11, 14] [/input.7, 261] [/input.7, 632] [/input.11, 33] [/input.11, 33] 
split level 1: [/input.7, 266] [/input.11, 84] [/input.11, 14] [/input.7, 266] [/input.7, 307] [/input.7, 707] [/input.11, 45] [/input.11, 14] [/input.7, 248] [/input.11, 84] 
split level 2: [/input.7, 248] [/input.7, 707] [/input.7, 248] [/input.7, 248] [/input.11, 84] [/input.7, 247] [/input.11, 84] [/input.7, 248] [/input.7, 247] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 183 / 192 = 0.953125
pruning-in-iteration extra time: 0.01329183578491211
Time: prepare 0.0270    bound 0.4483    transfer 0.0016    finalize 0.0141    func 0.4911    
Accumulated time: func 1.8859    prepare 0.0763    bound 1.7628    transfer 0.0052    finalize 0.0429    
Current worst splitting domains lb-rhs (depth):
-0.13753 (15), -0.11665 (15), -0.09487 (15), -0.09469 (15), -0.06486 (15), -0.05334 (15), -0.02906 (15), -0.01455 (15), -0.00565 (15), 
Length of domains: 9
Time: pickout 0.0014    decision 0.0344    set_bounds 0.0168    solve 0.4912    add 0.0015    
Accumulated time: pickout 0.0049    decision 0.1303    set_bounds 0.0554    solve 1.8863    add 0.0075    
Current (lb-rhs): -0.1375349760055542
84 domains visited
Cumulative time: 2.097430944442749

BaB round 5
batch: 9
splitting decisions: 
split level 0: [/input.11, 84] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 84] [/input.11, 45] [/input.7, 641] [/input.7, 641] [/input.11, 45] 
split level 1: [/input.11, 45] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 45] [/input.11, 84] [/input.11, 33] [/input.7, 307] [/input.7, 632] 
split level 2: [/input.11, 27] [/input.7, 248] [/input.7, 248] [/input.7, 248] [/input.11, 27] [/input.7, 307] [/input.7, 266] [/input.7, 266] [/input.11, 84] 
split level 3: [/input.7, 248] [/input.7, 307] [/input.7, 307] [/input.7, 307] [/input.7, 248] [/input.7, 248] [/input.7, 307] [/input.11, 33] [/input.7, 323] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 144 / 144 = 1.0
pruning-in-iteration extra time: 0.00017642974853515625
Time: prepare 0.0202    bound 0.0078    transfer 0.0007    finalize 0.0089    func 0.0377    
Accumulated time: func 1.9236    prepare 0.0969    bound 1.7706    transfer 0.0059    finalize 0.0519    
Length of domains: 0
Time: pickout 0.0015    decision 0.0300    set_bounds 0.0159    solve 0.0378    add 0.0001    
Accumulated time: pickout 0.0064    decision 0.1603    set_bounds 0.0713    solve 1.9241    add 0.0076    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
84 domains visited
Cumulative time: 2.1837034225463867


Properties batch 6, size 1
Remaining timeout: 291.5764739513397
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2205700874328613.

Properties batch 7, size 1
Remaining timeout: 291.4411380290985
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1589585542678833.

Properties batch 8, size 1
Remaining timeout: 291.3351263999939
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6356995105743408.
Result: safe in 8.7700 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.51765895, -7.47524023, -1.17283344,  3.75149775,  0.51398283,
         -4.23304319, -8.57968807,  4.44639778,  0.73226875, 14.53604698]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]100%|██████████| 1/1 [00:00<00:00,  1.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.57572222, -5.94696856, -0.60435373,  5.21481466, -0.38197634,
          -4.62436962, -9.75414181,  7.79075241,  0.21022406, 11.65400505],
         [-3.57572222, -5.94696856, -0.60435373,  5.21481466, -0.38197634,
          -4.62436962, -9.75414181,  7.79075241,  0.21022406, 11.65400505]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.22972679, 17.60097313, 12.25835896,  6.43919039, 12.03598118,
          16.27837372, 21.40814590,  3.86325264, 11.44378090]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6685 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.51765895, -7.47524023, -1.17283356,  3.75149775,  0.51398301,
         -4.23304272, -8.57968712,  4.44639826,  0.73226810, 14.53604698]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [628]; unstable size 628; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 74, 1, 628] with unstable size 73 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 628] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [73]; unstable size 73; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 73] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 73] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.90237951,  9.26512146,  1.73306656, -0.22622371,  3.72869468,
          8.21505642, 11.95620251, -2.72959661,  2.93659067]], device='cuda:0') None
best_l after optimization: 46.09064483642578
alpha/beta optimization time: 4.590839385986328
initial alpha-crown bounds: tensor([[ 7.24299622,  9.72883797,  2.41525292,  0.12780714,  4.14621973,
          8.82895660, 12.53342628, -2.24131966,  3.30846930]], device='cuda:0')
Worst class: (+ rhs) -2.2413196563720703
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.6707127094269
##### Instance 98 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.2429962158203125.

Properties batch 1, size 1
Remaining timeout: 294.55543875694275
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.728837966918945.

Properties batch 2, size 1
Remaining timeout: 294.44571352005005
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.415252923965454.

Properties batch 3, size 1
Remaining timeout: 294.3377640247345
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1278071403503418.

Properties batch 4, size 1
Remaining timeout: 294.2325689792633
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.146219730377197.

Properties batch 5, size 1
Remaining timeout: 294.1274893283844
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.828956604003906.

Properties batch 6, size 1
Remaining timeout: 294.02233266830444
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 12.533426284790039.

Properties batch 7, size 1
Remaining timeout: 293.9174666404724
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.24131966]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.51765895, -7.47524023, -1.17283356,  3.75149775,  0.51398301,
        -4.23304272, -8.57968712,  4.44639826,  0.73226810, 14.53604698],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.24131966]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 628
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 73
Node /27 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 724
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 86] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 17] 
split level 6: [/input.11, 58] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08689546585083008


Properties batch 8, size 1
Remaining timeout: 293.68667912483215
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.308469295501709.
Result: safe in 6.4235 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.06029141,  0.11078317, -0.95794040, -2.62896109,  0.51496267,
          0.87575227,  8.07468510, -3.68149257, -0.15113428, -3.47134757]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]100%|██████████| 1/1 [00:00<00:00,  1.53it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.19927087,  0.65295678,  2.47255826, -1.05388069, -0.61424232,
          -1.28065348,  4.73892355, -2.91125631,  0.84372437, -3.15292859],
         [ 0.19927087,  0.65295678,  2.47255826, -1.05388069, -0.61424232,
          -1.28065348,  4.73892355, -2.91125631,  0.84372437, -3.15292859]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[4.53965282, 4.08596659, 2.26636529, 5.79280424, 5.35316563,
          6.01957703, 7.65017986, 3.89519930, 7.89185238]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6640 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
          0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [722]; unstable size 722; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 223, 1, 722] with unstable size 222 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 48, 1, 722] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 722] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [222]; unstable size 222; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 48, 1, 222] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 222] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.63583517, -5.41732597, -7.86280394, -5.38786030, -4.99290848,
         -5.29994488, -5.16027021, -6.28713369, -4.18648529]], device='cuda:0') None
best_l after optimization: -35.328102111816406
alpha/beta optimization time: 4.66728663444519
initial alpha-crown bounds: tensor([[-2.32609844, -4.11326838, -6.12722445, -3.96776390, -3.62659621,
         -4.21787548, -3.33999681, -4.95269299, -2.65658760]], device='cuda:0')
Worst class: (+ rhs) -6.127224445343018
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.59463453292847
##### Instance 99 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.32609844]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.32609844]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 41] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 27] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 51] 
split level 6: [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.012828588485717773
Time: prepare 0.0076    bound 0.4160    transfer 0.0013    finalize 0.0078    func 0.4327    
Accumulated time: func 0.4327    prepare 0.0082    bound 0.4160    transfer 0.0013    finalize 0.0078    
Current worst splitting domains lb-rhs (depth):
-0.11292 (7), -0.09762 (7), -0.08599 (7), -0.07078 (7), -0.06973 (7), -0.06534 (7), -0.06272 (7), -0.03491 (7), 
Length of domains: 8
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0157    solve 0.4328    add 0.0017    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0157    solve 0.4328    add 0.0017    
Current (lb-rhs): -0.1129159927368164
8 domains visited
Cumulative time: 0.49958276748657227

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 12] [/input.7, 177] [/input.11, 12] [/input.11, 12] [/input.7, 177] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
split level 1: [/input.7, 177] [/input.11, 8] [/input.7, 114] [/input.7, 177] [/input.11, 8] [/input.7, 177] [/input.11, 8] [/input.7, 177] 
split level 2: [/input.11, 8] [/input.7, 577] [/input.11, 8] [/input.11, 8] [/input.7, 113] [/input.11, 8] [/input.7, 177] [/input.11, 8] 
split level 3: [/input.7, 113] [/input.7, 113] [/input.7, 706] [/input.7, 113] [/input.7, 577] [/input.7, 113] [/input.7, 706] [/input.7, 113] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 9.417533874511719e-05
Time: prepare 0.0177    bound 0.0077    transfer 0.0007    finalize 0.0079    func 0.0340    
Accumulated time: func 0.4667    prepare 0.0263    bound 0.4237    transfer 0.0019    finalize 0.0157    
Length of domains: 0
Time: pickout 0.0011    decision 0.0303    set_bounds 0.0128    solve 0.0342    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0716    set_bounds 0.0284    solve 0.4669    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.5790042877197266


Properties batch 1, size 1
Remaining timeout: 293.85281705856323
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.11326838]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.11326838]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 45] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 128 = 0.71875
pruning-in-iteration extra time: 0.013401508331298828
Time: prepare 0.0076    bound 0.4550    transfer 0.0012    finalize 0.0073    func 0.4711    
Accumulated time: func 0.4711    prepare 0.0082    bound 0.4550    transfer 0.0012    finalize 0.0073    
Current worst splitting domains lb-rhs (depth):
-1.75342 (7), -1.69607 (7), -1.50668 (7), -1.41843 (7), -1.41203 (7), -1.40021 (7), -1.34109 (7), -1.30641 (7), -1.25664 (7), -1.25081 (7), -1.19618 (7), -1.17379 (7), -1.13681 (7), -1.10703 (7), -1.07703 (7), -1.05484 (7), -1.05360 (7), -1.05299 (7), -0.91237 (7), -0.89458 (7), 
Length of domains: 36
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0158    solve 0.4712    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0158    solve 0.4712    add 0.0022    
Current (lb-rhs): -1.7534236907958984
36 domains visited
Cumulative time: 0.5383756160736084

BaB round 2
batch: 36
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 37] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] 
split level 1: [/input.11, 37] [/input.11, 95] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 144 = 0.5138888888888888
pruning-in-iteration extra time: 0.011966466903686523
Time: prepare 0.0109    bound 0.4688    transfer 0.0012    finalize 0.0073    func 0.4883    
Accumulated time: func 0.9594    prepare 0.0195    bound 0.9238    transfer 0.0024    finalize 0.0146    
Current worst splitting domains lb-rhs (depth):
-1.34717 (9), -1.31521 (9), -1.08921 (9), -1.03218 (9), -0.95160 (9), -0.91925 (9), -0.91323 (9), -0.85463 (9), -0.78615 (9), -0.77002 (9), -0.76646 (9), -0.75088 (9), -0.74977 (9), -0.72888 (9), -0.67889 (9), -0.66862 (9), -0.64998 (9), -0.64037 (9), -0.63587 (9), -0.62534 (9), 
Length of domains: 70
Time: pickout 0.0013    decision 0.0279    set_bounds 0.0089    solve 0.4884    add 0.0025    
Accumulated time: pickout 0.0019    decision 0.0691    set_bounds 0.0247    solve 0.9596    add 0.0047    
Current (lb-rhs): -1.3471746444702148
106 domains visited
Cumulative time: 1.0682523250579834

BaB round 3
batch: 70
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 140 = 0.5857142857142856
pruning-in-iteration extra time: 0.012153148651123047
Time: prepare 0.0107    bound 0.4902    transfer 0.0013    finalize 0.0082    func 0.5106    
Accumulated time: func 1.4700    prepare 0.0305    bound 1.4140    transfer 0.0037    finalize 0.0228    
Current worst splitting domains lb-rhs (depth):
-1.17202 (10), -1.05456 (10), -0.90824 (10), -0.88161 (10), -0.79971 (10), -0.78052 (10), -0.74179 (10), -0.71324 (10), -0.68534 (10), -0.59318 (10), -0.59167 (10), -0.56817 (10), -0.55733 (10), -0.54556 (10), -0.53058 (10), -0.49754 (10), -0.48355 (10), -0.46838 (10), -0.45892 (10), -0.42413 (10), 
Length of domains: 58
Time: pickout 0.0015    decision 0.0331    set_bounds 0.0063    solve 0.5107    add 0.0025    
Accumulated time: pickout 0.0034    decision 0.1022    set_bounds 0.0309    solve 1.4703    add 0.0072    
Current (lb-rhs): -1.1720209121704102
164 domains visited
Cumulative time: 1.623504400253296

BaB round 4
batch: 58
splitting decisions: 
split level 0: [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 47] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 47] [/input.11, 47] 
pruning_in_iteration open status: True
ratio of positive domain = 67 / 116 = 0.5775862068965517
pruning-in-iteration extra time: 0.012959480285644531
Time: prepare 0.0089    bound 0.4541    transfer 0.0011    finalize 0.0066    func 0.4708    
Accumulated time: func 1.9407    prepare 0.0397    bound 1.8682    transfer 0.0048    finalize 0.0294    
Current worst splitting domains lb-rhs (depth):
-0.92898 (11), -0.86761 (11), -0.67495 (11), -0.67237 (11), -0.66986 (11), -0.58815 (11), -0.58226 (11), -0.50870 (11), -0.43233 (11), -0.41884 (11), -0.39620 (11), -0.37244 (11), -0.37009 (11), -0.36015 (11), -0.35477 (11), -0.35375 (11), -0.34806 (11), -0.32767 (11), -0.30538 (11), -0.30467 (11), 
Length of domains: 49
Time: pickout 0.0016    decision 0.0329    set_bounds 0.0056    solve 0.4709    add 0.0023    
Accumulated time: pickout 0.0049    decision 0.1351    set_bounds 0.0365    solve 1.9411    add 0.0095    
Current (lb-rhs): -0.928978443145752
213 domains visited
Cumulative time: 2.137925863265991

BaB round 5
batch: 49
splitting decisions: 
split level 0: [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 58] [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 58] 
split level 1: [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.7, 631] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 177 / 196 = 0.903061224489796
pruning-in-iteration extra time: 0.013195514678955078
Time: prepare 0.0184    bound 0.4377    transfer 0.0016    finalize 0.0127    func 0.4705    
Accumulated time: func 2.4113    prepare 0.0585    bound 2.3059    transfer 0.0063    finalize 0.0421    
Current worst splitting domains lb-rhs (depth):
-0.57490 (13), -0.52465 (13), -0.35234 (13), -0.32858 (13), -0.31037 (13), -0.26986 (13), -0.26722 (13), -0.26717 (13), -0.26027 (13), -0.25333 (13), -0.19836 (13), -0.13041 (13), -0.06671 (13), -0.05126 (13), -0.03213 (13), -0.02397 (13), -0.01442 (13), -0.00869 (13), -0.00205 (13), 
Length of domains: 19
Time: pickout 0.0014    decision 0.0300    set_bounds 0.0124    solve 0.4707    add 0.0019    
Accumulated time: pickout 0.0064    decision 0.1651    set_bounds 0.0490    solve 2.4118    add 0.0113    
Current (lb-rhs): -0.5748958587646484
232 domains visited
Cumulative time: 2.656528949737549

BaB round 6
batch: 19
splitting decisions: 
split level 0: [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 47] [/input.11, 47] [/input.11, 58] [/input.11, 99] [/input.11, 47] [/input.11, 8] 
split level 1: [/input.7, 636] [/input.7, 636] [/input.11, 99] [/input.7, 636] [/input.11, 8] [/input.11, 8] [/input.7, 636] [/input.11, 58] [/input.11, 8] [/input.7, 636] 
split level 2: [/input.7, 631] [/input.7, 631] [/input.7, 636] [/input.7, 123] [/input.7, 631] [/input.7, 631] [/input.7, 123] [/input.7, 636] [/input.7, 631] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 148 / 152 = 0.9736842105263158
pruning-in-iteration extra time: 0.013303995132446289
Time: prepare 0.0215    bound 0.4510    transfer 0.0014    finalize 0.0115    func 0.4855    
Accumulated time: func 2.8968    prepare 0.0804    bound 2.7569    transfer 0.0077    finalize 0.0536    
Current worst splitting domains lb-rhs (depth):
-0.06809 (16), -0.05974 (16), -0.01939 (16), -0.00931 (16), 
Length of domains: 4
Time: pickout 0.0015    decision 0.0258    set_bounds 0.0133    solve 0.4857    add 0.0013    
Accumulated time: pickout 0.0078    decision 0.1909    set_bounds 0.0623    solve 2.8975    add 0.0126    
Current (lb-rhs): -0.06808662414550781
236 domains visited
Cumulative time: 3.186239004135132

BaB round 7
batch: 4
splitting decisions: 
split level 0: [/input.7, 591] [/input.7, 591] [/input.7, 591] [/input.7, 591] 
split level 1: [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] 
split level 2: [/input.7, 706] [/input.7, 706] [/input.7, 706] [/input.7, 706] 
split level 3: [/input.7, 711] [/input.7, 141] [/input.7, 711] [/input.7, 141] 
split level 4: [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.96453857421875e-05
Time: prepare 0.0169    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0328    
Accumulated time: func 2.9296    prepare 0.0978    bound 2.7646    transfer 0.0084    finalize 0.0610    
Length of domains: 0
Time: pickout 0.0014    decision 0.0346    set_bounds 0.0163    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0093    decision 0.2255    set_bounds 0.0786    solve 2.9303    add 0.0127    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
236 domains visited
Cumulative time: 3.27239727973938


Properties batch 2, size 1
Remaining timeout: 290.4310541152954
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.12722445]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.12722445]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 45] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 17] 
split level 4: [/input.11, 1] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 64 / 128 = 0.5
pruning-in-iteration extra time: 0.011146306991577148
Time: prepare 0.0076    bound 0.4850    transfer 0.0012    finalize 0.0089    func 0.5028    
Accumulated time: func 0.5028    prepare 0.0082    bound 0.4850    transfer 0.0012    finalize 0.0089    
Current worst splitting domains lb-rhs (depth):
-3.80682 (7), -3.80126 (7), -3.78026 (7), -3.75837 (7), -3.21429 (7), -2.96459 (7), -2.83967 (7), -2.83138 (7), -2.82098 (7), -2.76083 (7), -2.70195 (7), -2.64548 (7), -2.63790 (7), -2.63272 (7), -2.62257 (7), -2.50411 (7), -2.44964 (7), -2.43947 (7), -2.36730 (7), -2.31209 (7), 
Length of domains: 64
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0159    solve 0.5029    add 0.0025    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0159    solve 0.5029    add 0.0025    
Current (lb-rhs): -3.806821823120117
64 domains visited
Cumulative time: 0.5700666904449463

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 42 / 128 = 0.328125
pruning-in-iteration extra time: 0.008461475372314453
Time: prepare 0.0099    bound 0.4368    transfer 0.0012    finalize 0.0083    func 0.4563    
Accumulated time: func 0.9591    prepare 0.0185    bound 0.9218    transfer 0.0024    finalize 0.0172    
Current worst splitting domains lb-rhs (depth):
-3.50252 (8), -3.50121 (8), -3.46859 (8), -3.46050 (8), -3.07813 (8), -2.97589 (8), -2.93985 (8), -2.71508 (8), -2.59388 (8), -2.58773 (8), -2.58615 (8), -2.55119 (8), -2.53010 (8), -2.51169 (8), -2.44486 (8), -2.37574 (8), -2.37123 (8), -2.36537 (8), -2.36403 (8), -2.19642 (8), 
Length of domains: 86
Time: pickout 0.0015    decision 0.0348    set_bounds 0.0059    solve 0.4564    add 0.0027    
Accumulated time: pickout 0.0021    decision 0.0760    set_bounds 0.0219    solve 0.9593    add 0.0052    
Current (lb-rhs): -3.502521514892578
150 domains visited
Cumulative time: 1.0724022388458252

BaB round 3
batch: 86
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 172 = 0.33720930232558144
pruning-in-iteration extra time: 0.011742830276489258
Time: prepare 0.0131    bound 0.5007    transfer 0.0014    finalize 0.0092    func 0.5245    
Accumulated time: func 1.4836    prepare 0.0319    bound 1.4226    transfer 0.0038    finalize 0.0264    
Current worst splitting domains lb-rhs (depth):
-3.18170 (9), -3.17253 (9), -3.14841 (9), -3.13825 (9), -2.87430 (9), -2.83582 (9), -2.79628 (9), -2.78694 (9), -2.71148 (9), -2.66608 (9), -2.58805 (9), -2.58658 (9), -2.49234 (9), -2.44121 (9), -2.31998 (9), -2.31091 (9), -2.25567 (9), -2.22975 (9), -2.21899 (9), -2.17881 (9), 
Length of domains: 114
Time: pickout 0.0015    decision 0.0420    set_bounds 0.0077    solve 0.5246    add 0.0029    
Accumulated time: pickout 0.0037    decision 0.1180    set_bounds 0.0296    solve 1.4840    add 0.0081    
Current (lb-rhs): -3.18170166015625
264 domains visited
Cumulative time: 1.6523957252502441

BaB round 4
batch: 114
splitting decisions: 
split level 0: [/input.11, 41] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.7, 636] [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 228 = 0.2850877192982456
pruning-in-iteration extra time: 0.011427164077758789
Time: prepare 0.0203    bound 0.4849    transfer 0.0015    finalize 0.0136    func 0.5205    
Accumulated time: func 2.0041    prepare 0.0526    bound 1.9074    transfer 0.0053    finalize 0.0400    
Current worst splitting domains lb-rhs (depth):
-2.83708 (10), -2.82903 (10), -2.80361 (10), -2.80039 (10), -2.78992 (10), -2.76298 (10), -2.75946 (10), -2.73519 (10), -2.54017 (10), -2.51373 (10), -2.50059 (10), -2.48604 (10), -2.45909 (10), -2.45213 (10), -2.42948 (10), -2.40285 (10), -2.39778 (10), -2.38266 (10), -2.36500 (10), -2.33497 (10), 
Length of domains: 163
Time: pickout 0.0016    decision 0.0445    set_bounds 0.0088    solve 0.5206    add 0.0034    
Accumulated time: pickout 0.0052    decision 0.1625    set_bounds 0.0383    solve 2.0045    add 0.0116    
Current (lb-rhs): -2.8370766639709473
427 domains visited
Cumulative time: 2.2325751781463623

BaB round 5
batch: 163
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 141] [/input.7, 141] [/input.7, 636] [/input.7, 631] [/input.7, 636] [/input.11, 58] [/input.7, 631] [/input.11, 41] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 326 = 0.32515337423312884
pruning-in-iteration extra time: 0.01099085807800293
Time: prepare 0.0396    bound 0.4630    transfer 0.0017    finalize 0.0210    func 0.5253    
Accumulated time: func 2.5294    prepare 0.0925    bound 2.3704    transfer 0.0070    finalize 0.0610    
Current worst splitting domains lb-rhs (depth):
-2.47442 (11), -2.46847 (11), -2.45937 (11), -2.45579 (11), -2.43961 (11), -2.42796 (11), -2.42444 (11), -2.42272 (11), -2.41364 (11), -2.41238 (11), -2.39618 (11), -2.38612 (11), -2.38531 (11), -2.37979 (11), -2.37573 (11), -2.34362 (11), -2.32119 (11), -2.17406 (11), -2.15895 (11), -2.13776 (11), 
Length of domains: 220
Time: pickout 0.0014    decision 0.0468    set_bounds 0.0103    solve 0.5255    add 0.0036    
Accumulated time: pickout 0.0067    decision 0.2093    set_bounds 0.0486    solve 2.5301    add 0.0152    
Current (lb-rhs): -2.4744248390197754
647 domains visited
Cumulative time: 2.822291612625122

BaB round 6
batch: 220
splitting decisions: 
split level 0: [/input.11, 14] [/input.7, 636] [/input.11, 14] [/input.11, 14] [/input.7, 141] [/input.7, 143] [/input.11, 41] [/input.11, 14] [/input.7, 143] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 156 / 440 = 0.3545454545454545
pruning-in-iteration extra time: 0.012019872665405273
Time: prepare 0.0596    bound 0.5215    transfer 0.0026    finalize 0.0287    func 0.6125    
Accumulated time: func 3.1420    prepare 0.1524    bound 2.8920    transfer 0.0096    finalize 0.0897    
Current worst splitting domains lb-rhs (depth):
-2.37537 (12), -2.37528 (12), -2.33962 (12), -2.33664 (12), -2.33631 (12), -2.32754 (12), -2.32584 (12), -2.32229 (12), -2.30865 (12), -2.28793 (12), -2.28172 (12), -2.28085 (12), -2.25976 (12), -2.25613 (12), -2.24339 (12), -2.18576 (12), -2.07600 (12), -2.03921 (12), -2.03640 (12), -1.98764 (12), 
Length of domains: 284
Time: pickout 0.0019    decision 0.0532    set_bounds 0.0174    solve 0.6138    add 0.0043    
Accumulated time: pickout 0.0086    decision 0.2625    set_bounds 0.0660    solve 3.1439    add 0.0195    
Current (lb-rhs): -2.375369071960449
931 domains visited
Cumulative time: 3.515559196472168

BaB round 7
batch: 284
splitting decisions: 
split level 0: [/input.11, 41] [/input.11, 41] [/input.7, 631] [/input.7, 706] [/input.11, 58] [/input.11, 41] [/input.11, 14] [/input.11, 41] [/input.11, 41] [/input.7, 631] 
pruning_in_iteration open status: True
ratio of positive domain = 197 / 568 = 0.346830985915493
pruning-in-iteration extra time: 0.01127767562866211
Time: prepare 0.0808    bound 0.6922    transfer 0.0027    finalize 0.0357    func 0.8116    
Accumulated time: func 3.9536    prepare 0.2335    bound 3.5841    transfer 0.0124    finalize 0.1255    
Current worst splitting domains lb-rhs (depth):
-2.23491 (13), -2.23486 (13), -2.23311 (13), -2.19623 (13), -2.18740 (13), -2.18374 (13), -2.17705 (13), -2.11573 (13), -2.10535 (13), -2.10051 (13), -2.09507 (13), -2.06509 (13), -2.04356 (13), -2.01681 (13), -1.99091 (13), -1.97792 (13), -1.97742 (13), -1.97735 (13), -1.96747 (13), -1.96011 (13), 
Length of domains: 371
Time: pickout 0.0024    decision 0.0585    set_bounds 0.0220    solve 0.8118    add 0.0046    
Accumulated time: pickout 0.0110    decision 0.3210    set_bounds 0.0880    solve 3.9556    add 0.0241    
Current (lb-rhs): -2.234912395477295
1302 domains visited
Cumulative time: 4.418100595474243

BaB round 8
batch: 371
splitting decisions: 
split level 0: [/input.11, 81] [/input.11, 81] [/input.7, 141] [/input.11, 81] [/input.7, 719] [/input.11, 14] [/input.11, 81] [/input.7, 141] [/input.11, 81] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 223 / 742 = 0.30053908355795145
pruning-in-iteration extra time: 0.009357213973999023
Time: prepare 0.1040    bound 0.7244    transfer 0.0032    finalize 0.0460    func 0.8778    
Accumulated time: func 4.8313    prepare 0.3379    bound 4.3085    transfer 0.0156    finalize 0.1714    
Current worst splitting domains lb-rhs (depth):
-2.11762 (14), -2.10860 (14), -2.10742 (14), -2.06894 (14), -2.06708 (14), -2.06346 (14), -2.03663 (14), -2.02109 (14), -2.01608 (14), -2.00782 (14), -1.96942 (14), -1.96225 (14), -1.95787 (14), -1.93255 (14), -1.90675 (14), -1.87551 (14), -1.87270 (14), -1.87178 (14), -1.86027 (14), -1.83974 (14), 
Length of domains: 519
Time: pickout 0.0027    decision 0.0675    set_bounds 0.0297    solve 0.8780    add 0.0060    
Accumulated time: pickout 0.0136    decision 0.3885    set_bounds 0.1177    solve 4.8337    add 0.0300    
Current (lb-rhs): -2.1176233291625977
1821 domains visited
Cumulative time: 5.4059343338012695

BaB round 9
batch: 519
splitting decisions: 
split level 0: [/input.11, 41] [/input.11, 41] [/input.11, 41] [/input.7, 143] [/input.11, 41] [/input.11, 81] [/input.7, 706] [/input.11, 81] [/input.7, 706] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 372 / 1038 = 0.35838150289017345
pruning-in-iteration extra time: 0.009749412536621094
Time: prepare 0.1447    bound 0.6973    transfer 0.0039    finalize 0.0639    func 0.9115    
Accumulated time: func 5.7429    prepare 0.4829    bound 5.0058    transfer 0.0194    finalize 0.2353    
Current worst splitting domains lb-rhs (depth):
-1.99059 (15), -1.98662 (15), -1.95049 (15), -1.94350 (15), -1.94070 (15), -1.89208 (15), -1.87441 (15), -1.87063 (15), -1.87020 (15), -1.85597 (15), -1.85295 (15), -1.84218 (15), -1.79559 (15), -1.78541 (15), -1.76569 (15), -1.74334 (15), -1.74043 (15), -1.72513 (15), -1.70831 (15), -1.69713 (15), 
Length of domains: 666
Time: pickout 0.0032    decision 0.0796    set_bounds 0.0411    solve 0.9119    add 0.0070    
Accumulated time: pickout 0.0168    decision 0.4680    set_bounds 0.1588    solve 5.7455    add 0.0370    
Current (lb-rhs): -1.990588665008545
2487 domains visited
Cumulative time: 6.454463481903076

BaB round 10
batch: 666
splitting decisions: 
split level 0: [/input.11, 81] [/input.7, 141] [/input.7, 706] [/input.7, 631] [/input.11, 81] [/input.11, 14] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 615 / 1332 = 0.46171171171171166
pruning-in-iteration extra time: 0.011034488677978516
Time: prepare 0.1880    bound 0.7135    transfer 0.0090    finalize 0.0856    func 0.9964    
Accumulated time: func 6.7392    prepare 0.6713    bound 5.7193    transfer 0.0285    finalize 0.3209    
Current worst splitting domains lb-rhs (depth):
-1.87951 (16), -1.79936 (16), -1.79096 (16), -1.74601 (16), -1.73476 (16), -1.73276 (16), -1.72179 (16), -1.71722 (16), -1.67760 (16), -1.64484 (16), -1.63509 (16), -1.62420 (16), -1.61996 (16), -1.61937 (16), -1.60977 (16), -1.60568 (16), -1.58020 (16), -1.57880 (16), -1.55572 (16), -1.55256 (16), 
Length of domains: 717
Time: pickout 0.0040    decision 0.0990    set_bounds 0.0521    solve 0.9978    add 0.0069    
Accumulated time: pickout 0.0209    decision 0.5670    set_bounds 0.2109    solve 6.7433    add 0.0439    
Current (lb-rhs): -1.8795132637023926
3204 domains visited
Cumulative time: 7.623072624206543

BaB round 11
batch: 717
splitting decisions: 
split level 0: [/input.11, 81] [/input.7, 706] [/input.11, 81] [/input.7, 141] [/input.11, 81] [/input.7, 719] [/input.7, 586] [/input.7, 141] [/input.11, 81] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 557 / 1434 = 0.3884239888423989
pruning-in-iteration extra time: 0.010261058807373047
Time: prepare 0.2021    bound 0.7075    transfer 0.0051    finalize 0.2028    func 1.1177    
Accumulated time: func 7.8569    prepare 0.8737    bound 6.4268    transfer 0.0336    finalize 0.5237    
Current worst splitting domains lb-rhs (depth):
-1.73682 (17), -1.48427 (17), -1.48199 (17), -1.48198 (17), -1.48191 (17), -1.48033 (17), -1.47066 (17), -1.46306 (17), -1.43263 (17), -1.42814 (17), -1.41930 (17), -1.41679 (17), -1.41490 (17), -1.41479 (17), -1.41182 (17), -1.41105 (17), -1.40636 (17), -1.40538 (17), -1.40060 (17), -1.39902 (17), 
Length of domains: 877
Time: pickout 0.0046    decision 0.1044    set_bounds 0.0564    solve 1.1181    add 0.0081    
Accumulated time: pickout 0.0254    decision 0.6713    set_bounds 0.2673    solve 7.8614    add 0.0520    
Current (lb-rhs): -1.7368221282958984
4081 domains visited
Cumulative time: 8.9232497215271

BaB round 12
batch: 877
splitting decisions: 
split level 0: [/input.7, 141] [/input.7, 706] [/input.11, 81] [/input.7, 706] [/input.7, 719] [/input.11, 81] [/input.7, 113] [/input.7, 719] [/input.7, 113] [/input.7, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 536 / 1754 = 0.3055872291904219
pruning-in-iteration extra time: 0.010573625564575195
Time: prepare 0.2467    bound 0.7133    transfer 0.0061    finalize 0.1052    func 1.0715    
Accumulated time: func 8.9284    prepare 1.1207    bound 7.1401    transfer 0.0397    finalize 0.6289    
Current worst splitting domains lb-rhs (depth):
-1.41538 (18), -1.40805 (18), -1.37165 (18), -1.36421 (18), -1.35189 (18), -1.35164 (18), -1.34636 (18), -1.34126 (18), -1.34068 (18), -1.33713 (18), -1.32419 (18), -1.32210 (18), -1.32126 (18), -1.32055 (18), -1.30733 (18), -1.29957 (18), -1.29857 (18), -1.26342 (18), -1.25667 (18), -1.24791 (18), 
Length of domains: 1218
Time: pickout 0.0033    decision 0.1212    set_bounds 0.0702    solve 1.0721    add 0.0128    
Accumulated time: pickout 0.0288    decision 0.7926    set_bounds 0.3375    solve 8.9335    add 0.0648    
Current (lb-rhs): -1.415377140045166
5299 domains visited
Cumulative time: 10.213466882705688

BaB round 13
batch: 1218
splitting decisions: 
split level 0: [/input.7, 113] [/input.7, 719] [/input.7, 113] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.11, 36] [/input.7, 113] [/input.7, 113] [/input.7, 706] 
pruning_in_iteration open status: True
ratio of positive domain = 882 / 2436 = 0.3620689655172413
pruning-in-iteration extra time: 0.010763883590698242
Time: prepare 0.3438    bound 0.7134    transfer 0.0146    finalize 0.1623    func 1.2344    
Accumulated time: func 10.1628    prepare 1.4649    bound 7.8535    transfer 0.0543    finalize 0.7912    
Current worst splitting domains lb-rhs (depth):
-1.27291 (19), -1.27209 (19), -1.23426 (19), -1.22470 (19), -1.20307 (19), -1.17480 (19), -1.17395 (19), -1.17262 (19), -1.16163 (19), -1.15919 (19), -1.15672 (19), -1.15489 (19), -1.15428 (19), -1.15098 (19), -1.14760 (19), -1.14728 (19), -1.14651 (19), -1.14423 (19), -1.13542 (19), -1.12198 (19), 
Length of domains: 1554
Time: pickout 0.0059    decision 0.1584    set_bounds 0.0966    solve 1.2352    add 0.0125    
Accumulated time: pickout 0.0347    decision 0.9510    set_bounds 0.4340    solve 10.1687    add 0.0773    
Current (lb-rhs): -1.2729125022888184
6853 domains visited
Cumulative time: 11.73674488067627

BaB round 14
batch: 1554
splitting decisions: 
split level 0: [/input.7, 719] [/input.7, 719] [/input.11, 95] [/input.11, 95] [/input.7, 143] [/input.7, 141] [/input.7, 141] [/input.7, 706] [/input.7, 141] [/input.7, 141] 
pruning_in_iteration open status: True
ratio of positive domain = 1337 / 3108 = 0.4301801801801802
pruning-in-iteration extra time: 0.011469364166259766
Time: prepare 0.4323    bound 0.5755    transfer 0.0109    finalize 0.2073    func 1.2263    
Accumulated time: func 11.3891    prepare 1.8976    bound 8.4290    transfer 0.0652    finalize 0.9985    
Current worst splitting domains lb-rhs (depth):
-1.13330 (20), -1.11152 (20), -1.09460 (20), -1.09041 (20), -1.07514 (20), -1.07483 (20), -1.06620 (20), -1.05761 (20), -1.03015 (20), -1.01984 (20), -1.01557 (20), -1.01474 (20), -1.00195 (20), -0.99981 (20), -0.99759 (20), -0.99745 (20), -0.98912 (20), -0.98321 (20), -0.97938 (20), -0.97926 (20), 
Length of domains: 1771
Time: pickout 0.0059    decision 0.1941    set_bounds 0.2451    solve 1.2280    add 0.0135    
Accumulated time: pickout 0.0405    decision 1.1451    set_bounds 0.6791    solve 11.3966    add 0.0908    
Current (lb-rhs): -1.1332979202270508
8624 domains visited
Cumulative time: 13.44337248802185

BaB round 15
batch: 1771
splitting decisions: 
split level 0: [/input.7, 141] [/input.7, 141] [/input.11, 51] [/input.11, 51] [/input.11, 95] [/input.7, 113] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] 
pruning_in_iteration open status: True
ratio of positive domain = 1731 / 3542 = 0.4887069452286844
pruning-in-iteration extra time: 0.011644363403320312
Time: prepare 0.4942    bound 0.5641    transfer 0.0124    finalize 0.2393    func 1.3111    
Accumulated time: func 12.7002    prepare 2.3921    bound 8.9931    transfer 0.0777    finalize 1.2378    
Current worst splitting domains lb-rhs (depth):
-1.01172 (21), -0.97683 (21), -0.94403 (21), -0.94239 (21), -0.93251 (21), -0.92664 (21), -0.92548 (21), -0.91771 (21), -0.90522 (21), -0.90157 (21), -0.89217 (21), -0.88850 (21), -0.88610 (21), -0.87329 (21), -0.86720 (21), -0.85639 (21), -0.84962 (21), -0.84516 (21), -0.84514 (21), -0.84077 (21), 
Length of domains: 1811
Time: pickout 0.0095    decision 0.2179    set_bounds 0.1394    solve 1.3121    add 0.0142    
Accumulated time: pickout 0.0500    decision 1.3630    set_bounds 0.8186    solve 12.7088    add 0.1051    
Current (lb-rhs): -1.0117173194885254
10435 domains visited
Cumulative time: 15.16353178024292

BaB round 16
batch: 1811
splitting decisions: 
split level 0: [/input.11, 95] [/input.11, 95] [/input.7, 586] [/input.11, 36] [/input.7, 141] [/input.7, 141] [/input.11, 95] [/input.7, 141] [/input.11, 36] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 2085 / 3622 = 0.5756488128106019
pruning-in-iteration extra time: 0.010190248489379883
Time: prepare 0.5117    bound 0.6752    transfer 0.0117    finalize 0.2454    func 1.4443    
Accumulated time: func 14.1445    prepare 2.9042    bound 9.6683    transfer 0.0894    finalize 1.4832    
Current worst splitting domains lb-rhs (depth):
-0.87171 (22), -0.83378 (22), -0.82419 (22), -0.81026 (22), -0.79828 (22), -0.79341 (22), -0.79135 (22), -0.78982 (22), -0.77981 (22), -0.76933 (22), -0.76211 (22), -0.76186 (22), -0.75795 (22), -0.75221 (22), -0.75011 (22), -0.74416 (22), -0.73900 (22), -0.73769 (22), -0.72326 (22), -0.72188 (22), 
Length of domains: 1537
Time: pickout 0.0069    decision 0.3434    set_bounds 0.1433    solve 1.4454    add 0.0126    
Accumulated time: pickout 0.0569    decision 1.7064    set_bounds 0.9619    solve 14.1542    add 0.1177    
Current (lb-rhs): -0.8717083930969238
11972 domains visited
Cumulative time: 17.141530990600586

BaB round 17
batch: 1537
splitting decisions: 
split level 0: [/input.11, 51] [/input.7, 256] [/input.11, 36] [/input.11, 51] [/input.7, 113] [/input.11, 36] [/input.11, 51] [/input.11, 51] [/input.7, 711] [/input.11, 51] 
pruning_in_iteration open status: True
ratio of positive domain = 1933 / 3074 = 0.6288223812621991
pruning-in-iteration extra time: 0.009853601455688477
Time: prepare 0.4327    bound 0.7864    transfer 0.0104    finalize 0.1997    func 1.5542    
Accumulated time: func 15.6988    prepare 3.3372    bound 10.4548    transfer 0.0998    finalize 1.6829    
Current worst splitting domains lb-rhs (depth):
-0.74389 (23), -0.69987 (23), -0.69094 (23), -0.67065 (23), -0.66127 (23), -0.66106 (23), -0.66089 (23), -0.63321 (23), -0.63086 (23), -0.62595 (23), -0.61884 (23), -0.61032 (23), -0.59347 (23), -0.59150 (23), -0.58531 (23), -0.58301 (23), -0.57786 (23), -0.57515 (23), -0.56998 (23), -0.56943 (23), 
Length of domains: 1141
Time: pickout 0.0099    decision 0.1894    set_bounds 0.1236    solve 1.5552    add 0.0099    
Accumulated time: pickout 0.0667    decision 1.8958    set_bounds 1.0854    solve 15.7093    add 0.1275    
Current (lb-rhs): -0.7438945770263672
13113 domains visited
Cumulative time: 19.0554678440094

BaB round 18
batch: 1141
splitting decisions: 
split level 0: [/input.7, 711] [/input.7, 711] [/input.11, 36] [/input.7, 256] [/input.7, 711] [/input.11, 36] [/input.11, 36] [/input.7, 711] [/input.11, 36] [/input.7, 256] 
pruning_in_iteration open status: True
ratio of positive domain = 1563 / 2282 = 0.6849255039439088
pruning-in-iteration extra time: 0.010791301727294922
Time: prepare 0.3200    bound 0.6818    transfer 0.0078    finalize 0.1549    func 1.1647    
Accumulated time: func 16.8634    prepare 3.6575    bound 11.1366    transfer 0.1075    finalize 1.8378    
Current worst splitting domains lb-rhs (depth):
-0.60890 (24), -0.58600 (24), -0.52692 (24), -0.51169 (24), -0.50055 (24), -0.50002 (24), -0.48188 (24), -0.47725 (24), -0.47062 (24), -0.44722 (24), -0.44513 (24), -0.44465 (24), -0.44417 (24), -0.44376 (24), -0.44138 (24), -0.43896 (24), -0.43250 (24), -0.42750 (24), -0.41811 (24), -0.41454 (24), 
Length of domains: 719
Time: pickout 0.0091    decision 0.1463    set_bounds 0.0917    solve 1.1661    add 0.0072    
Accumulated time: pickout 0.0759    decision 2.0421    set_bounds 1.1771    solve 16.8755    add 0.1347    
Current (lb-rhs): -0.6089024543762207
13832 domains visited
Cumulative time: 20.494014024734497

BaB round 19
batch: 719
splitting decisions: 
split level 0: [/input.7, 113] [/input.7, 113] [/input.11, 51] [/input.7, 586] [/input.7, 256] [/input.7, 711] [/input.7, 256] [/input.7, 711] [/input.11, 36] [/input.7, 711] 
pruning_in_iteration open status: True
ratio of positive domain = 1101 / 1438 = 0.7656467315716273
pruning-in-iteration extra time: 0.010995626449584961
Time: prepare 0.1977    bound 0.6856    transfer 0.0050    finalize 0.0851    func 0.9737    
Accumulated time: func 17.8371    prepare 3.8556    bound 11.8222    transfer 0.1125    finalize 1.9229    
Current worst splitting domains lb-rhs (depth):
-0.55014 (25), -0.36425 (25), -0.35963 (25), -0.35260 (25), -0.33154 (25), -0.32908 (25), -0.32499 (25), -0.32081 (25), -0.31904 (25), -0.31374 (25), -0.31151 (25), -0.30701 (25), -0.30453 (25), -0.30266 (25), -0.30083 (25), -0.29982 (25), -0.29247 (25), -0.28328 (25), -0.28119 (25), -0.28088 (25), 
Length of domains: 337
Time: pickout 0.0075    decision 0.1027    set_bounds 0.0574    solve 0.9741    add 0.0043    
Accumulated time: pickout 0.0834    decision 2.1448    set_bounds 1.2345    solve 17.8496    add 0.1390    
Current (lb-rhs): -0.5501384735107422
14169 domains visited
Cumulative time: 21.653107404708862

BaB round 20
batch: 337
splitting decisions: 
split level 0: [/input.7, 113] [/input.7, 113] [/input.7, 711] [/input.7, 256] [/input.7, 711] [/input.7, 711] [/input.7, 113] [/input.7, 711] [/input.7, 711] [/input.7, 591] 
pruning_in_iteration open status: True
ratio of positive domain = 542 / 674 = 0.8041543026706232
pruning-in-iteration extra time: 0.011618375778198242
Time: prepare 0.0908    bound 0.4968    transfer 0.0034    finalize 0.0395    func 0.6305    
Accumulated time: func 18.4676    prepare 3.9467    bound 12.3189    transfer 0.1159    finalize 1.9624    
Current worst splitting domains lb-rhs (depth):
-0.32719 (26), -0.29920 (26), -0.29130 (26), -0.26303 (26), -0.24260 (26), -0.24138 (26), -0.21031 (26), -0.20243 (26), -0.20182 (26), -0.19449 (26), -0.19383 (26), -0.18904 (26), -0.18855 (26), -0.18558 (26), -0.18456 (26), -0.17844 (26), -0.17730 (26), -0.17525 (26), -0.16424 (26), -0.16318 (26), 
Length of domains: 132
Time: pickout 0.0047    decision 0.0623    set_bounds 0.0272    solve 0.6308    add 0.0029    
Accumulated time: pickout 0.0880    decision 2.2071    set_bounds 1.2617    solve 18.4803    add 0.1419    
Current (lb-rhs): -0.3271927833557129
14301 domains visited
Cumulative time: 22.387669563293457

BaB round 21
batch: 132
splitting decisions: 
split level 0: [/input.7, 256] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 591] [/input.7, 632] [/input.7, 707] [/input.7, 707] [/input.7, 632] [/input.7, 591] 
pruning_in_iteration open status: True
ratio of positive domain = 225 / 264 = 0.8522727272727273
pruning-in-iteration extra time: 0.014225482940673828
Time: prepare 0.0357    bound 0.4813    transfer 0.0025    finalize 0.0193    func 0.5389    
Accumulated time: func 19.0065    prepare 3.9828    bound 12.8002    transfer 0.1184    finalize 1.9817    
Current worst splitting domains lb-rhs (depth):
-0.19960 (27), -0.15516 (27), -0.14673 (27), -0.14511 (27), -0.12745 (27), -0.12650 (27), -0.12397 (27), -0.11301 (27), -0.11257 (27), -0.10985 (27), -0.09255 (27), -0.09112 (27), -0.07808 (27), -0.07604 (27), -0.06351 (27), -0.06320 (27), -0.06220 (27), -0.06178 (27), -0.06161 (27), -0.05768 (27), 
Length of domains: 39
Time: pickout 0.0028    decision 0.0381    set_bounds 0.0107    solve 0.5390    add 0.0022    
Accumulated time: pickout 0.0908    decision 2.2452    set_bounds 1.2724    solve 19.0194    add 0.1441    
Current (lb-rhs): -0.19960355758666992
14340 domains visited
Cumulative time: 22.984128952026367

BaB round 22
batch: 39
splitting decisions: 
split level 0: [/input.7, 256] [/input.11, 51] [/input.7, 707] [/input.7, 256] [/input.7, 707] [/input.7, 256] [/input.7, 256] [/input.7, 261] [/input.7, 113] [/input.7, 707] 
split level 1: [/input.7, 199] [/input.7, 256] [/input.7, 256] [/input.7, 142] [/input.7, 199] [/input.7, 199] [/input.7, 577] [/input.7, 256] [/input.7, 711] [/input.7, 142] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 156 / 156 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0205    bound 0.0076    transfer 0.0007    finalize 0.0090    func 0.0379    
Accumulated time: func 19.0445    prepare 4.0037    bound 12.8078    transfer 0.1192    finalize 1.9907    
Length of domains: 0
Time: pickout 0.0028    decision 0.0278    set_bounds 0.0100    solve 0.0380    add 0.0001    
Accumulated time: pickout 0.0936    decision 2.2731    set_bounds 1.2824    solve 19.0574    add 0.1442    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
14340 domains visited
Cumulative time: 23.06378722190857


Properties batch 3, size 1
Remaining timeout: 267.216059923172
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.96776390]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.96776390]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 10] 
split level 4: [/input.11, 80] 
split level 5: [/input.11, 5] 
split level 6: [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.013726472854614258
Time: prepare 0.0075    bound 0.4458    transfer 0.0013    finalize 0.0077    func 0.4624    
Accumulated time: func 0.4624    prepare 0.0081    bound 0.4458    transfer 0.0013    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.90477 (7), -0.81785 (7), -0.62135 (7), -0.61754 (7), -0.61419 (7), -0.48740 (7), -0.21061 (7), -0.20009 (7), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0156    solve 0.4625    add 0.0016    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0156    solve 0.4625    add 0.0016    
Current (lb-rhs): -0.9047689437866211
8 domains visited
Cumulative time: 0.5291736125946045

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 95] [/input.7, 631] [/input.7, 631] [/input.7, 177] [/input.11, 95] [/input.7, 631] [/input.7, 177] [/input.7, 177] 
split level 1: [/input.7, 631] [/input.11, 95] [/input.11, 95] [/input.7, 631] [/input.7, 631] [/input.11, 95] [/input.7, 631] [/input.7, 631] 
split level 2: [/input.7, 636] [/input.7, 636] [/input.7, 706] [/input.11, 95] [/input.11, 51] [/input.7, 636] [/input.11, 95] [/input.11, 95] 
split level 3: [/input.11, 51] [/input.11, 51] [/input.11, 51] [/input.7, 636] [/input.7, 636] [/input.7, 123] [/input.11, 51] [/input.7, 123] 

all verified at 6th iter
pruning_in_iteration open status: True
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.004094600677490234
Time: prepare 0.0176    bound 0.1383    transfer 0.0013    finalize 0.0099    func 0.1672    
Accumulated time: func 0.6295    prepare 0.0261    bound 0.5842    transfer 0.0026    finalize 0.0175    
Length of domains: 0
Time: pickout 0.0011    decision 0.0300    set_bounds 0.0127    solve 0.1672    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0711    set_bounds 0.0283    solve 0.6297    add 0.0017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.7415752410888672


Properties batch 4, size 1
Remaining timeout: 266.2167546749115
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.62659621]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.62659621]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 7] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 19] 
split level 5: [/input.11, 8] 
split level 6: [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 114 / 128 = 0.890625
pruning-in-iteration extra time: 0.014165163040161133
Time: prepare 0.0075    bound 0.4472    transfer 0.0013    finalize 0.0075    func 0.4637    
Accumulated time: func 0.4637    prepare 0.0081    bound 0.4472    transfer 0.0013    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-1.03493 (7), -0.98553 (7), -0.88226 (7), -0.84615 (7), -0.57089 (7), -0.42765 (7), -0.29391 (7), -0.23072 (7), -0.21214 (7), -0.08235 (7), -0.03614 (7), -0.03572 (7), -0.00624 (7), -0.00167 (7), 
Length of domains: 14
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.4638    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.4638    add 0.0018    
Current (lb-rhs): -1.0349276065826416
14 domains visited
Cumulative time: 0.5300562381744385

BaB round 2
batch: 14
splitting decisions: 
split level 0: [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] [/input.11, 84] 
split level 1: [/input.11, 37] [/input.11, 37] [/input.7, 247] [/input.11, 30] [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.7, 143] [/input.7, 247] [/input.11, 37] 
split level 2: [/input.11, 30] [/input.11, 30] [/input.7, 113] [/input.11, 37] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.7, 143] [/input.11, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 99 / 112 = 0.8839285714285714
pruning-in-iteration extra time: 0.013281583786010742
Time: prepare 0.0107    bound 0.4475    transfer 0.0011    finalize 0.0078    func 0.4674    
Accumulated time: func 0.9310    prepare 0.0192    bound 0.8947    transfer 0.0024    finalize 0.0153    
Current worst splitting domains lb-rhs (depth):
-0.32734 (10), -0.30763 (10), -0.29823 (10), -0.24908 (10), -0.17192 (10), -0.15234 (10), -0.14791 (10), -0.12561 (10), -0.12409 (10), -0.11194 (10), -0.00788 (10), -0.00534 (10), -0.00071 (10), 
Length of domains: 13
Time: pickout 0.0013    decision 0.0248    set_bounds 0.0090    solve 0.4675    add 0.0018    
Accumulated time: pickout 0.0020    decision 0.0657    set_bounds 0.0247    solve 0.9312    add 0.0036    
Current (lb-rhs): -0.32734060287475586
27 domains visited
Cumulative time: 1.0356390476226807

BaB round 3
batch: 13
splitting decisions: 
split level 0: [/input.7, 109] [/input.7, 247] [/input.7, 247] [/input.7, 247] [/input.7, 109] [/input.7, 109] [/input.7, 109] [/input.7, 247] [/input.11, 30] [/input.7, 109] 
split level 1: [/input.11, 14] [/input.11, 97] [/input.11, 14] [/input.11, 14] [/input.7, 247] [/input.7, 247] [/input.11, 14] [/input.7, 143] [/input.7, 113] [/input.11, 14] 
split level 2: [/input.11, 97] [/input.11, 14] [/input.11, 97] [/input.7, 113] [/input.7, 123] [/input.7, 123] [/input.11, 97] [/input.7, 113] [/input.7, 641] [/input.11, 97] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 104 / 104 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0148    bound 0.0078    transfer 0.0006    finalize 0.0067    func 0.0299    
Accumulated time: func 0.9609    prepare 0.0343    bound 0.9025    transfer 0.0030    finalize 0.0219    
Length of domains: 0
Time: pickout 0.0014    decision 0.0244    set_bounds 0.0083    solve 0.0299    add 0.0001    
Accumulated time: pickout 0.0033    decision 0.0901    set_bounds 0.0330    solve 0.9611    add 0.0037    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
27 domains visited
Cumulative time: 1.100388526916504


Properties batch 5, size 1
Remaining timeout: 264.96347212791443
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.21787548]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.21787548]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 86] 
split level 6: [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 128 = 0.5703125
pruning-in-iteration extra time: 0.013501167297363281
Time: prepare 0.0076    bound 0.4323    transfer 0.0011    finalize 0.0075    func 0.4485    
Accumulated time: func 0.4485    prepare 0.0082    bound 0.4323    transfer 0.0011    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-1.27456 (7), -1.17827 (7), -1.17486 (7), -1.11798 (7), -1.11510 (7), -1.10616 (7), -1.09300 (7), -1.08055 (7), -1.07867 (7), -1.07444 (7), -1.04919 (7), -1.04793 (7), -1.01000 (7), -0.99931 (7), -0.99776 (7), -0.98804 (7), -0.98779 (7), -0.98462 (7), -0.96426 (7), -0.96121 (7), 
Length of domains: 55
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.4486    add 0.0023    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.4486    add 0.0023    
Current (lb-rhs): -1.2745628356933594
55 domains visited
Cumulative time: 0.5157396793365479

BaB round 2
batch: 55
splitting decisions: 
split level 0: [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 48] [/input.11, 89] [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 110 = 0.4636363636363636
pruning-in-iteration extra time: 0.012392282485961914
Time: prepare 0.0098    bound 0.4557    transfer 0.0011    finalize 0.0074    func 0.4741    
Accumulated time: func 0.9226    prepare 0.0184    bound 0.8880    transfer 0.0022    finalize 0.0149    
Current worst splitting domains lb-rhs (depth):
-1.08433 (8), -1.06656 (8), -0.99434 (8), -0.98361 (8), -0.98003 (8), -0.97564 (8), -0.96966 (8), -0.96257 (8), -0.95929 (8), -0.94217 (8), -0.91695 (8), -0.91399 (8), -0.89753 (8), -0.89234 (8), -0.87927 (8), -0.87161 (8), -0.87091 (8), -0.85665 (8), -0.85293 (8), -0.85043 (8), 
Length of domains: 59
Time: pickout 0.0012    decision 0.0390    set_bounds 0.0048    solve 0.4742    add 0.0025    
Accumulated time: pickout 0.0019    decision 0.0800    set_bounds 0.0205    solve 0.9228    add 0.0048    
Current (lb-rhs): -1.0843334197998047
114 domains visited
Cumulative time: 1.0385255813598633

BaB round 3
batch: 59
splitting decisions: 
split level 0: [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 48] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 39 / 118 = 0.3305084745762712
pruning-in-iteration extra time: 0.013210773468017578
Time: prepare 0.0120    bound 0.4528    transfer 0.0012    finalize 0.0080    func 0.4740    
Accumulated time: func 1.3967    prepare 0.0307    bound 1.3407    transfer 0.0034    finalize 0.0229    
Current worst splitting domains lb-rhs (depth):
-0.97321 (9), -0.94211 (9), -0.86498 (9), -0.86141 (9), -0.83617 (9), -0.83306 (9), -0.83219 (9), -0.83068 (9), -0.80885 (9), -0.79074 (9), -0.78036 (9), -0.76097 (9), -0.74766 (9), -0.74306 (9), -0.73251 (9), -0.73054 (9), -0.72505 (9), -0.71873 (9), -0.70781 (9), -0.70355 (9), 
Length of domains: 79
Time: pickout 0.0015    decision 0.0333    set_bounds 0.0052    solve 0.4741    add 0.0026    
Accumulated time: pickout 0.0034    decision 0.1133    set_bounds 0.0256    solve 1.3969    add 0.0075    
Current (lb-rhs): -0.9732108116149902
193 domains visited
Cumulative time: 1.556213140487671

BaB round 4
batch: 79
splitting decisions: 
split level 0: [/input.11, 48] [/input.11, 14] [/input.11, 14] [/input.11, 48] [/input.7, 641] [/input.11, 14] [/input.11, 14] [/input.7, 641] [/input.11, 14] [/input.11, 48] 
pruning_in_iteration open status: True
ratio of positive domain = 72 / 158 = 0.45569620253164556
pruning-in-iteration extra time: 0.012920856475830078
Time: prepare 0.0190    bound 0.4431    transfer 0.0013    finalize 0.0122    func 0.4756    
Accumulated time: func 1.8723    prepare 0.0500    bound 1.7838    transfer 0.0047    finalize 0.0351    
Current worst splitting domains lb-rhs (depth):
-0.83845 (10), -0.80475 (10), -0.78972 (10), -0.74041 (10), -0.73287 (10), -0.72654 (10), -0.71801 (10), -0.69326 (10), -0.67581 (10), -0.66578 (10), -0.66030 (10), -0.64845 (10), -0.63527 (10), -0.63109 (10), -0.63064 (10), -0.62713 (10), -0.62316 (10), -0.58665 (10), -0.58531 (10), -0.57913 (10), 
Length of domains: 86
Time: pickout 0.0015    decision 0.0361    set_bounds 0.0062    solve 0.4757    add 0.0025    
Accumulated time: pickout 0.0049    decision 0.1494    set_bounds 0.0318    solve 1.8726    add 0.0100    
Current (lb-rhs): -0.8384499549865723
279 domains visited
Cumulative time: 2.0793850421905518

BaB round 5
batch: 86
splitting decisions: 
split level 0: [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.7, 641] [/input.11, 27] [/input.7, 123] [/input.11, 14] [/input.7, 641] [/input.11, 48] [/input.7, 123] 
pruning_in_iteration open status: True
ratio of positive domain = 80 / 172 = 0.4651162790697675
pruning-in-iteration extra time: 0.012742042541503906
Time: prepare 0.0229    bound 0.4727    transfer 0.0015    finalize 0.0124    func 0.5096    
Accumulated time: func 2.3819    prepare 0.0732    bound 2.2565    transfer 0.0062    finalize 0.0475    
Current worst splitting domains lb-rhs (depth):
-0.77795 (11), -0.71590 (11), -0.69250 (11), -0.63872 (11), -0.63382 (11), -0.62061 (11), -0.60362 (11), -0.59724 (11), -0.58482 (11), -0.58469 (11), -0.57108 (11), -0.54148 (11), -0.54049 (11), -0.54016 (11), -0.53399 (11), -0.50708 (11), -0.49544 (11), -0.49518 (11), -0.44986 (11), -0.44354 (11), 
Length of domains: 92
Time: pickout 0.0014    decision 0.0293    set_bounds 0.0071    solve 0.5097    add 0.0028    
Accumulated time: pickout 0.0063    decision 0.1787    set_bounds 0.0390    solve 2.3824    add 0.0127    
Current (lb-rhs): -0.7779474258422852
371 domains visited
Cumulative time: 2.6311399936676025

BaB round 6
batch: 92
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 27] [/input.11, 59] [/input.7, 123] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.11, 27] [/input.7, 641] [/input.11, 27] 
pruning_in_iteration open status: True
ratio of positive domain = 114 / 184 = 0.6195652173913043
pruning-in-iteration extra time: 0.013755559921264648
Time: prepare 0.0254    bound 0.4650    transfer 0.0016    finalize 0.0134    func 0.5055    
Accumulated time: func 2.8873    prepare 0.0989    bound 2.7215    transfer 0.0078    finalize 0.0610    
Current worst splitting domains lb-rhs (depth):
-0.63805 (12), -0.58490 (12), -0.57039 (12), -0.56091 (12), -0.53601 (12), -0.47588 (12), -0.46770 (12), -0.45518 (12), -0.44332 (12), -0.42483 (12), -0.41093 (12), -0.41085 (12), -0.40894 (12), -0.40453 (12), -0.38018 (12), -0.36395 (12), -0.35346 (12), -0.34661 (12), -0.34239 (12), -0.32288 (12), 
Length of domains: 70
Time: pickout 0.0017    decision 0.0366    set_bounds 0.0080    solve 0.5056    add 0.0026    
Accumulated time: pickout 0.0080    decision 0.2154    set_bounds 0.0470    solve 2.8880    add 0.0153    
Current (lb-rhs): -0.6380510330200195
441 domains visited
Cumulative time: 3.1874611377716064

BaB round 7
batch: 70
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input.7, 123] [/input.7, 123] [/input.11, 59] [/input.11, 59] [/input.11, 27] [/input.11, 59] [/input.7, 123] [/input.7, 123] 
pruning_in_iteration open status: True
ratio of positive domain = 85 / 140 = 0.6071428571428572
pruning-in-iteration extra time: 0.013306140899658203
Time: prepare 0.0200    bound 0.4534    transfer 0.0011    finalize 0.0101    func 0.4847    
Accumulated time: func 3.3720    prepare 0.1193    bound 3.1749    transfer 0.0089    finalize 0.0711    
Current worst splitting domains lb-rhs (depth):
-0.49080 (13), -0.48042 (13), -0.39846 (13), -0.39579 (13), -0.34049 (13), -0.33636 (13), -0.32059 (13), -0.31982 (13), -0.31964 (13), -0.31695 (13), -0.31470 (13), -0.29636 (13), -0.29597 (13), -0.28216 (13), -0.27622 (13), -0.27535 (13), -0.26465 (13), -0.24016 (13), -0.23652 (13), -0.21880 (13), 
Length of domains: 55
Time: pickout 0.0016    decision 0.0287    set_bounds 0.0061    solve 0.4848    add 0.0023    
Accumulated time: pickout 0.0097    decision 0.2441    set_bounds 0.0531    solve 3.3727    add 0.0176    
Current (lb-rhs): -0.4907979965209961
496 domains visited
Cumulative time: 3.712475538253784

BaB round 8
batch: 55
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.7, 636] [/input.11, 59] [/input.7, 636] [/input.11, 59] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 110 = 0.7090909090909091
pruning-in-iteration extra time: 0.013414859771728516
Time: prepare 0.0159    bound 0.4440    transfer 0.0012    finalize 0.0085    func 0.4699    
Accumulated time: func 3.8419    prepare 0.1355    bound 3.6188    transfer 0.0101    finalize 0.0796    
Current worst splitting domains lb-rhs (depth):
-0.33582 (14), -0.32627 (14), -0.19675 (14), -0.18448 (14), -0.17929 (14), -0.17791 (14), -0.17416 (14), -0.17108 (14), -0.16940 (14), -0.16340 (14), -0.15763 (14), -0.15405 (14), -0.13461 (14), -0.13391 (14), -0.11601 (14), -0.10847 (14), -0.10644 (14), -0.10247 (14), -0.09518 (14), -0.09219 (14), 
Length of domains: 32
Time: pickout 0.0015    decision 0.0271    set_bounds 0.0051    solve 0.4699    add 0.0022    
Accumulated time: pickout 0.0111    decision 0.2711    set_bounds 0.0583    solve 3.8427    add 0.0198    
Current (lb-rhs): -0.3358168601989746
528 domains visited
Cumulative time: 4.219604969024658

BaB round 9
batch: 32
splitting decisions: 
split level 0: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 33] [/input.7, 636] [/input.7, 636] [/input.11, 33] 
split level 1: [/input.7, 261] [/input.7, 423] [/input.7, 423] [/input.7, 261] [/input.7, 261] [/input.7, 261] [/input.7, 261] [/input.7, 261] [/input.7, 123] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 125 / 128 = 0.9765625
pruning-in-iteration extra time: 0.014050483703613281
Time: prepare 0.0183    bound 0.4652    transfer 0.0012    finalize 0.0104    func 0.4952    
Accumulated time: func 4.3370    prepare 0.1541    bound 4.0841    transfer 0.0113    finalize 0.0900    
Current worst splitting domains lb-rhs (depth):
-0.08693 (16), -0.02540 (16), -0.02262 (16), 
Length of domains: 3
Time: pickout 0.0014    decision 0.0270    set_bounds 0.0093    solve 0.4954    add 0.0012    
Accumulated time: pickout 0.0125    decision 0.2981    set_bounds 0.0676    solve 4.3380    add 0.0210    
Current (lb-rhs): -0.0869293212890625
531 domains visited
Cumulative time: 4.755457401275635

BaB round 10
batch: 3
splitting decisions: 
split level 0: [/input.11, 33] [/input.11, 33] [/input.11, 33] 
split level 1: [/input.7, 709] [/input.7, 712] [/input.7, 709] 
split level 2: [/input.7, 712] [/input.7, 247] [/input.7, 712] 
split level 3: [/input.11, 63] [/input.11, 63] [/input.11, 63] 
split level 4: [/input.7, 261] [/input.7, 709] [/input.7, 261] 
split level 5: [/input.7, 423] [/input.7, 423] [/input.7, 423] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 8.702278137207031e-05
Time: prepare 0.0251    bound 0.0077    transfer 0.0009    finalize 0.0110    func 0.0448    
Accumulated time: func 4.3818    prepare 0.1798    bound 4.0918    transfer 0.0122    finalize 0.1010    
Length of domains: 0
Time: pickout 0.0013    decision 0.0399    set_bounds 0.0267    solve 0.0449    add 0.0001    
Accumulated time: pickout 0.0138    decision 0.3380    set_bounds 0.0943    solve 4.3829    add 0.0211    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
531 domains visited
Cumulative time: 4.869551658630371


Properties batch 6, size 1
Remaining timeout: 259.94574642181396
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.33999681]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.33999681]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 6] 
split level 5: [/input.11, 14] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0159    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0159    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08623290061950684


Properties batch 7, size 1
Remaining timeout: 259.7093951702118
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.95269299]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.95269299]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 5] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 32] 
split level 5: [/input.11, 95] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 128 = 0.6875
pruning-in-iteration extra time: 0.013906240463256836
Time: prepare 0.0075    bound 0.4647    transfer 0.0011    finalize 0.0075    func 0.4809    
Accumulated time: func 0.4809    prepare 0.0081    bound 0.4647    transfer 0.0011    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-2.22023 (7), -2.19763 (7), -2.06227 (7), -2.03970 (7), -1.93945 (7), -1.81485 (7), -1.77100 (7), -1.73267 (7), -1.71326 (7), -1.71253 (7), -1.69039 (7), -1.56026 (7), -1.25148 (7), -1.16407 (7), -1.11908 (7), -1.01900 (7), -0.99249 (7), -0.97554 (7), -0.96989 (7), -0.91982 (7), 
Length of domains: 40
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.4810    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.4810    add 0.0022    
Current (lb-rhs): -2.220233201980591
40 domains visited
Cumulative time: 0.5480811595916748

BaB round 2
batch: 40
splitting decisions: 
split level 0: [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] 
split level 1: [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 89 / 160 = 0.55625
pruning-in-iteration extra time: 0.01395869255065918
Time: prepare 0.0121    bound 0.4423    transfer 0.0013    finalize 0.0089    func 0.4647    
Accumulated time: func 0.9456    prepare 0.0206    bound 0.9070    transfer 0.0024    finalize 0.0164    
Current worst splitting domains lb-rhs (depth):
-1.58159 (9), -1.55413 (9), -1.45286 (9), -1.41788 (9), -1.36340 (9), -1.32854 (9), -1.28631 (9), -1.27116 (9), -1.23898 (9), -1.16328 (9), -1.06399 (9), -1.05317 (9), -1.03660 (9), -1.03496 (9), -1.02733 (9), -1.01486 (9), -1.01179 (9), -1.00476 (9), -1.00056 (9), -0.93737 (9), 
Length of domains: 71
Time: pickout 0.0013    decision 0.0280    set_bounds 0.0098    solve 0.4648    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.0690    set_bounds 0.0256    solve 0.9458    add 0.0046    
Current (lb-rhs): -1.5815911293029785
111 domains visited
Cumulative time: 1.0554099082946777

BaB round 3
batch: 71
splitting decisions: 
split level 0: [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 142 = 0.4577464788732394
pruning-in-iteration extra time: 0.012858390808105469
Time: prepare 0.0117    bound 0.4381    transfer 0.0012    finalize 0.0094    func 0.4605    
Accumulated time: func 1.4061    prepare 0.0326    bound 1.3451    transfer 0.0036    finalize 0.0258    
Current worst splitting domains lb-rhs (depth):
-1.40678 (10), -1.38782 (10), -1.29077 (10), -1.24627 (10), -1.23846 (10), -1.18453 (10), -1.15638 (10), -1.07436 (10), -1.03344 (10), -1.01986 (10), -0.99988 (10), -0.95116 (10), -0.88744 (10), -0.88211 (10), -0.87639 (10), -0.84861 (10), -0.84432 (10), -0.83349 (10), -0.76191 (10), -0.75649 (10), 
Length of domains: 77
Time: pickout 0.0011    decision 0.0325    set_bounds 0.0062    solve 0.4605    add 0.0025    
Accumulated time: pickout 0.0030    decision 0.1015    set_bounds 0.0318    solve 1.4063    add 0.0071    
Current (lb-rhs): -1.406778335571289
188 domains visited
Cumulative time: 1.5596177577972412

BaB round 4
batch: 77
splitting decisions: 
split level 0: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 14] [/input.11, 17] [/input.11, 65] [/input.11, 65] [/input.11, 14] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 154 = 0.5454545454545454
pruning-in-iteration extra time: 0.013858556747436523
Time: prepare 0.0133    bound 0.4517    transfer 0.0012    finalize 0.0094    func 0.4757    
Accumulated time: func 1.8818    prepare 0.0462    bound 1.7968    transfer 0.0048    finalize 0.0352    
Current worst splitting domains lb-rhs (depth):
-1.15763 (11), -1.05659 (11), -1.05270 (11), -1.00967 (11), -0.97662 (11), -0.97270 (11), -0.92522 (11), -0.91585 (11), -0.90330 (11), -0.86387 (11), -0.84264 (11), -0.83695 (11), -0.82246 (11), -0.81958 (11), -0.81125 (11), -0.75726 (11), -0.73395 (11), -0.70697 (11), -0.69540 (11), -0.66411 (11), 
Length of domains: 70
Time: pickout 0.0016    decision 0.0361    set_bounds 0.0067    solve 0.4758    add 0.0024    
Accumulated time: pickout 0.0046    decision 0.1376    set_bounds 0.0386    solve 1.8822    add 0.0094    
Current (lb-rhs): -1.1576290130615234
258 domains visited
Cumulative time: 2.083526134490967

BaB round 5
batch: 70
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 14] [/input.11, 14] [/input.7, 143] [/input.11, 14] [/input.11, 14] [/input.7, 143] [/input.7, 143] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 140 = 0.5357142857142857
pruning-in-iteration extra time: 0.01353907585144043
Time: prepare 0.0137    bound 0.4599    transfer 0.0011    finalize 0.0084    func 0.4832    
Accumulated time: func 2.3649    prepare 0.0603    bound 2.2567    transfer 0.0059    finalize 0.0436    
Current worst splitting domains lb-rhs (depth):
-0.91025 (12), -0.90722 (12), -0.86090 (12), -0.82906 (12), -0.82497 (12), -0.81437 (12), -0.79881 (12), -0.78089 (12), -0.74663 (12), -0.74312 (12), -0.72805 (12), -0.71588 (12), -0.67190 (12), -0.65120 (12), -0.63564 (12), -0.62967 (12), -0.57360 (12), -0.53001 (12), -0.51558 (12), -0.50682 (12), 
Length of domains: 65
Time: pickout 0.0016    decision 0.0287    set_bounds 0.0061    solve 0.4833    add 0.0024    
Accumulated time: pickout 0.0062    decision 0.1662    set_bounds 0.0447    solve 2.3654    add 0.0118    
Current (lb-rhs): -0.9102509021759033
323 domains visited
Cumulative time: 2.606823682785034

BaB round 6
batch: 65
splitting decisions: 
split level 0: [/input.11, 14] [/input.11, 99] [/input.11, 99] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 99] [/input.11, 14] [/input.11, 14] [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 61 / 130 = 0.46923076923076923
pruning-in-iteration extra time: 0.013753414154052734
Time: prepare 0.0132    bound 0.4576    transfer 0.0012    finalize 0.0086    func 0.4807    
Accumulated time: func 2.8456    prepare 0.0738    bound 2.7143    transfer 0.0072    finalize 0.0522    
Current worst splitting domains lb-rhs (depth):
-0.73703 (13), -0.73665 (13), -0.69449 (13), -0.66026 (13), -0.65913 (13), -0.65351 (13), -0.63660 (13), -0.62363 (13), -0.58874 (13), -0.56854 (13), -0.56088 (13), -0.55472 (13), -0.48777 (13), -0.48382 (13), -0.47427 (13), -0.46571 (13), -0.38316 (13), -0.37755 (13), -0.36210 (13), -0.34890 (13), 
Length of domains: 69
Time: pickout 0.0015    decision 0.0330    set_bounds 0.0059    solve 0.4808    add 0.0025    
Accumulated time: pickout 0.0077    decision 0.1992    set_bounds 0.0506    solve 2.8462    add 0.0143    
Current (lb-rhs): -0.7370328903198242
392 domains visited
Cumulative time: 3.1316936016082764

BaB round 7
batch: 69
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 14] [/input.11, 14] [/input.11, 99] [/input.7, 143] [/input.11, 14] [/input.7, 143] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 138 = 0.49275362318840576
pruning-in-iteration extra time: 0.01343679428100586
Time: prepare 0.0187    bound 0.4462    transfer 0.0011    finalize 0.0103    func 0.4765    
Accumulated time: func 3.3221    prepare 0.0928    bound 3.1606    transfer 0.0083    finalize 0.0625    
Current worst splitting domains lb-rhs (depth):
-0.59290 (14), -0.58626 (14), -0.53505 (14), -0.53244 (14), -0.50401 (14), -0.49944 (14), -0.48040 (14), -0.48005 (14), -0.47148 (14), -0.46659 (14), -0.45103 (14), -0.41545 (14), -0.40888 (14), -0.40231 (14), -0.39918 (14), -0.37489 (14), -0.32091 (14), -0.32089 (14), -0.29479 (14), -0.28020 (14), 
Length of domains: 70
Time: pickout 0.0015    decision 0.0347    set_bounds 0.0045    solve 0.4766    add 0.0024    
Accumulated time: pickout 0.0093    decision 0.2339    set_bounds 0.0551    solve 3.3228    add 0.0168    
Current (lb-rhs): -0.5928995609283447
462 domains visited
Cumulative time: 3.6528267860412598

BaB round 8
batch: 70
splitting decisions: 
split level 0: [/input.11, 37] [/input.7, 636] [/input.7, 636] [/input.7, 109] [/input.11, 37] [/input.7, 636] [/input.7, 636] [/input.11, 37] [/input.11, 37] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 140 = 0.6
pruning-in-iteration extra time: 0.013637781143188477
Time: prepare 0.0194    bound 0.4468    transfer 0.0012    finalize 0.0104    func 0.4780    
Accumulated time: func 3.8001    prepare 0.1126    bound 3.6074    transfer 0.0095    finalize 0.0730    
Current worst splitting domains lb-rhs (depth):
-0.52699 (15), -0.49222 (15), -0.44182 (15), -0.43980 (15), -0.43171 (15), -0.40951 (15), -0.40252 (15), -0.39217 (15), -0.36863 (15), -0.31699 (15), -0.30793 (15), -0.28862 (15), -0.25900 (15), -0.25237 (15), -0.25091 (15), -0.24772 (15), -0.22518 (15), -0.21939 (15), -0.21015 (15), -0.20969 (15), 
Length of domains: 56
Time: pickout 0.0015    decision 0.0288    set_bounds 0.0063    solve 0.4781    add 0.0023    
Accumulated time: pickout 0.0108    decision 0.2627    set_bounds 0.0614    solve 3.8009    add 0.0191    
Current (lb-rhs): -0.5269901752471924
518 domains visited
Cumulative time: 4.171196937561035

BaB round 9
batch: 56
splitting decisions: 
split level 0: [/input.11, 37] [/input.7, 177] [/input.7, 177] [/input.7, 143] [/input.7, 177] [/input.7, 577] [/input.7, 702] [/input.7, 636] [/input.7, 177] [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 67 / 112 = 0.5982142857142857
pruning-in-iteration extra time: 0.013270378112792969
Time: prepare 0.0157    bound 0.4475    transfer 0.0011    finalize 0.0084    func 0.4730    
Accumulated time: func 4.2731    prepare 0.1287    bound 4.0549    transfer 0.0106    finalize 0.0813    
Current worst splitting domains lb-rhs (depth):
-0.46239 (16), -0.43964 (16), -0.42444 (16), -0.38785 (16), -0.38703 (16), -0.34395 (16), -0.33791 (16), -0.24548 (16), -0.24033 (16), -0.23124 (16), -0.21382 (16), -0.19996 (16), -0.18568 (16), -0.18431 (16), -0.18251 (16), -0.17762 (16), -0.17596 (16), -0.16590 (16), -0.15286 (16), -0.14968 (16), 
Length of domains: 45
Time: pickout 0.0015    decision 0.0274    set_bounds 0.0052    solve 0.4731    add 0.0023    
Accumulated time: pickout 0.0122    decision 0.2901    set_bounds 0.0666    solve 4.2740    add 0.0214    
Current (lb-rhs): -0.4623899459838867
563 domains visited
Cumulative time: 4.68181300163269

BaB round 10
batch: 45
splitting decisions: 
split level 0: [/input.7, 636] [/input.11, 37] [/input.11, 37] [/input.7, 177] [/input.11, 37] [/input.7, 143] [/input.7, 143] [/input.7, 143] [/input.7, 636] [/input.7, 577] 
split level 1: [/input.11, 37] [/input.7, 577] [/input.7, 636] [/input.11, 37] [/input.7, 262] [/input.11, 37] [/input.7, 636] [/input.7, 194] [/input.11, 37] [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 166 / 180 = 0.9222222222222223
pruning-in-iteration extra time: 0.013388633728027344
Time: prepare 0.0248    bound 0.4467    transfer 0.0015    finalize 0.0129    func 0.4860    
Accumulated time: func 4.7591    prepare 0.1538    bound 4.5016    transfer 0.0122    finalize 0.0943    
Current worst splitting domains lb-rhs (depth):
-0.07674 (18), -0.06927 (18), -0.04954 (18), -0.04936 (18), -0.04606 (18), -0.04012 (18), -0.03730 (18), -0.02995 (18), -0.02978 (18), -0.02799 (18), -0.02419 (18), -0.01348 (18), -0.01307 (18), -0.01266 (18), 
Length of domains: 14
Time: pickout 0.0015    decision 0.0350    set_bounds 0.0147    solve 0.4861    add 0.0016    
Accumulated time: pickout 0.0137    decision 0.3251    set_bounds 0.0813    solve 4.7601    add 0.0229    
Current (lb-rhs): -0.07674026489257812
577 domains visited
Cumulative time: 5.222805976867676

BaB round 11
batch: 14
splitting decisions: 
split level 0: [/input.7, 702] [/input.7, 194] [/input.7, 702] [/input.7, 194] [/input.7, 702] [/input.7, 186] [/input.7, 702] [/input.7, 194] [/input.7, 261] [/input.7, 194] 
split level 1: [/input.7, 194] [/input.7, 142] [/input.7, 194] [/input.7, 142] [/input.7, 262] [/input.7, 194] [/input.7, 262] [/input.7, 262] [/input.7, 194] [/input.7, 142] 
split level 2: [/input.7, 262] [/input.7, 261] [/input.7, 262] [/input.7, 261] [/input.7, 194] [/input.7, 261] [/input.7, 194] [/input.7, 261] [/input.7, 262] [/input.7, 261] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 112 / 112 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0146    bound 0.0076    transfer 0.0006    finalize 0.0066    func 0.0293    
Accumulated time: func 4.7885    prepare 0.1687    bound 4.5091    transfer 0.0128    finalize 0.1008    
Length of domains: 0
Time: pickout 0.0015    decision 0.0230    set_bounds 0.0084    solve 0.0294    add 0.0001    
Accumulated time: pickout 0.0152    decision 0.3481    set_bounds 0.0897    solve 4.7895    add 0.0230    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
577 domains visited
Cumulative time: 5.285876512527466


Properties batch 8, size 1
Remaining timeout: 254.27645802497864
##### Instance 99 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.65658760]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.06029129,  0.11078294, -0.95794010, -2.62896109,  0.51496267,
         0.87575215,  8.07468414, -3.68149185, -0.15113452, -3.47134733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.65658760]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 722
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 218
Node /27 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 985
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 19] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 92] 
split level 4: [/input.11, 97] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0076    transfer 0.0007    finalize 0.0058    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0082    bound 0.0076    transfer 0.0007    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0159    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0159    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0872964859008789

Result: safe in 45.9605 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[12.63351059, -2.78801680,  0.20661151, -3.47787881, -2.88993764,
         -0.84860557,  3.58036971, -0.53060228, -2.46007681, -3.81586909]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.47it/s]100%|██████████| 1/1 [00:00<00:00,  1.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 9.73084831, -2.92621064, -0.62622148, -3.40486908, -2.62326074,
           0.55635792,  4.25399399, -0.74442977, -1.47413838, -3.12448287],
         [ 9.73084831, -2.92621064, -0.62622148, -3.40486908, -2.62326074,
           0.55635792,  4.25399399, -0.74442977, -1.47413838, -3.12448287]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.65705872, 10.35706997, 13.13571739, 12.35410881,  9.17448997,
           5.47685432, 10.47527790, 11.20498657, 12.85533142]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6869 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[12.63351059, -2.78801680,  0.20661116, -3.47787857, -2.88993812,
         -0.84860522,  3.58037019, -0.53060240, -2.46007681, -3.81586909]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [755]; unstable size 755; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 120, 1, 755] with unstable size 119 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 755] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 755] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [119]; unstable size 119; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 119] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 119] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.22444439, 2.92393780, 5.30013514, 5.81720400, 0.26613617, 2.44220090,
         3.60274267, 3.76145363, 5.38779306]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.75638199, -4.73202991, -5.19148970,  6.63367987, -5.71614027,
         16.04251289, -4.23940945, -2.58068919,  1.83244884,  3.56138730]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.73909378, -3.82904267, -4.14826727,  9.29834366, -6.28357887,
          13.46633244, -5.49500561, -1.89322793,  1.97663867,  2.57838845],
         [-5.73909378, -3.82904267, -4.14826727,  9.29834366, -6.28357887,
          13.46633244, -5.49500561, -1.89322793,  1.97663867,  2.57838845]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[19.20542526, 17.29537582, 17.61459923,  4.16798878, 19.74991226,
          18.96133804, 15.35956001, 11.48969364, 10.88794422]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7037 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.75638247, -4.73202991, -5.19149065,  6.63368082, -5.71614027,
         16.04251289, -4.23940849, -2.58069015,  1.83244944,  3.56138778]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [725]; unstable size 725; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 725] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 725] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 725] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 127] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.16212273,  8.28242302,  6.40082073, -2.66567326,  9.71976280,
          9.89290810,  3.02015781,  2.05126715,  1.62229967]], device='cuda:0') None
best_l after optimization: 54.64495086669922
alpha/beta optimization time: 4.563057899475098
initial alpha-crown bounds: tensor([[ 8.85632324,  8.92734051,  7.49842882, -1.26298440, 10.26612663,
         10.56489563,  4.01448584,  3.17276454,  2.60756636]], device='cuda:0')
Worst class: (+ rhs) -1.2629843950271606
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.6650803089142
##### Instance 101 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.8563232421875.

Properties batch 1, size 1
Remaining timeout: 294.52806282043457
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.927340507507324.

Properties batch 2, size 1
Remaining timeout: 294.42400336265564
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.498428821563721.

Properties batch 3, size 1
Remaining timeout: 294.32063603401184
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.26298440]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.75638247, -4.73202991, -5.19149065,  6.63368082, -5.71614027,
        16.04251289, -4.23940849, -2.58069015,  1.83244944,  3.56138778],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.26298440]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 725
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 123
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 877
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 80] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 74] 
split level 4: [/input.11, 5] 
split level 5: [/input.7, 108] 
split level 6: [/input.11, 60] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0144    bound 0.0077    transfer 0.0006    finalize 0.0077    func 0.0308    
Accumulated time: func 0.0308    prepare 0.0150    bound 0.0077    transfer 0.0006    finalize 0.0077    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09646344184875488


Properties batch 4, size 1
Remaining timeout: 294.08237075805664
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.26612663269043.

Properties batch 5, size 1
Remaining timeout: 293.973610162735
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.564895629882812.

Properties batch 6, size 1
Remaining timeout: 293.8696129322052
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.014485836029053.

Properties batch 7, size 1
Remaining timeout: 293.7660012245178
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.172764539718628.

Properties batch 8, size 1
Remaining timeout: 293.6624348163605
##### Instance 101 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6075663566589355.
Result: safe in 6.4408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.98579216, -1.85302901,  0.77862334, -2.03682804, 14.11268616,
         -3.79619360, -2.57060218,  0.47241667, -0.90070856, -0.52618992]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.37548161, -1.76128685,  3.62438917, -0.26430112, 10.93771172,
          -3.57286572, -2.60558128, -0.16041212,  0.44154975, -2.52203155],
         [-4.37548161, -1.76128685,  3.62438917, -0.26430112, 10.93771172,
          -3.57286572, -2.60558128, -0.16041212,  0.44154975, -2.52203155]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.31319332, 12.69899845,  7.31332254, 11.20201302, 14.51057720,
          13.54329300, 11.09812355, 10.49616241, 13.45974350]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6982 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.98579288, -1.85302949,  0.77862287, -2.03682852, 14.11268616,
         -3.79619336, -2.57060218,  0.47241619, -0.90070832, -0.52618945]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [665]; unstable size 665; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 665] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 665] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 127] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[9.07378864, 7.14447689, 1.86833262, 5.15386868, 6.85561085, 7.09273052,
         2.81404424, 3.63473225, 4.27935314]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7618 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.40528202, -4.28003550, -4.78280401,  2.10947156,  1.03276253,
          4.72981596, -3.54218173, -0.09853610,  1.89762461,  7.16659069]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.48944521, -3.87500954, -4.52850294,  2.05460072,  1.20567262,
           6.24765825, -2.97262740, -0.91085225,  1.93441021,  5.12798405],
         [-4.48944521, -3.87500954, -4.52850294,  2.05460072,  1.20567262,
           6.24765825, -2.97262740, -0.91085225,  1.93441021,  5.12798405]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.61742973,  9.00299358,  9.65648651,  3.07338333,  3.92231131,
          -1.11967421,  8.10061169,  6.03883648,  3.19357395]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0170 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.70652223, -6.47895956, -1.20777130,  1.33380795,  2.26992869,
         -1.66904128, -6.82231188,  4.22966290,  0.74848861, 11.19460487]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.51501894, -5.67118120, -0.75889480,  3.10291934,  0.08386362,
          -1.46505547, -8.15253830,  6.45859528,  1.63132370,  9.15714931],
         [-4.51501894, -5.67118120, -0.75889480,  3.10291934,  0.08386362,
          -1.46505547, -8.15253830,  6.45859528,  1.63132370,  9.15714931]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.67216873, 14.82833099,  9.91604424,  6.05422974,  9.07328606,
          10.62220478, 17.30968857,  2.69855404,  7.52582550]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7028 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.70652223, -6.47896004, -1.20777130,  1.33380795,  2.26992869,
         -1.66904044, -6.82231188,  4.22966242,  0.74848855, 11.19460392]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [724]; unstable size 724; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 152, 1, 724] with unstable size 151 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 724] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 724] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [151]; unstable size 151; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 151] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.48376036,  4.28871918, -0.48624969, -1.76421380, -2.55127692,
          0.81419754,  5.41833067, -4.95234251, -1.44974995]], device='cuda:0') None
best_l after optimization: 13.765549659729004
alpha/beta optimization time: 4.505702018737793
initial alpha-crown bounds: tensor([[ 5.44580364,  5.43371105,  0.57038927, -0.50039697, -1.53696442,
          1.64057374,  6.32309961, -3.42736435, -0.18330181]], device='cuda:0')
Worst class: (+ rhs) -3.4273643493652344
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.72127318382263
##### Instance 104 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.445803642272949.

Properties batch 1, size 1
Remaining timeout: 294.5959289073944
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.433711051940918.

Properties batch 2, size 1
Remaining timeout: 294.4921052455902
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5703892707824707.

Properties batch 3, size 1
Remaining timeout: 294.38851952552795
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50039697]], device='cuda:0') need to verify.
torch allclose failed: norm 6.067536446607846e-07
Model prediction is: tensor([-3.70652223, -6.47896004, -1.20777130,  1.33380795,  2.26992869,
        -1.66904044, -6.82231188,  4.22966242,  0.74848855, 11.19460392],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50039697]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 145
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 898
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 7] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 10] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 9] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08640933036804199


Properties batch 4, size 1
Remaining timeout: 294.1571915149689
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.53696442]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.70652223, -6.47896004, -1.20777130,  1.33380795,  2.26992869,
        -1.66904044, -6.82231188,  4.22966242,  0.74848855, 11.19460392],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.53696442]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 145
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 898
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 33] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 17] 
split level 5: [/input.11, 1] 
split level 6: [/input.11, 58] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0410    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0410    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08629941940307617


Properties batch 5, size 1
Remaining timeout: 293.92437195777893
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6405737400054932.

Properties batch 6, size 1
Remaining timeout: 293.81584882736206
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.323099613189697.

Properties batch 7, size 1
Remaining timeout: 293.71172547340393
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.42736435]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.70652223, -6.47896004, -1.20777130,  1.33380795,  2.26992869,
        -1.66904044, -6.82231188,  4.22966242,  0.74848855, 11.19460392],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.42736435]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 145
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 898
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 7] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 58] 
split level 5: [/input.11, 89] 
split level 6: [/input.11, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.013936758041381836
Time: prepare 0.0076    bound 0.4436    transfer 0.0011    finalize 0.0075    func 0.4599    
Accumulated time: func 0.4599    prepare 0.0082    bound 0.4436    transfer 0.0011    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.10815 (7), -0.07297 (7), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.4599    add 0.0012    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.4599    add 0.0012    
Current (lb-rhs): -0.10814738273620605
2 domains visited
Cumulative time: 0.5258021354675293

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.11, 36] [/input.11, 36] 
split level 1: [/input.11, 65] [/input.11, 65] 
split level 2: [/input.11, 47] [/input.11, 47] 
split level 3: [/input.7, 181] [/input.7, 181] 
split level 4: [/input.11, 50] [/input.11, 50] 
split level 5: [/input.7, 636] [/input.7, 636] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.653236389160156e-05
Time: prepare 0.0168    bound 0.0078    transfer 0.0006    finalize 0.0076    func 0.0330    
Accumulated time: func 0.4928    prepare 0.0256    bound 0.4514    transfer 0.0018    finalize 0.0151    
Length of domains: 0
Time: pickout 0.0011    decision 0.0396    set_bounds 0.0164    solve 0.0330    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0805    set_bounds 0.0321    solve 0.4930    add 0.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.6169178485870361


Properties batch 8, size 1
Remaining timeout: 292.9524726867676
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18330181]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.70652223, -6.47896004, -1.20777130,  1.33380795,  2.26992869,
        -1.66904044, -6.82231188,  4.22966242,  0.74848855, 11.19460392],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18330181]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 145
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 898
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 17] 
split level 1: [/input.11, 65] 
split level 2: [/input.11, 58] 
split level 3: [/input.11, 50] 
split level 4: [/input.7, 193] 
split level 5: [/input.11, 7] 
split level 6: [/input.11, 1] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0147    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0153    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0169    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0169    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09626960754394531

Result: safe in 7.2920 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.37930858, -1.96019292, 10.81893921, -0.30707622, -2.44680142,
         -5.19367647, -5.03182793,  2.52792025,  1.22385311, -1.20791113]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.33469200, -1.17578125,  7.35286283, -1.18903589, -0.32894740,
          -5.85885763, -5.43752241,  4.23403740,  0.86224967, -0.99646837],
         [ 2.33469200, -1.17578125,  7.35286283, -1.18903589, -0.32894740,
          -5.85885763, -5.43752241,  4.23403740,  0.86224967, -0.99646837]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.01817083,  8.52864456,  8.54189873,  7.68181038, 13.21172047,
          12.79038525,  3.11882544,  6.49061298,  8.34933090]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7030 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.37930870, -1.96019268, 10.81894016, -0.30707681, -2.44680142,
         -5.19367647, -5.03182793,  2.52792025,  1.22385323, -1.20791125]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [738]; unstable size 738; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 123, 1, 738] with unstable size 122 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 738] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 738] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [122]; unstable size 122; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 122] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 122] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.20031953,  0.36089659, -1.25773716, -0.10591412,  0.79589939,
          4.51196432, -3.96756172, -0.84982562, -2.03753901]], device='cuda:0') None
best_l after optimization: 6.718290328979492
alpha/beta optimization time: 4.546845197677612
initial alpha-crown bounds: tensor([[-0.76821065,  1.62347913, -0.09602714,  1.01112652,  2.05246115,
          5.39320660, -2.38935804,  0.26003623, -0.36842394]], device='cuda:0')
Worst class: (+ rhs) -2.3893580436706543
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.68255376815796
##### Instance 105 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76821065]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.37930870, -1.96019268, 10.81894016, -0.30707681, -2.44680142,
        -5.19367647, -5.03182793,  2.52792025,  1.22385323, -1.20791125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76821065]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 738
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 891
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 47] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 0] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08642005920410156


Properties batch 1, size 1
Remaining timeout: 294.4414002895355
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6234791278839111.

Properties batch 2, size 1
Remaining timeout: 294.3330285549164
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09602714]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.37930870, -1.96019268, 10.81894016, -0.30707681, -2.44680142,
        -5.19367647, -5.03182793,  2.52792025,  1.22385323, -1.20791125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09602714]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 738
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 891
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 97] 
split level 3: [/input.7, 596] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 56] 
split level 6: [/input.11, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0151    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09645533561706543


Properties batch 3, size 1
Remaining timeout: 294.0936789512634
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0111265182495117.

Properties batch 4, size 1
Remaining timeout: 293.985164642334
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0524611473083496.

Properties batch 5, size 1
Remaining timeout: 293.8812298774719
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.393206596374512.

Properties batch 6, size 1
Remaining timeout: 293.777547121048
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.38935804]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.37930870, -1.96019268, 10.81894016, -0.30707681, -2.44680142,
        -5.19367647, -5.03182793,  2.52792025,  1.22385323, -1.20791125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.38935804]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 738
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 891
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 9] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 47] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 97] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0156    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0156    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08600115776062012


Properties batch 7, size 1
Remaining timeout: 293.5495808124542
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2600362300872803.

Properties batch 8, size 1
Remaining timeout: 293.4411118030548
##### Instance 105 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36842394]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.37930870, -1.96019268, 10.81894016, -0.30707681, -2.44680142,
        -5.19367647, -5.03182793,  2.52792025,  1.22385323, -1.20791125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36842394]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 738
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 891
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 97] 
split level 3: [/input.11, 9] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 10] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.939338684082031e-05
Time: prepare 0.0075    bound 0.0076    transfer 0.0007    finalize 0.0059    func 0.0219    
Accumulated time: func 0.0219    prepare 0.0081    bound 0.0076    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0413    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0413    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08665847778320312

Result: safe in 6.7880 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.50032246,  7.03689480,  0.25025892, -2.97157431, -1.32422173,
         -1.27956390,  1.54299378, -0.52479142,  1.88052535, -5.27889442]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.73132950,  5.38505459,  0.09065915, -3.66374278, -1.88634408,
           0.62176013,  3.94660783, -1.50457108,  2.06045341, -5.99953175],
         [ 0.73132950,  5.38505459,  0.09065915, -3.66374278, -1.88634408,
           0.62176013,  3.94660783, -1.50457108,  2.06045341, -5.99953175]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.65372515,  5.29439545,  9.04879761,  7.27139854,  4.76329422,
           1.43844676,  6.88962555,  3.32460117, 11.38458633]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7025 seconds.
PGD attack failed
torch allclose failed: norm 9.112885663853376e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.50032240,  7.03689432,  0.25025916, -2.97157431, -1.32422197,
         -1.27956367,  1.54299414, -0.52479124,  1.88052547, -5.27889442]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [694]; unstable size 694; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 251, 1, 694] with unstable size 250 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 694] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [250]; unstable size 250; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 250] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.31662977,  1.56462014,  3.02078986,  2.99718761,  0.18299830,
         -0.93547833,  2.44593787, -0.81635249,  4.52015495]], device='cuda:0') None
best_l after optimization: 19.29511260986328
alpha/beta optimization time: 4.547387599945068
initial alpha-crown bounds: tensor([[ 1.79671502,  1.90566444,  3.71560884,  3.57955790,  0.69493335,
         -0.56610548,  3.05879450, -0.23043501,  5.34037781]], device='cuda:0')
Worst class: (+ rhs) -0.5661054849624634
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.67606472969055
##### Instance 106 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7967150211334229.

Properties batch 1, size 1
Remaining timeout: 294.56069231033325
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9056644439697266.

Properties batch 2, size 1
Remaining timeout: 294.45671463012695
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.715608835220337.

Properties batch 3, size 1
Remaining timeout: 294.353098154068
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5795578956604004.

Properties batch 4, size 1
Remaining timeout: 294.2496087551117
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6949333548545837.

Properties batch 5, size 1
Remaining timeout: 294.14615511894226
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.56610548]], device='cuda:0') need to verify.
torch allclose failed: norm 6.481577088379709e-07
Model prediction is: tensor([ 0.50032240,  7.03689432,  0.25025916, -2.97157431, -1.32422197,
        -1.27956367,  1.54299414, -0.52479124,  1.88052547, -5.27889442],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.56610548]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 248
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 962
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 25] 
split level 2: [/input.7, 583] 
split level 3: [/input.7, 592] 
split level 4: [/input.11, 90] 
split level 5: [/input.7, 187] 
split level 6: [/input.7, 713] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0144    bound 0.0077    transfer 0.0006    finalize 0.0075    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0150    bound 0.0077    transfer 0.0006    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0410    set_bounds 0.0169    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0410    set_bounds 0.0169    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09608650207519531


Properties batch 6, size 1
Remaining timeout: 293.9054980278015
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0587944984436035.

Properties batch 7, size 1
Remaining timeout: 293.7968533039093
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.23043501]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.50032240,  7.03689432,  0.25025916, -2.97157431, -1.32422197,
        -1.27956367,  1.54299414, -0.52479124,  1.88052547, -5.27889442],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.23043501]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 248
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 962
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.7, 312] 
split level 2: [/input.11, 84] 
split level 3: [/input.7, 187] 
split level 4: [/input.11, 25] 
split level 5: [/input.7, 262] 
split level 6: [/input.7, 703] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0151    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0169    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0169    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09650635719299316


Properties batch 8, size 1
Remaining timeout: 293.55776810646057
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.3403778076171875.
Result: safe in 6.5507 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.04111624, -3.71005583, -4.60740137, -1.71885395,  3.23317528,
          3.27469349, -6.42496681,  1.09886873,  1.10016143, 11.82925415]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.55506563, -2.48553562, -4.21552896, -3.44043565,  6.12183523,
           2.89191437, -4.85693264,  1.74619889,  0.89725477,  7.85743141],
         [-4.55506563, -2.48553562, -4.21552896, -3.44043565,  6.12183523,
           2.89191437, -4.85693264,  1.74619889,  0.89725477,  7.85743141]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.41249657, 10.34296703, 12.07295990, 11.29786682,  1.73559618,
           4.96551704, 12.71436405,  6.11123276,  6.96017647]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7082 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.04111624, -3.71005630, -4.60740185, -1.71885312,  3.23317504,
          3.27469420, -6.42496729,  1.09886885,  1.10016108, 11.82925415]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [724]; unstable size 724; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 169, 1, 724] with unstable size 168 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 724] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 724] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [168]; unstable size 168; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 168] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 168] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.59032917,  1.30163622,  4.04662514,  2.69017839, -5.86557865,
         -4.45944977,  4.05327415, -2.59587312, -0.77661514]], device='cuda:0') None
best_l after optimization: 16.908123016357422
alpha/beta optimization time: 4.541574954986572
initial alpha-crown bounds: tensor([[ 6.57253218,  3.15378404,  5.41553402,  3.99180031, -4.00702429,
         -3.07908869,  5.45518017, -1.06820512,  0.47360897]], device='cuda:0')
Worst class: (+ rhs) -4.00702428817749
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.68139934539795
##### Instance 107 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.5725321769714355.

Properties batch 1, size 1
Remaining timeout: 294.5675354003906
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1537840366363525.

Properties batch 2, size 1
Remaining timeout: 294.46357250213623
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.415534019470215.

Properties batch 3, size 1
Remaining timeout: 294.3601038455963
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.991800308227539.

Properties batch 4, size 1
Remaining timeout: 294.2567193508148
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.00702429]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.04111624, -3.71005630, -4.60740185, -1.71885312,  3.23317504,
         3.27469420, -6.42496729,  1.09886885,  1.10016108, 11.82925415],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.00702429]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 165
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 918
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 96] 
split level 2: [/input.7, 233] 
split level 3: [/input.11, 33] 
split level 4: [/input.11, 17] 
split level 5: [/input.7, 107] 
split level 6: [/input.7, 232] 
pruning_in_iteration open status: True
ratio of positive domain = 96 / 128 = 0.75
pruning-in-iteration extra time: 0.013772964477539062
Time: prepare 0.0145    bound 0.4482    transfer 0.0012    finalize 0.0098    func 0.4738    
Accumulated time: func 0.4738    prepare 0.0151    bound 0.4482    transfer 0.0012    finalize 0.0098    
Current worst splitting domains lb-rhs (depth):
-1.87459 (7), -1.75983 (7), -1.72774 (7), -1.72556 (7), -1.63622 (7), -1.61226 (7), -1.60670 (7), -1.59803 (7), -1.53789 (7), -1.53050 (7), -1.51784 (7), -1.51216 (7), -1.45473 (7), -1.36589 (7), -1.31610 (7), -1.28906 (7), -1.01448 (7), -0.90348 (7), -0.90122 (7), -0.89643 (7), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0169    solve 0.4739    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0169    solve 0.4739    add 0.0022    
Current (lb-rhs): -1.8745862245559692
32 domains visited
Cumulative time: 0.5418751239776611

BaB round 2
batch: 32
splitting decisions: 
split level 0: [/input.11, 63] [/input.7, 408] [/input.7, 182] [/input.7, 408] [/input.7, 182] [/input.7, 408] [/input.11, 63] [/input.7, 408] [/input.11, 63] [/input.7, 408] 
split level 1: [/input.7, 408] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.7, 182] [/input.11, 63] [/input.7, 408] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 128 = 0.578125
pruning-in-iteration extra time: 0.014161825180053711
Time: prepare 0.0170    bound 0.4736    transfer 0.0012    finalize 0.0108    func 0.5027    
Accumulated time: func 0.9764    prepare 0.0325    bound 0.9218    transfer 0.0024    finalize 0.0205    
Current worst splitting domains lb-rhs (depth):
-1.47716 (9), -1.34904 (9), -1.32525 (9), -1.32244 (9), -1.21493 (9), -1.19624 (9), -1.18801 (9), -1.17485 (9), -1.10579 (9), -1.09399 (9), -1.08785 (9), -1.06543 (9), -1.04028 (9), -0.90969 (9), -0.87490 (9), -0.84756 (9), -0.72543 (9), -0.64752 (9), -0.62549 (9), -0.54445 (9), 
Length of domains: 54
Time: pickout 0.0014    decision 0.0269    set_bounds 0.0107    solve 0.5028    add 0.0024    
Accumulated time: pickout 0.0020    decision 0.0679    set_bounds 0.0276    solve 0.9766    add 0.0046    
Current (lb-rhs): -1.477158784866333
86 domains visited
Cumulative time: 1.0875654220581055

BaB round 3
batch: 54
splitting decisions: 
split level 0: [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] [/input.7, 182] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 108 = 0.6574074074074074
pruning-in-iteration extra time: 0.013998270034790039
Time: prepare 0.0153    bound 0.4605    transfer 0.0011    finalize 0.0086    func 0.4857    
Accumulated time: func 1.4621    prepare 0.0482    bound 1.3823    transfer 0.0034    finalize 0.0291    
Current worst splitting domains lb-rhs (depth):
-1.25138 (10), -1.14822 (10), -1.13084 (10), -1.11949 (10), -1.04217 (10), -1.02236 (10), -1.00952 (10), -0.96323 (10), -0.92359 (10), -0.91396 (10), -0.88292 (10), -0.85996 (10), -0.83001 (10), -0.71281 (10), -0.70514 (10), -0.66884 (10), -0.54969 (10), -0.46554 (10), -0.43293 (10), -0.34699 (10), 
Length of domains: 37
Time: pickout 0.0015    decision 0.0332    set_bounds 0.0050    solve 0.4858    add 0.0022    
Accumulated time: pickout 0.0035    decision 0.1011    set_bounds 0.0326    solve 1.4624    add 0.0068    
Current (lb-rhs): -1.2513831853866577
123 domains visited
Cumulative time: 1.616546630859375

BaB round 4
batch: 37
splitting decisions: 
split level 0: [/input.11, 1] [/input.11, 1] [/input.7, 108] [/input.11, 1] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.11, 1] [/input.11, 1] 
split level 1: [/input.7, 108] [/input.7, 108] [/input.11, 1] [/input.7, 108] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.7, 108] [/input.7, 108] 
pruning_in_iteration open status: True
ratio of positive domain = 114 / 148 = 0.7702702702702703
pruning-in-iteration extra time: 0.013357400894165039
Time: prepare 0.0196    bound 0.4482    transfer 0.0013    finalize 0.0111    func 0.4803    
Accumulated time: func 1.9424    prepare 0.0681    bound 1.8305    transfer 0.0047    finalize 0.0402    
Current worst splitting domains lb-rhs (depth):
-0.90691 (12), -0.77619 (12), -0.77297 (12), -0.75692 (12), -0.64258 (12), -0.63168 (12), -0.63053 (12), -0.55767 (12), -0.51746 (12), -0.51560 (12), -0.48408 (12), -0.46481 (12), -0.45434 (12), -0.42898 (12), -0.38031 (12), -0.36138 (12), -0.31380 (12), -0.30571 (12), -0.29517 (12), -0.28821 (12), 
Length of domains: 34
Time: pickout 0.0013    decision 0.0278    set_bounds 0.0128    solve 0.4804    add 0.0021    
Accumulated time: pickout 0.0049    decision 0.1289    set_bounds 0.0455    solve 1.9428    add 0.0089    
Current (lb-rhs): -0.9069138765335083
157 domains visited
Cumulative time: 2.142768621444702

BaB round 5
batch: 34
splitting decisions: 
split level 0: [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 65] [/input.11, 89] [/input.11, 89] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.7, 718] [/input.11, 65] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 136 = 0.8529411764705882
pruning-in-iteration extra time: 0.013695478439331055
Time: prepare 0.0188    bound 0.4471    transfer 0.0013    finalize 0.0101    func 0.4774    
Accumulated time: func 2.4198    prepare 0.0872    bound 2.2776    transfer 0.0060    finalize 0.0504    
Current worst splitting domains lb-rhs (depth):
-0.53921 (14), -0.46366 (14), -0.45837 (14), -0.44448 (14), -0.38361 (14), -0.33904 (14), -0.30415 (14), -0.29025 (14), -0.22515 (14), -0.20161 (14), -0.17589 (14), -0.14495 (14), -0.14408 (14), -0.13530 (14), -0.13126 (14), -0.11556 (14), -0.11252 (14), -0.08267 (14), -0.07606 (14), -0.07235 (14), 
Length of domains: 20
Time: pickout 0.0017    decision 0.0273    set_bounds 0.0088    solve 0.4775    add 0.0019    
Accumulated time: pickout 0.0065    decision 0.1562    set_bounds 0.0543    solve 2.4203    add 0.0108    
Current (lb-rhs): -0.5392118692398071
177 domains visited
Cumulative time: 2.661515951156616

BaB round 6
batch: 20
splitting decisions: 
split level 0: [/input.7, 187] [/input.7, 718] [/input.7, 187] [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.11, 89] [/input.7, 718] [/input.7, 718] [/input.7, 718] 
split level 1: [/input.7, 718] [/input.11, 47] [/input.7, 718] [/input.11, 47] [/input.7, 187] [/input.11, 47] [/input.7, 187] [/input.11, 47] [/input.11, 47] [/input.11, 47] 
split level 2: [/input.11, 47] [/input.11, 14] [/input.11, 47] [/input.11, 14] [/input.11, 47] [/input.11, 14] [/input.11, 47] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
pruning_in_iteration open status: True
ratio of positive domain = 158 / 160 = 0.9875
pruning-in-iteration extra time: 0.013589620590209961
Time: prepare 0.0221    bound 0.4500    transfer 0.0013    finalize 0.0112    func 0.4847    
Accumulated time: func 2.9045    prepare 0.1096    bound 2.7276    transfer 0.0073    finalize 0.0616    
Current worst splitting domains lb-rhs (depth):
-0.13436 (17), -0.02836 (17), 
Length of domains: 2
Time: pickout 0.0013    decision 0.0259    set_bounds 0.0155    solve 0.4848    add 0.0011    
Accumulated time: pickout 0.0078    decision 0.1821    set_bounds 0.0698    solve 2.9051    add 0.0119    
Current (lb-rhs): -0.1343592405319214
179 domains visited
Cumulative time: 3.1918623447418213

BaB round 7
batch: 2
splitting decisions: 
split level 0: [/input.7, 307] [/input.7, 307] 
split level 1: [/input.11, 50] [/input.11, 50] 
split level 2: [/input.7, 588] [/input.7, 588] 
split level 3: [/input.7, 268] [/input.7, 268] 
split level 4: [/input.7, 137] [/input.11, 14] 
split level 5: [/input.11, 14] [/input.7, 643] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.43865966796875e-05
Time: prepare 0.0169    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0327    
Accumulated time: func 2.9372    prepare 0.1271    bound 2.7353    transfer 0.0080    finalize 0.0689    
Length of domains: 0
Time: pickout 0.0015    decision 0.0372    set_bounds 0.0180    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0093    decision 0.2193    set_bounds 0.0878    solve 2.9379    add 0.0120    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
179 domains visited
Cumulative time: 3.2823379039764404


Properties batch 5, size 1
Remaining timeout: 290.8327121734619
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.07908869]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.04111624, -3.71005630, -4.60740185, -1.71885312,  3.23317504,
         3.27469420, -6.42496729,  1.09886885,  1.10016108, 11.82925415],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.07908869]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 165
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 918
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 7] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 59] 
split level 5: [/input.11, 65] 
split level 6: [/input.7, 232] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 128 = 0.90625
pruning-in-iteration extra time: 0.013575077056884766
Time: prepare 0.0145    bound 0.4487    transfer 0.0011    finalize 0.0094    func 0.4738    
Accumulated time: func 0.4738    prepare 0.0151    bound 0.4487    transfer 0.0011    finalize 0.0094    
Current worst splitting domains lb-rhs (depth):
-0.87166 (7), -0.73703 (7), -0.61929 (7), -0.56603 (7), -0.52980 (7), -0.47192 (7), -0.44848 (7), -0.40369 (7), -0.28352 (7), -0.17004 (7), -0.16799 (7), -0.04174 (7), 
Length of domains: 12
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0169    solve 0.4739    add 0.0017    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0169    solve 0.4739    add 0.0017    
Current (lb-rhs): -0.8716602325439453
12 domains visited
Cumulative time: 0.5418777465820312

BaB round 2
batch: 12
splitting decisions: 
split level 0: [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.11, 10] 
split level 1: [/input.11, 14] [/input.11, 14] [/input.7, 187] [/input.11, 14] [/input.7, 187] [/input.7, 187] [/input.11, 14] [/input.11, 14] [/input.7, 187] [/input.11, 14] 
split level 2: [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] [/input.11, 17] 
split level 3: [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 189 / 192 = 0.984375
pruning-in-iteration extra time: 0.01341390609741211
Time: prepare 0.0261    bound 0.4383    transfer 0.0016    finalize 0.0137    func 0.4798    
Accumulated time: func 0.9536    prepare 0.0416    bound 0.8870    transfer 0.0027    finalize 0.0231    
Current worst splitting domains lb-rhs (depth):
-0.13156 (11), -0.06732 (11), -0.05164 (11), 
Length of domains: 3
Time: pickout 0.0013    decision 0.0306    set_bounds 0.0192    solve 0.4799    add 0.0012    
Accumulated time: pickout 0.0020    decision 0.0717    set_bounds 0.0361    solve 0.9538    add 0.0029    
Current (lb-rhs): -0.1315624713897705
15 domains visited
Cumulative time: 1.0762879848480225

BaB round 3
batch: 3
splitting decisions: 
split level 0: [/input.11, 52] [/input.11, 52] [/input.11, 52] 
split level 1: [/input.11, 50] [/input.11, 50] [/input.11, 50] 
split level 2: [/input.7, 193] [/input.7, 193] [/input.7, 193] 
split level 3: [/input.7, 137] [/input.7, 137] [/input.7, 137] 
split level 4: [/input.7, 187] [/input.7, 187] [/input.7, 187] 
split level 5: [/input.7, 133] [/input.7, 133] [/input.7, 133] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0250    bound 0.0077    transfer 0.0009    finalize 0.0109    func 0.0446    
Accumulated time: func 0.9982    prepare 0.0672    bound 0.8948    transfer 0.0036    finalize 0.0340    
Length of domains: 0
Time: pickout 0.0014    decision 0.0398    set_bounds 0.0268    solve 0.0447    add 0.0001    
Accumulated time: pickout 0.0033    decision 0.1115    set_bounds 0.0629    solve 0.9984    add 0.0030    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
15 domains visited
Cumulative time: 1.1902930736541748


Properties batch 6, size 1
Remaining timeout: 289.49325370788574
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.4551801681518555.

Properties batch 7, size 1
Remaining timeout: 289.38313722610474
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.06820512]], device='cuda:0') need to verify.
torch allclose failed: norm 9.253129178432573e-07
Model prediction is: tensor([-4.04111624, -3.71005630, -4.60740185, -1.71885312,  3.23317504,
         3.27469420, -6.42496729,  1.09886885,  1.10016108, 11.82925415],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.06820512]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 724
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 165
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 918
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 89] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 14] 
split level 5: [/input.11, 96] 
split level 6: [/input.11, 17] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0158    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0158    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08644223213195801


Properties batch 8, size 1
Remaining timeout: 289.15154671669006
##### Instance 107 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.47360897064208984.
Result: safe in 10.9568 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.86811197, -0.38168412, -2.91427279, -3.88831902, 10.65157795,
         -3.43845868,  2.31315923,  1.28226781, -3.03169274,  0.96479762]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.20240283, -0.67711490, -2.15059185, -4.04227066,  7.95038223,
          -2.37631226,  4.84218073,  0.04519770, -2.32699108, -0.42164654],
         [-1.20240283, -0.67711490, -2.15059185, -4.04227066,  7.95038223,
          -2.37631226,  4.84218073,  0.04519770, -2.32699108, -0.42164654]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.15278530,  8.62749672, 10.10097408, 11.99265289, 10.32669449,
           3.10820150,  7.90518475, 10.27737331,  8.37202835]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7014 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.86811233, -0.38168436, -2.91427279, -3.88831902, 10.65157795,
         -3.43845892,  2.31315947,  1.28226781, -3.03169250,  0.96479774]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [694]; unstable size 694; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 134, 1, 694] with unstable size 133 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 694] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [133]; unstable size 133; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 133] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.84101820,  2.97709942,  1.46355677,  3.15552187,  2.64206934,
         -1.74047780, -2.11121273,  2.25609136, -1.42840886]], device='cuda:0') None
best_l after optimization: 12.803567886352539
alpha/beta optimization time: 4.5137619972229
initial alpha-crown bounds: tensor([[ 2.12573481,  3.27977872,  1.90061474,  3.57963467,  3.14683819,
         -1.33341956, -1.62063408,  2.69667935, -0.97165966]], device='cuda:0')
Worst class: (+ rhs) -1.6206340789794922
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7189681529999
##### Instance 108 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.125734806060791.

Properties batch 1, size 1
Remaining timeout: 294.60538601875305
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.2797787189483643.

Properties batch 2, size 1
Remaining timeout: 294.5013816356659
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9006147384643555.

Properties batch 3, size 1
Remaining timeout: 294.3972532749176
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.579634666442871.

Properties batch 4, size 1
Remaining timeout: 294.29378175735474
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1468381881713867.

Properties batch 5, size 1
Remaining timeout: 294.1904351711273
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.33341956]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.86811233, -0.38168436, -2.91427279, -3.88831902, 10.65157795,
        -3.43845892,  2.31315947,  1.28226781, -3.03169250,  0.96479774],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.33341956]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 132
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 860
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 11] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 86] 
split level 5: [/input.11, 73] 
split level 6: [/input.7, 193] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.0001354217529296875
Time: prepare 0.0145    bound 0.0078    transfer 0.0010    finalize 0.0083    func 0.0318    
Accumulated time: func 0.0318    prepare 0.0151    bound 0.0078    transfer 0.0010    finalize 0.0083    
Length of domains: 0
Time: pickout 0.0007    decision 0.0419    set_bounds 0.0172    solve 0.0319    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0419    set_bounds 0.0172    solve 0.0319    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09894800186157227


Properties batch 6, size 1
Remaining timeout: 293.9482114315033
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.62063408]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.86811233, -0.38168436, -2.91427279, -3.88831902, 10.65157795,
        -3.43845892,  2.31315947,  1.28226781, -3.03169250,  0.96479774],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.62063408]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 132
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 860
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 86] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 51] 
split level 4: [/input.7, 632] 
split level 5: [/input.11, 25] 
split level 6: [/input.11, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0147    bound 0.0078    transfer 0.0007    finalize 0.0075    func 0.0309    
Accumulated time: func 0.0309    prepare 0.0153    bound 0.0078    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0309    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0309    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09702324867248535


Properties batch 7, size 1
Remaining timeout: 293.70362067222595
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6966793537139893.

Properties batch 8, size 1
Remaining timeout: 293.5952205657959
##### Instance 108 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.97165966]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.86811233, -0.38168436, -2.91427279, -3.88831902, 10.65157795,
        -3.43845892,  2.31315947,  1.28226781, -3.03169250,  0.96479774],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.97165966]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 694
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 132
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 860
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 12] 
split level 3: [/input.11, 25] 
split level 4: [/input.11, 0] 
split level 5: [/input.7, 633] 
split level 6: [/input.11, 97] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0147    bound 0.0080    transfer 0.0007    finalize 0.0075    func 0.0312    
Accumulated time: func 0.0312    prepare 0.0153    bound 0.0080    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0313    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0313    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09726881980895996

Result: safe in 6.6450 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.50867105, -1.67509794,  1.62681162,  2.88871717, -3.18876624,
         -0.48568875, -1.88273144, -5.82281399, 12.24575615, -2.22623777]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.89106911, -1.20210278,  1.69541824,  7.32002020, -5.44577551,
          -0.59560603, -3.83575225, -5.46908092,  9.93328953, -1.53880858],
         [-0.89106911, -1.20210278,  1.69541824,  7.32002020, -5.44577551,
          -0.59560603, -3.83575225, -5.46908092,  9.93328953, -1.53880858]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.82435894, 11.13539219,  8.23787117,  2.61326933, 15.37906456,
          10.52889538, 13.76904202, 15.40237045, 11.47209835]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7029 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.50867093, -1.67509818,  1.62681210,  2.88871813, -3.18876576,
         -0.48568910, -1.88273156, -5.82281446, 12.24575615, -2.22623754]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [660]; unstable size 660; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 148, 1, 660] with unstable size 147 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 35, 1, 660] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [147]; unstable size 147; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 35, 1, 147] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.52201676,  1.76170063,  0.40239596, -2.79546165,  3.67012501,
         -0.40928411,  3.80555296,  6.67738199,  2.72096825]], device='cuda:0') None
best_l after optimization: 24.68122100830078
alpha/beta optimization time: 4.635394811630249
initial alpha-crown bounds: tensor([[ 4.11448193,  2.19727898,  1.03185010, -2.26356125,  4.22624969,
          0.32086968,  4.46741104,  7.15448189,  3.43215871]], device='cuda:0')
Worst class: (+ rhs) -2.263561248779297
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5935523509979
##### Instance 109 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.1144819259643555.

Properties batch 1, size 1
Remaining timeout: 294.4791440963745
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1972789764404297.

Properties batch 2, size 1
Remaining timeout: 294.37499713897705
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0318500995635986.

Properties batch 3, size 1
Remaining timeout: 294.27131843566895
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.26356125]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.50867093, -1.67509818,  1.62681210,  2.88871813, -3.18876576,
        -0.48568910, -1.88273156, -5.82281446, 12.24575615, -2.22623754],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.26356125]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 660
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 147
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 841
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 36] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 80] 
split level 4: [/input.11, 8] 
split level 5: [/input.7, 191] 
split level 6: [/input.7, 266] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.013161659240722656
Time: prepare 0.0146    bound 0.4389    transfer 0.0013    finalize 0.0096    func 0.4645    
Accumulated time: func 0.4645    prepare 0.0152    bound 0.4389    transfer 0.0013    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-0.18690 (7), 
Length of domains: 1
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.4646    add 0.0008    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.4646    add 0.0008    
Current (lb-rhs): -0.1868985891342163
1 domains visited
Cumulative time: 0.5316286087036133

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.11, 47] 
split level 1: [/input.11, 51] 
split level 2: [/input.7, 641] 
split level 3: [/input.11, 56] 
split level 4: [/input.7, 632] 
split level 5: [/input.7, 631] 
split level 6: [/input.7, 41] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0169    bound 0.0076    transfer 0.0006    finalize 0.0074    func 0.0327    
Accumulated time: func 0.4972    prepare 0.0327    bound 0.4465    transfer 0.0019    finalize 0.0171    
Length of domains: 0
Time: pickout 0.0011    decision 0.0435    set_bounds 0.0200    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0846    set_bounds 0.0369    solve 0.4973    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.6300351619720459


Properties batch 4, size 1
Remaining timeout: 293.498859167099
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.226249694824219.

Properties batch 5, size 1
Remaining timeout: 293.3900101184845
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.32086968421936035.

Properties batch 6, size 1
Remaining timeout: 293.28575825691223
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.467411041259766.

Properties batch 7, size 1
Remaining timeout: 293.18234395980835
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.154481887817383.

Properties batch 8, size 1
Remaining timeout: 293.07874846458435
##### Instance 109 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4321587085723877.
Result: safe in 7.0249 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.83247542,   3.99019814,   2.23807526,   2.37381029,  -3.75053859,
          -5.98373842, -10.68738556,   9.06826782,   2.03657794,   2.53879952]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.39190257,  5.50861168,  2.27112532,  1.71739888, -3.53878164,
          -5.52665949, -8.90310574,  5.70017815,  2.21122360,  1.96619570],
         [-1.39190257,  5.50861168,  2.27112532,  1.71739888, -3.53878164,
          -5.52665949, -8.90310574,  5.70017815,  2.21122360,  1.96619570]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.09208059,  0.19156647,  3.42905283,  3.98277926,  9.23896027,
          11.22683716, 14.60328388,  3.48895454,  3.73398256]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7035 seconds.
PGD attack failed
torch allclose failed: norm 4.442945567006973e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -1.83247542,   3.99019814,   2.23807549,   2.37381124,  -3.75053859,
          -5.98373842, -10.68738556,   9.06826782,   2.03657866,   2.53879952]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [660]; unstable size 660; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 173, 1, 660] with unstable size 172 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 21, 1, 660] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [172]; unstable size 172; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 21, 1, 172] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.43156385, -3.12208128, -0.49171329,  0.08365726,  5.78236008,
          5.89087725,  9.81141090, -0.68996894, -1.38185084]], device='cuda:0') None
best_l after optimization: 24.293153762817383
alpha/beta optimization time: 4.58920955657959
initial alpha-crown bounds: tensor([[ 4.02567196, -2.10096073, -0.08274776,  0.34686220,  6.19609833,
          6.24253750, 10.38576126, -0.17940626, -0.54066235]], device='cuda:0')
Worst class: (+ rhs) -2.1009607315063477
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.635577917099
##### Instance 110 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.02567195892334.

Properties batch 1, size 1
Remaining timeout: 294.5067789554596
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.10096073]], device='cuda:0') need to verify.
Model prediction is: tensor([ -1.83247542,   3.99019814,   2.23807549,   2.37381124,  -3.75053859,
         -5.98373842, -10.68738556,   9.06826782,   2.03657866,   2.53879952],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.10096073]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 660
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 170
Node /27 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 848
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 10] 
split level 2: [/input.7, 722] 
split level 3: [/input.7, 582] 
split level 4: [/input.11, 11] 
split level 5: [/input.7, 272] 
split level 6: [/input.7, 133] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 128 = 0.90625
pruning-in-iteration extra time: 0.012534379959106445
Time: prepare 0.0146    bound 0.4299    transfer 0.0012    finalize 0.0091    func 0.4548    
Accumulated time: func 0.4548    prepare 0.0152    bound 0.4299    transfer 0.0012    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.94482 (7), -0.88273 (7), -0.61211 (7), -0.55420 (7), -0.45454 (7), -0.33430 (7), -0.24582 (7), -0.21569 (7), -0.21527 (7), -0.15376 (7), -0.15222 (7), -0.13807 (7), 
Length of domains: 12
Time: pickout 0.0006    decision 0.0415    set_bounds 0.0171    solve 0.4549    add 0.0017    
Accumulated time: pickout 0.0006    decision 0.0415    set_bounds 0.0171    solve 0.4549    add 0.0017    
Current (lb-rhs): -0.9448225498199463
12 domains visited
Cumulative time: 0.5235276222229004

BaB round 2
batch: 12
splitting decisions: 
split level 0: [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 70] 
split level 1: [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] [/input.7, 407] 
split level 2: [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] 
split level 3: [/input.11, 13] [/input.7, 132] [/input.7, 132] [/input.11, 13] [/input.7, 132] [/input.7, 132] [/input.3, 2231] [/input.7, 132] [/input.7, 132] [/input.3, 2231] 
pruning_in_iteration open status: True
ratio of positive domain = 182 / 192 = 0.9479166666666666
pruning-in-iteration extra time: 0.012679338455200195
Time: prepare 0.0283    bound 0.4374    transfer 0.0015    finalize 0.0143    func 0.4815    
Accumulated time: func 0.9364    prepare 0.0439    bound 0.8672    transfer 0.0027    finalize 0.0234    
Current worst splitting domains lb-rhs (depth):
-0.62645 (11), -0.58107 (11), -0.56931 (11), -0.51554 (11), -0.29425 (11), -0.24876 (11), -0.23722 (11), -0.17793 (11), -0.14629 (11), -0.04115 (11), 
Length of domains: 10
Time: pickout 0.0014    decision 0.0313    set_bounds 0.0217    solve 0.4817    add 0.0015    
Accumulated time: pickout 0.0020    decision 0.0727    set_bounds 0.0388    solve 0.9366    add 0.0032    
Current (lb-rhs): -0.6264466047286987
22 domains visited
Cumulative time: 1.0633060932159424

BaB round 3
batch: 10
splitting decisions: 
split level 0: [/input.7, 197] [/input.11, 30] [/input.7, 197] [/input.7, 197] [/input.7, 197] [/input.7, 197] [/input.7, 197] [/input.7, 197] [/input.11, 30] [/input.7, 197] 
split level 1: [/input.11, 48] [/input.7, 197] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.11, 48] [/input.7, 413] 
split level 2: [/input.11, 13] [/input.11, 48] [/input.11, 13] [/input.11, 13] [/input.7, 413] [/input.11, 13] [/input.11, 13] [/input.11, 13] [/input.11, 13] [/input.11, 13] 
split level 3: [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.11, 13] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.3, 2231] 
pruning_in_iteration open status: True
ratio of positive domain = 129 / 160 = 0.80625
pruning-in-iteration extra time: 0.013494491577148438
Time: prepare 0.0236    bound 0.4599    transfer 0.0013    finalize 0.0120    func 0.4969    
Accumulated time: func 1.4332    prepare 0.0679    bound 1.3271    transfer 0.0039    finalize 0.0355    
Current worst splitting domains lb-rhs (depth):
-0.31384 (15), -0.29471 (15), -0.27621 (15), -0.25878 (15), -0.24533 (15), -0.23824 (15), -0.22820 (15), -0.21109 (15), -0.20115 (15), -0.19583 (15), -0.19467 (15), -0.18374 (15), -0.16442 (15), -0.15148 (15), -0.14250 (15), -0.11245 (15), -0.11142 (15), -0.10732 (15), -0.08209 (15), -0.07584 (15), 
Length of domains: 31
Time: pickout 0.0015    decision 0.0289    set_bounds 0.0180    solve 0.4970    add 0.0020    
Accumulated time: pickout 0.0036    decision 0.1016    set_bounds 0.0567    solve 1.4336    add 0.0052    
Current (lb-rhs): -0.3138396739959717
53 domains visited
Cumulative time: 1.6123886108398438

BaB round 4
batch: 31
splitting decisions: 
split level 0: [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 30] 
split level 1: [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] [/input.7, 227] 
pruning_in_iteration open status: True
ratio of positive domain = 102 / 124 = 0.8225806451612903
pruning-in-iteration extra time: 0.012603759765625
Time: prepare 0.0181    bound 0.4301    transfer 0.0011    finalize 0.0089    func 0.4583    
Accumulated time: func 1.8916    prepare 0.0864    bound 1.7572    transfer 0.0050    finalize 0.0444    
Current worst splitting domains lb-rhs (depth):
-0.26277 (17), -0.24463 (17), -0.22535 (17), -0.19890 (17), -0.18665 (17), -0.17622 (17), -0.16637 (17), -0.15006 (17), -0.13507 (17), -0.12929 (17), -0.12761 (17), -0.12678 (17), -0.09123 (17), -0.08973 (17), -0.07199 (17), -0.03971 (17), -0.03791 (17), -0.03344 (17), -0.00865 (17), -0.00490 (17), 
Length of domains: 22
Time: pickout 0.0014    decision 0.0257    set_bounds 0.0103    solve 0.4585    add 0.0019    
Accumulated time: pickout 0.0050    decision 0.1273    set_bounds 0.0670    solve 1.8922    add 0.0071    
Current (lb-rhs): -0.2627749443054199
75 domains visited
Cumulative time: 2.1116726398468018

BaB round 5
batch: 22
splitting decisions: 
split level 0: [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 403] [/input.7, 402] 
split level 1: [/input.7, 723] [/input.7, 723] [/input.7, 723] [/input.11, 48] [/input.7, 723] [/input.7, 723] [/input.7, 723] [/input.7, 723] [/input.11, 48] [/input.7, 403] 
split level 2: [/input.7, 273] [/input.3, 2231] [/input.7, 273] [/input.7, 723] [/input.3, 2231] [/input.7, 273] [/input.3, 2231] [/input.7, 273] [/input.7, 723] [/input.7, 723] 
pruning_in_iteration open status: True
ratio of positive domain = 160 / 176 = 0.9090909090909091
pruning-in-iteration extra time: 0.013506412506103516
Time: prepare 0.0285    bound 0.4510    transfer 0.0014    finalize 0.0132    func 0.4941    
Accumulated time: func 2.3857    prepare 0.1152    bound 2.2082    transfer 0.0064    finalize 0.0576    
Current worst splitting domains lb-rhs (depth):
-0.16459 (20), -0.14692 (20), -0.13245 (20), -0.11463 (20), -0.11363 (20), -0.08577 (20), -0.08170 (20), -0.08154 (20), -0.06661 (20), -0.05705 (20), -0.05554 (20), -0.05322 (20), -0.03816 (20), -0.03708 (20), -0.03310 (20), -0.01819 (20), 
Length of domains: 16
Time: pickout 0.0015    decision 0.0266    set_bounds 0.0143    solve 0.4942    add 0.0017    
Accumulated time: pickout 0.0065    decision 0.1538    set_bounds 0.0813    solve 2.3864    add 0.0088    
Current (lb-rhs): -0.16459298133850098
91 domains visited
Cumulative time: 2.651923418045044

BaB round 6
batch: 16
splitting decisions: 
split level 0: [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] [/input.7, 402] 
split level 1: [/input.3, 2318] [/input.11, 50] [/input.11, 50] [/input.3, 2318] [/input.3, 2318] [/input.3, 2318] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] 
split level 2: [/input.11, 50] [/input.3, 2253] [/input.7, 273] [/input.11, 50] [/input.7, 273] [/input.11, 50] [/input.7, 273] [/input.3, 2253] [/input.3, 2321] [/input.7, 273] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 128 = 0.9609375
pruning-in-iteration extra time: 0.012380361557006836
Time: prepare 0.0248    bound 0.4406    transfer 0.0012    finalize 0.0108    func 0.4774    
Accumulated time: func 2.8631    prepare 0.1403    bound 2.6487    transfer 0.0076    finalize 0.0684    
Current worst splitting domains lb-rhs (depth):
-0.07871 (23), -0.06253 (23), -0.04591 (23), -0.02851 (23), -0.00148 (23), 
Length of domains: 5
Time: pickout 0.0016    decision 0.0250    set_bounds 0.0130    solve 0.4776    add 0.0013    
Accumulated time: pickout 0.0082    decision 0.1788    set_bounds 0.0944    solve 2.8640    add 0.0101    
Current (lb-rhs): -0.0787128210067749
96 domains visited
Cumulative time: 3.1725211143493652

BaB round 7
batch: 5
splitting decisions: 
split level 0: [/input.7, 242] [/input.7, 242] [/input.7, 242] [/input.7, 242] [/input.7, 242] 
split level 1: [/input.11, 8] [/input.11, 8] [/input.11, 84] [/input.11, 84] [/input.11, 50] 
split level 2: [/input.11, 84] [/input.11, 84] [/input.3, 2321] [/input.3, 2321] [/input.3, 2321] 
split level 3: [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] 
split level 4: [/input.3, 2231] [/input.3, 2231] [/input.3, 2231] [/input.3, 2231] [/input.3, 2231] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0312    bound 0.0078    transfer 0.0008    finalize 0.0116    func 0.0514    
Accumulated time: func 2.9145    prepare 0.1720    bound 2.6565    transfer 0.0084    finalize 0.0800    
Length of domains: 0
Time: pickout 0.0015    decision 0.0350    set_bounds 0.0235    solve 0.0514    add 0.0001    
Accumulated time: pickout 0.0097    decision 0.2139    set_bounds 0.1179    solve 2.9155    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
96 domains visited
Cumulative time: 3.2855191230773926


Properties batch 2, size 1
Remaining timeout: 291.06271171569824
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08274776]], device='cuda:0') need to verify.
Model prediction is: tensor([ -1.83247542,   3.99019814,   2.23807549,   2.37381124,  -3.75053859,
         -5.98373842, -10.68738556,   9.06826782,   2.03657866,   2.53879952],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08274776]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 660
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 170
Node /27 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 848
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.7, 722] 
split level 1: [/input.11, 48] 
split level 2: [/input.11, 17] 
split level 3: [/input.7, 597] 
split level 4: [/input.7, 272] 
split level 5: [/input.11, 25] 
split level 6: [/input.11, 96] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.869171142578125e-05
Time: prepare 0.0144    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0150    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0416    set_bounds 0.0170    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0416    set_bounds 0.0170    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0970618724822998


Properties batch 3, size 1
Remaining timeout: 290.80584716796875
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.34686219692230225.

Properties batch 4, size 1
Remaining timeout: 290.6961395740509
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.196098327636719.

Properties batch 5, size 1
Remaining timeout: 290.59086179733276
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.242537498474121.

Properties batch 6, size 1
Remaining timeout: 290.4864933490753
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.385761260986328.

Properties batch 7, size 1
Remaining timeout: 290.38184666633606
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17940626]], device='cuda:0') need to verify.
Model prediction is: tensor([ -1.83247542,   3.99019814,   2.23807549,   2.37381124,  -3.75053859,
         -5.98373842, -10.68738556,   9.06826782,   2.03657866,   2.53879952],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17940626]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 660
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 170
Node /27 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 848
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 11] 
split level 3: [/input.7, 722] 
split level 4: [/input.11, 17] 
split level 5: [/input.7, 597] 
split level 6: [/input.7, 272] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0006    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0078    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0417    set_bounds 0.0168    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0417    set_bounds 0.0168    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09700632095336914


Properties batch 8, size 1
Remaining timeout: 290.1419324874878
##### Instance 110 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.54066235]], device='cuda:0') need to verify.
Model prediction is: tensor([ -1.83247542,   3.99019814,   2.23807549,   2.37381124,  -3.75053859,
         -5.98373842, -10.68738556,   9.06826782,   2.03657866,   2.53879952],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.54066235]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 660
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 170
Node /27 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 848
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 48] 
split level 1: [/input.7, 642] 
split level 2: [/input.11, 11] 
split level 3: [/input.7, 132] 
split level 4: [/input.7, 722] 
split level 5: [/input.7, 262] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0073    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0006    decision 0.0416    set_bounds 0.0170    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0416    set_bounds 0.0170    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09697675704956055

Result: safe in 10.1037 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.44161129,  1.36538577, -1.38841236, 10.25549412, -3.68217969,
          2.82856035, -3.61478567, -1.81095386,  1.22505736, -1.79552698]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.42696428,  4.16090584, -1.16759038,  6.73198557, -2.33740687,
           1.97393727, -1.71402407, -1.96834445,  0.77464378, -3.16217256],
         [-3.42696428,  4.16090584, -1.16759038,  6.73198557, -2.33740687,
           1.97393727, -1.71402407, -1.96834445,  0.77464378, -3.16217256]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.15894985,  2.57107973,  7.89957619,  9.06939220,  4.75804806,
           8.44600964,  8.70032978,  5.95734167,  9.89415836]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7093 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.44161105,  1.36538577, -1.38841271, 10.25549412, -3.68217969,
          2.82856011, -3.61478567, -1.81095481,  1.22505701, -1.79552734]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [719]; unstable size 719; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 185, 1, 719] with unstable size 184 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 39, 1, 719] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 719] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [184]; unstable size 184; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 39, 1, 184] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.96744490, -2.82526350,  2.44193363,  1.39246941, -1.60760140,
          3.32465839,  2.17432117,  0.39339828,  3.03863049]], device='cuda:0') None
best_l after optimization: 23.48609161376953
alpha/beta optimization time: 4.498621940612793
initial alpha-crown bounds: tensor([[ 5.85661221, -1.48102713,  3.24545074,  3.31550074, -0.41065884,
          4.72573996,  3.06841612,  1.23073304,  3.93532538]], device='cuda:0')
Worst class: (+ rhs) -1.4810271263122559
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.72063302993774
##### Instance 111 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.856612205505371.

Properties batch 1, size 1
Remaining timeout: 294.6007146835327
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.48102713]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.44161105,  1.36538577, -1.38841271, 10.25549412, -3.68217969,
         2.82856011, -3.61478567, -1.81095481,  1.22505701, -1.79552734],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.48102713]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 182
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 938
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 52] 
split level 2: [/input.11, 30] 
split level 3: [/input.11, 65] 
split level 4: [/input.11, 37] 
split level 5: [/input.11, 45] 
split level 6: [/input.11, 8] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0076    bound 0.0080    transfer 0.0007    finalize 0.0060    func 0.0224    
Accumulated time: func 0.0224    prepare 0.0082    bound 0.0080    transfer 0.0007    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0168    solve 0.0225    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0168    solve 0.0225    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08842921257019043


Properties batch 2, size 1
Remaining timeout: 294.3675482273102
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.245450735092163.

Properties batch 3, size 1
Remaining timeout: 294.2497546672821
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3155007362365723.

Properties batch 4, size 1
Remaining timeout: 294.1447250843048
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41065884]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.44161105,  1.36538577, -1.38841271, 10.25549412, -3.68217969,
         2.82856011, -3.61478567, -1.81095481,  1.22505701, -1.79552734],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41065884]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 719
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 182
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 938
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 52] 
split level 1: [/input.11, 96] 
split level 2: [/input.11, 81] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 14] 
split level 5: [/input.11, 65] 
split level 6: [/input.11, 8] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.0108642578125e-05
Time: prepare 0.0077    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0223    
Accumulated time: func 0.0223    prepare 0.0083    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0158    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0158    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08719062805175781


Properties batch 5, size 1
Remaining timeout: 293.9137966632843
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.7257399559021.

Properties batch 6, size 1
Remaining timeout: 293.8039855957031
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.068416118621826.

Properties batch 7, size 1
Remaining timeout: 293.69895672798157
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.230733036994934.

Properties batch 8, size 1
Remaining timeout: 293.5941662788391
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9353253841400146.
Result: safe in 6.5107 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.71731114, -5.84523726, -1.16064978,  2.59652948,  1.54127967,
         -3.55753684, -8.52384949,  4.37435436,  1.58696079, 12.71725655]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.14825559, -4.21227264, -0.74043006,  2.64652824,  0.01694290,
          -2.93935442, -9.00200748,  6.58464861,  1.44241261,  9.29697037],
         [-3.14825559, -4.21227264, -0.74043006,  2.64652824,  0.01694290,
          -2.93935442, -9.00200748,  6.58464861,  1.44241261,  9.29697037]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.44522572, 13.50924301, 10.03740025,  6.65044212,  9.28002739,
          12.23632431, 18.29897690,  2.71232176,  7.85455799]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7061 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.71731114, -5.84523773, -1.16064906,  2.59653044,  1.54127979,
         -3.55753779, -8.52385044,  4.37435436,  1.58696103, 12.71725845]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 688] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 688] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 127] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.29368210,  2.97772455, -0.06270123, -0.84109926, -1.22404170,
          4.54248095,  7.78387928, -4.60115433, -0.42283499]], device='cuda:0') None
best_l after optimization: 19.969375610351562
alpha/beta optimization time: 4.513574123382568
initial alpha-crown bounds: tensor([[ 5.83625793,  3.83957434,  0.69580936, -0.21316600, -0.51201344,
          5.23833227,  8.40410423, -3.62893820,  0.30941606]], device='cuda:0')
Worst class: (+ rhs) -3.6289381980895996
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7123317718506
##### Instance 112 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.8362579345703125.

Properties batch 1, size 1
Remaining timeout: 294.596923828125
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8395743370056152.

Properties batch 2, size 1
Remaining timeout: 294.49208545684814
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6958093643188477.

Properties batch 3, size 1
Remaining timeout: 294.3877727985382
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21316600]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71731114, -5.84523773, -1.16064906,  2.59653044,  1.54127979,
        -3.55753779, -8.52385044,  4.37435436,  1.58696103, 12.71725845],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21316600]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 688
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 126
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 841
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 7] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 10] 
split level 4: [/input.11, 36] 
split level 5: [/input.11, 89] 
split level 6: [/input.7, 586] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0006    finalize 0.0075    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0006    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0170    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0170    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09707045555114746


Properties batch 4, size 1
Remaining timeout: 294.1472747325897
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.51201344]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71731114, -5.84523773, -1.16064906,  2.59653044,  1.54127979,
        -3.55753779, -8.52385044,  4.37435436,  1.58696103, 12.71725845],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.51201344]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 688
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 126
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 841
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 96] 
split level 1: [/input.11, 7] 
split level 2: [/input.7, 586] 
split level 3: [/input.11, 33] 
split level 4: [/input.11, 63] 
split level 5: [/input.7, 233] 
split level 6: [/input.11, 17] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.606910705566406e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0006    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09679079055786133


Properties batch 5, size 1
Remaining timeout: 293.90231251716614
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.238332271575928.

Properties batch 6, size 1
Remaining timeout: 293.7926559448242
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.404104232788086.

Properties batch 7, size 1
Remaining timeout: 293.687570810318
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.62893820]], device='cuda:0') need to verify.
torch allclose failed: norm 5.178019364393549e-07
Model prediction is: tensor([-3.71731114, -5.84523773, -1.16064906,  2.59653044,  1.54127979,
        -3.55753779, -8.52385044,  4.37435436,  1.58696103, 12.71725845],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.62893820]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 688
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 126
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 841
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013661384582519531
Time: prepare 0.0076    bound 0.4451    transfer 0.0012    finalize 0.0083    func 0.4623    
Accumulated time: func 0.4623    prepare 0.0082    bound 0.4451    transfer 0.0012    finalize 0.0083    
Current worst splitting domains lb-rhs (depth):
-0.82599 (7), -0.38792 (7), -0.27366 (7), -0.08007 (7), 
Length of domains: 4
Time: pickout 0.0006    decision 0.0415    set_bounds 0.0156    solve 0.4624    add 0.0013    
Accumulated time: pickout 0.0006    decision 0.0415    set_bounds 0.0156    solve 0.4624    add 0.0013    
Current (lb-rhs): -0.8259944915771484
4 domains visited
Cumulative time: 0.5288751125335693

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.11, 65] [/input.11, 17] [/input.11, 96] [/input.11, 96] 
split level 1: [/input.11, 17] [/input.11, 96] [/input.11, 17] [/input.7, 586] 
split level 2: [/input.7, 233] [/input.7, 586] [/input.7, 586] [/input.11, 17] 
split level 3: [/input.11, 96] [/input.7, 233] [/input.7, 632] [/input.7, 141] 
split level 4: [/input.7, 586] [/input.7, 141] [/input.7, 233] [/input.7, 632] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0176    bound 0.0077    transfer 0.0007    finalize 0.0079    func 0.0340    
Accumulated time: func 0.4963    prepare 0.0263    bound 0.4529    transfer 0.0019    finalize 0.0163    
Length of domains: 0
Time: pickout 0.0013    decision 0.0352    set_bounds 0.0146    solve 0.0340    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0766    set_bounds 0.0303    solve 0.4965    add 0.0014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.615004301071167


Properties batch 8, size 1
Remaining timeout: 292.9266002178192
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3094160556793213.
Result: safe in 7.1839 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.13820887, -2.22119451,  3.86212158,  4.68641376, -3.54592443,
         -3.81817842, -6.88324833, 10.66880608,  0.96628928,  1.35815573]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.82262945, -2.71073055,  4.08723354,  5.74670172, -4.66965771,
          -2.48568535, -6.72688437,  8.38739967,  1.82132924,  1.32332873],
         [-4.82262945, -2.71073055,  4.08723354,  5.74670172, -4.66965771,
          -2.48568535, -6.72688437,  8.38739967,  1.82132924,  1.32332873]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.21002960, 11.09813023,  4.30016613,  2.64069796, 13.05705738,
          10.87308502, 15.11428452,  6.56607056,  7.06407070]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7050 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.13820887, -2.22119403,  3.86212182,  4.68641281, -3.54592490,
         -3.81817913, -6.88324833, 10.66880798,  0.96628964,  1.35815537]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [712]; unstable size 712; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 187, 1, 712] with unstable size 186 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 27, 1, 712] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 712] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [186]; unstable size 186; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 27, 1, 186] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[9.24274063, 7.00121880, 0.76192987, 0.83705544, 7.45204926, 6.57083702,
         9.09655952, 2.52968025, 2.96704793]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.90176296, -2.24647307, -2.84080863, -2.50154138,  4.81896544,
         -1.86800635,  1.58821452, -1.23498309,  1.18259907,  5.83828115]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.90176272, -2.24647284, -2.84080887, -2.50154161,  4.81896544,
          -1.86800623,  1.58821487, -1.23498392,  1.18259871,  5.83828068],
         [-2.90176272, -2.24647284, -2.84080887, -2.50154161,  4.81896544,
          -1.86800623,  1.58821487, -1.23498392,  1.18259871,  5.83828068]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.72072792,  7.06543827,  7.65977430,  7.32050705,  6.68697166,
           3.23075056,  6.05394936,  3.63636684, -1.01931524]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0066 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.82269669,  1.37136877, -2.26887465, -1.07956398,  7.75001240,
         -3.90975523, -2.10834146,  0.61819416,  0.97415090,  3.46251941]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.40327883,  1.01804912, -2.54094243,  0.23882781,  4.80673552,
          -3.14496684, -2.57944107,  0.70190966,  1.01705551,  4.89471388],
         [-4.40327883,  1.01804912, -2.54094243,  0.23882781,  4.80673552,
          -3.14496684, -2.57944107,  0.70190966,  1.01705551,  4.89471388]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.21001434,  3.78868628,  7.34767818,  4.56790781,  7.95170212,
           7.38617659,  4.10482597,  3.78968000, -0.08797836]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0170 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.65422106, -3.56532454,  1.54384947, -0.46245730, 12.67684555,
         -4.31268072, -4.05433273,  1.45780325,  1.80951440,  0.38912737]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.82858992, -3.87077355,  1.43539762,  0.39724502, 10.39128971,
          -3.52632952, -3.59888124,  0.80397993,  4.57998753, -0.91625899],
         [-5.82858992, -3.87077355,  1.43539762,  0.39724502, 10.39128971,
          -3.52632952, -3.59888124,  0.80397993,  4.57998753, -0.91625899]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.21987915, 14.26206303,  8.95589256,  9.99404430, 13.91761971,
          13.99017143,  9.58730984,  5.81130219, 11.30754852]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7109 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.65422106, -3.56532407,  1.54384971, -0.46245718, 12.67684460,
         -4.31268167, -4.05433226,  1.45780373,  1.80951464,  0.38912690]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [768]; unstable size 768; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 132, 1, 768] with unstable size 131 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 768] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 768] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [131]; unstable size 131; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 131] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 131] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.17453098, 10.00641060,  2.04156113,  4.86078358,  7.06389332,
          7.73319626,  3.56876493,  0.90597606,  4.67989779]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7756 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.83722520, -3.76339698, -1.46449387, -0.55493122,  2.83131886,
         -2.75732946, -3.52116895,  2.63898468,  0.63189173,  7.64770508]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.76482534, -2.16277742, -1.39681351, -1.87880433,  5.92518234,
          -3.15768480, -2.15155625,  2.83501816,  0.09955277,  4.43999338],
         [-2.76482534, -2.16277742, -1.39681351, -1.87880433,  5.92518234,
          -3.15768480, -2.15155625,  2.83501816,  0.09955277,  4.43999338]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.20481873,  6.60277081,  5.83680677,  6.31879759, -1.48518896,
           7.59767818,  6.59154987,  1.60497522,  4.34044075]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0170 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0180 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.72623682, -1.44424188,  8.31125832,  0.08993005, -4.23827887,
         -6.17392445, -5.12574959,  2.65615129,  4.86876297, -0.90321410]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.11144473, -3.14048100,  5.91613913, -0.71748579, -3.34144330,
          -5.35232687, -3.02842593,  1.78561759,  6.36677790,  1.13074124],
         [ 0.11144473, -3.14048100,  5.91613913, -0.71748579, -3.34144330,
          -5.35232687, -3.02842593,  1.78561759,  6.36677790,  1.13074124]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.80469418,  9.05661964,  6.63362503,  9.25758266, 11.26846600,
           8.94456482,  4.13052177, -0.45063877,  4.78539801]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0162 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0172 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.67330647, -6.58398485, -6.86603022,  8.04180717, -9.04472637,
         19.27144623, -4.03396606, -5.28749943,  5.52324343,  7.43799353]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.26692772,  -5.45281839,  -5.06796026,  11.47183609, -10.00278950,
           15.92606735,  -5.81758451,  -4.27298641,   5.71809673,   5.64195538],
         [ -8.26692772,  -5.45281839,  -5.06796026,  11.47183609, -10.00278950,
           15.92606735,  -5.81758451,  -4.27298641,   5.71809673,   5.64195538]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[24.19299507, 21.37888527, 20.99402809,  4.45423126, 25.92885590,
          21.74365234, 20.19905472, 10.20797062, 10.28411198]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6961 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-8.67330742, -6.58398581, -6.86603117,  8.04180813, -9.04472637,
         19.27145004, -4.03396749, -5.28749990,  5.52324390,  7.43799400]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [682]; unstable size 682; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 90, 1, 682] with unstable size 89 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 682] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [89]; unstable size 89; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 89] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 89] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[14.87640095, 13.09567356, 11.12262917, -0.67418694, 15.68581200,
         12.89578056, 10.80862045,  2.81447983,  3.24583054]], device='cuda:0') None

all verified at 10th iter
best_l after optimization: 91.07176208496094
alpha/beta optimization time: 0.43865513801574707
initial alpha-crown bounds: tensor([[1.56263847e+01, 1.39488869e+01, 1.19553833e+01, 1.39229298e-02,
         1.64270535e+01, 1.36587963e+01, 1.16778011e+01, 3.59410763e+00,
         4.16942978e+00]], device='cuda:0')
Worst class: (+ rhs) 0.013922929763793945
verified with init bound!
Result: safe-incomplete in 1.2031 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.72015548, -2.81959629, -2.52669621, -4.03469658,  5.95573854,
         -4.40273666,  3.87003732, -0.68507701,  3.13743019,  1.90241897]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.59977072, -3.52019835, -1.42393303, -3.93351912,  2.69250536,
          -2.99039340,  5.91473627, -1.99320889,  4.73997164,  0.75558507],
         [-0.59977072, -3.52019835, -1.42393303, -3.93351912,  2.69250536,
          -2.99039340,  5.91473627, -1.99320889,  4.73997164,  0.75558507]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.29227614,  6.21270370,  4.11643839,  6.62602425,  5.68289852,
          -3.22223091,  4.68571424, -2.04746628,  1.93692029]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0162 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0172 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.80986738,  0.07194228,  0.55850685,  1.08786356, -1.89160001,
         -0.64431787, -6.75373554,  8.75901508, -2.01260352,  2.62592697]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.56857109,  0.02150751,  0.01421744,  0.79531831, -1.07837546,
          -1.35557222, -5.96276093,  6.62695265, -1.48332524,  4.01988697],
         [-1.56857109,  0.02150751,  0.01421744,  0.79531831, -1.07837546,
          -1.35557222, -5.96276093,  6.62695265, -1.48332524,  4.01988697]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.19552422,  6.60544491,  6.61273527,  5.83163452,  7.70532799,
           7.98252487, 12.58971405,  8.11027813,  2.60706568]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6922 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.80986726,  0.07194205,  0.55850685,  1.08786416, -1.89160001,
         -0.64431745, -6.75373554,  8.75901508, -2.01260400,  2.62592673]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [743]; unstable size 743; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 202, 1, 743] with unstable size 201 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 743] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [201]; unstable size 201; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 201] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 201] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.47131920,  1.28208399,  1.19723916,  0.66648269,  3.75709772,
          1.30574393,  6.04014492,  2.47823048, -1.18014407]], device='cuda:0') None

all verified at 8th iter
best_l after optimization: 26.07082176208496
alpha/beta optimization time: 0.3577549457550049
initial alpha-crown bounds: tensor([[4.03257751, 1.84726501, 1.69982684, 1.37702537, 4.68116808, 2.20946431,
         6.92963362, 3.28202248, 0.01183856]], device='cuda:0')
Worst class: (+ rhs) 0.011838555335998535
verified with init bound!
Result: safe-incomplete in 1.1183 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.47453836, -2.08772802, -2.27741671, -2.62200403,  0.65508389,
          2.37418056, 12.69235134, -6.57555962,  0.60621494, -2.69124508]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.26716661, -2.54411268, -2.85351133, -0.64307135, -1.78193128,
           5.00311232,  9.95447636, -6.18644667,  1.21784246, -1.25005782],
         [-1.26716661, -2.54411268, -2.85351133, -0.64307135, -1.78193128,
           5.00311232,  9.95447636, -6.18644667,  1.21784246, -1.25005782]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.22164345, 12.49858856, 12.80798721, 10.59754753, 11.73640728,
           4.95136404, 16.14092255,  8.73663425, 11.20453453]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7067 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.47453800, -2.08772826, -2.27741718, -2.62200499,  0.65508437,
          2.37418056, 12.69235325, -6.57556057,  0.60621452, -2.69124389]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [661]; unstable size 661; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 163, 1, 661] with unstable size 162 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 661] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [162]; unstable size 162; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 162] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.36318660,  0.56395054,  0.46937752,  0.30539322, -0.78322983,
         -3.16098356,  2.79414082, -1.50499678, -0.41085720]], device='cuda:0') None
best_l after optimization: 13.425758361816406
alpha/beta optimization time: 4.511775255203247
initial alpha-crown bounds: tensor([[ 3.28995657,  2.38042831,  1.82293129,  1.57053852,  0.87817550,
         -1.96538186,  4.52598810, -0.24275947,  1.16588163]], device='cuda:0')
Worst class: (+ rhs) -1.9653818607330322
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7147355079651
##### Instance 122 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.289956569671631.

Properties batch 1, size 1
Remaining timeout: 294.60009813308716
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3804283142089844.

Properties batch 2, size 1
Remaining timeout: 294.49623012542725
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8229312896728516.

Properties batch 3, size 1
Remaining timeout: 294.39275646209717
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5705385208129883.

Properties batch 4, size 1
Remaining timeout: 294.28920888900757
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8781754970550537.

Properties batch 5, size 1
Remaining timeout: 294.18584847450256
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.96538186]], device='cuda:0') need to verify.
torch allclose failed: norm 8.575615311201545e-07
Model prediction is: tensor([-0.47453800, -2.08772826, -2.27741718, -2.62200499,  0.65508437,
         2.37418056, 12.69235325, -6.57556057,  0.60621452, -2.69124389],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.96538186]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 661
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 854
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 92] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 86] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.0001392364501953125
Time: prepare 0.0076    bound 0.0078    transfer 0.0007    finalize 0.0059    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0082    bound 0.0078    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0007    decision 0.0413    set_bounds 0.0159    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0413    set_bounds 0.0159    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08685517311096191


Properties batch 6, size 1
Remaining timeout: 293.95425629615784
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.5259881019592285.

Properties batch 7, size 1
Remaining timeout: 293.84565114974976
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24275947]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.47453800, -2.08772826, -2.27741718, -2.62200499,  0.65508437,
         2.37418056, 12.69235325, -6.57556057,  0.60621452, -2.69124389],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24275947]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 661
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 854
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 5] 
split level 2: [/input.11, 95] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 84] 
split level 5: [/input.11, 30] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0007    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0081    bound 0.0077    transfer 0.0007    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0861365795135498


Properties batch 8, size 1
Remaining timeout: 293.61714267730713
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.165881633758545.
Result: safe in 6.4913 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.77423716, -2.19354868, -1.83219409, -0.38254237,  3.08731484,
         -1.05805230, -7.18158245, 10.83010578,  2.56930208,  1.87350643]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.02141619, -2.12208867, -1.12607241,  0.82221287,  2.75538659,
          -1.52999818, -6.32832670,  8.29462433,  5.16648769,  0.01746476],
         [-6.02141619, -2.12208867, -1.12607241,  0.82221287,  2.75538659,
          -1.52999818, -6.32832670,  8.29462433,  5.16648769,  0.01746476]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.31604004, 10.41671276,  9.42069626,  7.47241163,  5.53923798,
           9.82462215, 14.62295151,  3.12813663,  8.27715969]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7070 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.77423716, -2.19354844, -1.83219409, -0.38254213,  3.08731437,
         -1.05805206, -7.18158150, 10.83010674,  2.56930161,  1.87350631]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [720]; unstable size 720; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 179, 1, 720] with unstable size 178 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 20, 1, 720] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 720] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [178]; unstable size 178; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 20, 1, 178] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.69182205,  7.41726542,  6.27121544,  3.89510727,  1.32200122,
          3.59379077,  9.76931477,  0.08733055,  2.89938211]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7726 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.60391617, -2.96508694,  1.83899415,  0.67629212,  2.72722268,
         -3.41190124, -4.46708632, -0.05377438,  1.20065594,  7.14876795]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.62305951, -2.57329249,  3.71610546,  0.44164288,  2.76894355,
          -1.86409092, -2.64552402, -1.31282187,  1.45416284,  3.69505405],
         [-3.62305951, -2.57329249,  3.71610546,  0.44164288,  2.76894355,
          -1.86409092, -2.64552402, -1.31282187,  1.45416284,  3.69505405]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.31811333,  6.26834679, -0.02105141,  3.25341129,  0.92611051,
           5.55914497,  6.34057808,  5.00787592,  2.24089122]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0169 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0179 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[10.01740551, -2.61682987,  0.51381516,  0.26363593, -5.89863920,
          0.74281603,  0.08231571, -2.67021370, -3.99303102,  3.21180964]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.47it/s]100%|██████████| 1/1 [00:00<00:00,  1.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.89838266e+00, -2.86176038e+00, -2.75191456e-01,  8.95454645e-01,
          -5.90097713e+00,  1.61700380e+00,  5.68052754e-04, -3.46934795e+00,
          -2.94802690e+00,  4.74317360e+00],
         [ 7.89838266e+00, -2.86176038e+00, -2.75191456e-01,  8.95454645e-01,
          -5.90097713e+00,  1.61700380e+00,  5.68052754e-04, -3.46934795e+00,
          -2.94802690e+00,  4.74317360e+00]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.76014328,  8.17357445,  7.00292778, 13.79936028,  6.28137875,
           7.89781475, 11.36773109, 10.84640980,  3.15520906]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6902 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[10.01740646, -2.61682963,  0.51381493,  0.26363552, -5.89863920,
          0.74281579,  0.08231642, -2.67021370, -3.99303150,  3.21180940]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [681]; unstable size 681; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 111, 1, 681] with unstable size 110 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 27, 1, 681] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [110]; unstable size 110; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 27, 1, 110] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 110] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.04921150,  2.56141782,  2.31530261,  8.40900612,  0.97935700,
          3.99209738,  5.56849623,  4.94770575, -0.20171237]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 35.455108642578125
alpha/beta optimization time: 0.17216706275939941
initial alpha-crown bounds: tensor([[5.19477797, 2.69076705, 2.50908160, 8.63644791, 1.20005655, 4.20867443,
         5.70949936, 5.22475719, 0.08104897]], device='cuda:0')
Worst class: (+ rhs) 0.08104896545410156
verified with init bound!
Result: safe-incomplete in 0.9292 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.51365185, -5.58584023, -5.36496162,  1.56749761, -4.22293997,
         16.06532097, -0.76095802, -3.64272690,  4.71261215,  1.44009316]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.92992353, -6.76213360, -4.62638378,  1.75411606, -3.01774168,
          13.59281921, -0.69873106, -3.75211167,  6.83470249,  2.30815411],
         [-5.92992353, -6.76213360, -4.62638378,  1.75411606, -3.01774168,
          13.59281921, -0.69873106, -3.75211167,  6.83470249,  2.30815411]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[19.52274323, 20.35495377, 18.21920395, 11.83870316, 16.61056137,
          14.29155064, 17.34493065,  6.75811672, 11.28466511]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6984 seconds.
PGD attack failed
torch allclose failed: norm 5.96791039697564e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.51365185, -5.58584023, -5.36496162,  1.56749737, -4.22293997,
         16.06532097, -0.76095724, -3.64272690,  4.71261215,  1.44009364]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [720]; unstable size 720; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 720] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 720] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 720] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 127] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.61793137, 12.83158970, 11.74871445,  5.82212496, 11.22759438,
          9.28053284,  8.21274471,  2.89671183,  5.46641588]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7639 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.48575115, -4.71934080,  0.15302408,  2.94161177, -4.01878834,
          1.60682750, -7.36587429, -1.92888117, 16.55180550,  0.27413738]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.41it/s]100%|██████████| 1/1 [00:00<00:00,  1.41it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.16316438, -2.76770902,  1.86935914,  6.53512669, -5.92768955,
           0.56794959, -9.83644676, -0.18033215, 13.08933544, -1.15572047],
         [-2.16316438, -2.76770902,  1.86935914,  6.53512669, -5.92768955,
           0.56794959, -9.83644676, -0.18033215, 13.08933544, -1.15572047]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.25249958, 15.85704422, 11.21997643,  6.55420876, 19.01702499,
          12.52138615, 22.92578125, 13.26966763, 14.24505615]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7171 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.48575068, -4.71934032,  0.15302467,  2.94161248, -4.01878881,
          1.60682821, -7.36587381, -1.92888165, 16.55180550,  0.27413690]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [573]; unstable size 573; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 111, 1, 573] with unstable size 110 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 573] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [110]; unstable size 110; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 110] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 110] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.75299263,  8.75899506,  3.59432173,  1.78941655, 10.39134216,
          2.51097822, 14.21560955,  4.01481485,  4.84967375]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7803 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.63891220, -5.83453989, -4.37904596,  3.94087076, -5.79599524,
         14.18691254, -0.99600667, -4.27606440,  2.84995675,  3.77108216]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.15716600, -4.59691572, -3.08371592,  6.17710209, -6.28664637,
          11.78519726, -1.96728241, -3.83576846,  2.91270900,  2.93878388],
         [-4.15716600, -4.59691572, -3.08371592,  6.17710209, -6.28664637,
          11.78519726, -1.96728241, -3.83576846,  2.91270900,  2.93878388]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.94236374, 16.38211250, 14.86891365,  5.60809517, 18.07184410,
          13.75247955, 15.62096596,  8.87248802,  8.84641361]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7054 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.63891220, -5.83453989, -4.37904596,  3.94087148, -5.79599524,
         14.18691349, -0.99600661, -4.27606440,  2.84995651,  3.77108288]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [732]; unstable size 732; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 732] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 732] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 732] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 127] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 8.32235527,  9.55586243,  8.19445419,  1.59362698, 10.35042763,
          7.91995001,  8.01780319,  3.71259451,  3.00907874]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.30403420, -7.70812130, -2.44263935, -3.56144500, -0.09996273,
          3.01557207, 15.32199287, -7.96555424,  1.59445000,  0.89039218]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.09060967, -8.63537502, -3.00753641, -2.93495536, -1.21772921,
           3.20665097, 11.59676170, -6.81951427,  1.52621377,  4.61407280],
         [ 1.09060967, -8.63537502, -3.00753641, -2.93495536, -1.21772921,
           3.20665097, 11.59676170, -6.81951427,  1.52621377,  4.61407280]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.50615215, 20.23213577, 14.60429764, 14.53171730, 12.81449127,
           8.39011097, 18.41627502, 10.07054806,  6.98268890]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6929 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.30403456, -7.70812130, -2.44263887, -3.56144571, -0.09996273,
          3.01557183, 15.32199192, -7.96555376,  1.59444988,  0.89039218]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [611]; unstable size 611; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 104, 1, 611] with unstable size 103 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 611] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [103]; unstable size 103; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 103] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 103] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.06928825, 12.56768417,  6.79913998,  7.53903484,  4.28675652,
          2.23681736, 10.55481720,  3.30873394,  1.74024081]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7566 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  2.19696808, -10.43104362,  -1.45273256,  -3.70549059,  -2.68881631,
           5.47184038,  15.90360165, -10.17662430,   3.48972893,   0.67538536]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  2.20622087, -11.19436836,  -1.19407475,  -2.79082966,  -4.06649733,
            6.57533216,  12.31781769,  -8.53321457,   3.81911349,   2.20154834],
         [  2.20622087, -11.19436836,  -1.19407475,  -2.79082966,  -4.06649733,
            6.57533216,  12.31781769,  -8.53321457,   3.81911349,   2.20154834]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.11159706, 23.51218605, 13.51189232, 15.10864735, 16.38431549,
           5.74248552, 20.85103226,  8.49870396, 10.11626911]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7105 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  2.19696808, -10.43104362,  -1.45273161,  -3.70549059,  -2.68881702,
           5.47184086,  15.90360165, -10.17662430,   3.48972917,   0.67538631]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [623]; unstable size 623; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 119, 1, 623] with unstable size 118 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 623] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 623] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [118]; unstable size 118; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 118] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 118] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.36599731, 15.26834297,  5.25325632,  7.98384190,  8.51747131,
          0.85397232, 14.04860115,  1.72148156,  3.70817542]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7745 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.78203297,  -3.07865715,  -5.40779161,   7.37251616, -10.00739002,
          17.35953522,   1.57253540,  -8.94590187,   3.28414607,   3.24875951]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.96313906,  -2.25289321,  -3.97295356,   8.96618843, -10.46384811,
           14.47098255,   0.92860234,  -8.09571266,   4.48842287,   1.56373525],
         [ -5.96313906,  -2.25289321,  -3.97295356,   8.96618843, -10.46384811,
           14.47098255,   0.92860234,  -8.09571266,   4.48842287,   1.56373525]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[20.43412209, 16.72387505, 18.44393539,  5.50479412, 24.93482971,
          13.54238033, 22.56669617,  9.98255920, 12.90724754]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7067 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -5.78203344,  -3.07865691,  -5.40779257,   7.37251616, -10.00739002,
          17.35953331,   1.57253504,  -8.94590187,   3.28414583,   3.24875951]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [625]; unstable size 625; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 80, 1, 625] with unstable size 79 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 625] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 625] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [79]; unstable size 79; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 79] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 79] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[13.55368042, 10.24088764, 11.34644318,  1.50222206, 18.67046356,
          8.52297020, 16.06854630,  5.08951283,  8.34768867]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7753 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.28715348,  -3.99757195,   4.92808104,   7.26704311,  -4.72895718,
          -7.85157442, -11.18348598,  15.22212505,   1.83970928,   1.58856285]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.45769048,  -4.96211481,   5.24754238,   8.47188377,  -5.04958773,
           -7.58659458, -10.01034832,  11.54225445,   2.79751539,   1.87609482],
         [ -2.45769048,  -4.96211481,   5.24754238,   8.47188377,  -5.04958773,
           -7.58659458, -10.01034832,  11.54225445,   2.79751539,   1.87609482]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.99994469, 16.50436974,  6.29471207,  3.07037067, 16.59184265,
          19.12884903, 21.55260277,  8.74473953,  9.66615963]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7010 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -3.28715372,  -3.99757218,   4.92808199,   7.26704359,  -4.72895765,
          -7.85157537, -11.18348598,  15.22212410,   1.83971024,   1.58856249]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [719]; unstable size 719; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 114, 1, 719] with unstable size 113 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 719] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 719] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [113]; unstable size 113; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 113] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 113] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.42622566, 11.24662781,  0.50788915,  0.16948432, 11.16150188,
         12.61256218, 16.06400681,  3.66103697,  4.48608398]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7641 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.05504107, -1.63060439,  1.66138554,  2.50081635, -4.55388832,
         -0.06218000, -4.39953613, -2.74683452, 12.99100208, -0.68525040]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.05251026, -0.66768235,  2.53930950,  6.07825232, -5.82872009,
           0.26570779, -6.96760893, -1.61239922,  9.52183914, -1.22705841],
         [-2.05251026, -0.66768235,  2.53930950,  6.07825232, -5.82872009,
           0.26570779, -6.96760893, -1.61239922,  9.52183914, -1.22705841]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.57434940, 10.18952179,  6.98252964,  3.44358683, 15.35055923,
           9.25613117, 16.48944855, 11.13423824, 10.74889755]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6979 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.05504084, -1.63060474,  1.66138577,  2.50081587, -4.55388880,
         -0.06217952, -4.39953613, -2.74683475, 12.99100113, -0.68525016]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [635]; unstable size 635; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 179, 1, 635] with unstable size 178 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 635] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [178]; unstable size 178; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 178] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.17360067,  2.11898184, -0.18804693, -2.82137728,  5.99018669,
         -1.27443886,  7.19608593,  1.33786869,  2.06483078]], device='cuda:0') None
best_l after optimization: 27.270612716674805
alpha/beta optimization time: 4.442883253097534
initial alpha-crown bounds: tensor([[ 6.15028238,  2.83305836,  0.65611911, -1.94827580,  6.78175640,
         -0.44659805,  7.99000168,  2.29702473,  2.95724392]], device='cuda:0')
Worst class: (+ rhs) -1.9482758045196533
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.79366421699524
##### Instance 133 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.150282382965088.

Properties batch 1, size 1
Remaining timeout: 294.6805453300476
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.8330583572387695.

Properties batch 2, size 1
Remaining timeout: 294.57609152793884
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6561191082000732.

Properties batch 3, size 1
Remaining timeout: 294.4723927974701
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.94827580]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.05504084, -1.63060474,  1.66138577,  2.50081587, -4.55388880,
        -0.06217952, -4.39953613, -2.74683475, 12.99100113, -0.68525016],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.94827580]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 635
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 845
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 36] 
split level 2: [/input.11, 19] 
split level 3: [/input.7, 596] 
split level 4: [/input.11, 8] 
split level 5: [/input.7, 632] 
split level 6: [/input.7, 191] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013452529907226562
Time: prepare 0.0146    bound 0.4478    transfer 0.0015    finalize 0.0098    func 0.4738    
Accumulated time: func 0.4738    prepare 0.0152    bound 0.4478    transfer 0.0015    finalize 0.0098    
Current worst splitting domains lb-rhs (depth):
-0.06377 (7), -0.06122 (7), -0.02411 (7), -0.02158 (7), 
Length of domains: 4
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0171    solve 0.4739    add 0.0013    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0171    solve 0.4739    add 0.0013    
Current (lb-rhs): -0.06376814842224121
4 domains visited
Cumulative time: 0.5421826839447021

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.11, 47] [/input.11, 47] [/input.11, 47] [/input.11, 47] 
split level 1: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
split level 2: [/input.11, 59] [/input.11, 59] [/input.11, 59] [/input.11, 59] 
split level 3: [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.7, 266] 
split level 4: [/input.7, 721] [/input.7, 721] [/input.7, 721] [/input.7, 721] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0169    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0328    
Accumulated time: func 0.5066    prepare 0.0326    bound 0.4555    transfer 0.0022    finalize 0.0172    
Length of domains: 0
Time: pickout 0.0009    decision 0.0347    set_bounds 0.0162    solve 0.0329    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0762    set_bounds 0.0333    solve 0.5068    add 0.0014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.628218412399292


Properties batch 4, size 1
Remaining timeout: 293.68836760520935
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.781756401062012.

Properties batch 5, size 1
Remaining timeout: 293.57806754112244
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44659805]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.05504084, -1.63060474,  1.66138577,  2.50081587, -4.55388880,
        -0.06217952, -4.39953613, -2.74683475, 12.99100113, -0.68525016],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44659805]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 635
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 845
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 96] 
split level 3: [/input.11, 19] 
split level 4: [/input.7, 596] 
split level 5: [/input.11, 45] 
split level 6: [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0308    
Accumulated time: func 0.0308    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0418    set_bounds 0.0171    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0418    set_bounds 0.0171    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09756660461425781


Properties batch 6, size 1
Remaining timeout: 293.3362181186676
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.990001678466797.

Properties batch 7, size 1
Remaining timeout: 293.22624611854553
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.297024726867676.

Properties batch 8, size 1
Remaining timeout: 293.1206374168396
##### Instance 133 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9572439193725586.
Result: safe in 6.9841 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.88974762, 10.89502811, -1.50594008, -0.65145385, -2.25043225,
         -3.43878365,  0.34927866, -1.13108635,  3.31821084, -2.96653056]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.76294780,  8.64308453, -1.56276536,  0.46069664, -3.12707496,
          -2.59610081,  0.19596793, -1.35041237,  4.93465281, -2.07527709],
         [-3.76294780,  8.64308453, -1.56276536,  0.46069664, -3.12707496,
          -2.59610081,  0.19596793, -1.35041237,  4.93465281, -2.07527709]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.40603256, 10.20584965,  8.18238831, 11.77015972, 11.23918533,
           8.44711685,  9.99349689,  3.70843172, 10.71836185]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7160 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.88974762, 10.89502811, -1.50594020, -0.65145421, -2.25043249,
         -3.43878317,  0.34927860, -1.13108647,  3.31821108, -2.96653080]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [634]; unstable size 634; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 285, 1, 634] with unstable size 284 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 634] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 634] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [284]; unstable size 284; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 284] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 284] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.96014977, 5.63818502, 3.14079070, 7.44911957, 6.28177977, 4.03223658,
         4.84319162, 0.63246489, 5.49680424]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7869 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[10.34301758, -2.96318984,  1.78898382, -3.01854300, -3.16700363,
         -0.83263940, -0.02104066, -1.72057843, -0.32751480, -0.35609633]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.62110853, -2.53126526,  0.74006170, -2.07444406, -3.93333793,
           2.64827609, -0.61054039, -1.91784596, -0.37800524,  0.15143262],
         [ 7.62110853, -2.53126526,  0.74006170, -2.07444406, -3.93333793,
           2.64827609, -0.61054039, -1.91784596, -0.37800524,  0.15143262]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.15237427,  6.88104677,  9.69555283, 11.55444622,  4.97283268,
           8.23164940,  9.53895473,  7.99911356,  7.46967602]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7001 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[10.34301758, -2.96318936,  1.78898442, -3.01854300, -3.16700435,
         -0.83263928, -0.02104107, -1.72057772, -0.32751498, -0.35609591]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [662]; unstable size 662; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 166, 1, 662] with unstable size 165 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 662] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 662] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [165]; unstable size 165; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 165] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.68232584, -0.28020287,  2.05183887,  4.59755707, -1.81948805,
          2.15257144,  2.39774537, -0.18818688, -0.08922458]], device='cuda:0') None
best_l after optimization: 19.569202423095703
alpha/beta optimization time: 4.589467763900757
initial alpha-crown bounds: tensor([[ 4.36291456,  0.56083584,  2.91703129,  5.25244045, -0.94666767,
          2.94329667,  3.14248872,  0.57351756,  0.76334405]], device='cuda:0')
Worst class: (+ rhs) -0.9466676712036133
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.64293670654297
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.362914562225342.

Properties batch 1, size 1
Remaining timeout: 294.5299484729767
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5608358383178711.

Properties batch 2, size 1
Remaining timeout: 294.42463994026184
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9170312881469727.

Properties batch 3, size 1
Remaining timeout: 294.32005739212036
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.252440452575684.

Properties batch 4, size 1
Remaining timeout: 294.2154657840729
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.94666767]], device='cuda:0') need to verify.
Model prediction is: tensor([10.34301758, -2.96318936,  1.78898442, -3.01854300, -3.16700435,
        -0.83263928, -0.02104107, -1.72057772, -0.32751498, -0.35609591],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.94666767]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 662
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 164
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 860
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 92] 
split level 5: [/input.7, 641] 
split level 6: [/input.11, 86] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0147    bound 0.0080    transfer 0.0007    finalize 0.0075    func 0.0311    
Accumulated time: func 0.0311    prepare 0.0153    bound 0.0080    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0410    set_bounds 0.0170    solve 0.0311    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0410    set_bounds 0.0170    solve 0.0311    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09691715240478516


Properties batch 5, size 1
Remaining timeout: 293.9608747959137
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9432966709136963.

Properties batch 6, size 1
Remaining timeout: 293.8523283004761
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.142488718032837.

Properties batch 7, size 1
Remaining timeout: 293.7482044696808
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5735175609588623.

Properties batch 8, size 1
Remaining timeout: 293.644722700119
##### Instance 135 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7633440494537354.
Result: safe in 6.4588 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.78201473, 10.65494442,  0.53638482, -2.65207338, -0.71132958,
         -2.27725744, -1.93936098, -0.86777925,  2.43630195, -4.50808144]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.04971516,  8.47959995,  0.14805853, -1.40819669, -1.71119034,
          -0.90744817, -2.28108668, -2.27524090,  4.01569891, -3.10492396],
         [-1.04971516,  8.47959995,  0.14805853, -1.40819669, -1.71119034,
          -0.90744817, -2.28108668, -2.27524090,  4.01569891, -3.10492396]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.52931499,  8.33154106,  9.88779640, 10.19079018,  9.38704777,
          10.76068687, 10.75484085,  4.46390104, 11.58452415]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7101 seconds.
PGD attack failed
torch allclose failed: norm 6.617189569624315e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.78201479, 10.65494442,  0.53638446, -2.65207338, -0.71132910,
         -2.27725673, -1.93936026, -0.86778015,  2.43630171, -4.50808239]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [699]; unstable size 699; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 203, 1, 699] with unstable size 202 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 19, 1, 699] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 699] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [202]; unstable size 202; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 19, 1, 202] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.17793036, 4.33670521, 5.73178577, 5.43673134, 4.56425524, 5.54872608,
         5.28951883, 1.58704877, 6.43167782]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.82562089, -2.45035481, -2.30769563, -3.20990324,  1.95412540,
          0.10957222, 14.41482258, -6.63768387,  0.14730862, -5.33750916]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 4.25107431, -2.61813331, -1.69649935, -2.03855753,  1.48866761,
          -0.41563895, 10.94991970, -5.17471552, -0.57749480, -4.60753870],
         [ 4.25107431, -2.61813331, -1.69649935, -2.03855753,  1.48866761,
          -0.41563895, 10.94991970, -5.17471552, -0.57749480, -4.60753870]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.69884539, 13.56805325, 12.64641953, 12.98847771,  9.46125221,
          11.36555862, 16.12463570, 11.52741432, 15.55745888]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6931 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.82562089, -2.45035553, -2.30769491, -3.20990300,  1.95412481,
          0.10957240, 14.41482449, -6.63768482,  0.14730880, -5.33751011]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [627]; unstable size 627; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 152, 1, 627] with unstable size 151 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 627] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 627] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [151]; unstable size 151; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 151] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.38689351, 5.74122477, 3.57028008, 3.98900080, 2.01004171, 1.97990990,
         6.69445753, 2.77819777, 6.62980175]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7608 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.12683678, -3.19906425, -1.89148462, -0.94542980,  7.61593866,
         -4.98912144, -1.07666016,  1.83703327,  2.69962645,  2.79643893]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.34315681, -3.44604921, -1.61873293,  0.40901899,  4.81597042,
          -5.13284826, -3.02545977,  5.11209583,  3.58290339,  3.39425230],
         [-4.34315681, -3.44604921, -1.61873293,  0.40901899,  4.81597042,
          -5.13284826, -3.02545977,  5.11209583,  3.58290339,  3.39425230]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.15912724,  8.26202011,  6.43470335,  4.40695143,  9.94881821,
           7.84143019, -0.29612541,  1.23306704,  1.42171812]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0168 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0178 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.94106293, -1.04879355, -0.60034871, -2.80569839,  0.36837336,
          0.97782177,  7.44412565, -3.89999747,  1.21458471, -3.95022202]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.24443483,  0.87211746,  0.11501488, -1.75068307, -1.49234414,
           1.06477129,  4.46134043, -2.59701729, -0.09548817, -4.16222191],
         [ 3.24443483,  0.87211746,  0.11501488, -1.75068307, -1.49234414,
           1.06477129,  4.46134043, -2.59701729, -0.09548817, -4.16222191]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[1.21690559, 3.58922291, 4.34632540, 6.21202374, 5.95368481,
          3.39656925, 7.05835772, 4.55682850, 8.62356186]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6960 seconds.
PGD attack failed
torch allclose failed: norm 1.037103743328771e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
          0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [712]; unstable size 712; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 256, 1, 712] with unstable size 255 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 45, 1, 712] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 712] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [255]; unstable size 255; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 45, 1, 255] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.03170776, -4.65135622, -3.73082113, -3.83243465, -3.64011598,
         -4.55762815, -1.53915024, -4.15685558, -1.98199177]], device='cuda:0') None
best_l after optimization: -19.74260902404785
alpha/beta optimization time: 4.466663599014282
initial alpha-crown bounds: tensor([[-2.03152704, -3.30262947, -2.94534755, -2.19352984, -2.18100715,
         -3.31922746, -0.22465324, -3.09511328, -0.44957352]], device='cuda:0')
Worst class: (+ rhs) -3.319227457046509
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.765145778656
##### Instance 139 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.03152704]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.03152704]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 89] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 27] 
split level 4: [/input.11, 59] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 8] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.013478755950927734
Time: prepare 0.0076    bound 0.4450    transfer 0.0013    finalize 0.0091    func 0.4629    
Accumulated time: func 0.4629    prepare 0.0082    bound 0.4450    transfer 0.0013    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.71506 (7), -0.55327 (7), -0.49179 (7), -0.48410 (7), -0.45910 (7), -0.34907 (7), -0.31984 (7), -0.31943 (7), -0.31764 (7), -0.31744 (7), -0.30907 (7), -0.30542 (7), -0.14813 (7), -0.10738 (7), -0.08966 (7), -0.01312 (7), 
Length of domains: 16
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0158    solve 0.4630    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0158    solve 0.4630    add 0.0018    
Current (lb-rhs): -0.715064525604248
16 domains visited
Cumulative time: 0.5298373699188232

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.7, 118] [/input.7, 632] [/input.7, 707] [/input.7, 707] [/input.7, 118] [/input.7, 632] [/input.7, 118] [/input.7, 632] [/input.7, 707] [/input.7, 243] 
split level 1: [/input.7, 632] [/input.7, 113] [/input.7, 118] [/input.7, 632] [/input.7, 632] [/input.7, 118] [/input.7, 632] [/input.7, 118] [/input.7, 238] [/input.7, 118] 
split level 2: [/input.7, 597] [/input.7, 597] [/input.7, 632] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 118] [/input.7, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 109 / 128 = 0.8515625
pruning-in-iteration extra time: 0.013193368911743164
Time: prepare 0.0167    bound 0.4276    transfer 0.0011    finalize 0.0089    func 0.4544    
Accumulated time: func 0.9173    prepare 0.0252    bound 0.8726    transfer 0.0023    finalize 0.0180    
Current worst splitting domains lb-rhs (depth):
-0.35152 (10), -0.34723 (10), -0.33330 (10), -0.32776 (10), -0.26418 (10), -0.23572 (10), -0.21800 (10), -0.13639 (10), -0.11359 (10), -0.06411 (10), -0.04908 (10), -0.04305 (10), -0.03105 (10), -0.01592 (10), -0.01518 (10), -0.01314 (10), -0.01278 (10), -0.00340 (10), -0.00127 (10), 
Length of domains: 19
Time: pickout 0.0013    decision 0.0254    set_bounds 0.0080    solve 0.4546    add 0.0019    
Accumulated time: pickout 0.0020    decision 0.0666    set_bounds 0.0238    solve 0.9177    add 0.0037    
Current (lb-rhs): -0.35152387619018555
35 domains visited
Cumulative time: 1.0222837924957275

BaB round 3
batch: 19
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 177] [/input.7, 238] [/input.7, 177] [/input.7, 707] [/input.7, 707] [/input.7, 177] [/input.7, 238] 
split level 1: [/input.11, 97] [/input.7, 177] [/input.7, 113] [/input.7, 238] [/input.7, 143] [/input.7, 143] [/input.11, 97] [/input.7, 113] [/input.7, 238] [/input.7, 118] 
split level 2: [/input.7, 113] [/input.7, 243] [/input.11, 97] [/input.7, 597] [/input.7, 113] [/input.7, 113] [/input.7, 113] [/input.11, 97] [/input.7, 597] [/input.7, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 142 / 152 = 0.9342105263157895
pruning-in-iteration extra time: 0.013356685638427734
Time: prepare 0.0208    bound 0.4457    transfer 0.0014    finalize 0.0115    func 0.4796    
Accumulated time: func 1.3969    prepare 0.0464    bound 1.3183    transfer 0.0037    finalize 0.0295    
Current worst splitting domains lb-rhs (depth):
-0.20836 (13), -0.20118 (13), -0.14862 (13), -0.14074 (13), -0.13797 (13), -0.13050 (13), -0.11927 (13), -0.11264 (13), -0.05205 (13), -0.02688 (13), 
Length of domains: 10
Time: pickout 0.0014    decision 0.0257    set_bounds 0.0129    solve 0.4797    add 0.0016    
Accumulated time: pickout 0.0033    decision 0.0923    set_bounds 0.0367    solve 1.3973    add 0.0053    
Current (lb-rhs): -0.20836329460144043
45 domains visited
Cumulative time: 1.5452420711517334

BaB round 4
batch: 10
splitting decisions: 
split level 0: [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.11, 99] [/input.7, 243] [/input.7, 243] 
split level 1: [/input.7, 303] [/input.7, 113] [/input.7, 303] [/input.7, 303] [/input.7, 303] [/input.7, 113] [/input.7, 303] [/input.7, 303] [/input.7, 632] [/input.7, 632] 
split level 2: [/input.7, 113] [/input.7, 303] [/input.7, 113] [/input.7, 113] [/input.7, 113] [/input.7, 303] [/input.7, 113] [/input.7, 113] [/input.7, 303] [/input.7, 303] 
split level 3: [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 8.702278137207031e-05
Time: prepare 0.0220    bound 0.0077    transfer 0.0007    finalize 0.0097    func 0.0401    
Accumulated time: func 1.4370    prepare 0.0687    bound 1.3260    transfer 0.0045    finalize 0.0392    
Length of domains: 0
Time: pickout 0.0013    decision 0.0303    set_bounds 0.0181    solve 0.0403    add 0.0001    
Accumulated time: pickout 0.0046    decision 0.1226    set_bounds 0.0548    solve 1.4376    add 0.0054    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
45 domains visited
Cumulative time: 1.6363286972045898


Properties batch 1, size 1
Remaining timeout: 292.95541882514954
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.30262947]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.30262947]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 45] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 52] 
split level 4: [/input.11, 27] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 128 = 0.9375
pruning-in-iteration extra time: 0.014049291610717773
Time: prepare 0.0076    bound 0.4478    transfer 0.0012    finalize 0.0077    func 0.4643    
Accumulated time: func 0.4643    prepare 0.0082    bound 0.4478    transfer 0.0012    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-1.52497 (7), -1.14648 (7), -1.08961 (7), -1.06617 (7), -0.50890 (7), -0.28200 (7), -0.20444 (7), -0.04991 (7), 
Length of domains: 8
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.4644    add 0.0015    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.4644    add 0.0015    
Current (lb-rhs): -1.5249743461608887
8 domains visited
Cumulative time: 0.5307929515838623

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 37] [/input.11, 63] 
split level 1: [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.11, 37] [/input.11, 30] [/input.11, 30] [/input.11, 36] [/input.11, 37] 
split level 2: [/input.11, 36] [/input.11, 37] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 30] [/input.11, 36] 
split level 3: [/input.11, 37] [/input.11, 36] [/input.11, 37] [/input.11, 30] [/input.11, 37] [/input.11, 37] [/input.7, 238] [/input.11, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 115 / 128 = 0.8984375
pruning-in-iteration extra time: 0.012947320938110352
Time: prepare 0.0109    bound 0.4438    transfer 0.0013    finalize 0.0079    func 0.4640    
Accumulated time: func 0.9283    prepare 0.0195    bound 0.8916    transfer 0.0025    finalize 0.0156    
Current worst splitting domains lb-rhs (depth):
-0.52979 (11), -0.45131 (11), -0.35828 (11), -0.35470 (11), -0.22511 (11), -0.15481 (11), -0.14680 (11), -0.14139 (11), -0.12361 (11), -0.10480 (11), -0.10466 (11), -0.01940 (11), -0.01899 (11), 
Length of domains: 13
Time: pickout 0.0013    decision 0.0297    set_bounds 0.0119    solve 0.4641    add 0.0017    
Accumulated time: pickout 0.0019    decision 0.0708    set_bounds 0.0276    solve 0.9285    add 0.0032    
Current (lb-rhs): -0.5297880172729492
21 domains visited
Cumulative time: 1.0407352447509766

BaB round 3
batch: 13
splitting decisions: 
split level 0: [/input.11, 8] [/input.11, 58] [/input.11, 8] [/input.11, 8] [/input.11, 95] [/input.11, 58] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] 
split level 1: [/input.11, 95] [/input.11, 8] [/input.11, 95] [/input.11, 95] [/input.11, 8] [/input.11, 95] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] 
split level 2: [/input.7, 632] [/input.11, 95] [/input.7, 632] [/input.7, 117] [/input.7, 632] [/input.11, 8] [/input.7, 323] [/input.7, 117] [/input.7, 323] [/input.7, 323] 

all verified at 9th iter
pruning_in_iteration open status: True
ratio of positive domain = 104 / 104 = 1.0
pruning-in-iteration extra time: 0.005415916442871094
Time: prepare 0.0135    bound 0.1883    transfer 0.0011    finalize 0.0076    func 0.2106    
Accumulated time: func 1.1389    prepare 0.0334    bound 1.0800    transfer 0.0035    finalize 0.0232    
Length of domains: 0
Time: pickout 0.0014    decision 0.0246    set_bounds 0.0089    solve 0.2107    add 0.0001    
Accumulated time: pickout 0.0033    decision 0.0955    set_bounds 0.0365    solve 1.1392    add 0.0033    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
21 domains visited
Cumulative time: 1.2874469757080078


Properties batch 2, size 1
Remaining timeout: 291.51605010032654
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.94534755]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.94534755]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 45] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 33] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 1] 
pruning_in_iteration open status: True
ratio of positive domain = 119 / 128 = 0.9296875
pruning-in-iteration extra time: 0.013399839401245117
Time: prepare 0.0076    bound 0.4398    transfer 0.0011    finalize 0.0076    func 0.4562    
Accumulated time: func 0.4562    prepare 0.0082    bound 0.4398    transfer 0.0011    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-0.83036 (7), -0.75462 (7), -0.67700 (7), -0.64055 (7), -0.47111 (7), -0.26309 (7), -0.24017 (7), -0.23680 (7), -0.19795 (7), 
Length of domains: 9
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.4563    add 0.0015    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0157    solve 0.4563    add 0.0015    
Current (lb-rhs): -0.8303592205047607
9 domains visited
Cumulative time: 0.5229599475860596

BaB round 2
batch: 9
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 143] [/input.7, 707] [/input.7, 707] 
split level 1: [/input.11, 58] [/input.11, 58] [/input.7, 143] [/input.7, 143] [/input.11, 58] [/input.11, 58] [/input.7, 707] [/input.11, 58] [/input.11, 58] 
split level 2: [/input.7, 143] [/input.11, 14] [/input.11, 58] [/input.11, 58] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 636] [/input.7, 636] 
split level 3: [/input.11, 14] [/input.7, 636] [/input.11, 14] [/input.11, 14] [/input.7, 632] [/input.7, 636] [/input.7, 632] [/input.11, 14] [/input.11, 14] 
pruning_in_iteration open status: True
ratio of positive domain = 142 / 144 = 0.9861111111111112
pruning-in-iteration extra time: 0.013795137405395508
Time: prepare 0.0198    bound 0.4444    transfer 0.0012    finalize 0.0104    func 0.4759    
Accumulated time: func 0.9321    prepare 0.0285    bound 0.8842    transfer 0.0023    finalize 0.0180    
Current worst splitting domains lb-rhs (depth):
-0.12762 (11), -0.06698 (11), 
Length of domains: 2
Time: pickout 0.0013    decision 0.0300    set_bounds 0.0142    solve 0.4761    add 0.0012    
Accumulated time: pickout 0.0019    decision 0.0712    set_bounds 0.0298    solve 0.9324    add 0.0026    
Current (lb-rhs): -0.12761592864990234
11 domains visited
Cumulative time: 1.0475764274597168

BaB round 3
batch: 2
splitting decisions: 
split level 0: [/input.7, 143] [/input.7, 143] 
split level 1: [/input.7, 238] [/input.7, 238] 
split level 2: [/input.11, 51] [/input.11, 51] 
split level 3: [/input.7, 177] [/input.7, 177] 
split level 4: [/input.11, 36] [/input.11, 36] 
split level 5: [/input.7, 632] [/input.7, 632] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0168    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0329    
Accumulated time: func 0.9650    prepare 0.0459    bound 0.8918    transfer 0.0030    finalize 0.0254    
Length of domains: 0
Time: pickout 0.0014    decision 0.0390    set_bounds 0.0180    solve 0.0330    add 0.0001    
Accumulated time: pickout 0.0033    decision 0.1102    set_bounds 0.0478    solve 0.9654    add 0.0027    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
11 domains visited
Cumulative time: 1.1399335861206055


Properties batch 3, size 1
Remaining timeout: 290.2241098880768
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.19352984]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.19352984]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 80] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 1] 
split level 5: [/input.11, 59] 
split level 6: [/input.7, 642] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 9.274482727050781e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0172    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0172    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0970301628112793


Properties batch 4, size 1
Remaining timeout: 289.9756760597229
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.18100715]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.18100715]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 63] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 84] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013792276382446289
Time: prepare 0.0076    bound 0.4458    transfer 0.0012    finalize 0.0077    func 0.4624    
Accumulated time: func 0.4624    prepare 0.0082    bound 0.4458    transfer 0.0012    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.38452 (7), -0.27515 (7), -0.11213 (7), -0.10801 (7), 
Length of domains: 4
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0157    solve 0.4625    add 0.0014    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0157    solve 0.4625    add 0.0014    
Current (lb-rhs): -0.3845186233520508
4 domains visited
Cumulative time: 0.5293080806732178

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.11, 37] [/input.11, 37] [/input.11, 37] [/input.11, 37] 
split level 1: [/input.11, 33] [/input.11, 33] [/input.11, 33] [/input.11, 33] 
split level 2: [/input.7, 642] [/input.7, 118] [/input.7, 642] [/input.7, 642] 
split level 3: [/input.7, 118] [/input.7, 238] [/input.7, 238] [/input.11, 30] 
split level 4: [/input.11, 30] [/input.11, 30] [/input.11, 30] [/input.7, 238] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0170    bound 0.0077    transfer 0.0007    finalize 0.0076    func 0.0329    
Accumulated time: func 0.4953    prepare 0.0256    bound 0.4535    transfer 0.0019    finalize 0.0153    
Length of domains: 0
Time: pickout 0.0011    decision 0.0349    set_bounds 0.0145    solve 0.0330    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0759    set_bounds 0.0303    solve 0.4955    add 0.0015    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.6138453483581543


Properties batch 5, size 1
Remaining timeout: 289.21146035194397
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.31922746]], device='cuda:0') need to verify.
torch allclose failed: norm 5.066394805908203e-07
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.31922746]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 52] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 95 / 128 = 0.7421875
pruning-in-iteration extra time: 0.013664960861206055
Time: prepare 0.0076    bound 0.4293    transfer 0.0012    finalize 0.0081    func 0.4462    
Accumulated time: func 0.4462    prepare 0.0082    bound 0.4293    transfer 0.0012    finalize 0.0081    
Current worst splitting domains lb-rhs (depth):
-0.94324 (7), -0.73312 (7), -0.68394 (7), -0.68280 (7), -0.62990 (7), -0.59248 (7), -0.54414 (7), -0.47767 (7), -0.47065 (7), -0.44431 (7), -0.42581 (7), -0.41466 (7), -0.39574 (7), -0.38137 (7), -0.37439 (7), -0.35287 (7), -0.34949 (7), -0.30474 (7), -0.28534 (7), -0.27511 (7), 
Length of domains: 33
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.4463    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.4463    add 0.0022    
Current (lb-rhs): -0.9432401657104492
33 domains visited
Cumulative time: 0.5131511688232422

BaB round 2
batch: 33
splitting decisions: 
split level 0: [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] [/input.11, 89] 
split level 1: [/input.7, 642] [/input.7, 642] [/input.7, 642] [/input.7, 642] [/input.7, 707] [/input.7, 642] [/input.11, 86] [/input.7, 642] [/input.11, 86] [/input.7, 642] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 132 = 0.8863636363636364
pruning-in-iteration extra time: 0.013559818267822266
Time: prepare 0.0182    bound 0.4472    transfer 0.0011    finalize 0.0099    func 0.4764    
Accumulated time: func 0.9227    prepare 0.0267    bound 0.8765    transfer 0.0023    finalize 0.0180    
Current worst splitting domains lb-rhs (depth):
-0.52749 (9), -0.46423 (9), -0.44892 (9), -0.31840 (9), -0.26361 (9), -0.21104 (9), -0.18879 (9), -0.18746 (9), -0.15432 (9), -0.12069 (9), -0.11965 (9), -0.10502 (9), -0.08104 (9), -0.06563 (9), -0.05585 (9), 
Length of domains: 15
Time: pickout 0.0012    decision 0.0272    set_bounds 0.0082    solve 0.4765    add 0.0017    
Accumulated time: pickout 0.0018    decision 0.0682    set_bounds 0.0240    solve 0.9229    add 0.0038    
Current (lb-rhs): -0.5274853706359863
48 domains visited
Cumulative time: 1.0295722484588623

BaB round 3
batch: 15
splitting decisions: 
split level 0: [/input.11, 86] [/input.11, 63] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 89] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 86] 
split level 1: [/input.7, 642] [/input.11, 14] [/input.7, 123] [/input.7, 123] [/input.7, 707] [/input.7, 597] [/input.7, 597] [/input.7, 123] [/input.7, 642] [/input.7, 123] 
split level 2: [/input.7, 597] [/input.7, 642] [/input.7, 597] [/input.7, 423] [/input.7, 597] [/input.7, 118] [/input.7, 632] [/input.7, 597] [/input.7, 597] [/input.7, 597] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 120 = 0.975
pruning-in-iteration extra time: 0.013522624969482422
Time: prepare 0.0170    bound 0.4459    transfer 0.0011    finalize 0.0088    func 0.4730    
Accumulated time: func 1.3956    prepare 0.0441    bound 1.3223    transfer 0.0034    finalize 0.0267    
Current worst splitting domains lb-rhs (depth):
-0.15870 (12), -0.07724 (12), -0.06732 (12), 
Length of domains: 3
Time: pickout 0.0013    decision 0.0248    set_bounds 0.0117    solve 0.4731    add 0.0012    
Accumulated time: pickout 0.0031    decision 0.0930    set_bounds 0.0357    solve 1.3959    add 0.0051    
Current (lb-rhs): -0.15869712829589844
51 domains visited
Cumulative time: 1.5432958602905273

BaB round 4
batch: 3
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.7, 707] 
split level 1: [/input.7, 707] [/input.7, 707] [/input.11, 63] 
split level 2: [/input.11, 14] [/input.11, 14] [/input.11, 14] 
split level 3: [/input.7, 632] [/input.7, 632] [/input.7, 632] 
split level 4: [/input.7, 267] [/input.7, 267] [/input.7, 267] 
split level 5: [/input.7, 636] [/input.7, 636] [/input.7, 636] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0260    bound 0.0079    transfer 0.0009    finalize 0.0112    func 0.0460    
Accumulated time: func 1.4417    prepare 0.0707    bound 1.3303    transfer 0.0043    finalize 0.0379    
Length of domains: 0
Time: pickout 0.0013    decision 0.0398    set_bounds 0.0265    solve 0.0461    add 0.0001    
Accumulated time: pickout 0.0044    decision 0.1328    set_bounds 0.0622    solve 1.4420    add 0.0051    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
51 domains visited
Cumulative time: 1.658416986465454


Properties batch 6, size 1
Remaining timeout: 287.4025676250458
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22465324]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22465324]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 89] 
split level 3: [/input.11, 1] 
split level 4: [/input.11, 14] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0158    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0158    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0867311954498291


Properties batch 7, size 1
Remaining timeout: 287.15899181365967
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.09511328]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.09511328]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 32] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 97] 
split level 5: [/input.11, 95] 
split level 6: [/input.11, 30] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 128 = 0.9140625
pruning-in-iteration extra time: 0.013596534729003906
Time: prepare 0.0076    bound 0.4423    transfer 0.0013    finalize 0.0077    func 0.4590    
Accumulated time: func 0.4590    prepare 0.0082    bound 0.4423    transfer 0.0013    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-0.84509 (7), -0.79116 (7), -0.68811 (7), -0.63428 (7), -0.39427 (7), -0.29393 (7), -0.26662 (7), -0.26336 (7), -0.07824 (7), -0.05042 (7), -0.03165 (7), 
Length of domains: 11
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.4591    add 0.0017    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.4591    add 0.0017    
Current (lb-rhs): -0.845090389251709
11 domains visited
Cumulative time: 0.5257081985473633

BaB round 2
batch: 11
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 143] [/input.7, 143] [/input.7, 143] [/input.11, 58] [/input.7, 143] [/input.7, 143] [/input.7, 143] [/input.11, 92] [/input.7, 143] 
split level 1: [/input.11, 92] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 65] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] [/input.11, 58] 
split level 2: [/input.11, 65] [/input.11, 65] [/input.11, 92] [/input.11, 65] [/input.11, 92] [/input.11, 65] [/input.11, 92] [/input.11, 92] [/input.11, 65] [/input.11, 92] 
split level 3: [/input.11, 37] [/input.11, 92] [/input.11, 65] [/input.11, 92] [/input.11, 37] [/input.11, 92] [/input.7, 642] [/input.11, 65] [/input.11, 37] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 176 = 0.9886363636363636
pruning-in-iteration extra time: 0.013069868087768555
Time: prepare 0.0217    bound 0.4390    transfer 0.0015    finalize 0.0121    func 0.4744    
Accumulated time: func 0.9333    prepare 0.0303    bound 0.8813    transfer 0.0028    finalize 0.0198    
Current worst splitting domains lb-rhs (depth):
-0.13591 (11), -0.07850 (11), 
Length of domains: 2
Time: pickout 0.0013    decision 0.0307    set_bounds 0.0169    solve 0.4745    add 0.0012    
Accumulated time: pickout 0.0019    decision 0.0717    set_bounds 0.0326    solve 0.9335    add 0.0029    
Current (lb-rhs): -0.1359093189239502
13 domains visited
Cumulative time: 1.0523853302001953

BaB round 3
batch: 2
splitting decisions: 
split level 0: [/input.11, 37] [/input.11, 37] 
split level 1: [/input.7, 636] [/input.7, 591] 
split level 2: [/input.11, 14] [/input.7, 636] 
split level 3: [/input.7, 707] [/input.7, 193] 
split level 4: [/input.7, 193] [/input.11, 14] 
split level 5: [/input.7, 632] [/input.7, 642] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0170    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0331    
Accumulated time: func 0.9664    prepare 0.0479    bound 0.8889    transfer 0.0034    finalize 0.0272    
Length of domains: 0
Time: pickout 0.0015    decision 0.0393    set_bounds 0.0181    solve 0.0332    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.1110    set_bounds 0.0507    solve 0.9667    add 0.0030    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
13 domains visited
Cumulative time: 1.1454148292541504


Properties batch 8, size 1
Remaining timeout: 285.86686873435974
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44957352]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.94106233, -1.04879355, -0.60034871, -2.80569816,  0.36837313,
         0.97782189,  7.44412565, -3.89999771,  1.21458483, -3.95022178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44957352]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 712
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 255
Node /27 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1008
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 92] 
split level 3: [/input.11, 27] 
split level 4: [/input.11, 97] 
split level 5: [/input.11, 95] 
split level 6: [/input.11, 51] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0159    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0159    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08658719062805176

Result: safe in 14.3686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.97578686,  0.76875842,  1.22074914,  2.49320984, -3.95457482,
         -2.45403242, -7.28321743, 11.40956306, -2.40086269,  1.14734089]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.70178616,  1.01617956,  1.51780856,  3.32602239, -4.39969826,
          -1.81856155, -6.88523436,  8.87061214, -1.48050523,  0.57988548],
         [-0.70178616,  1.01617956,  1.51780856,  3.32602239, -4.39969826,
          -1.81856155, -6.88523436,  8.87061214, -1.48050523,  0.57988548]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.57239819,  7.85443258,  7.35280371,  5.54459000, 13.27031040,
          10.68917370, 15.75584602, 10.35111713,  8.29072666]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6973 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.97578704,  0.76875848,  1.22074914,  2.49321008, -3.95457506,
         -2.45403242, -7.28321743, 11.40956306, -2.40086269,  1.14734113]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [679]; unstable size 679; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 148, 1, 679] with unstable size 147 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 679] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [147]; unstable size 147; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 147] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.81087160,  4.04683924,  3.21145177,  2.55393267,  8.31407928,
          5.99034595, 10.91835594,  6.14892864,  3.43251681]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7629 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.65278411, -0.07780908,  3.63145709, 10.56888008, -6.69082308,
         -1.82842326, -8.10935593,  1.17042589,  3.04194212,  1.06118226]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.83962083, -1.18435037,  5.97195625,  8.41675854, -5.02632856,
          -1.94220662, -6.47728062,  1.79566288,  2.67169952, -0.28420258],
         [-3.83962083, -1.18435037,  5.97195625,  8.41675854, -5.02632856,
          -1.94220662, -6.47728062,  1.79566288,  2.67169952, -0.28420258]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.25637913,  9.60110855,  2.44480228, 13.44308662, 10.35896492,
          14.89403915,  6.62109566,  5.74505901,  8.70096111]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6938 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.65278387, -0.07780914,  3.63145733, 10.56887913, -6.69082260,
         -1.82842302, -8.10935593,  1.17042589,  3.04194164,  1.06118202]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [738]; unstable size 738; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 112, 1, 738] with unstable size 111 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 738] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 738] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [111]; unstable size 111; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 111] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 111] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.52365208,  2.11163855, -3.68540645,  4.62862635,  3.07827616,
          7.96591473, -0.97644663, -0.20389271, -0.06844616]], device='cuda:0') None
best_l after optimization: 30.362659454345703
alpha/beta optimization time: 4.418057441711426
initial alpha-crown bounds: tensor([[ 5.87467432,  3.72280407, -1.75946760,  6.09787130,  3.95034432,
          9.17352295,  1.11314106,  0.89817190,  1.29159808]], device='cuda:0')
Worst class: (+ rhs) -1.759467601776123
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.81887698173523
##### Instance 141 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.874674320220947.

Properties batch 1, size 1
Remaining timeout: 294.70462441444397
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.722804069519043.

Properties batch 2, size 1
Remaining timeout: 294.60081577301025
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.75946760]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.65278387, -0.07780914,  3.63145733, 10.56887913, -6.69082260,
        -1.82842302, -8.10935593,  1.17042589,  3.04194164,  1.06118202],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.75946760]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 738
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 109
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 877
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 33] 
split level 1: [/input.11, 14] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 45] 
split level 4: [/input.11, 90] 
split level 5: [/input.11, 63] 
split level 6: [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0159    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08704924583435059


Properties batch 3, size 1
Remaining timeout: 294.3720464706421
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.09787130355835.

Properties batch 4, size 1
Remaining timeout: 294.26321935653687
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9503443241119385.

Properties batch 5, size 1
Remaining timeout: 294.15912914276123
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.17352294921875.

Properties batch 6, size 1
Remaining timeout: 294.05521869659424
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1131410598754883.

Properties batch 7, size 1
Remaining timeout: 293.9518246650696
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8981719017028809.

Properties batch 8, size 1
Remaining timeout: 293.84835863113403
##### Instance 141 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2915980815887451.
Result: safe in 6.2554 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.52537942,  8.18061733,  0.41374278, -2.41075563, -1.65763009,
         -2.41508627, -1.02133870,  0.35690692,  2.02359986, -2.07155728]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.75501704,  6.28555441,  1.09284127, -1.70970893, -2.88047123,
          -1.53873217, -0.38436589, -0.61625677,  3.42821980, -2.02453923],
         [-1.75501704,  6.28555441,  1.09284127, -1.70970893, -2.88047123,
          -1.53873217, -0.38436589, -0.61625677,  3.42821980, -2.02453923]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[8.04057121, 5.19271326, 7.99526310, 9.16602516, 7.82428646,
          6.66992044, 6.90181112, 2.85733461, 8.31009388]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7077 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.52537942,  8.18061829,  0.41374254, -2.41075587, -1.65763068,
         -2.41508603, -1.02133775,  0.35690668,  2.02359962, -2.07155752]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [748]; unstable size 748; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 289, 1, 748] with unstable size 288 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 748] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 748] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [288]; unstable size 288; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 288] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.71563673, 1.47514033, 3.22034788, 5.00109959, 3.26796794, 3.27472830,
         2.13663363, 0.40582561, 3.06919432]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7782 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.97099924, -6.40702295,  3.15745163,  5.93028641, -0.40506288,
         -3.62275362, -9.32677937, 12.28242493, -0.25091150,  4.55217314]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.87688208, -7.10421991,  2.26468277,  5.33944464,  0.79791790,
          -2.84862947, -9.44751644, 10.26466179, -0.97328800,  7.60493517],
         [-5.87688208, -7.10421991,  2.26468277,  5.33944464,  0.79791790,
          -2.84862947, -9.44751644, 10.26466179, -0.97328800,  7.60493517]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.14154434, 17.36888123,  7.99997902,  4.92521715,  9.46674347,
          13.11329079, 19.71217728, 11.23794937,  2.65972662]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7088 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.97099829, -6.40702200,  3.15745211,  5.93028641, -0.40506271,
         -3.62275362, -9.32677841, 12.28242588, -0.25091121,  4.55217266]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [686]; unstable size 686; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 100, 1, 686] with unstable size 99 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 686] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [99]; unstable size 99; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 99] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 99] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.30630589, 11.46882915,  1.10185218, -0.09931740,  4.28577518,
          5.64207792, 10.57278252,  3.58864427, -2.02158856]], device='cuda:0') None
best_l after optimization: 49.30410385131836
alpha/beta optimization time: 4.255553722381592
initial alpha-crown bounds: tensor([[ 9.86635303, 11.89366150,  1.47398114,  0.41236749,  5.00139713,
          6.16308689, 11.28738213,  4.12541962, -0.91954577]], device='cuda:0')
Worst class: (+ rhs) -0.9195457696914673
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.96346259117126
##### Instance 143 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.866353034973145.

Properties batch 1, size 1
Remaining timeout: 294.8509826660156
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.893661499023438.

Properties batch 2, size 1
Remaining timeout: 294.7470760345459
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4739811420440674.

Properties batch 3, size 1
Remaining timeout: 294.6432385444641
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.41236749291419983.

Properties batch 4, size 1
Remaining timeout: 294.5396161079407
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.001397132873535.

Properties batch 5, size 1
Remaining timeout: 294.43584513664246
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.163086891174316.

Properties batch 6, size 1
Remaining timeout: 294.3320200443268
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.287382125854492.

Properties batch 7, size 1
Remaining timeout: 294.22847414016724
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.125419616699219.

Properties batch 8, size 1
Remaining timeout: 294.1250329017639
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.91954577]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.97099829, -6.40702200,  3.15745211,  5.93028641, -0.40506271,
        -3.62275362, -9.32677841, 12.28242588, -0.25091121,  4.55217266],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.91954577]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 686
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 95
Node /27 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 808
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 8] 
split level 1: [/input.11, 95] 
split level 2: [/input.11, 12] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 11] 
split level 5: [/input.7, 132] 
split level 6: [/input.11, 60] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0146    bound 0.0083    transfer 0.0007    finalize 0.0073    func 0.0312    
Accumulated time: func 0.0312    prepare 0.0152    bound 0.0083    transfer 0.0007    finalize 0.0073    
Length of domains: 0
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0312    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.0312    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09716176986694336

Result: safe in 6.1141 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.61472678,  8.26409435, -0.87593526, -0.57777077,  0.36065033,
         -0.24842568, -0.12593283, -1.65748107,  1.84303427, -3.53269029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.03161430,  6.71696758, -2.08872771, -0.62352288,  1.05021632,
           0.00839035, -0.20763354, -2.03945041,  2.85346389, -1.77217197],
         [-4.03161430,  6.71696758, -2.08872771, -0.62352288,  1.05021632,
           0.00839035, -0.20763354, -2.03945041,  2.85346389, -1.77217197]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.74858189,  8.80569553,  7.34049034,  5.66675138,  6.70857716,
           6.92460108,  8.75641823,  3.86350369,  8.48913956]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7014 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.61472678,  8.26409435, -0.87593520, -0.57777047,  0.36065003,
         -0.24842556, -0.12593292, -1.65748107,  1.84303367, -3.53269029]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [675]; unstable size 675; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 251, 1, 675] with unstable size 250 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 675] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [250]; unstable size 250; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 250] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.28726149, 4.30826664, 3.06248069, 2.84570312, 2.95204902, 3.67535424,
         4.29441261, 0.43067801, 3.88395500]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.87148267, -5.77286768, -0.59330583,  1.94906819, -3.53366542,
         -0.43758875, -3.28433776, -3.78610182, 13.51340675,  2.73258018]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.25134027, -6.30594778, -2.69115186,  2.30198383, -1.46588814,
          -1.45537627, -4.43743896, -3.08036685, 11.63137627,  6.68017960],
         [-1.25134027, -6.30594778, -2.69115186,  2.30198383, -1.46588814,
          -1.45537627, -4.43743896, -3.08036685, 11.63137627,  6.68017960]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.88271618, 17.93732452, 14.32252789,  9.32939243, 13.09726429,
          13.08675289, 16.06881523, 14.71174335,  4.95119667]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6982 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.87148297, -5.77286720, -0.59330672,  1.94906843, -3.53366542,
         -0.43758863, -3.28433681, -3.78610229, 13.51340675,  2.73258114]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [653]; unstable size 653; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 138, 1, 653] with unstable size 137 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 653] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 653] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [137]; unstable size 137; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 137] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 137] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.10923505,  7.00623131,  1.22404146, -0.68824887,  4.38526869,
         -0.11082387,  4.82108545,  1.34453440, -3.86143208]], device='cuda:0') None
best_l after optimization: 25.915130615234375
alpha/beta optimization time: 4.501811742782593
initial alpha-crown bounds: tensor([[ 3.44858837,  7.86831570,  2.31880569,  0.34998488,  5.44255686,
          0.80185628,  5.63332605,  2.60219526, -2.55049944]], device='cuda:0')
Worst class: (+ rhs) -2.550499439239502
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.73325419425964
##### Instance 145 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4485883712768555.

Properties batch 1, size 1
Remaining timeout: 294.6184628009796
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.868315696716309.

Properties batch 2, size 1
Remaining timeout: 294.5134038925171
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.318805694580078.

Properties batch 3, size 1
Remaining timeout: 294.40993428230286
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.34998488426208496.

Properties batch 4, size 1
Remaining timeout: 294.306200504303
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.442556858062744.

Properties batch 5, size 1
Remaining timeout: 294.2023503780365
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.801856279373169.

Properties batch 6, size 1
Remaining timeout: 294.0989918708801
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.633326053619385.

Properties batch 7, size 1
Remaining timeout: 293.9956178665161
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6021952629089355.

Properties batch 8, size 1
Remaining timeout: 293.8921813964844
##### Instance 145 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.55049944]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.87148297, -5.77286720, -0.59330672,  1.94906843, -3.53366542,
        -0.43758863, -3.28433681, -3.78610229, 13.51340675,  2.73258114],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.55049944]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 653
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 136
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 820
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 12] 
split level 3: [/input.11, 90] 
split level 4: [/input.11, 6] 
split level 5: [/input.11, 81] 
split level 6: [/input.11, 10] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0076    bound 0.0080    transfer 0.0006    finalize 0.0058    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0081    bound 0.0080    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08667683601379395

Result: safe in 6.3367 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.58735353, -0.02278046, 16.35437202,  3.93277240, -2.06338096,
         -7.66666651, -2.59964013, -0.65218174,  0.28848639, -7.10484982]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.65900505,  1.01399326, 12.52789879,  5.57158184, -1.38530147,
          -7.22249603, -3.80555439, -0.25521299, -0.74507362, -5.12297440],
         [-0.65900505,  1.01399326, 12.52789879,  5.57158184, -1.38530147,
          -7.22249603, -3.80555439, -0.25521299, -0.74507362, -5.12297440]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.18690395, 11.51390553,  6.95631695, 13.91320038, 19.75039482,
          16.33345413, 12.78311157, 13.27297211, 17.65087318]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7025 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.58735418, -0.02277999, 16.35437202,  3.93277216, -2.06338096,
         -7.66666603, -2.59963965, -0.65218157,  0.28848603, -7.10484886]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 133, 1, 688] with unstable size 132 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 25, 1, 688] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [132]; unstable size 132; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 25, 1, 132] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 132] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.38226080,  5.51079273,  1.73131824,  5.58979321, 10.18967819,
          6.69638538,  7.56855583,  4.05701399, 10.34961510]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7678 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.38248158, -3.16971564,  0.67280728, -3.20880246, -2.50628924,
         -1.14103746,  2.76101828, -2.31430483, -0.95695168, -1.86545503]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 8.75062943, -3.13215876, -0.35273653, -2.65562487, -1.62479603,
           0.70284343,  3.68388915, -2.32632542, -1.28944719, -2.15426850],
         [ 8.75062943, -3.13215876, -0.35273653, -2.65562487, -1.62479603,
           0.70284343,  3.68388915, -2.32632542, -1.28944719, -2.15426850]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.88278770,  9.10336590, 11.40625381, 10.37542534,  8.04778576,
           5.06674004, 11.07695484, 10.04007626, 10.90489769]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6978 seconds.
PGD attack failed
torch allclose failed: norm 8.212638817894913e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.38248062, -3.16971588,  0.67280674, -3.20880270, -2.50628948,
         -1.14103711,  2.76101851, -2.31430483, -0.95695174, -1.86545551]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [661]; unstable size 661; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 163, 1, 661] with unstable size 162 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 661] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [162]; unstable size 162; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 162] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.25477409, -0.28524804,  2.41301727,  3.38422441, -0.40550470,
          1.06555867,  3.58907461,  1.30307674,  1.62925196]], device='cuda:0') None

all verified at 4th iter
best_l after optimization: 19.943038940429688
alpha/beta optimization time: 0.18816757202148438
initial alpha-crown bounds: tensor([[3.62384367, 0.22084427, 2.86779547, 3.83949852, 0.06760693, 1.44948792,
         3.99524260, 1.75579882, 2.12292099]], device='cuda:0')
Worst class: (+ rhs) 0.06760692596435547
verified with init bound!
Result: safe-incomplete in 0.9557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.70080805, -0.67803794,  3.99838686,  0.31277585,  2.00934291,
         -0.33020282, -2.21638680, -1.18679118,  1.29632723, -0.44128484]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.77369142, -1.96179044,  2.53471756,  2.71483302,  1.45278895,
          -0.48601034, -3.52582574, -0.53206748,  1.93358147,  0.71945220],
         [-2.77369142, -1.96179044,  2.53471756,  2.71483302,  1.45278895,
          -0.48601034, -3.52582574, -0.53206748,  1.93358147,  0.71945220]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.30840874,  4.49650812, -0.18011546,  1.08192861,  3.02072787,
           6.06054306,  3.06678510,  0.60113609,  1.81526542]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0173 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0183 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.84676051, -6.71005392, -1.98337519,  0.12904589,  0.33895108,
          0.69784266, -3.78656769,  0.59370059,  2.26244402, 12.21285439]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.44602680, -6.98848438, -0.61101180,  1.84605503, -1.98094773,
           2.16055965, -2.91542387, -1.35901320,  4.82255316,  9.43416882],
         [-4.44602680, -6.98848438, -0.61101180,  1.84605503, -1.98094773,
           2.16055965, -2.91542387, -1.35901320,  4.82255316,  9.43416882]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.88019562, 16.42265320, 10.04518032,  7.58811378, 11.41511631,
           7.27360916, 12.34959221, 10.79318237,  4.61161566]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6940 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.84676123, -6.71005487, -1.98337579,  0.12904523,  0.33895144,
          0.69784409, -3.78656793,  0.59370047,  2.26244450, 12.21285343]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [781]; unstable size 781; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 155, 1, 781] with unstable size 154 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 781] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 781] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [154]; unstable size 154; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 154] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 154] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.45606422,  5.82399225,  1.47372866, -0.10718727, -0.41793823,
         -0.31740236,  3.96262574, -0.05245566, -1.65592861]], device='cuda:0') None
best_l after optimization: 23.388582229614258
alpha/beta optimization time: 4.42790150642395
initial alpha-crown bounds: tensor([[ 7.03505802,  6.79446125,  2.45958066,  0.57515693,  0.61075783,
          0.89620697,  5.05935907,  0.61540651, -0.65740359]], device='cuda:0')
Worst class: (+ rhs) -0.6574035882949829
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.81002593040466
##### Instance 149 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.03505802154541.

Properties batch 1, size 1
Remaining timeout: 294.69426703453064
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.794461250305176.

Properties batch 2, size 1
Remaining timeout: 294.5901548862457
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.459580659866333.

Properties batch 3, size 1
Remaining timeout: 294.4865653514862
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5751569271087646.

Properties batch 4, size 1
Remaining timeout: 294.3830668926239
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6107578277587891.

Properties batch 5, size 1
Remaining timeout: 294.2798159122467
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8962069749832153.

Properties batch 6, size 1
Remaining timeout: 294.1765105724335
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.059359073638916.

Properties batch 7, size 1
Remaining timeout: 294.0720055103302
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6154065132141113.

Properties batch 8, size 1
Remaining timeout: 293.96771121025085
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.65740359]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.84676123, -6.71005487, -1.98337579,  0.12904523,  0.33895144,
         0.69784409, -3.78656793,  0.59370047,  2.26244450, 12.21285343],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.65740359]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 781
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 148
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 957
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 17] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 7] 
split level 3: [/input.11, 96] 
split level 4: [/input.11, 58] 
split level 5: [/input.11, 65] 
split level 6: [/input.7, 193] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0145    bound 0.0080    transfer 0.0009    finalize 0.0085    func 0.0323    
Accumulated time: func 0.0323    prepare 0.0152    bound 0.0080    transfer 0.0009    finalize 0.0085    
Length of domains: 0
Time: pickout 0.0007    decision 0.0423    set_bounds 0.0177    solve 0.0323    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0423    set_bounds 0.0177    solve 0.0323    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.10080075263977051

Result: safe in 6.2819 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.81794614, -4.35929918,  1.03058553,  4.47025061, -3.00724602,
         -0.01693197, -7.59852600, -2.14566517,  4.35167694,  6.43528175]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.41750824, -2.81697845,  4.53086805,  5.22647715, -5.34228516,
          -0.96761048, -8.64495468, -0.73502558,  3.96288085,  3.34226155],
         [ 1.41750824, -2.81697845,  4.53086805,  5.22647715, -5.34228516,
          -0.96761048, -8.64495468, -0.73502558,  3.96288085,  3.34226155]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.92475331,  6.15923977, -1.18860650, -1.88421559,  8.68454647,
           4.30987215, 11.98721600,  4.07728720, -0.62061930]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.0188 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0198 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.26512218, -6.99507093, -3.31438828, -0.74714839, -1.71502960,
         10.05230713, -1.03755593, -0.81045943,  3.23274493,  2.47550464]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.89713287, -7.23713255, -1.71254981, -1.94418824, -0.47382221,
           6.98268604,  0.01565187, -0.95738405,  4.83129930,  2.25829172],
         [-1.89713287, -7.23713255, -1.71254981, -1.94418824, -0.47382221,
           6.98268604,  0.01565187, -0.95738405,  4.83129930,  2.25829172]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.87981892, 14.21981812,  8.69523621,  8.92687416,  7.45650816,
           6.96703434,  7.94007015,  2.15138674,  4.72439432]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6971 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.26512253, -6.99507093, -3.31438923, -0.74714863, -1.71502960,
         10.05230618, -1.03755665, -0.81045884,  3.23274517,  2.47550511]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [758]; unstable size 758; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 168, 1, 758] with unstable size 167 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 758] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 758] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [167]; unstable size 167; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 167] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.92128086,  6.86821127,  2.03895187,  2.12405753,  1.27259803,
          2.34987402,  0.05315208, -2.09441376, -1.55911398]], device='cuda:0') None
best_l after optimization: 23.70963478088379
alpha/beta optimization time: 4.506043195724487
initial alpha-crown bounds: tensor([[ 2.86562109,  7.86067200,  3.11361098,  3.47357869,  2.64019823,
          3.46415782,  0.89069200, -0.49420333, -0.10469294]], device='cuda:0')
Worst class: (+ rhs) -0.4942033290863037
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7287018299103
##### Instance 151 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.8656210899353027.

Properties batch 1, size 1
Remaining timeout: 294.6146659851074
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.8606719970703125.

Properties batch 2, size 1
Remaining timeout: 294.5103249549866
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1136109828948975.

Properties batch 3, size 1
Remaining timeout: 294.40682220458984
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.473578691482544.

Properties batch 4, size 1
Remaining timeout: 294.30298376083374
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.640198230743408.

Properties batch 5, size 1
Remaining timeout: 294.19941425323486
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.464157819747925.

Properties batch 6, size 1
Remaining timeout: 294.09553360939026
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8906919956207275.

Properties batch 7, size 1
Remaining timeout: 293.99176144599915
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.49420333]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.26512253, -6.99507093, -3.31438923, -0.74714863, -1.71502960,
        10.05230618, -1.03755665, -0.81045884,  3.23274517,  2.47550511],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.49420333]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 758
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 160
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 952
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 27] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 37] 
split level 4: [/input.11, 50] 
split level 5: [/input.11, 7] 
split level 6: [/input.7, 108] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.891654968261719e-05
Time: prepare 0.0146    bound 0.0077    transfer 0.0007    finalize 0.0075    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0077    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09648370742797852


Properties batch 8, size 1
Remaining timeout: 293.7527902126312
##### Instance 151 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10469294]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.26512253, -6.99507093, -3.31438923, -0.74714863, -1.71502960,
        10.05230618, -1.03755665, -0.81045884,  3.23274517,  2.47550511],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10469294]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 758
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 160
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 952
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 60] 
split level 4: [/input.11, 51] 
split level 5: [/input.7, 108] 
split level 6: [/input.11, 8] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0146    bound 0.0077    transfer 0.0006    finalize 0.0075    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0077    transfer 0.0006    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09672689437866211

Result: safe in 6.4908 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.37700558, -2.47361851, -2.62132406,  3.57395935, -5.34242392,
          9.81021976, -0.51496339, -4.98825026,  2.36697149,  2.42656565]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.98166227e+00, -2.56776834e+00, -1.29131341e+00,  2.85541844e+00,
          -4.76005268e+00,  6.56129694e+00, -1.70741417e-03, -4.74206209e+00,
           4.94546795e+00,  1.90479195e+00],
         [-2.98166227e+00, -2.56776834e+00, -1.29131341e+00,  2.85541844e+00,
          -4.76005268e+00,  6.56129694e+00, -1.70741417e-03, -4.74206209e+00,
           4.94546795e+00,  1.90479195e+00]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 9.54295921,  9.12906551,  7.85261059,  3.70587850, 11.32135010,
           6.56300449, 11.30335903,  1.61582899,  4.65650511]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7103 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.37700558, -2.47361875, -2.62132406,  3.57395983, -5.34242439,
          9.81021976, -0.51496315, -4.98825073,  2.36697078,  2.42656589]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [774]; unstable size 774; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 170, 1, 774] with unstable size 169 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 774] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 774] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [169]; unstable size 169; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 169] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.04574347,  0.86407804, -0.18858624, -2.85778880,  3.69859838,
          0.99314594,  3.24249029, -3.68747783, -1.02343345]], device='cuda:0') None
best_l after optimization: 7.829058647155762
alpha/beta optimization time: 4.431134223937988
initial alpha-crown bounds: tensor([[ 1.58469200,  1.43413162,  0.45565891, -2.32089829,  4.34195518,
          1.75263810,  3.77556992, -2.86087322, -0.33381557]], device='cuda:0')
Worst class: (+ rhs) -2.860873222351074
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.79122281074524
##### Instance 152 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5846920013427734.

Properties batch 1, size 1
Remaining timeout: 294.67557191848755
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4341316223144531.

Properties batch 2, size 1
Remaining timeout: 294.57103991508484
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4556589126586914.

Properties batch 3, size 1
Remaining timeout: 294.4671139717102
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.32089829]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.37700558, -2.47361875, -2.62132406,  3.57395983, -5.34242439,
         9.81021976, -0.51496315, -4.98825073,  2.36697078,  2.42656589],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.32089829]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 774
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 169
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 976
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 80] 
split level 1: [/input.11, 51] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 5] 
split level 5: [/input.11, 74] 
split level 6: [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.01351165771484375
Time: prepare 0.0076    bound 0.4486    transfer 0.0012    finalize 0.0076    func 0.4650    
Accumulated time: func 0.4650    prepare 0.0082    bound 0.4486    transfer 0.0012    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-0.36947 (7), 
Length of domains: 1
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0157    solve 0.4651    add 0.0008    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0157    solve 0.4651    add 0.0008    
Current (lb-rhs): -0.3694725036621094
1 domains visited
Cumulative time: 0.530846357345581

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.7, 112] 
split level 1: [/input.11, 7] 
split level 2: [/input.11, 60] 
split level 3: [/input.7, 308] 
split level 4: [/input.7, 233] 
split level 5: [/input.11, 32] 
split level 6: [/input.7, 107] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0168    bound 0.0077    transfer 0.0006    finalize 0.0075    func 0.0326    
Accumulated time: func 0.4977    prepare 0.0256    bound 0.4562    transfer 0.0018    finalize 0.0151    
Length of domains: 0
Time: pickout 0.0009    decision 0.0432    set_bounds 0.0186    solve 0.0327    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0844    set_bounds 0.0343    solve 0.4978    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.6272509098052979


Properties batch 4, size 1
Remaining timeout: 293.69711351394653
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.341955184936523.

Properties batch 5, size 1
Remaining timeout: 293.58710765838623
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7526381015777588.

Properties batch 6, size 1
Remaining timeout: 293.4826261997223
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7755699157714844.

Properties batch 7, size 1
Remaining timeout: 293.3788945674896
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.86087322]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.37700558, -2.47361875, -2.62132406,  3.57395983, -5.34242439,
         9.81021976, -0.51496315, -4.98825073,  2.36697078,  2.42656589],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.86087322]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 774
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 169
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 976
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 30] 
split level 1: [/input.11, 5] 
split level 2: [/input.11, 32] 
split level 3: [/input.7, 143] 
split level 4: [/input.11, 37] 
split level 5: [/input.11, 80] 
split level 6: [/input.11, 58] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 128 = 0.921875
pruning-in-iteration extra time: 0.013448953628540039
Time: prepare 0.0145    bound 0.4617    transfer 0.0012    finalize 0.0092    func 0.4867    
Accumulated time: func 0.4867    prepare 0.0151    bound 0.4617    transfer 0.0012    finalize 0.0092    
Current worst splitting domains lb-rhs (depth):
-1.06467 (7), -0.84870 (7), -0.72786 (7), -0.52931 (7), -0.44839 (7), -0.42823 (7), -0.32035 (7), -0.28391 (7), -0.12261 (7), -0.02407 (7), 
Length of domains: 10
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4868    add 0.0016    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4868    add 0.0016    
Current (lb-rhs): -1.0646722316741943
10 domains visited
Cumulative time: 0.5547983646392822

BaB round 2
batch: 10
splitting decisions: 
split level 0: [/input.7, 112] [/input.7, 112] [/input.11, 50] [/input.7, 112] [/input.11, 7] [/input.11, 7] [/input.7, 112] [/input.7, 112] [/input.7, 246] [/input.7, 112] 
split level 1: [/input.11, 7] [/input.7, 138] [/input.11, 84] [/input.11, 74] [/input.7, 138] [/input.7, 233] [/input.11, 7] [/input.11, 7] [/input.11, 84] [/input.11, 74] 
split level 2: [/input.11, 74] [/input.7, 107] [/input.11, 74] [/input.11, 7] [/input.7, 233] [/input.7, 107] [/input.11, 74] [/input.7, 138] [/input.11, 74] [/input.7, 238] 
split level 3: [/input.7, 238] [/input.7, 233] [/input.11, 7] [/input.7, 238] [/input.7, 107] [/input.7, 582] [/input.7, 238] [/input.7, 233] [/input.11, 7] [/input.11, 7] 
pruning_in_iteration open status: True
ratio of positive domain = 153 / 160 = 0.95625
pruning-in-iteration extra time: 0.013962984085083008
Time: prepare 0.0226    bound 0.4511    transfer 0.0014    finalize 0.0124    func 0.4876    
Accumulated time: func 0.9743    prepare 0.0381    bound 0.9128    transfer 0.0026    finalize 0.0216    
Current worst splitting domains lb-rhs (depth):
-0.53937 (11), -0.37760 (11), -0.33023 (11), -0.21200 (11), -0.15490 (11), -0.08994 (11), -0.08184 (11), 
Length of domains: 7
Time: pickout 0.0013    decision 0.0304    set_bounds 0.0173    solve 0.4878    add 0.0014    
Accumulated time: pickout 0.0020    decision 0.0715    set_bounds 0.0343    solve 0.9746    add 0.0030    
Current (lb-rhs): -0.5393660068511963
17 domains visited
Cumulative time: 1.0947120189666748

BaB round 3
batch: 7
splitting decisions: 
split level 0: [/input.7, 246] [/input.7, 246] [/input.11, 84] [/input.7, 246] [/input.7, 246] [/input.11, 84] [/input.7, 246] 
split level 1: [/input.11, 84] [/input.11, 84] [/input.11, 50] [/input.11, 84] [/input.11, 84] [/input.11, 50] [/input.11, 50] 
split level 2: [/input.11, 50] [/input.11, 50] [/input.11, 51] [/input.11, 50] [/input.11, 50] [/input.7, 587] [/input.11, 84] 
split level 3: [/input.11, 51] [/input.7, 198] [/input.7, 138] [/input.11, 51] [/input.7, 113] [/input.7, 107] [/input.7, 233] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 112 = 0.9910714285714286
pruning-in-iteration extra time: 0.013073205947875977
Time: prepare 0.0154    bound 0.4412    transfer 0.0013    finalize 0.0093    func 0.4672    
Accumulated time: func 1.4415    prepare 0.0539    bound 1.3540    transfer 0.0039    finalize 0.0309    
Current worst splitting domains lb-rhs (depth):
-0.19857 (15), 
Length of domains: 1
Time: pickout 0.0013    decision 0.0277    set_bounds 0.0125    solve 0.4677    add 0.0008    
Accumulated time: pickout 0.0033    decision 0.0992    set_bounds 0.0468    solve 1.4423    add 0.0038    
Current (lb-rhs): -0.19857239723205566
18 domains visited
Cumulative time: 1.6059870719909668

BaB round 4
batch: 1
splitting decisions: 
split level 0: [/input.7, 113] 
split level 1: [/input.7, 587] 
split level 2: [/input.11, 60] 
split level 3: [/input.11, 56] 
split level 4: [/input.7, 413] 
split level 5: [/input.7, 138] 
split level 6: [/input.7, 582] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0169    bound 0.0076    transfer 0.0006    finalize 0.0074    func 0.0327    
Accumulated time: func 1.4742    prepare 0.0714    bound 1.3616    transfer 0.0045    finalize 0.0383    
Length of domains: 0
Time: pickout 0.0011    decision 0.0435    set_bounds 0.0200    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0044    decision 0.1427    set_bounds 0.0668    solve 1.4750    add 0.0039    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18 domains visited
Cumulative time: 1.7043910026550293


Properties batch 8, size 1
Remaining timeout: 291.53213143348694
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.33381557]], device='cuda:0') need to verify.
Model prediction is: tensor([-2.37700558, -2.47361875, -2.62132406,  3.57395983, -5.34242439,
         9.81021976, -0.51496315, -4.98825073,  2.36697078,  2.42656589],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.33381557]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 774
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 169
Node /27 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 976
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 30] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 90] 
split level 5: [/input.11, 60] 
split level 6: [/input.11, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08638715744018555

Result: safe in 8.7037 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.29946303,  6.82346439, -0.61787069, -1.09542263, -0.33577976,
         -2.34005547, -0.84141248,  0.53021306,  1.55719101, -0.54558122]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.21823263,  5.06238127, -0.70056152, -0.59232378, -0.27254805,
          -2.67200756, -0.98954123,  1.12713671,  2.47656083,  0.62317944],
         [-4.21823263,  5.06238127, -0.70056152, -0.59232378, -0.27254805,
          -2.67200756, -0.98954123,  1.12713671,  2.47656083,  0.62317944]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.28061390, 5.76294279, 5.65470505, 5.33492947, 7.73438883,
          6.05192232, 3.93524456, 2.58582044, 4.43920183]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6948 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.29946303,  6.82346392, -0.61787087, -1.09542251, -0.33577988,
         -2.34005570, -0.84141278,  0.53021300,  1.55719078, -0.54558104]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [717]; unstable size 717; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 349, 1, 717] with unstable size 348 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 717] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 717] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [348]; unstable size 348; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 348] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 348] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.87407780, 2.21753693, 2.18245316, 2.26350164, 3.43182302, 2.45251656,
         0.76696444, 0.57733512, 0.78958416]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.35017967, -8.26429653, -5.48064280,  2.16759825, -3.94297266,
         16.49157524,  2.46374822, -7.85904980,  5.33941078,  4.07626724]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.83524942, -8.42964268, -4.50350904,  1.28473759, -1.57411873,
          13.23099327,  2.22516799, -6.66727734,  6.11851168,  2.81530690],
         [-4.83524942, -8.42964268, -4.50350904,  1.28473759, -1.57411873,
          13.23099327,  2.22516799, -6.66727734,  6.11851168,  2.81530690]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[18.06624222, 21.66063690, 17.73450279, 11.94625568, 14.80511189,
          11.00582504, 19.89826965,  7.11248159, 10.41568661]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6965 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.35017920, -8.26429749, -5.48064280,  2.16759753, -3.94297290,
         16.49157715,  2.46374822, -7.85905075,  5.33941078,  4.07626867]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [647]; unstable size 647; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 93, 1, 647] with unstable size 92 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 647] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 647] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [92]; unstable size 92; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 92] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 92] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.22984600, 13.38081837, 10.72299767,  4.46090126,  7.31601954,
          4.79457283, 11.46912193,  1.99420619,  2.06026673]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.24154660, -2.23445058,  0.46689969, -5.62440014,  3.43179798,
          1.30645633, 11.00747013, -4.31211948, -1.87923324, -2.85583472]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.35043910, -2.47049642, -0.12915814, -5.60304689,  4.94374180,
           1.11209297,  8.96605587, -3.48300815, -2.21375990, -1.89532113],
         [ 0.35043910, -2.47049642, -0.12915814, -5.60304689,  4.94374180,
           1.11209297,  8.96605587, -3.48300815, -2.21375990, -1.89532113]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.61561680, 11.43655205,  9.09521389, 14.56910324,  4.02231407,
           7.85396290, 12.44906425, 11.17981529, 10.86137676]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7002 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.24154660, -2.23445082,  0.46689963, -5.62440062,  3.43179798,
          1.30645633, 11.00747204, -4.31211948, -1.87923300, -2.85583496]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [647]; unstable size 647; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 222, 1, 647] with unstable size 221 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 647] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 647] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [221]; unstable size 221; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 221] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.88858604,  4.90816307,  0.85085964,  6.29015446, -0.06671500,
          1.19506955,  3.60117006,  3.80953574,  4.69250393]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 30.13192367553711
alpha/beta optimization time: 0.06617927551269531
initial alpha-crown bounds: tensor([[3.95299554, 5.00096989, 0.97654223, 6.39236164, 0.03046584, 1.30485678,
         3.73072863, 3.89786506, 4.84513807]], device='cuda:0')
Worst class: (+ rhs) 0.03046584129333496
verified with init bound!
Result: safe-incomplete in 0.8364 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 9.55438042, -3.33529735,  0.78845680, -2.66246676, -2.73698592,
         -0.49479741,  0.75697911, -1.54957581, -1.95565534,  1.32788980]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 7.19935894, -3.75994492,  0.56678820, -2.34447527, -2.82571983,
           0.17786486, -0.01694916, -1.13400269, -1.85222101,  3.70067859],
         [ 7.19935894, -3.75994492,  0.56678820, -2.34447527, -2.82571983,
           0.17786486, -0.01694916, -1.13400269, -1.85222101,  3.70067859]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.95930386,  6.63257074,  9.54383469, 10.02507877,  7.02149391,
           7.21630812,  8.33336163,  9.05158043,  3.49868035]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6983 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 9.55438042, -3.33529711,  0.78845632, -2.66246676, -2.73698616,
         -0.49479714,  0.75697941, -1.54957604, -1.95565546,  1.32788968]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [648]; unstable size 648; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 155, 1, 648] with unstable size 154 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 39, 1, 648] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 648] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [154]; unstable size 154; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 39, 1, 154] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 154] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.79347515,  0.62486410,  2.74938107,  3.72600675, -0.78485966,
          2.54269123,  0.90125036,  2.31502891, -1.44283628]], device='cuda:0') None
best_l after optimization: 20.882953643798828
alpha/beta optimization time: 4.526418447494507
initial alpha-crown bounds: tensor([[ 4.48341370,  1.49961448,  3.58142519,  4.46365118, -0.15017653,
          3.06890035,  1.70422268,  3.07014966, -0.83824754]], device='cuda:0')
Worst class: (+ rhs) -0.838247537612915
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.70721411705017
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.4834136962890625.

Properties batch 1, size 1
Remaining timeout: 294.568870306015
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4996144771575928.

Properties batch 2, size 1
Remaining timeout: 294.4633791446686
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.581425189971924.

Properties batch 3, size 1
Remaining timeout: 294.3595886230469
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.463651180267334.

Properties batch 4, size 1
Remaining timeout: 294.2560513019562
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15017653]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.55438042, -3.33529711,  0.78845632, -2.66246676, -2.73698616,
        -0.49479714,  0.75697941, -1.54957604, -1.95565546,  1.32788968],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15017653]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 648
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 150
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 834
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 11] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 92] 
split level 5: [/input.7, 641] 
split level 6: [/input.11, 86] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0146    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0170    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0170    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09635424613952637


Properties batch 5, size 1
Remaining timeout: 294.0175995826721
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0689003467559814.

Properties batch 6, size 1
Remaining timeout: 293.90910172462463
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7042226791381836.

Properties batch 7, size 1
Remaining timeout: 293.80463790893555
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0701496601104736.

Properties batch 8, size 1
Remaining timeout: 293.7009584903717
##### Instance 156 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.83824754]], device='cuda:0') need to verify.
Model prediction is: tensor([ 9.55438042, -3.33529711,  0.78845632, -2.66246676, -2.73698616,
        -0.49479714,  0.75697941, -1.54957604, -1.95565546,  1.32788968],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.83824754]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 648
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 150
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 834
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 95] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 90] 
split level 4: [/input.11, 11] 
split level 5: [/input.11, 97] 
split level 6: [/input.11, 10] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.153915405273438e-05
Time: prepare 0.0077    bound 0.0077    transfer 0.0007    finalize 0.0060    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0083    bound 0.0077    transfer 0.0007    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08643865585327148

Result: safe in 6.5274 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.63287473,  0.68098468,  4.89037180,  8.08589745, -8.26728725,
          1.81876564, -5.34208441, -0.50848168, -1.72260511, -2.40353370]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]100%|██████████| 1/1 [00:00<00:00,  1.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 3.33232212,  0.58136028,  6.07213926,  6.20486736, -8.40824604,
           1.48143363, -5.23171711, -0.09745258, -1.64945209, -2.42577052],
         [ 3.33232212,  0.58136028,  6.07213926,  6.20486736, -8.40824604,
           1.48143363, -5.23171711, -0.09745258, -1.64945209, -2.42577052]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.87254524,  5.62350702,  0.13272810, 14.61311340,  4.72343349,
          11.43658447,  6.30232000,  7.85431957,  8.63063812]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7114 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.63287449,  0.68098468,  4.89037275,  8.08589840, -8.26728725,
          1.81876564, -5.34208441, -0.50848144, -1.72260511, -2.40353394]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [700]; unstable size 700; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 122, 1, 700] with unstable size 121 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 21, 1, 700] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 700] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [121]; unstable size 121; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 21, 1, 121] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 121] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.13325381,  0.56188202, -2.96253490,  9.17168331, -0.56244564,
          5.96651840,  1.95242739,  4.44882298,  4.12027836]], device='cuda:0') None
best_l after optimization: 29.589534759521484
alpha/beta optimization time: 4.457633972167969
initial alpha-crown bounds: tensor([[-0.15410876,  1.31188536, -2.18842387, 10.38395882,  0.27783263,
          7.09492207,  2.95961189,  5.26314020,  4.64071703]], device='cuda:0')
Worst class: (+ rhs) -2.1884238719940186
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.7640779018402
##### Instance 157 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15410876]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.63287449,  0.68098468,  4.89037275,  8.08589840, -8.26728725,
         1.81876564, -5.34208441, -0.50848144, -1.72260511, -2.40353394],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15410876]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 700
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 60] 
split level 2: [/input.11, 65] 
split level 3: [/input.7, 132] 
split level 4: [/input.11, 86] 
split level 5: [/input.11, 52] 
split level 6: [/input.7, 232] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0968327522277832


Properties batch 1, size 1
Remaining timeout: 294.50981998443604
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3118853569030762.

Properties batch 2, size 1
Remaining timeout: 294.4011332988739
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.18842387]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.63287449,  0.68098468,  4.89037275,  8.08589840, -8.26728725,
         1.81876564, -5.34208441, -0.50848144, -1.72260511, -2.40353394],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.18842387]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 700
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 120
Node /27 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 839
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 81] 
split level 1: [/input.11, 63] 
split level 2: [/input.11, 33] 
split level 3: [/input.7, 238] 
split level 4: [/input.11, 45] 
split level 5: [/input.11, 14] 
split level 6: [/input.7, 719] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 128 = 0.8671875
pruning-in-iteration extra time: 0.013065338134765625
Time: prepare 0.0146    bound 0.4482    transfer 0.0011    finalize 0.0090    func 0.4730    
Accumulated time: func 0.4730    prepare 0.0152    bound 0.4482    transfer 0.0011    finalize 0.0090    
Current worst splitting domains lb-rhs (depth):
-0.86398 (7), -0.81872 (7), -0.78121 (7), -0.77910 (7), -0.76698 (7), -0.68918 (7), -0.67468 (7), -0.63808 (7), -0.34312 (7), -0.23556 (7), -0.21852 (7), -0.18690 (7), -0.17146 (7), -0.15392 (7), -0.12700 (7), -0.11101 (7), -0.03263 (7), 
Length of domains: 17
Time: pickout 0.0007    decision 0.0423    set_bounds 0.0170    solve 0.4731    add 0.0018    
Accumulated time: pickout 0.0007    decision 0.0423    set_bounds 0.0170    solve 0.4731    add 0.0018    
Current (lb-rhs): -0.8639752268791199
17 domains visited
Cumulative time: 0.5428245067596436

BaB round 2
batch: 17
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] 
split level 1: [/input.7, 132] [/input.7, 132] [/input.7, 413] [/input.7, 132] [/input.7, 132] [/input.7, 132] [/input.7, 413] [/input.7, 132] [/input.7, 132] [/input.7, 132] 
split level 2: [/input.7, 413] [/input.7, 323] [/input.7, 132] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 132] [/input.7, 413] [/input.7, 413] [/input.7, 413] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 136 = 0.7867647058823529
pruning-in-iteration extra time: 0.013975143432617188
Time: prepare 0.0181    bound 0.4490    transfer 0.0012    finalize 0.0102    func 0.4786    
Accumulated time: func 0.9516    prepare 0.0336    bound 0.8972    transfer 0.0023    finalize 0.0192    
Current worst splitting domains lb-rhs (depth):
-0.66150 (10), -0.62327 (10), -0.59566 (10), -0.59233 (10), -0.55090 (10), -0.48719 (10), -0.46357 (10), -0.42228 (10), -0.36544 (10), -0.35257 (10), -0.34538 (10), -0.33920 (10), -0.31450 (10), -0.31371 (10), -0.20926 (10), -0.19746 (10), -0.18826 (10), -0.18769 (10), -0.17534 (10), -0.12151 (10), 
Length of domains: 29
Time: pickout 0.0014    decision 0.0253    set_bounds 0.0134    solve 0.4787    add 0.0020    
Accumulated time: pickout 0.0021    decision 0.0676    set_bounds 0.0304    solve 0.9517    add 0.0038    
Current (lb-rhs): -0.6614984273910522
46 domains visited
Cumulative time: 1.0652117729187012

BaB round 3
batch: 29
splitting decisions: 
split level 0: [/input.11, 65] [/input.7, 418] [/input.11, 65] [/input.7, 269] [/input.11, 65] [/input.7, 418] [/input.11, 65] [/input.11, 65] [/input.7, 418] [/input.11, 65] 
split level 1: [/input.7, 269] [/input.7, 422] [/input.7, 269] [/input.7, 422] [/input.7, 269] [/input.7, 422] [/input.7, 269] [/input.7, 269] [/input.7, 422] [/input.7, 242] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 116 = 0.6120689655172413
pruning-in-iteration extra time: 0.013652324676513672
Time: prepare 0.0166    bound 0.4612    transfer 0.0012    finalize 0.0093    func 0.4884    
Accumulated time: func 1.4399    prepare 0.0506    bound 1.3584    transfer 0.0036    finalize 0.0285    
Current worst splitting domains lb-rhs (depth):
-0.53374 (12), -0.49641 (12), -0.46776 (12), -0.45916 (12), -0.45806 (12), -0.45286 (12), -0.41485 (12), -0.40820 (12), -0.40149 (12), -0.37867 (12), -0.33001 (12), -0.30476 (12), -0.29941 (12), -0.28405 (12), -0.26986 (12), -0.24844 (12), -0.24809 (12), -0.22931 (12), -0.22354 (12), -0.20388 (12), 
Length of domains: 45
Time: pickout 0.0015    decision 0.0265    set_bounds 0.0088    solve 0.4885    add 0.0023    
Accumulated time: pickout 0.0035    decision 0.0941    set_bounds 0.0392    solve 1.4402    add 0.0061    
Current (lb-rhs): -0.5337422490119934
91 domains visited
Cumulative time: 1.5939757823944092

BaB round 4
batch: 45
splitting decisions: 
split level 0: [/input.7, 144] [/input.11, 65] [/input.7, 144] [/input.7, 144] [/input.7, 144] [/input.7, 144] [/input.11, 65] [/input.7, 144] [/input.11, 65] [/input.7, 144] 
split level 1: [/input.3, 2305] [/input.7, 242] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.7, 242] [/input.3, 2305] [/input.7, 418] [/input.3, 2305] 
pruning_in_iteration open status: True
ratio of positive domain = 120 / 180 = 0.6666666666666667
pruning-in-iteration extra time: 0.01478266716003418
Time: prepare 0.0306    bound 0.4812    transfer 0.0014    finalize 0.0141    func 0.5274    
Accumulated time: func 1.9673    prepare 0.0815    bound 1.8395    transfer 0.0049    finalize 0.0427    
Current worst splitting domains lb-rhs (depth):
-0.48267 (14), -0.45417 (14), -0.42655 (14), -0.41767 (14), -0.40587 (14), -0.40347 (14), -0.36660 (14), -0.35919 (14), -0.34677 (14), -0.31915 (14), -0.29103 (14), -0.28261 (14), -0.27278 (14), -0.27082 (14), -0.24624 (14), -0.24217 (14), -0.23382 (14), -0.22738 (14), -0.21970 (14), -0.21828 (14), 
Length of domains: 60
Time: pickout 0.0015    decision 0.0291    set_bounds 0.0136    solve 0.5275    add 0.0024    
Accumulated time: pickout 0.0050    decision 0.1233    set_bounds 0.0528    solve 1.9677    add 0.0085    
Current (lb-rhs): -0.4826723635196686
151 domains visited
Cumulative time: 2.1699960231781006

BaB round 5
batch: 60
splitting decisions: 
split level 0: [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.3, 2305] [/input.11, 65] [/input.3, 2305] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 120 = 0.575
pruning-in-iteration extra time: 0.013394355773925781
Time: prepare 0.0229    bound 0.4527    transfer 0.0012    finalize 0.0100    func 0.4870    
Accumulated time: func 2.4543    prepare 0.1048    bound 2.2923    transfer 0.0061    finalize 0.0527    
Current worst splitting domains lb-rhs (depth):
-0.44103 (15), -0.41768 (15), -0.38697 (15), -0.38096 (15), -0.36865 (15), -0.36652 (15), -0.33048 (15), -0.31962 (15), -0.30526 (15), -0.28266 (15), -0.25117 (15), -0.24533 (15), -0.23518 (15), -0.23342 (15), -0.22752 (15), -0.20116 (15), -0.20049 (15), -0.19940 (15), -0.19669 (15), -0.18888 (15), 
Length of domains: 51
Time: pickout 0.0016    decision 0.0331    set_bounds 0.0047    solve 0.4872    add 0.0023    
Accumulated time: pickout 0.0066    decision 0.1563    set_bounds 0.0575    solve 2.4549    add 0.0107    
Current (lb-rhs): -0.44102567434310913
202 domains visited
Cumulative time: 2.6999967098236084

BaB round 6
batch: 51
splitting decisions: 
split level 0: [/input.11, 96] [/input.11, 96] [/input.7, 269] [/input.7, 242] [/input.11, 96] [/input.7, 242] [/input.11, 96] [/input.7, 269] [/input.11, 96] [/input.11, 96] 
split level 1: [/input.7, 269] [/input.7, 242] [/input.7, 323] [/input.7, 323] [/input.7, 269] [/input.7, 323] [/input.7, 269] [/input.7, 323] [/input.7, 269] [/input.7, 242] 
pruning_in_iteration open status: True
ratio of positive domain = 147 / 204 = 0.7205882352941176
pruning-in-iteration extra time: 0.013985633850097656
Time: prepare 0.0384    bound 0.4552    transfer 0.0015    finalize 0.0161    func 0.5113    
Accumulated time: func 2.9656    prepare 0.1435    bound 2.7475    transfer 0.0076    finalize 0.0688    
Current worst splitting domains lb-rhs (depth):
-0.32697 (17), -0.31673 (17), -0.31648 (17), -0.29651 (17), -0.28743 (17), -0.27106 (17), -0.26872 (17), -0.25689 (17), -0.25487 (17), -0.25463 (17), -0.24894 (17), -0.24010 (17), -0.23157 (17), -0.21417 (17), -0.21002 (17), -0.19168 (17), -0.19155 (17), -0.18219 (17), -0.18073 (17), -0.16072 (17), 
Length of domains: 57
Time: pickout 0.0014    decision 0.0299    set_bounds 0.0132    solve 0.5114    add 0.0022    
Accumulated time: pickout 0.0080    decision 0.1862    set_bounds 0.0707    solve 2.9663    add 0.0129    
Current (lb-rhs): -0.3269674777984619
259 domains visited
Cumulative time: 3.259842872619629

BaB round 7
batch: 57
splitting decisions: 
split level 0: [/input.11, 86] [/input.7, 144] [/input.7, 144] [/input.11, 86] [/input.7, 144] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 72 / 114 = 0.631578947368421
pruning-in-iteration extra time: 0.013924121856689453
Time: prepare 0.0222    bound 0.4530    transfer 0.0010    finalize 0.0104    func 0.4867    
Accumulated time: func 3.4523    prepare 0.1660    bound 3.2005    transfer 0.0087    finalize 0.0791    
Current worst splitting domains lb-rhs (depth):
-0.28506 (18), -0.27594 (18), -0.27213 (18), -0.25179 (18), -0.24636 (18), -0.22826 (18), -0.22541 (18), -0.21499 (18), -0.21178 (18), -0.21137 (18), -0.20658 (18), -0.20011 (18), -0.19002 (18), -0.17252 (18), -0.16760 (18), -0.15259 (18), -0.14856 (18), -0.13910 (18), -0.13680 (18), -0.11493 (18), 
Length of domains: 42
Time: pickout 0.0010    decision 0.0264    set_bounds 0.0048    solve 0.4868    add 0.0023    
Accumulated time: pickout 0.0090    decision 0.2126    set_bounds 0.0755    solve 3.4531    add 0.0152    
Current (lb-rhs): -0.285061240196228
301 domains visited
Cumulative time: 3.7829198837280273

BaB round 8
batch: 42
splitting decisions: 
split level 0: [/input.11, 86] [/input.11, 86] [/input.7, 144] [/input.11, 86] [/input.7, 144] [/input.7, 144] [/input.7, 144] [/input.7, 242] [/input.7, 242] [/input.7, 242] 
split level 1: [/input.7, 323] [/input.7, 323] [/input.11, 86] [/input.7, 323] [/input.11, 86] [/input.7, 323] [/input.7, 323] [/input.3, 2258] [/input.7, 649] [/input.3, 2258] 
pruning_in_iteration open status: True
ratio of positive domain = 81 / 168 = 0.4821428571428571
pruning-in-iteration extra time: 0.01425480842590332
Time: prepare 0.0322    bound 0.4678    transfer 0.0013    finalize 0.0135    func 0.5149    
Accumulated time: func 3.9672    prepare 0.1985    bound 3.6683    transfer 0.0100    finalize 0.0927    
Current worst splitting domains lb-rhs (depth):
-0.23422 (20), -0.22250 (20), -0.21937 (20), -0.20297 (20), -0.19842 (20), -0.19802 (20), -0.19353 (20), -0.18313 (20), -0.17642 (20), -0.17289 (20), -0.17214 (20), -0.16478 (20), -0.16333 (20), -0.15846 (20), -0.15768 (20), -0.14993 (20), -0.14613 (20), -0.14561 (20), -0.14237 (20), -0.14055 (20), 
Length of domains: 87
Time: pickout 0.0013    decision 0.0286    set_bounds 0.0120    solve 0.5150    add 0.0025    
Accumulated time: pickout 0.0103    decision 0.2412    set_bounds 0.0875    solve 3.9682    add 0.0177    
Current (lb-rhs): -0.23422497510910034
388 domains visited
Cumulative time: 4.343708276748657

BaB round 9
batch: 87
splitting decisions: 
split level 0: [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] [/input.7, 644] 
pruning_in_iteration open status: True
ratio of positive domain = 93 / 174 = 0.5344827586206897
pruning-in-iteration extra time: 0.014067411422729492
Time: prepare 0.0333    bound 0.4768    transfer 0.0014    finalize 0.0138    func 0.5254    
Accumulated time: func 4.4926    prepare 0.2321    bound 4.1451    transfer 0.0113    finalize 0.1065    
Current worst splitting domains lb-rhs (depth):
-0.20080 (21), -0.18924 (21), -0.18854 (21), -0.16874 (21), -0.16814 (21), -0.16361 (21), -0.16319 (21), -0.15280 (21), -0.14335 (21), -0.13852 (21), -0.13442 (21), -0.13352 (21), -0.13124 (21), -0.12382 (21), -0.11941 (21), -0.11242 (21), -0.11240 (21), -0.11188 (21), -0.11120 (21), -0.10762 (21), 
Length of domains: 81
Time: pickout 0.0016    decision 0.0359    set_bounds 0.0075    solve 0.5255    add 0.0025    
Accumulated time: pickout 0.0119    decision 0.2772    set_bounds 0.0950    solve 4.4936    add 0.0201    
Current (lb-rhs): -0.20080280303955078
469 domains visited
Cumulative time: 4.918267726898193

BaB round 10
batch: 81
splitting decisions: 
split level 0: [/input.7, 649] [/input.7, 649] [/input.7, 649] [/input.7, 649] [/input.7, 649] [/input.7, 649] [/input.7, 649] [/input.7, 422] [/input.11, 52] [/input.7, 649] 
pruning_in_iteration open status: True
ratio of positive domain = 80 / 162 = 0.49382716049382713
pruning-in-iteration extra time: 0.012917518615722656
Time: prepare 0.0320    bound 0.4412    transfer 0.0014    finalize 0.0140    func 0.4886    
Accumulated time: func 4.9812    prepare 0.2644    bound 4.5863    transfer 0.0128    finalize 0.1204    
Current worst splitting domains lb-rhs (depth):
-0.16926 (22), -0.15868 (22), -0.13890 (22), -0.13774 (22), -0.12846 (22), -0.11956 (22), -0.11627 (22), -0.11420 (22), -0.11327 (22), -0.11127 (22), -0.10760 (22), -0.10733 (22), -0.10380 (22), -0.09806 (22), -0.09579 (22), -0.09115 (22), -0.08887 (22), -0.08642 (22), -0.08273 (22), -0.08102 (22), 
Length of domains: 82
Time: pickout 0.0016    decision 0.0349    set_bounds 0.0070    solve 0.4887    add 0.0025    
Accumulated time: pickout 0.0135    decision 0.3121    set_bounds 0.1020    solve 4.9824    add 0.0226    
Current (lb-rhs): -0.16926467418670654
551 domains visited
Cumulative time: 5.454378604888916

BaB round 11
batch: 82
splitting decisions: 
split level 0: [/input.7, 422] [/input.7, 44] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.7, 44] [/input.11, 52] [/input.7, 44] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 164 = 0.6402439024390244
pruning-in-iteration extra time: 0.013452768325805664
Time: prepare 0.0319    bound 0.4609    transfer 0.0013    finalize 0.0133    func 0.5076    
Accumulated time: func 5.4888    prepare 0.2967    bound 5.0473    transfer 0.0141    finalize 0.1338    
Current worst splitting domains lb-rhs (depth):
-0.13287 (23), -0.12405 (23), -0.11715 (23), -0.11362 (23), -0.10632 (23), -0.09501 (23), -0.08803 (23), -0.08491 (23), -0.08371 (23), -0.08281 (23), -0.08096 (23), -0.08027 (23), -0.07831 (23), -0.07269 (23), -0.06350 (23), -0.06041 (23), -0.05912 (23), -0.05752 (23), -0.05508 (23), -0.05313 (23), 
Length of domains: 59
Time: pickout 0.0012    decision 0.0403    set_bounds 0.0071    solve 0.5077    add 0.0023    
Accumulated time: pickout 0.0146    decision 0.3524    set_bounds 0.1091    solve 5.4901    add 0.0250    
Current (lb-rhs): -0.13286596536636353
610 domains visited
Cumulative time: 6.014860391616821

BaB round 12
batch: 59
splitting decisions: 
split level 0: [/input.7, 422] [/input.7, 416] [/input.7, 416] [/input.11, 52] [/input.7, 422] [/input.7, 416] [/input.11, 52] [/input.7, 416] [/input.11, 52] [/input.7, 416] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 118 = 0.6440677966101696
pruning-in-iteration extra time: 0.014195919036865234
Time: prepare 0.0228    bound 0.4643    transfer 0.0011    finalize 0.0107    func 0.4990    
Accumulated time: func 5.9878    prepare 0.3198    bound 5.5116    transfer 0.0152    finalize 0.1444    
Current worst splitting domains lb-rhs (depth):
-0.11733 (24), -0.10620 (24), -0.10196 (24), -0.09857 (24), -0.09131 (24), -0.08013 (24), -0.06799 (24), -0.05773 (24), -0.05514 (24), -0.05398 (24), -0.05318 (24), -0.05278 (24), -0.05083 (24), -0.04823 (24), -0.04400 (24), -0.04246 (24), -0.04130 (24), -0.04116 (24), -0.03963 (24), -0.03759 (24), 
Length of domains: 42
Time: pickout 0.0015    decision 0.0275    set_bounds 0.0052    solve 0.4991    add 0.0024    
Accumulated time: pickout 0.0162    decision 0.3798    set_bounds 0.1144    solve 5.9892    add 0.0274    
Current (lb-rhs): -0.11732620000839233
652 domains visited
Cumulative time: 6.551807641983032

BaB round 13
batch: 42
splitting decisions: 
split level 0: [/input.7, 422] [/input.7, 417] [/input.7, 417] [/input.7, 422] [/input.7, 417] [/input.7, 417] [/input.7, 417] [/input.7, 417] [/input.7, 417] [/input.7, 417] 
split level 1: [/input.7, 44] [/input.7, 422] [/input.7, 422] [/input.7, 44] [/input.7, 422] [/input.7, 44] [/input.11, 52] [/input.7, 422] [/input.11, 52] [/input.7, 44] 
pruning_in_iteration open status: True
ratio of positive domain = 147 / 168 = 0.875
pruning-in-iteration extra time: 0.013970136642456055
Time: prepare 0.0328    bound 0.4592    transfer 0.0014    finalize 0.0142    func 0.5077    
Accumulated time: func 6.4955    prepare 0.3530    bound 5.9708    transfer 0.0166    finalize 0.1587    
Current worst splitting domains lb-rhs (depth):
-0.05250 (26), -0.04718 (26), -0.04634 (26), -0.04459 (26), -0.04178 (26), -0.04134 (26), -0.04050 (26), -0.03841 (26), -0.03628 (26), -0.03526 (26), -0.03062 (26), -0.02711 (26), -0.02659 (26), -0.02621 (26), -0.01937 (26), -0.00847 (26), -0.00780 (26), -0.00755 (26), -0.00712 (26), -0.00547 (26), 
Length of domains: 21
Time: pickout 0.0014    decision 0.0286    set_bounds 0.0114    solve 0.5078    add 0.0018    
Accumulated time: pickout 0.0175    decision 0.4084    set_bounds 0.1258    solve 6.4970    add 0.0292    
Current (lb-rhs): -0.05249518156051636
673 domains visited
Cumulative time: 7.104541301727295

BaB round 14
batch: 21
splitting decisions: 
split level 0: [/input.7, 44] [/input.7, 44] [/input.7, 44] [/input.7, 422] [/input.7, 422] [/input.7, 422] [/input.7, 417] [/input.7, 417] [/input.7, 417] [/input.7, 44] 
split level 1: [/input.7, 401] [/input.7, 401] [/input.7, 401] [/input.7, 401] [/input.7, 401] [/input.7, 401] [/input.3, 2306] [/input.3, 2306] [/input.3, 2306] [/input.7, 401] 
split level 2: [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 168 / 168 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0320    bound 0.0077    transfer 0.0008    finalize 0.0120    func 0.0525    
Accumulated time: func 6.5480    prepare 0.3854    bound 5.9785    transfer 0.0174    finalize 0.1706    
Length of domains: 0
Time: pickout 0.0013    decision 0.0246    set_bounds 0.0128    solve 0.0526    add 0.0001    
Accumulated time: pickout 0.0189    decision 0.4330    set_bounds 0.1386    solve 6.5495    add 0.0293    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
673 domains visited
Cumulative time: 7.196966648101807


Properties batch 3, size 1
Remaining timeout: 287.06050062179565
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.38395881652832.

Properties batch 4, size 1
Remaining timeout: 286.94051146507263
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.27783262729644775.

Properties batch 5, size 1
Remaining timeout: 286.8360278606415
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.094922065734863.

Properties batch 6, size 1
Remaining timeout: 286.7324483394623
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9596118927001953.

Properties batch 7, size 1
Remaining timeout: 286.62889432907104
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.2631402015686035.

Properties batch 8, size 1
Remaining timeout: 286.5254285335541
##### Instance 157 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.640717029571533.
Result: safe in 13.5782 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.71648741,  0.12089105, -0.65323108, -1.33738005,  6.92165661,
         -1.59787226,  0.03531566,  1.75851321, -3.03640056,  1.34642661]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.92737126,  1.32242358, -1.64665675,  0.17168523,  3.97377157,
          -0.70834303, -1.12697935,  3.28613114, -3.49388409,  0.98382312],
         [-2.92737126,  1.32242358, -1.64665675,  0.17168523,  3.97377157,
          -0.70834303, -1.12697935,  3.28613114, -3.49388409,  0.98382312]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.90114307, 2.65134811, 5.62042809, 3.80208635, 4.68211460,
          5.10075092, 0.68764043, 7.46765566, 2.98994851]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6979 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
         -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [742]; unstable size 742; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 233, 1, 742] with unstable size 232 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 40, 1, 742] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 742] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [232]; unstable size 232; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 40, 1, 232] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.72498488, -3.75706816, -2.74474645, -3.16091061, -2.96974087,
         -1.52701581, -5.07179070, -1.26167440, -4.66229057]], device='cuda:0') None
best_l after optimization: -16.413984298706055
alpha/beta optimization time: 4.617228746414185
initial alpha-crown bounds: tensor([[ 1.48723555, -3.08634138, -1.82799411, -2.33655477, -1.96655607,
         -0.61192131, -3.99650145, -0.39723468, -3.67811632]], device='cuda:0')
Worst class: (+ rhs) -3.9965014457702637
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.6132266521454
##### Instance 158 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4872355461120605.

Properties batch 1, size 1
Remaining timeout: 294.49919176101685
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.08634138]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.08634138]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 52] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 70] 
split level 3: [/input.11, 89] 
split level 4: [/input.11, 51] 
split level 5: [/input.11, 45] 
split level 6: [/input.11, 99] 
pruning_in_iteration open status: True
ratio of positive domain = 100 / 128 = 0.78125
pruning-in-iteration extra time: 0.014037847518920898
Time: prepare 0.0076    bound 0.4418    transfer 0.0013    finalize 0.0077    func 0.4585    
Accumulated time: func 0.4585    prepare 0.0082    bound 0.4418    transfer 0.0013    finalize 0.0077    
Current worst splitting domains lb-rhs (depth):
-1.62148 (7), -1.59267 (7), -1.42873 (7), -1.35891 (7), -1.29124 (7), -1.17987 (7), -1.03094 (7), -1.02972 (7), -0.99192 (7), -0.97005 (7), -0.93085 (7), -0.76438 (7), -0.64277 (7), -0.55756 (7), -0.54710 (7), -0.54185 (7), -0.50827 (7), -0.50588 (7), -0.46550 (7), -0.46470 (7), 
Length of domains: 28
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0158    solve 0.4586    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0158    solve 0.4586    add 0.0022    
Current (lb-rhs): -1.6214754581451416
28 domains visited
Cumulative time: 0.5255126953125

BaB round 2
batch: 28
splitting decisions: 
split level 0: [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] 
split level 1: [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 95] [/input.11, 86] [/input.11, 86] [/input.11, 86] [/input.11, 95] [/input.11, 86] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 112 = 0.6785714285714286
pruning-in-iteration extra time: 0.012078285217285156
Time: prepare 0.0110    bound 0.4034    transfer 0.0012    finalize 0.0073    func 0.4231    
Accumulated time: func 0.8816    prepare 0.0195    bound 0.8452    transfer 0.0025    finalize 0.0150    
Current worst splitting domains lb-rhs (depth):
-1.31587 (9), -1.30245 (9), -1.02255 (9), -0.98348 (9), -0.96266 (9), -0.95140 (9), -0.95098 (9), -0.94888 (9), -0.91580 (9), -0.77570 (9), -0.75467 (9), -0.73439 (9), -0.69479 (9), -0.64633 (9), -0.63244 (9), -0.57124 (9), -0.49458 (9), -0.47876 (9), -0.42721 (9), -0.41775 (9), 
Length of domains: 36
Time: pickout 0.0013    decision 0.0265    set_bounds 0.0075    solve 0.4232    add 0.0022    
Accumulated time: pickout 0.0020    decision 0.0676    set_bounds 0.0233    solve 0.8818    add 0.0044    
Current (lb-rhs): -1.3158674240112305
64 domains visited
Cumulative time: 0.9874444007873535

BaB round 3
batch: 36
splitting decisions: 
split level 0: [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 5] [/input.11, 95] [/input.7, 142] [/input.11, 86] [/input.11, 95] 
split level 1: [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 86] [/input.11, 5] [/input.11, 95] [/input.11, 95] [/input.7, 723] 
pruning_in_iteration open status: True
ratio of positive domain = 90 / 144 = 0.625
pruning-in-iteration extra time: 0.013605594635009766
Time: prepare 0.0164    bound 0.4371    transfer 0.0013    finalize 0.0104    func 0.4652    
Accumulated time: func 1.3468    prepare 0.0362    bound 1.2824    transfer 0.0038    finalize 0.0253    
Current worst splitting domains lb-rhs (depth):
-1.05254 (11), -0.92694 (11), -0.90835 (11), -0.77199 (11), -0.74673 (11), -0.74269 (11), -0.73492 (11), -0.72130 (11), -0.60723 (11), -0.58821 (11), -0.54079 (11), -0.53475 (11), -0.53471 (11), -0.50777 (11), -0.50395 (11), -0.47966 (11), -0.46036 (11), -0.45914 (11), -0.43272 (11), -0.42858 (11), 
Length of domains: 54
Time: pickout 0.0014    decision 0.0276    set_bounds 0.0097    solve 0.4653    add 0.0024    
Accumulated time: pickout 0.0033    decision 0.0953    set_bounds 0.0329    solve 1.3471    add 0.0068    
Current (lb-rhs): -1.0525364875793457
118 domains visited
Cumulative time: 1.4950072765350342

BaB round 4
batch: 54
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 95] [/input.11, 5] [/input.11, 1] [/input.11, 0] [/input.11, 0] [/input.11, 5] [/input.11, 1] [/input.11, 5] [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 108 = 0.4907407407407407
pruning-in-iteration extra time: 0.013967514038085938
Time: prepare 0.0128    bound 0.4516    transfer 0.0011    finalize 0.0076    func 0.4734    
Accumulated time: func 1.8202    prepare 0.0494    bound 1.7340    transfer 0.0048    finalize 0.0329    
Current worst splitting domains lb-rhs (depth):
-0.93510 (12), -0.78305 (12), -0.76661 (12), -0.63437 (12), -0.62898 (12), -0.62425 (12), -0.56401 (12), -0.49190 (12), -0.47922 (12), -0.46970 (12), -0.46828 (12), -0.42540 (12), -0.42170 (12), -0.37745 (12), -0.37588 (12), -0.36990 (12), -0.36652 (12), -0.33683 (12), -0.32221 (12), -0.32033 (12), 
Length of domains: 55
Time: pickout 0.0015    decision 0.0273    set_bounds 0.0052    solve 0.4735    add 0.0024    
Accumulated time: pickout 0.0049    decision 0.1226    set_bounds 0.0381    solve 1.8206    add 0.0092    
Current (lb-rhs): -0.9350965023040771
173 domains visited
Cumulative time: 2.005939245223999

BaB round 5
batch: 55
splitting decisions: 
split level 0: [/input.11, 86] [/input.11, 5] [/input.11, 95] [/input.11, 5] [/input.7, 413] [/input.11, 5] [/input.7, 723] [/input.11, 0] [/input.11, 58] [/input.11, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 110 = 0.5636363636363637
pruning-in-iteration extra time: 0.014278411865234375
Time: prepare 0.0139    bound 0.4554    transfer 0.0011    finalize 0.0084    func 0.4790    
Accumulated time: func 2.2992    prepare 0.0636    bound 2.1894    transfer 0.0059    finalize 0.0413    
Current worst splitting domains lb-rhs (depth):
-0.66710 (13), -0.66509 (13), -0.64664 (13), -0.64397 (13), -0.46547 (13), -0.37597 (13), -0.37562 (13), -0.37081 (13), -0.36398 (13), -0.36277 (13), -0.32563 (13), -0.32389 (13), -0.31421 (13), -0.30674 (13), -0.29694 (13), -0.27828 (13), -0.27677 (13), -0.27659 (13), -0.27423 (13), -0.26485 (13), 
Length of domains: 48
Time: pickout 0.0014    decision 0.0277    set_bounds 0.0051    solve 0.4791    add 0.0023    
Accumulated time: pickout 0.0063    decision 0.1503    set_bounds 0.0432    solve 2.2997    add 0.0115    
Current (lb-rhs): -0.6671013832092285
221 domains visited
Cumulative time: 2.52252197265625

BaB round 6
batch: 48
splitting decisions: 
split level 0: [/input.11, 0] [/input.7, 723] [/input.11, 0] [/input.7, 723] [/input.11, 0] [/input.11, 5] [/input.11, 58] [/input.7, 142] [/input.11, 0] [/input.11, 0] 
split level 1: [/input.11, 1] [/input.7, 597] [/input.11, 1] [/input.11, 1] [/input.11, 1] [/input.7, 597] [/input.11, 73] [/input.11, 58] [/input.11, 1] [/input.11, 1] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 192 = 0.859375
pruning-in-iteration extra time: 0.013464212417602539
Time: prepare 0.0251    bound 0.4384    transfer 0.0015    finalize 0.0137    func 0.4788    
Accumulated time: func 2.7780    prepare 0.0891    bound 2.6278    transfer 0.0074    finalize 0.0550    
Current worst splitting domains lb-rhs (depth):
-0.32006 (15), -0.31151 (15), -0.29410 (15), -0.29169 (15), -0.24346 (15), -0.23480 (15), -0.20115 (15), -0.18115 (15), -0.18004 (15), -0.16313 (15), -0.16170 (15), -0.15908 (15), -0.14804 (15), -0.09007 (15), -0.08362 (15), -0.08045 (15), -0.06109 (15), -0.05164 (15), -0.04762 (15), -0.04537 (15), 
Length of domains: 27
Time: pickout 0.0013    decision 0.0295    set_bounds 0.0130    solve 0.4790    add 0.0019    
Accumulated time: pickout 0.0076    decision 0.1798    set_bounds 0.0562    solve 2.7786    add 0.0134    
Current (lb-rhs): -0.32006001472473145
248 domains visited
Cumulative time: 3.0493454933166504

BaB round 7
batch: 27
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 723] [/input.11, 58] [/input.7, 723] [/input.11, 58] [/input.11, 58] [/input.11, 1] [/input.7, 723] [/input.11, 1] [/input.11, 58] 
split level 1: [/input.7, 723] [/input.11, 58] [/input.7, 723] [/input.11, 58] [/input.7, 723] [/input.7, 723] [/input.7, 597] [/input.11, 58] [/input.11, 73] [/input.7, 723] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 108 = 0.9537037037037037
pruning-in-iteration extra time: 0.013706207275390625
Time: prepare 0.0154    bound 0.4537    transfer 0.0011    finalize 0.0091    func 0.4793    
Accumulated time: func 3.2573    prepare 0.1048    bound 3.0815    transfer 0.0085    finalize 0.0641    
Current worst splitting domains lb-rhs (depth):
-0.10988 (17), -0.09690 (17), -0.09264 (17), -0.07147 (17), -0.00440 (17), 
Length of domains: 5
Time: pickout 0.0016    decision 0.0261    set_bounds 0.0085    solve 0.4794    add 0.0013    
Accumulated time: pickout 0.0092    decision 0.2059    set_bounds 0.0647    solve 3.2580    add 0.0147    
Current (lb-rhs): -0.1098780632019043
253 domains visited
Cumulative time: 3.567636013031006

BaB round 8
batch: 5
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
split level 1: [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] 
split level 2: [/input.7, 722] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] 
split level 3: [/input.7, 597] [/input.7, 722] [/input.7, 722] [/input.7, 722] [/input.7, 722] 
split level 4: [/input.11, 13] [/input.11, 13] [/input.11, 13] [/input.11, 13] [/input.11, 13] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0210    bound 0.0077    transfer 0.0008    finalize 0.0093    func 0.0388    
Accumulated time: func 3.2961    prepare 0.1263    bound 3.0892    transfer 0.0092    finalize 0.0734    
Length of domains: 0
Time: pickout 0.0013    decision 0.0348    set_bounds 0.0202    solve 0.0390    add 0.0001    
Accumulated time: pickout 0.0105    decision 0.2406    set_bounds 0.0850    solve 3.2970    add 0.0148    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
253 domains visited
Cumulative time: 3.664170026779175


Properties batch 2, size 1
Remaining timeout: 290.6921021938324
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.82799411]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.82799411]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 41] 
split level 6: [/input.7, 142] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.988380432128906e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0006    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0409    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0409    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09621334075927734


Properties batch 3, size 1
Remaining timeout: 290.4458487033844
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.33655477]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.33655477]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 80] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 51] 
split level 4: [/input.7, 597] 
split level 5: [/input.11, 99] 
split level 6: [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 125 / 128 = 0.9765625
pruning-in-iteration extra time: 0.013538360595703125
Time: prepare 0.0145    bound 0.4453    transfer 0.0011    finalize 0.0095    func 0.4706    
Accumulated time: func 0.4706    prepare 0.0151    bound 0.4453    transfer 0.0011    finalize 0.0095    
Current worst splitting domains lb-rhs (depth):
-0.48332 (7), -0.46282 (7), -0.21481 (7), 
Length of domains: 3
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4707    add 0.0012    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4707    add 0.0012    
Current (lb-rhs): -0.483315110206604
3 domains visited
Cumulative time: 0.5383031368255615

BaB round 2
batch: 3
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 97] 
split level 1: [/input.7, 592] [/input.11, 59] [/input.11, 59] 
split level 2: [/input.11, 59] [/input.11, 12] [/input.11, 73] 
split level 3: [/input.11, 73] [/input.11, 5] [/input.11, 12] 
split level 4: [/input.11, 5] [/input.11, 73] [/input.11, 5] 
split level 5: [/input.7, 598] [/input.7, 598] [/input.7, 598] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0261    bound 0.0077    transfer 0.0009    finalize 0.0113    func 0.0460    
Accumulated time: func 0.5166    prepare 0.0419    bound 0.4530    transfer 0.0020    finalize 0.0208    
Length of domains: 0
Time: pickout 0.0013    decision 0.0398    set_bounds 0.0264    solve 0.0461    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0809    set_bounds 0.0434    solve 0.5168    add 0.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.6533927917480469


Properties batch 4, size 1
Remaining timeout: 289.6456289291382
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.96655607]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.96655607]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 52] 
split level 4: [/input.11, 86] 
split level 5: [/input.7, 597] 
split level 6: [/input.11, 95] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0169    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09661626815795898


Properties batch 5, size 1
Remaining timeout: 289.40081548690796
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.61192131]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.61192131]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 51] 
split level 2: [/input.11, 86] 
split level 3: [/input.7, 142] 
split level 4: [/input.7, 597] 
split level 5: [/input.7, 723] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.916854858398438e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0006    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0152    bound 0.0078    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09650230407714844


Properties batch 6, size 1
Remaining timeout: 289.15742206573486
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.99650145]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.99650145]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 86] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 89] 
split level 5: [/input.7, 257] 
split level 6: [/input.11, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 128 = 0.6015625
pruning-in-iteration extra time: 0.013460636138916016
Time: prepare 0.0146    bound 0.4521    transfer 0.0013    finalize 0.0096    func 0.4778    
Accumulated time: func 0.4778    prepare 0.0152    bound 0.4521    transfer 0.0013    finalize 0.0096    
Current worst splitting domains lb-rhs (depth):
-1.76302 (7), -1.74631 (7), -1.68155 (7), -1.60085 (7), -1.46583 (7), -1.41128 (7), -1.40011 (7), -1.34827 (7), -1.26420 (7), -1.22699 (7), -1.21140 (7), -1.13388 (7), -1.12488 (7), -1.10414 (7), -1.07738 (7), -0.76721 (7), -0.73983 (7), -0.72781 (7), -0.71212 (7), -0.70044 (7), 
Length of domains: 51
Time: pickout 0.0007    decision 0.0410    set_bounds 0.0170    solve 0.4779    add 0.0023    
Accumulated time: pickout 0.0007    decision 0.0410    set_bounds 0.0170    solve 0.4779    add 0.0023    
Current (lb-rhs): -1.7630195617675781
51 domains visited
Cumulative time: 0.5466639995574951

BaB round 2
batch: 51
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 637] [/input.7, 637] [/input.7, 637] [/input.11, 25] [/input.7, 637] [/input.7, 637] [/input.11, 25] [/input.7, 637] [/input.11, 25] 
split level 1: [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 36] [/input.11, 25] [/input.11, 25] [/input.7, 637] [/input.11, 25] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 167 / 204 = 0.8186274509803921
pruning-in-iteration extra time: 0.013263463973999023
Time: prepare 0.0279    bound 0.4511    transfer 0.0015    finalize 0.0143    func 0.4949    
Accumulated time: func 0.9727    prepare 0.0434    bound 0.9032    transfer 0.0029    finalize 0.0240    
Current worst splitting domains lb-rhs (depth):
-1.60725 (9), -1.57973 (9), -1.51124 (9), -1.44144 (9), -1.26650 (9), -1.17520 (9), -1.17491 (9), -1.15316 (9), -1.00741 (9), -0.99685 (9), -0.97552 (9), -0.87665 (9), -0.83863 (9), -0.83585 (9), -0.83151 (9), -0.49100 (9), -0.44081 (9), -0.43190 (9), -0.41681 (9), -0.38038 (9), 
Length of domains: 37
Time: pickout 0.0014    decision 0.0299    set_bounds 0.0151    solve 0.4950    add 0.0020    
Accumulated time: pickout 0.0021    decision 0.0709    set_bounds 0.0321    solve 0.9729    add 0.0044    
Current (lb-rhs): -1.6072514057159424
88 domains visited
Cumulative time: 1.0921485424041748

BaB round 3
batch: 37
splitting decisions: 
split level 0: [/input.7, 637] [/input.11, 14] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 14] 
split level 1: [/input.11, 36] [/input.11, 36] [/input.7, 142] [/input.7, 142] [/input.7, 636] [/input.11, 14] [/input.7, 636] [/input.7, 142] [/input.7, 142] [/input.11, 36] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 148 = 0.6959459459459459
pruning-in-iteration extra time: 0.012670040130615234
Time: prepare 0.0204    bound 0.4223    transfer 0.0013    finalize 0.0106    func 0.4546    
Accumulated time: func 1.4273    prepare 0.0642    bound 1.3255    transfer 0.0041    finalize 0.0345    
Current worst splitting domains lb-rhs (depth):
-1.36665 (11), -1.35239 (11), -1.31486 (11), -1.22703 (11), -1.07683 (11), -1.04363 (11), -0.96538 (11), -0.93931 (11), -0.91016 (11), -0.83752 (11), -0.81750 (11), -0.80099 (11), -0.76939 (11), -0.74033 (11), -0.73669 (11), -0.73328 (11), -0.68261 (11), -0.62066 (11), -0.60355 (11), -0.59101 (11), 
Length of domains: 45
Time: pickout 0.0015    decision 0.0266    set_bounds 0.0109    solve 0.4547    add 0.0023    
Accumulated time: pickout 0.0036    decision 0.0975    set_bounds 0.0430    solve 1.4276    add 0.0066    
Current (lb-rhs): -1.366650104522705
133 domains visited
Cumulative time: 1.5897083282470703

BaB round 4
batch: 45
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 142] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
split level 1: [/input.11, 12] [/input.11, 73] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 142] [/input.7, 638] [/input.7, 142] [/input.7, 636] [/input.7, 636] 
pruning_in_iteration open status: True
ratio of positive domain = 113 / 180 = 0.6277777777777778
pruning-in-iteration extra time: 0.013278722763061523
Time: prepare 0.0248    bound 0.4481    transfer 0.0013    finalize 0.0123    func 0.4866    
Accumulated time: func 1.9139    prepare 0.0893    bound 1.7736    transfer 0.0055    finalize 0.0469    
Current worst splitting domains lb-rhs (depth):
-1.20110 (13), -1.16235 (13), -1.09341 (13), -1.04267 (13), -0.96805 (13), -0.92843 (13), -0.79118 (13), -0.78625 (13), -0.77212 (13), -0.75477 (13), -0.74978 (13), -0.73831 (13), -0.70535 (13), -0.69692 (13), -0.67885 (13), -0.66310 (13), -0.63636 (13), -0.57198 (13), -0.56284 (13), -0.55903 (13), 
Length of domains: 67
Time: pickout 0.0015    decision 0.0287    set_bounds 0.0136    solve 0.4868    add 0.0023    
Accumulated time: pickout 0.0051    decision 0.1262    set_bounds 0.0566    solve 1.9144    add 0.0089    
Current (lb-rhs): -1.201103687286377
200 domains visited
Cumulative time: 2.124110460281372

BaB round 5
batch: 67
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.11, 81] [/input.7, 638] [/input.11, 81] [/input.11, 81] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 49 / 134 = 0.3656716417910447
pruning-in-iteration extra time: 0.01248025894165039
Time: prepare 0.0190    bound 0.4408    transfer 0.0013    finalize 0.0113    func 0.4725    
Accumulated time: func 2.3864    prepare 0.1086    bound 2.2143    transfer 0.0067    finalize 0.0582    
Current worst splitting domains lb-rhs (depth):
-1.09931 (14), -1.06119 (14), -0.96648 (14), -0.93555 (14), -0.83895 (14), -0.81059 (14), -0.75350 (14), -0.67174 (14), -0.66528 (14), -0.65926 (14), -0.65745 (14), -0.64892 (14), -0.64632 (14), -0.62298 (14), -0.60198 (14), -0.60125 (14), -0.58575 (14), -0.53661 (14), -0.52340 (14), -0.52098 (14), 
Length of domains: 85
Time: pickout 0.0014    decision 0.0321    set_bounds 0.0059    solve 0.4726    add 0.0026    
Accumulated time: pickout 0.0065    decision 0.1584    set_bounds 0.0624    solve 2.3870    add 0.0116    
Current (lb-rhs): -1.0993146896362305
285 domains visited
Cumulative time: 2.639845848083496

BaB round 6
batch: 85
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 81] [/input.11, 12] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 12] [/input.11, 81] [/input.11, 81] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 170 = 0.4411764705882353
pruning-in-iteration extra time: 0.012367963790893555
Time: prepare 0.0243    bound 0.4607    transfer 0.0013    finalize 0.0123    func 0.4987    
Accumulated time: func 2.8851    prepare 0.1333    bound 2.6751    transfer 0.0081    finalize 0.0705    
Current worst splitting domains lb-rhs (depth):
-0.99652 (15), -0.96048 (15), -0.85811 (15), -0.83154 (15), -0.73662 (15), -0.69515 (15), -0.63034 (15), -0.56543 (15), -0.53849 (15), -0.53508 (15), -0.53176 (15), -0.52939 (15), -0.52444 (15), -0.52438 (15), -0.52392 (15), -0.50953 (15), -0.50707 (15), -0.49640 (15), -0.48118 (15), -0.46579 (15), 
Length of domains: 95
Time: pickout 0.0015    decision 0.0415    set_bounds 0.0075    solve 0.4989    add 0.0027    
Accumulated time: pickout 0.0080    decision 0.1998    set_bounds 0.0699    solve 2.8859    add 0.0143    
Current (lb-rhs): -0.9965164661407471
380 domains visited
Cumulative time: 3.1933603286743164

BaB round 7
batch: 95
splitting decisions: 
split level 0: [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 81] [/input.7, 258] [/input.11, 81] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 190 = 0.5421052631578948
pruning-in-iteration extra time: 0.013980388641357422
Time: prepare 0.0268    bound 0.4702    transfer 0.0016    finalize 0.0139    func 0.5126    
Accumulated time: func 3.3977    prepare 0.1605    bound 3.1453    transfer 0.0097    finalize 0.0843    
Current worst splitting domains lb-rhs (depth):
-0.87046 (16), -0.83549 (16), -0.77356 (16), -0.76495 (16), -0.75000 (16), -0.70706 (16), -0.60135 (16), -0.57911 (16), -0.57720 (16), -0.56091 (16), -0.55839 (16), -0.49299 (16), -0.42850 (16), -0.42734 (16), -0.42687 (16), -0.41684 (16), -0.41398 (16), -0.40820 (16), -0.40698 (16), -0.40205 (16), 
Length of domains: 87
Time: pickout 0.0016    decision 0.0312    set_bounds 0.0086    solve 0.5128    add 0.0025    
Accumulated time: pickout 0.0096    decision 0.2310    set_bounds 0.0785    solve 3.3987    add 0.0168    
Current (lb-rhs): -0.8704578876495361
467 domains visited
Cumulative time: 3.7516798973083496

BaB round 8
batch: 87
splitting decisions: 
split level 0: [/input.7, 638] [/input.7, 258] [/input.7, 258] [/input.7, 258] [/input.7, 258] [/input.11, 70] [/input.7, 638] [/input.11, 70] [/input.7, 638] [/input.11, 70] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 174 = 0.40804597701149425
pruning-in-iteration extra time: 0.01352071762084961
Time: prepare 0.0238    bound 0.4719    transfer 0.0015    finalize 0.0128    func 0.5101    
Accumulated time: func 3.9078    prepare 0.1846    bound 3.6172    transfer 0.0112    finalize 0.0971    
Current worst splitting domains lb-rhs (depth):
-0.80187 (17), -0.77387 (17), -0.74244 (17), -0.72224 (17), -0.68016 (17), -0.66036 (17), -0.62537 (17), -0.56462 (17), -0.56453 (17), -0.54895 (17), -0.54798 (17), -0.53340 (17), -0.49987 (17), -0.48984 (17), -0.47356 (17), -0.46603 (17), -0.45277 (17), -0.40441 (17), -0.39796 (17), -0.38308 (17), 
Length of domains: 103
Time: pickout 0.0018    decision 0.0304    set_bounds 0.0077    solve 0.5102    add 0.0028    
Accumulated time: pickout 0.0114    decision 0.2614    set_bounds 0.0862    solve 3.9089    add 0.0196    
Current (lb-rhs): -0.8018679618835449
570 domains visited
Cumulative time: 4.305944204330444

BaB round 9
batch: 103
splitting decisions: 
split level 0: [/input.7, 258] [/input.11, 58] [/input.11, 58] [/input.7, 142] [/input.11, 70] [/input.11, 58] [/input.11, 70] [/input.11, 70] [/input.7, 638] [/input.11, 70] 
pruning_in_iteration open status: True
ratio of positive domain = 98 / 206 = 0.47572815533980584
pruning-in-iteration extra time: 0.01255655288696289
Time: prepare 0.0291    bound 0.4905    transfer 0.0016    finalize 0.0143    func 0.5356    
Accumulated time: func 4.4434    prepare 0.2140    bound 4.1077    transfer 0.0128    finalize 0.1115    
Current worst splitting domains lb-rhs (depth):
-0.75451 (18), -0.69161 (18), -0.64486 (18), -0.64043 (18), -0.62408 (18), -0.60325 (18), -0.57741 (18), -0.51514 (18), -0.51473 (18), -0.49578 (18), -0.48462 (18), -0.46212 (18), -0.45523 (18), -0.45202 (18), -0.44542 (18), -0.44194 (18), -0.42496 (18), -0.42396 (18), -0.41590 (18), -0.39867 (18), 
Length of domains: 108
Time: pickout 0.0017    decision 0.0322    set_bounds 0.0088    solve 0.5358    add 0.0027    
Accumulated time: pickout 0.0131    decision 0.2936    set_bounds 0.0950    solve 4.4447    add 0.0223    
Current (lb-rhs): -0.7545106410980225
678 domains visited
Cumulative time: 4.888896226882935

BaB round 10
batch: 108
splitting decisions: 
split level 0: [/input.11, 58] [/input.7, 258] [/input.7, 258] [/input.11, 58] [/input.7, 413] [/input.7, 413] [/input.7, 258] [/input.7, 638] [/input.7, 413] [/input.7, 258] 
pruning_in_iteration open status: True
ratio of positive domain = 110 / 216 = 0.5092592592592593
pruning-in-iteration extra time: 0.01292872428894043
Time: prepare 0.0301    bound 0.4442    transfer 0.0016    finalize 0.0158    func 0.4917    
Accumulated time: func 4.9352    prepare 0.2444    bound 4.5519    transfer 0.0144    finalize 0.1272    
Current worst splitting domains lb-rhs (depth):
-0.62478 (19), -0.60818 (19), -0.56860 (19), -0.55759 (19), -0.51988 (19), -0.51918 (19), -0.49766 (19), -0.49759 (19), -0.48243 (19), -0.47712 (19), -0.47334 (19), -0.45499 (19), -0.44178 (19), -0.40840 (19), -0.40049 (19), -0.39353 (19), -0.39318 (19), -0.38752 (19), -0.37941 (19), -0.37890 (19), 
Length of domains: 106
Time: pickout 0.0016    decision 0.0360    set_bounds 0.0094    solve 0.4919    add 0.0027    
Accumulated time: pickout 0.0147    decision 0.3296    set_bounds 0.1044    solve 4.9366    add 0.0250    
Current (lb-rhs): -0.6247783899307251
784 domains visited
Cumulative time: 5.432385683059692

BaB round 11
batch: 106
splitting decisions: 
split level 0: [/input.7, 413] [/input.7, 413] [/input.11, 58] [/input.11, 58] [/input.7, 638] [/input.11, 58] [/input.7, 413] [/input.11, 58] [/input.7, 413] [/input.7, 413] 
pruning_in_iteration open status: True
ratio of positive domain = 93 / 212 = 0.4386792452830188
pruning-in-iteration extra time: 0.013560771942138672
Time: prepare 0.0305    bound 0.4503    transfer 0.0015    finalize 0.0148    func 0.4971    
Accumulated time: func 5.4323    prepare 0.2752    bound 5.0022    transfer 0.0159    finalize 0.1420    
Current worst splitting domains lb-rhs (depth):
-0.54672 (20), -0.52928 (20), -0.49491 (20), -0.48108 (20), -0.44708 (20), -0.44208 (20), -0.42794 (20), -0.42065 (20), -0.41769 (20), -0.40404 (20), -0.38623 (20), -0.38557 (20), -0.38206 (20), -0.36163 (20), -0.34440 (20), -0.34360 (20), -0.33939 (20), -0.33003 (20), -0.32815 (20), -0.32624 (20), 
Length of domains: 119
Time: pickout 0.0017    decision 0.0374    set_bounds 0.0090    solve 0.4973    add 0.0028    
Accumulated time: pickout 0.0164    decision 0.3670    set_bounds 0.1133    solve 5.4340    add 0.0277    
Current (lb-rhs): -0.5467199087142944
903 domains visited
Cumulative time: 5.982198715209961

BaB round 12
batch: 119
splitting decisions: 
split level 0: [/input.7, 258] [/input.7, 258] [/input.11, 52] [/input.7, 413] [/input.7, 413] [/input.11, 58] [/input.11, 58] [/input.7, 593] [/input.7, 413] [/input.11, 52] 
pruning_in_iteration open status: True
ratio of positive domain = 114 / 238 = 0.4789915966386554
pruning-in-iteration extra time: 0.013220548629760742
Time: prepare 0.0335    bound 0.4690    transfer 0.0016    finalize 0.0179    func 0.5222    
Accumulated time: func 5.9545    prepare 0.3091    bound 5.4712    transfer 0.0175    finalize 0.1599    
Current worst splitting domains lb-rhs (depth):
-0.50078 (21), -0.48182 (21), -0.39641 (21), -0.39220 (21), -0.38975 (21), -0.37649 (21), -0.37120 (21), -0.36589 (21), -0.35765 (21), -0.34020 (21), -0.33747 (21), -0.33702 (21), -0.33560 (21), -0.32372 (21), -0.31495 (21), -0.31123 (21), -0.29271 (21), -0.29222 (21), -0.27910 (21), -0.26433 (21), 
Length of domains: 124
Time: pickout 0.0017    decision 0.0375    set_bounds 0.0099    solve 0.5224    add 0.0030    
Accumulated time: pickout 0.0181    decision 0.4046    set_bounds 0.1232    solve 5.9563    add 0.0308    
Current (lb-rhs): -0.500777006149292
1027 domains visited
Cumulative time: 6.558565139770508

BaB round 13
batch: 124
splitting decisions: 
split level 0: [/input.11, 52] [/input.11, 63] [/input.7, 593] [/input.11, 52] [/input.7, 711] [/input.11, 52] [/input.11, 63] [/input.11, 63] [/input.11, 58] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 142 / 248 = 0.5725806451612903
pruning-in-iteration extra time: 0.013702869415283203
Time: prepare 0.0351    bound 0.4578    transfer 0.0016    finalize 0.0175    func 0.5122    
Accumulated time: func 6.4667    prepare 0.3445    bound 5.9290    transfer 0.0192    finalize 0.1774    
Current worst splitting domains lb-rhs (depth):
-0.43547 (22), -0.41839 (22), -0.33744 (22), -0.32433 (22), -0.32240 (22), -0.31000 (22), -0.28998 (22), -0.27558 (22), -0.27284 (22), -0.27254 (22), -0.26215 (22), -0.26026 (22), -0.25375 (22), -0.25220 (22), -0.24282 (22), -0.23015 (22), -0.22695 (22), -0.22666 (22), -0.22532 (22), -0.22330 (22), 
Length of domains: 106
Time: pickout 0.0018    decision 0.0447    set_bounds 0.0104    solve 0.5123    add 0.0028    
Accumulated time: pickout 0.0199    decision 0.4493    set_bounds 0.1337    solve 6.4686    add 0.0336    
Current (lb-rhs): -0.43546533584594727
1133 domains visited
Cumulative time: 7.1327736377716064

BaB round 14
batch: 106
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 52] [/input.7, 711] [/input.11, 52] [/input.7, 711] [/input.11, 52] [/input.11, 52] [/input.11, 63] [/input.11, 52] [/input.11, 52] 
pruning_in_iteration open status: True
ratio of positive domain = 141 / 212 = 0.6650943396226415
pruning-in-iteration extra time: 0.013032913208007812
Time: prepare 0.0300    bound 0.4317    transfer 0.0016    finalize 0.0151    func 0.4786    
Accumulated time: func 6.9453    prepare 0.3749    bound 6.3607    transfer 0.0208    finalize 0.1925    
Current worst splitting domains lb-rhs (depth):
-0.39906 (23), -0.38320 (23), -0.28013 (23), -0.27797 (23), -0.26518 (23), -0.23784 (23), -0.23699 (23), -0.22807 (23), -0.21715 (23), -0.21239 (23), -0.21066 (23), -0.20681 (23), -0.19714 (23), -0.19523 (23), -0.19390 (23), -0.19341 (23), -0.18503 (23), -0.18151 (23), -0.17837 (23), -0.17491 (23), 
Length of domains: 71
Time: pickout 0.0021    decision 0.0322    set_bounds 0.0090    solve 0.4788    add 0.0023    
Accumulated time: pickout 0.0219    decision 0.4815    set_bounds 0.1427    solve 6.9474    add 0.0359    
Current (lb-rhs): -0.3990616798400879
1204 domains visited
Cumulative time: 7.659552812576294

BaB round 15
batch: 71
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.7, 593] [/input.7, 413] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.7, 711] [/input.7, 413] [/input.11, 63] 
pruning_in_iteration open status: True
ratio of positive domain = 80 / 142 = 0.5633802816901409
pruning-in-iteration extra time: 0.01319122314453125
Time: prepare 0.0203    bound 0.4308    transfer 0.0012    finalize 0.0102    func 0.4626    
Accumulated time: func 7.4079    prepare 0.3956    bound 6.7915    transfer 0.0220    finalize 0.2027    
Current worst splitting domains lb-rhs (depth):
-0.28920 (24), -0.27490 (24), -0.27365 (24), -0.25185 (24), -0.24578 (24), -0.23242 (24), -0.19674 (24), -0.18008 (24), -0.17871 (24), -0.17173 (24), -0.17136 (24), -0.16703 (24), -0.16349 (24), -0.15707 (24), -0.15537 (24), -0.15421 (24), -0.15205 (24), -0.14770 (24), -0.14751 (24), -0.14007 (24), 
Length of domains: 62
Time: pickout 0.0016    decision 0.0289    set_bounds 0.0065    solve 0.4627    add 0.0023    
Accumulated time: pickout 0.0235    decision 0.5104    set_bounds 0.1492    solve 7.4101    add 0.0383    
Current (lb-rhs): -0.2892003059387207
1266 domains visited
Cumulative time: 8.162912368774414

BaB round 16
batch: 62
splitting decisions: 
split level 0: [/input.11, 80] [/input.11, 63] [/input.11, 65] [/input.11, 65] [/input.11, 63] [/input.11, 65] [/input.11, 65] [/input.7, 703] [/input.11, 63] [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 84 / 124 = 0.6774193548387097
pruning-in-iteration extra time: 0.013999462127685547
Time: prepare 0.0178    bound 0.4580    transfer 0.0012    finalize 0.0095    func 0.4866    
Accumulated time: func 7.8945    prepare 0.4137    bound 7.2494    transfer 0.0232    finalize 0.2122    
Current worst splitting domains lb-rhs (depth):
-0.23805 (25), -0.22907 (25), -0.22467 (25), -0.22322 (25), -0.21494 (25), -0.20225 (25), -0.14691 (25), -0.14382 (25), -0.12822 (25), -0.11901 (25), -0.11690 (25), -0.11429 (25), -0.11359 (25), -0.11086 (25), -0.10457 (25), -0.10290 (25), -0.09893 (25), -0.09747 (25), -0.09634 (25), -0.09334 (25), 
Length of domains: 40
Time: pickout 0.0016    decision 0.0280    set_bounds 0.0056    solve 0.4867    add 0.0023    
Accumulated time: pickout 0.0251    decision 0.5384    set_bounds 0.1548    solve 7.8968    add 0.0405    
Current (lb-rhs): -0.23804688453674316
1306 domains visited
Cumulative time: 8.688379287719727

BaB round 17
batch: 40
splitting decisions: 
split level 0: [/input.7, 597] [/input.7, 597] [/input.7, 32] [/input.7, 32] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.7, 593] [/input.11, 97] [/input.11, 80] 
split level 1: [/input.7, 711] [/input.7, 711] [/input.7, 593] [/input.7, 593] [/input.7, 711] [/input.7, 711] [/input.7, 703] [/input.7, 703] [/input.7, 593] [/input.7, 182] 
pruning_in_iteration open status: True
ratio of positive domain = 136 / 160 = 0.85
pruning-in-iteration extra time: 0.013660907745361328
Time: prepare 0.0224    bound 0.4416    transfer 0.0012    finalize 0.0116    func 0.4769    
Accumulated time: func 8.3713    prepare 0.4365    bound 7.6910    transfer 0.0244    finalize 0.2238    
Current worst splitting domains lb-rhs (depth):
-0.12598 (27), -0.11859 (27), -0.10849 (27), -0.09545 (27), -0.09324 (27), -0.08537 (27), -0.07871 (27), -0.07457 (27), -0.07035 (27), -0.06961 (27), -0.05330 (27), -0.04944 (27), -0.03957 (27), -0.03657 (27), -0.03367 (27), -0.02852 (27), -0.02641 (27), -0.02247 (27), -0.02070 (27), -0.01735 (27), 
Length of domains: 24
Time: pickout 0.0015    decision 0.0283    set_bounds 0.0113    solve 0.4770    add 0.0019    
Accumulated time: pickout 0.0267    decision 0.5668    set_bounds 0.1662    solve 8.3738    add 0.0424    
Current (lb-rhs): -0.12598371505737305
1330 domains visited
Cumulative time: 9.21029806137085

BaB round 18
batch: 24
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 65] [/input.11, 97] [/input.7, 703] [/input.7, 703] [/input.11, 97] [/input.11, 97] [/input.11, 65] [/input.7, 703] 
split level 1: [/input.7, 593] [/input.7, 593] [/input.7, 413] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 711] [/input.7, 413] [/input.7, 711] 
split level 2: [/input.7, 597] [/input.7, 597] [/input.7, 592] [/input.11, 0] [/input.7, 182] [/input.7, 182] [/input.7, 597] [/input.11, 0] [/input.7, 592] [/input.11, 0] 

all verified at 1th iter
pruning_in_iteration open status: True
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 0.0005285739898681641
Time: prepare 0.0265    bound 0.0252    transfer 0.0011    finalize 0.0121    func 0.0650    
Accumulated time: func 8.4363    prepare 0.4633    bound 7.7162    transfer 0.0255    finalize 0.2360    
Length of domains: 0
Time: pickout 0.0014    decision 0.0270    set_bounds 0.0180    solve 0.0651    add 0.0001    
Accumulated time: pickout 0.0281    decision 0.5938    set_bounds 0.1841    solve 8.4389    add 0.0425    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1330 domains visited
Cumulative time: 9.323283672332764


Properties batch 7, size 1
Remaining timeout: 279.68726229667664
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39723468]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39723468]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 99] 
split level 5: [/input.7, 142] 
split level 6: [/input.11, 51] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0151    bound 0.0077    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0305    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0305    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09634947776794434


Properties batch 8, size 1
Remaining timeout: 279.4392635822296
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.67811632]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.71648741,  0.12089016, -0.65323114, -1.33737993,  6.92165613,
        -1.59787202,  0.03531589,  1.75851297, -3.03640032,  1.34642696],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.67811632]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 742
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 230
Node /27 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1010
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 128 = 0.6875
pruning-in-iteration extra time: 0.013627052307128906
Time: prepare 0.0076    bound 0.4311    transfer 0.0011    finalize 0.0078    func 0.4477    
Accumulated time: func 0.4477    prepare 0.0082    bound 0.4311    transfer 0.0011    finalize 0.0078    
Current worst splitting domains lb-rhs (depth):
-1.46661 (7), -1.43777 (7), -1.42133 (7), -1.28109 (7), -1.25580 (7), -1.25478 (7), -1.24804 (7), -1.21776 (7), -1.20263 (7), -1.19983 (7), -1.15884 (7), -1.12474 (7), -1.05870 (7), -1.04367 (7), -0.96493 (7), -0.94309 (7), -0.88185 (7), -0.81707 (7), -0.72464 (7), -0.70464 (7), 
Length of domains: 40
Time: pickout 0.0006    decision 0.0416    set_bounds 0.0157    solve 0.4477    add 0.0022    
Accumulated time: pickout 0.0006    decision 0.0416    set_bounds 0.0157    solve 0.4477    add 0.0022    
Current (lb-rhs): -1.4666144847869873
40 domains visited
Cumulative time: 0.5153322219848633

BaB round 2
batch: 40
splitting decisions: 
split level 0: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 637] [/input.7, 637] [/input.7, 637] [/input.11, 81] [/input.7, 637] [/input.11, 81] [/input.7, 637] 
split level 1: [/input.11, 70] [/input.11, 70] [/input.11, 70] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 637] [/input.11, 81] [/input.11, 70] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 101 / 160 = 0.63125
pruning-in-iteration extra time: 0.012401580810546875
Time: prepare 0.0186    bound 0.4158    transfer 0.0014    finalize 0.0108    func 0.4467    
Accumulated time: func 0.8943    prepare 0.0270    bound 0.8470    transfer 0.0025    finalize 0.0186    
Current worst splitting domains lb-rhs (depth):
-1.19715 (9), -1.18199 (9), -1.12123 (9), -1.00020 (9), -0.92411 (9), -0.91981 (9), -0.91715 (9), -0.88081 (9), -0.85486 (9), -0.85009 (9), -0.82562 (9), -0.80245 (9), -0.74605 (9), -0.70951 (9), -0.70063 (9), -0.68318 (9), -0.67963 (9), -0.59132 (9), -0.56245 (9), -0.54019 (9), 
Length of domains: 59
Time: pickout 0.0012    decision 0.0284    set_bounds 0.0105    solve 0.4468    add 0.0024    
Accumulated time: pickout 0.0019    decision 0.0700    set_bounds 0.0262    solve 0.8945    add 0.0046    
Current (lb-rhs): -1.197147250175476
99 domains visited
Cumulative time: 1.0062885284423828

BaB round 3
batch: 59
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.7, 637] [/input.11, 70] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 118 = 0.5508474576271186
pruning-in-iteration extra time: 0.012980461120605469
Time: prepare 0.0134    bound 0.4423    transfer 0.0012    finalize 0.0085    func 0.4655    
Accumulated time: func 1.3598    prepare 0.0407    bound 1.2893    transfer 0.0037    finalize 0.0271    
Current worst splitting domains lb-rhs (depth):
-1.11155 (10), -1.08559 (10), -0.96537 (10), -0.89410 (10), -0.83141 (10), -0.82919 (10), -0.77280 (10), -0.75458 (10), -0.71217 (10), -0.71133 (10), -0.67079 (10), -0.65541 (10), -0.62197 (10), -0.61542 (10), -0.61467 (10), -0.55694 (10), -0.55419 (10), -0.49937 (10), -0.46162 (10), -0.45880 (10), 
Length of domains: 53
Time: pickout 0.0015    decision 0.0278    set_bounds 0.0052    solve 0.4656    add 0.0024    
Accumulated time: pickout 0.0034    decision 0.0977    set_bounds 0.0315    solve 1.3601    add 0.0070    
Current (lb-rhs): -1.1115480661392212
152 domains visited
Cumulative time: 1.5099399089813232

BaB round 4
batch: 53
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 258] [/input.7, 637] [/input.7, 258] [/input.7, 637] [/input.7, 637] [/input.7, 597] [/input.7, 257] [/input.11, 97] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 106 = 0.4811320754716981
pruning-in-iteration extra time: 0.01420450210571289
Time: prepare 0.0152    bound 0.4576    transfer 0.0010    finalize 0.0078    func 0.4818    
Accumulated time: func 1.8416    prepare 0.0562    bound 1.7468    transfer 0.0047    finalize 0.0349    
Current worst splitting domains lb-rhs (depth):
-0.95888 (11), -0.92135 (11), -0.88886 (11), -0.74202 (11), -0.68878 (11), -0.68661 (11), -0.64626 (11), -0.64472 (11), -0.63585 (11), -0.62487 (11), -0.60452 (11), -0.57357 (11), -0.54609 (11), -0.53447 (11), -0.53141 (11), -0.52905 (11), -0.51081 (11), -0.49366 (11), -0.44734 (11), -0.44558 (11), 
Length of domains: 55
Time: pickout 0.0014    decision 0.0273    set_bounds 0.0042    solve 0.4819    add 0.0023    
Accumulated time: pickout 0.0047    decision 0.1250    set_bounds 0.0357    solve 1.8420    add 0.0093    
Current (lb-rhs): -0.9588780403137207
207 domains visited
Cumulative time: 2.0279669761657715

BaB round 5
batch: 55
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.7, 597] [/input.7, 597] [/input.11, 0] [/input.11, 97] [/input.7, 597] [/input.7, 597] [/input.11, 0] 
pruning_in_iteration open status: True
ratio of positive domain = 51 / 110 = 0.4636363636363636
pruning-in-iteration extra time: 0.013147354125976562
Time: prepare 0.0158    bound 0.4328    transfer 0.0011    finalize 0.0082    func 0.4581    
Accumulated time: func 2.2997    prepare 0.0724    bound 2.1796    transfer 0.0058    finalize 0.0431    
Current worst splitting domains lb-rhs (depth):
-0.87450 (12), -0.79282 (12), -0.69544 (12), -0.68739 (12), -0.67846 (12), -0.62535 (12), -0.57227 (12), -0.56330 (12), -0.53074 (12), -0.52343 (12), -0.51489 (12), -0.50971 (12), -0.47333 (12), -0.46737 (12), -0.42117 (12), -0.41489 (12), -0.40712 (12), -0.39152 (12), -0.37851 (12), -0.35695 (12), 
Length of domains: 59
Time: pickout 0.0014    decision 0.0273    set_bounds 0.0050    solve 0.4582    add 0.0024    
Accumulated time: pickout 0.0061    decision 0.1523    set_bounds 0.0407    solve 2.3002    add 0.0117    
Current (lb-rhs): -0.8744964599609375
266 domains visited
Cumulative time: 2.523374080657959

BaB round 6
batch: 59
splitting decisions: 
split level 0: [/input.11, 0] [/input.11, 0] [/input.7, 637] [/input.7, 703] [/input.7, 703] [/input.7, 257] [/input.11, 0] [/input.11, 73] [/input.11, 0] [/input.11, 0] 
pruning_in_iteration open status: True
ratio of positive domain = 60 / 118 = 0.5084745762711864
pruning-in-iteration extra time: 0.01432657241821289
Time: prepare 0.0169    bound 0.4557    transfer 0.0011    finalize 0.0083    func 0.4822    
Accumulated time: func 2.7819    prepare 0.0896    bound 2.6353    transfer 0.0069    finalize 0.0514    
Current worst splitting domains lb-rhs (depth):
-0.68513 (13), -0.59239 (13), -0.54982 (13), -0.54867 (13), -0.53597 (13), -0.51651 (13), -0.45551 (13), -0.43055 (13), -0.40718 (13), -0.39640 (13), -0.36927 (13), -0.35151 (13), -0.34989 (13), -0.34357 (13), -0.33663 (13), -0.33302 (13), -0.32362 (13), -0.32299 (13), -0.31861 (13), -0.30047 (13), 
Length of domains: 58
Time: pickout 0.0014    decision 0.0278    set_bounds 0.0054    solve 0.4823    add 0.0023    
Accumulated time: pickout 0.0075    decision 0.1802    set_bounds 0.0462    solve 2.7824    add 0.0140    
Current (lb-rhs): -0.6851288080215454
324 domains visited
Cumulative time: 3.0438072681427

BaB round 7
batch: 58
splitting decisions: 
split level 0: [/input.7, 703] [/input.7, 703] [/input.11, 0] [/input.7, 597] [/input.7, 703] [/input.7, 138] [/input.7, 597] [/input.7, 138] [/input.11, 0] [/input.11, 0] 
pruning_in_iteration open status: True
ratio of positive domain = 55 / 116 = 0.47413793103448276
pruning-in-iteration extra time: 0.012976408004760742
Time: prepare 0.0166    bound 0.4303    transfer 0.0011    finalize 0.0084    func 0.4567    
Accumulated time: func 3.2386    prepare 0.1066    bound 3.0656    transfer 0.0079    finalize 0.0598    
Current worst splitting domains lb-rhs (depth):
-0.58603 (14), -0.47175 (14), -0.45882 (14), -0.44814 (14), -0.44195 (14), -0.36457 (14), -0.35389 (14), -0.32724 (14), -0.31893 (14), -0.31451 (14), -0.31027 (14), -0.29621 (14), -0.29311 (14), -0.27596 (14), -0.25894 (14), -0.25529 (14), -0.24542 (14), -0.24359 (14), -0.22501 (14), -0.22027 (14), 
Length of domains: 61
Time: pickout 0.0014    decision 0.0277    set_bounds 0.0052    solve 0.4568    add 0.0024    
Accumulated time: pickout 0.0089    decision 0.2078    set_bounds 0.0514    solve 3.2392    add 0.0164    
Current (lb-rhs): -0.5860252380371094
385 domains visited
Cumulative time: 3.5383663177490234

BaB round 8
batch: 61
splitting decisions: 
split level 0: [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.7, 703] [/input.7, 703] [/input.11, 0] [/input.7, 142] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 122 = 0.540983606557377
pruning-in-iteration extra time: 0.013613700866699219
Time: prepare 0.0175    bound 0.4562    transfer 0.0012    finalize 0.0092    func 0.4841    
Accumulated time: func 3.7227    prepare 0.1244    bound 3.5218    transfer 0.0091    finalize 0.0690    
Current worst splitting domains lb-rhs (depth):
-0.43286 (15), -0.31418 (15), -0.30000 (15), -0.28740 (15), -0.27756 (15), -0.27559 (15), -0.27351 (15), -0.26983 (15), -0.26506 (15), -0.22841 (15), -0.22515 (15), -0.21782 (15), -0.21019 (15), -0.19828 (15), -0.18345 (15), -0.18157 (15), -0.17654 (15), -0.15915 (15), -0.15078 (15), -0.14620 (15), 
Length of domains: 56
Time: pickout 0.0014    decision 0.0327    set_bounds 0.0056    solve 0.4842    add 0.0023    
Accumulated time: pickout 0.0103    decision 0.2405    set_bounds 0.0570    solve 3.7234    add 0.0187    
Current (lb-rhs): -0.43285977840423584
441 domains visited
Cumulative time: 4.065713405609131

BaB round 9
batch: 56
splitting decisions: 
split level 0: [/input.7, 423] [/input.7, 423] [/input.7, 703] [/input.11, 73] [/input.7, 258] [/input.7, 138] [/input.7, 258] [/input.7, 638] [/input.7, 142] [/input.7, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 80 / 112 = 0.7142857142857143
pruning-in-iteration extra time: 0.014112710952758789
Time: prepare 0.0161    bound 0.4566    transfer 0.0013    finalize 0.0092    func 0.4836    
Accumulated time: func 4.2063    prepare 0.1409    bound 3.9784    transfer 0.0104    finalize 0.0782    
Current worst splitting domains lb-rhs (depth):
-0.29140 (16), -0.24984 (16), -0.21102 (16), -0.17782 (16), -0.15192 (16), -0.14870 (16), -0.14704 (16), -0.13992 (16), -0.13967 (16), -0.13636 (16), -0.13333 (16), -0.11925 (16), -0.11768 (16), -0.11620 (16), -0.10644 (16), -0.10120 (16), -0.09587 (16), -0.08797 (16), -0.08647 (16), -0.08614 (16), 
Length of domains: 32
Time: pickout 0.0011    decision 0.0278    set_bounds 0.0052    solve 0.4837    add 0.0023    
Accumulated time: pickout 0.0114    decision 0.2683    set_bounds 0.0622    solve 4.2071    add 0.0210    
Current (lb-rhs): -0.2914029359817505
473 domains visited
Cumulative time: 4.587834358215332

BaB round 10
batch: 32
splitting decisions: 
split level 0: [/input.7, 138] [/input.7, 703] [/input.7, 142] [/input.7, 258] [/input.7, 703] [/input.7, 138] [/input.7, 703] [/input.7, 258] [/input.7, 258] [/input.7, 142] 
split level 1: [/input.7, 258] [/input.7, 258] [/input.11, 56] [/input.7, 257] [/input.7, 258] [/input.7, 638] [/input.7, 638] [/input.7, 423] [/input.11, 73] [/input.7, 423] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013856887817382812
Time: prepare 0.0184    bound 0.4500    transfer 0.0011    finalize 0.0094    func 0.4789    
Accumulated time: func 4.6852    prepare 0.1596    bound 4.4284    transfer 0.0116    finalize 0.0876    
Current worst splitting domains lb-rhs (depth):
-0.14583 (18), -0.06566 (18), -0.06243 (18), -0.00394 (18), 
Length of domains: 4
Time: pickout 0.0016    decision 0.0273    set_bounds 0.0092    solve 0.4790    add 0.0013    
Accumulated time: pickout 0.0130    decision 0.2956    set_bounds 0.0713    solve 4.6861    add 0.0223    
Current (lb-rhs): -0.14582693576812744
477 domains visited
Cumulative time: 5.107815742492676

BaB round 11
batch: 4
splitting decisions: 
split level 0: [/input.7, 423] [/input.7, 423] [/input.7, 423] [/input.7, 423] 
split level 1: [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] 
split level 2: [/input.7, 257] [/input.7, 638] [/input.7, 257] [/input.7, 257] 
split level 3: [/input.7, 638] [/input.7, 257] [/input.7, 638] [/input.7, 638] 
split level 4: [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.463859558105469e-05
Time: prepare 0.0170    bound 0.0076    transfer 0.0007    finalize 0.0075    func 0.0330    
Accumulated time: func 4.7182    prepare 0.1771    bound 4.4360    transfer 0.0122    finalize 0.0952    
Length of domains: 0
Time: pickout 0.0013    decision 0.0343    set_bounds 0.0164    solve 0.0331    add 0.0001    
Accumulated time: pickout 0.0143    decision 0.3299    set_bounds 0.0877    solve 4.7192    add 0.0224    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
477 domains visited
Cumulative time: 5.1937785148620605

Result: safe in 25.9015 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.34823751,  2.87914729, -2.74073124, -4.19685459,  9.93270111,
         -3.43226361, -0.83317739, -1.38928998,  5.22582817, -0.23564185]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.48331165,  3.57684326, -1.08904004, -3.16358733,  6.56686783,
          -3.38774037, -0.19477996, -2.92002010,  7.34679461, -1.41631413],
         [-5.48331165,  3.57684326, -1.08904004, -3.16358733,  6.56686783,
          -3.38774037, -0.19477996, -2.92002010,  7.34679461, -1.41631413]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.05017948,  2.99002457,  7.65590763,  9.73045540,  9.95460796,
           6.76164770,  9.48688793, -0.77992678,  7.98318195]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0186 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0197 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.95777178, -5.19729042, -0.15778244, -1.68059647,  2.77375722,
          2.99402380, 10.78512669, -7.45341492, -1.15354693, -3.48087525]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.42380381, -4.49125671, -0.62721753, -1.45740569,  4.78748560,
           2.16232872,  7.79035330, -5.90145016, -2.72779918, -2.54671621],
         [ 2.42380381, -4.49125671, -0.62721753, -1.45740569,  4.78748560,
           2.16232872,  7.79035330, -5.90145016, -2.72779918, -2.54671621]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.36654949, 12.28161049,  8.41757107,  9.24775887,  3.00286770,
           5.62802458, 13.69180298, 10.51815224, 10.33706951]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7015 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.95777130, -5.19729042, -0.15778208, -1.68059695,  2.77375698,
          2.99402380, 10.78512669, -7.45341444, -1.15354645, -3.48087549]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [655]; unstable size 655; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 147, 1, 655] with unstable size 146 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 655] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 655] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [146]; unstable size 146; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 146] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.42914200,  5.15076256,  0.57181263,  1.85031843,  0.03883076,
         -1.07689834,  6.81458759,  4.16360760,  3.37558556]], device='cuda:0') None
best_l after optimization: 29.642864227294922
alpha/beta optimization time: 4.651161193847656
initial alpha-crown bounds: tensor([[ 1.16662931,  5.95793962,  1.45628333,  2.95312738,  0.82737184,
         -0.07675886,  7.82458830,  4.84329367,  4.69038868]], device='cuda:0')
Worst class: (+ rhs) -0.07675886154174805
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.57875537872314
##### Instance 160 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1666293144226074.

Properties batch 1, size 1
Remaining timeout: 294.46269702911377
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.957939624786377.

Properties batch 2, size 1
Remaining timeout: 294.3580870628357
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4562833309173584.

Properties batch 3, size 1
Remaining timeout: 294.25426983833313
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.953127384185791.

Properties batch 4, size 1
Remaining timeout: 294.1507284641266
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8273718357086182.

Properties batch 5, size 1
Remaining timeout: 294.047043800354
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07675886]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.95777130, -5.19729042, -0.15778208, -1.68059695,  2.77375698,
         2.99402380, 10.78512669, -7.45341444, -1.15354645, -3.48087549],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07675886]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 655
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 143
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 824
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 81] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 10] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 52] 
split level 6: [/input.11, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00013828277587890625
Time: prepare 0.0075    bound 0.0078    transfer 0.0007    finalize 0.0062    func 0.0224    
Accumulated time: func 0.0224    prepare 0.0082    bound 0.0078    transfer 0.0007    finalize 0.0062    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0225    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0157    solve 0.0225    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08666515350341797


Properties batch 6, size 1
Remaining timeout: 293.81800627708435
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.824588298797607.

Properties batch 7, size 1
Remaining timeout: 293.70932269096375
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.8432936668396.

Properties batch 8, size 1
Remaining timeout: 293.60477662086487
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6903886795043945.
Result: safe in 6.4990 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.28378129, -6.28820562, -7.47943544,  4.54400444, -9.54021358,
         21.09140015, -0.72672045, -6.64854050,  4.08778000,  3.99176598]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.41588354, -4.12484789, -5.50220633,  5.99081039, -9.33801651,
          17.91203499, -2.45129633, -5.05068874,  2.39984488,  2.36348796],
         [-2.41588354, -4.12484789, -5.50220633,  5.99081039, -9.33801651,
          17.91203499, -2.45129633, -5.05068874,  2.39984488,  2.36348796]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[20.32791901, 22.03688240, 23.41424179, 11.92122459, 27.25005150,
          20.36333084, 22.96272278, 15.51218987, 15.54854679]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7097 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.28378153, -6.28820658, -7.47943544,  4.54400444, -9.54021454,
         21.09140015, -0.72671986, -6.64854050,  4.08778000,  3.99176574]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [725]; unstable size 725; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 124, 1, 725] with unstable size 123 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 725] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 725] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [123]; unstable size 123; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 123] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 123] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[12.72414780, 16.02489662, 15.77829170,  7.47544289, 19.20512962,
         13.60646057, 16.12616920,  7.36981344,  9.18778419]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.83946276, -2.11685467, -3.13360643, -2.04440928, 15.37342930,
         -5.84272909, -3.23563313,  4.82865858, -0.54232240,  2.20332456]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.59592438, -2.34634519, -4.19058943, -0.77022636, 12.31507778,
          -5.97400236, -4.37756443,  6.66023445,  0.53107357,  3.45589709],
         [-5.59592438, -2.34634519, -4.19058943, -0.77022636, 12.31507778,
          -5.97400236, -4.37756443,  6.66023445,  0.53107357,  3.45589709]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[17.91100311, 14.66142273, 16.50566673, 13.08530426, 18.28907967,
          16.69264221,  5.65484333, 11.78400421,  8.85918045]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6941 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.83946371, -2.11685467, -3.13360596, -2.04440904, 15.37343025,
         -5.84272957, -3.23563337,  4.82865858, -0.54232299,  2.20332408]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [664]; unstable size 664; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 128, 1, 664] with unstable size 127 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 664] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 664] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [127]; unstable size 127; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 127] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 127] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[12.85796928, 10.73706627,  9.50236225,  7.17391634, 10.62848091,
          9.99012566,  1.77650404,  5.38333464,  4.06513214]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7578 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.57349896, -2.13974738, -2.00536299, -2.57226276,  1.90071166,
          1.17224908,  9.91912937, -2.69081020,  2.12205029, -4.47623634]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]100%|██████████| 1/1 [00:00<00:00,  1.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.57455349, -2.11738729, -2.73849010, -3.06644917,  4.76231050,
           0.28356686,  7.46725559, -0.99836522,  1.28888500, -2.61665511],
         [-2.57455349, -2.11738729, -2.73849010, -3.06644917,  4.76231050,
           0.28356686,  7.46725559, -0.99836522,  1.28888500, -2.61665511]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.04180908,  9.58464241, 10.20574570, 10.53370476,  2.70494509,
           7.18368864,  8.46562099,  6.17837048, 10.08391094]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7063 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.57349932, -2.13974762, -2.00536323, -2.57226276,  1.90071201,
          1.17224944,  9.91912937, -2.69081020,  2.12205052, -4.47623634]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [705]; unstable size 705; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 204, 1, 705] with unstable size 203 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 705] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 705] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [203]; unstable size 203; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 203] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.09241295,  3.38790584,  0.95132494,  2.67136908, -1.62174082,
          0.66272926, -0.41318703, -1.37181282,  2.29826641]], device='cuda:0') None
best_l after optimization: 18.634342193603516
alpha/beta optimization time: 4.539545059204102
initial alpha-crown bounds: tensor([[ 4.56265783,  4.24485064,  1.64949393,  3.54818463, -0.69580579,
          1.28597522,  0.67658210, -0.29351449,  3.65591908]], device='cuda:0')
Worst class: (+ rhs) -0.6958057880401611
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.686594247818
##### Instance 163 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.562657833099365.

Properties batch 1, size 1
Remaining timeout: 294.5740976333618
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.2448506355285645.

Properties batch 2, size 1
Remaining timeout: 294.46993923187256
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.649493932723999.

Properties batch 3, size 1
Remaining timeout: 294.3661456108093
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.548184633255005.

Properties batch 4, size 1
Remaining timeout: 294.2625014781952
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.69580579]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.57349932, -2.13974762, -2.00536323, -2.57226276,  1.90071201,
         1.17224944,  9.91912937, -2.69081020,  2.12205052, -4.47623634],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.69580579]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 705
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 197
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 937
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 92] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 8] 
split level 5: [/input.11, 63] 
split level 6: [/input.7, 143] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0146    bound 0.0080    transfer 0.0007    finalize 0.0074    func 0.0309    
Accumulated time: func 0.0309    prepare 0.0152    bound 0.0080    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0171    solve 0.0310    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0171    solve 0.0310    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09720635414123535


Properties batch 5, size 1
Remaining timeout: 294.02307510375977
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2859752178192139.

Properties batch 6, size 1
Remaining timeout: 293.91476249694824
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6765820980072021.

Properties batch 7, size 1
Remaining timeout: 293.81017780303955
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.29351449]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.57349932, -2.13974762, -2.00536323, -2.57226276,  1.90071201,
         1.17224944,  9.91912937, -2.69081020,  2.12205052, -4.47623634],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.29351449]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 705
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 197
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 937
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 27] 
split level 1: [/input.11, 84] 
split level 2: [/input.11, 5] 
split level 3: [/input.11, 95] 
split level 4: [/input.7, 636] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 58] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.130073547363281e-05
Time: prepare 0.0146    bound 0.0080    transfer 0.0007    finalize 0.0074    func 0.0309    
Accumulated time: func 0.0309    prepare 0.0152    bound 0.0080    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0413    set_bounds 0.0169    solve 0.0310    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0413    set_bounds 0.0169    solve 0.0310    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09738969802856445


Properties batch 8, size 1
Remaining timeout: 293.56763672828674
##### Instance 163 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.655919075012207.
Result: safe in 6.5629 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.29644394, -5.98861074, -5.35084105,  6.58558846, -8.36966705,
         17.65704918, -0.91187227, -6.66910362,  2.81853819,  5.28351974]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.50712633, -4.91635799, -4.36212349,  9.81301975, -9.19989300,
          15.48865414, -3.18811250, -6.44747114,  2.83824253,  5.32447577],
         [-5.50712633, -4.91635799, -4.36212349,  9.81301975, -9.19989300,
          15.48865414, -3.18811250, -6.44747114,  2.83824253,  5.32447577]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[20.99578094, 20.40501213, 19.85077667,  5.67563438, 24.68854713,
          18.67676735, 21.93612480, 12.65041161, 10.16417885]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7056 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.29644442, -5.98861027, -5.35084057,  6.58558798, -8.36966801,
         17.65704727, -0.91187191, -6.66910458,  2.81853819,  5.28351974]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [711]; unstable size 711; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 91, 1, 711] with unstable size 90 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 711] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 711] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [90]; unstable size 90; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 90] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 90] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.66297150, 12.17672253,  9.76937103, -0.42413378, 13.47697449,
          8.25199127, 12.53640747,  2.56283808,  3.19560504]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 75.25234985351562
alpha/beta optimization time: 0.15251374244689941
initial alpha-crown bounds: tensor([[10.94046211, 12.45406723, 10.15751266,  0.06554079, 13.80711174,
          8.51065922, 12.84144020,  2.91931367,  3.55623579]], device='cuda:0')
Worst class: (+ rhs) 0.06554079055786133
verified with init bound!
Result: safe-incomplete in 0.9239 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.80919719, -0.45943552, -1.42321301, -5.02767324, 10.67586422,
         -2.40382838,  0.14658882,  1.62802732, -2.80491304,  1.23311198]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.50391531, -2.12126207, -1.50812340, -3.66084266,  6.82796907,
          -1.39260781, -1.72959518,  2.18150187, -1.85936868,  4.57320261],
         [-1.50391531, -2.12126207, -1.50812340, -3.66084266,  6.82796907,
          -1.39260781, -1.72959518,  2.18150187, -1.85936868,  4.57320261]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.33188438,  8.94923115,  8.33609200, 10.48881149,  8.22057724,
           8.55756378,  4.64646721,  8.68733788,  2.25476646]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6950 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
         -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [735]; unstable size 735; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 146, 1, 735] with unstable size 145 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 40, 1, 735] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 735] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [145]; unstable size 145; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 40, 1, 145] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 145] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.88127375,  0.21799493, -4.37798452, -0.43280506, -3.11633682,
         -1.65936232, -5.39332962, -2.36195230, -5.12377930]], device='cuda:0') None
best_l after optimization: -8.351139068603516
alpha/beta optimization time: 4.656942844390869
initial alpha-crown bounds: tensor([[ 0.68939424,  1.43946004, -2.53208232,  1.49470282, -1.00038886,
         -0.04205537, -4.08389330, -0.57490516, -3.74137139]], device='cuda:0')
Worst class: (+ rhs) -4.083893299102783
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5806999206543
##### Instance 165 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6893942356109619.

Properties batch 1, size 1
Remaining timeout: 294.45679330825806
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.439460039138794.

Properties batch 2, size 1
Remaining timeout: 294.35265135765076
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.53208232]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.53208232]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 25] 
split level 1: [/input.11, 17] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 99] 
split level 4: [/input.11, 89] 
split level 5: [/input.11, 1] 
split level 6: [/input.11, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.013521432876586914
Time: prepare 0.0076    bound 0.4514    transfer 0.0012    finalize 0.0075    func 0.4678    
Accumulated time: func 0.4678    prepare 0.0082    bound 0.4514    transfer 0.0012    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.21093 (7), 
Length of domains: 1
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.4679    add 0.0008    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0157    solve 0.4679    add 0.0008    
Current (lb-rhs): -0.21093106269836426
1 domains visited
Cumulative time: 0.5333220958709717

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input.7, 632] 
split level 1: [/input.11, 58] 
split level 2: [/input.11, 45] 
split level 3: [/input.11, 50] 
split level 4: [/input.11, 12] 
split level 5: [/input.7, 707] 
split level 6: [/input.11, 36] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00015306472778320312
Time: prepare 0.0168    bound 0.0077    transfer 0.0007    finalize 0.0076    func 0.0327    
Accumulated time: func 0.5005    prepare 0.0256    bound 0.4591    transfer 0.0018    finalize 0.0151    
Length of domains: 0
Time: pickout 0.0011    decision 0.0432    set_bounds 0.0186    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0843    set_bounds 0.0344    solve 0.5007    add 0.0009    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.6300628185272217


Properties batch 3, size 1
Remaining timeout: 293.57968044281006
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4947028160095215.

Properties batch 4, size 1
Remaining timeout: 293.47017216682434
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.00038886]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.00038886]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 9] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0060    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08658170700073242


Properties batch 5, size 1
Remaining timeout: 293.2405982017517
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04205537]], device='cuda:0') need to verify.
torch allclose failed: norm 8.83074562807451e-07
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04205537]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 11] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 50] 
split level 5: [/input.11, 73] 
split level 6: [/input.11, 0] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0076    bound 0.0079    transfer 0.0006    finalize 0.0060    func 0.0224    
Accumulated time: func 0.0224    prepare 0.0082    bound 0.0079    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0420    set_bounds 0.0158    solve 0.0224    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0420    set_bounds 0.0158    solve 0.0224    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08801460266113281


Properties batch 6, size 1
Remaining timeout: 293.0027024745941
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.08389330]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.08389330]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 1] 
split level 5: [/input.7, 632] 
split level 6: [/input.11, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 128 = 0.90625
pruning-in-iteration extra time: 0.014081954956054688
Time: prepare 0.0146    bound 0.4550    transfer 0.0011    finalize 0.0095    func 0.4803    
Accumulated time: func 0.4803    prepare 0.0152    bound 0.4550    transfer 0.0011    finalize 0.0095    
Current worst splitting domains lb-rhs (depth):
-1.42722 (7), -1.42429 (7), -1.13597 (7), -0.98381 (7), -0.69184 (7), -0.62357 (7), -0.40551 (7), -0.24451 (7), -0.19835 (7), -0.17182 (7), -0.17008 (7), -0.14278 (7), 
Length of domains: 12
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.4804    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.4804    add 0.0018    
Current (lb-rhs): -1.427220344543457
12 domains visited
Cumulative time: 0.5485904216766357

BaB round 2
batch: 12
splitting decisions: 
split level 0: [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.3, 2243] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] 
split level 1: [/input.11, 56] [/input.11, 56] [/input.3, 2243] [/input.7, 707] [/input.7, 707] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 56] 
split level 2: [/input.11, 36] [/input.11, 36] [/input.11, 56] [/input.11, 56] [/input.11, 56] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] 
split level 3: [/input.7, 707] [/input.7, 707] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 176 / 192 = 0.9166666666666666
pruning-in-iteration extra time: 0.013322591781616211
Time: prepare 0.0292    bound 0.4599    transfer 0.0014    finalize 0.0147    func 0.5053    
Accumulated time: func 0.9856    prepare 0.0447    bound 0.9149    transfer 0.0026    finalize 0.0243    
Current worst splitting domains lb-rhs (depth):
-0.72783 (11), -0.55368 (11), -0.49805 (11), -0.43978 (11), -0.37993 (11), -0.37032 (11), -0.34053 (11), -0.29014 (11), -0.27406 (11), -0.22934 (11), -0.13851 (11), -0.12978 (11), -0.11863 (11), -0.06116 (11), -0.05966 (11), -0.05177 (11), 
Length of domains: 16
Time: pickout 0.0014    decision 0.0309    set_bounds 0.0213    solve 0.5054    add 0.0018    
Accumulated time: pickout 0.0020    decision 0.0719    set_bounds 0.0383    solve 0.9859    add 0.0036    
Current (lb-rhs): -0.727832555770874
28 domains visited
Cumulative time: 1.1117749214172363

BaB round 3
batch: 16
splitting decisions: 
split level 0: [/input.11, 25] [/input.7, 633] [/input.11, 25] [/input.11, 25] [/input.7, 633] [/input.7, 633] [/input.11, 25] [/input.11, 25] [/input.3, 2243] [/input.11, 25] 
split level 1: [/input.7, 633] [/input.3, 2243] [/input.7, 633] [/input.7, 633] [/input.11, 74] [/input.3, 2243] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] 
split level 2: [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.7, 257] [/input.7, 257] [/input.7, 257] [/input.11, 12] [/input.7, 257] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 128 = 0.9609375
pruning-in-iteration extra time: 0.013516902923583984
Time: prepare 0.0248    bound 0.4539    transfer 0.0012    finalize 0.0119    func 0.4919    
Accumulated time: func 1.4775    prepare 0.0699    bound 1.3688    transfer 0.0037    finalize 0.0361    
Current worst splitting domains lb-rhs (depth):
-0.30211 (14), -0.28951 (14), -0.10621 (14), -0.05473 (14), -0.02037 (14), 
Length of domains: 5
Time: pickout 0.0017    decision 0.0247    set_bounds 0.0123    solve 0.4920    add 0.0013    
Accumulated time: pickout 0.0037    decision 0.0966    set_bounds 0.0507    solve 1.4778    add 0.0049    
Current (lb-rhs): -0.30211472511291504
33 domains visited
Cumulative time: 1.6455047130584717

BaB round 4
batch: 5
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] [/input.11, 63] 
split level 1: [/input.7, 257] [/input.11, 12] [/input.11, 12] [/input.11, 74] [/input.11, 74] 
split level 2: [/input.11, 74] [/input.11, 74] [/input.11, 74] [/input.11, 12] [/input.11, 12] 
split level 3: [/input.11, 58] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
split level 4: [/input.11, 73] [/input.7, 636] [/input.7, 636] [/input.7, 636] [/input.7, 636] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0304    bound 0.0078    transfer 0.0008    finalize 0.0114    func 0.0505    
Accumulated time: func 1.5280    prepare 0.1008    bound 1.3766    transfer 0.0045    finalize 0.0476    
Length of domains: 0
Time: pickout 0.0014    decision 0.0347    set_bounds 0.0197    solve 0.0506    add 0.0001    
Accumulated time: pickout 0.0051    decision 0.1314    set_bounds 0.0703    solve 1.5285    add 0.0050    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
33 domains visited
Cumulative time: 1.7531976699829102


Properties batch 7, size 1
Remaining timeout: 291.1023049354553
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57490516]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57490516]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 25] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 97] 
split level 4: [/input.11, 95] 
split level 5: [/input.7, 632] 
split level 6: [/input.11, 58] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.390975952148438e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0006    finalize 0.0075    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0077    transfer 0.0006    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0413    set_bounds 0.0170    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0413    set_bounds 0.0170    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09682154655456543


Properties batch 8, size 1
Remaining timeout: 290.84876823425293
##### Instance 165 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.74137139]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.80919671, -0.45943516, -1.42321396, -5.02767324, 10.67586517,
        -2.40382862,  0.14658882,  1.62802696, -2.80491257,  1.23311079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.74137139]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 735
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 141
Node /27 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 913
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 99] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 95] 
split level 5: [/input.11, 97] 
split level 6: [/input.11, 0] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.01412200927734375
Time: prepare 0.0075    bound 0.4412    transfer 0.0012    finalize 0.0081    func 0.4581    
Accumulated time: func 0.4581    prepare 0.0081    bound 0.4412    transfer 0.0012    finalize 0.0081    
Current worst splitting domains lb-rhs (depth):
-1.32023 (7), -1.30803 (7), -1.14100 (7), -1.07325 (7), -1.05010 (7), -1.03806 (7), -0.70253 (7), -0.66732 (7), -0.62827 (7), -0.61138 (7), -0.54147 (7), -0.47823 (7), -0.36368 (7), -0.20331 (7), -0.10162 (7), -0.09683 (7), 
Length of domains: 16
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0158    solve 0.4582    add 0.0018    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0158    solve 0.4582    add 0.0018    
Current (lb-rhs): -1.3202288150787354
16 domains visited
Cumulative time: 0.5254909992218018

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 25] [/input.11, 32] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] [/input.11, 25] 
split level 1: [/input.11, 25] [/input.3, 2243] [/input.11, 25] [/input.7, 632] [/input.7, 633] [/input.3, 2243] [/input.3, 2243] [/input.3, 2243] [/input.3, 2243] [/input.3, 2243] 
split level 2: [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.3, 2243] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] [/input.7, 632] 
pruning_in_iteration open status: True
ratio of positive domain = 109 / 128 = 0.8515625
pruning-in-iteration extra time: 0.01333308219909668
Time: prepare 0.0238    bound 0.4505    transfer 0.0011    finalize 0.0111    func 0.4865    
Accumulated time: func 0.9446    prepare 0.0322    bound 0.8916    transfer 0.0023    finalize 0.0193    
Current worst splitting domains lb-rhs (depth):
-0.85488 (10), -0.77088 (10), -0.68873 (10), -0.68033 (10), -0.62168 (10), -0.58161 (10), -0.58145 (10), -0.42299 (10), -0.36467 (10), -0.31255 (10), -0.22494 (10), -0.20077 (10), -0.13233 (10), -0.11516 (10), -0.09509 (10), -0.08505 (10), -0.03908 (10), -0.03180 (10), -0.00815 (10), 
Length of domains: 19
Time: pickout 0.0012    decision 0.0254    set_bounds 0.0119    solve 0.4866    add 0.0018    
Accumulated time: pickout 0.0019    decision 0.0665    set_bounds 0.0277    solve 0.9448    add 0.0036    
Current (lb-rhs): -0.8548769950866699
35 domains visited
Cumulative time: 1.0541801452636719

BaB round 3
batch: 19
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] 
split level 1: [/input.3, 2243] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.3, 2243] 
split level 2: [/input.7, 707] [/input.7, 707] [/input.7, 118] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] [/input.7, 707] 
pruning_in_iteration open status: True
ratio of positive domain = 142 / 152 = 0.9342105263157895
pruning-in-iteration extra time: 0.012946128845214844
Time: prepare 0.0282    bound 0.4491    transfer 0.0013    finalize 0.0118    func 0.4906    
Accumulated time: func 1.4352    prepare 0.0608    bound 1.3407    transfer 0.0036    finalize 0.0311    
Current worst splitting domains lb-rhs (depth):
-0.30731 (13), -0.28189 (13), -0.25093 (13), -0.22390 (13), -0.16965 (13), -0.10193 (13), -0.07324 (13), -0.04599 (13), -0.03806 (13), -0.02838 (13), 
Length of domains: 10
Time: pickout 0.0015    decision 0.0260    set_bounds 0.0147    solve 0.4907    add 0.0015    
Accumulated time: pickout 0.0034    decision 0.0925    set_bounds 0.0424    solve 1.4354    add 0.0051    
Current (lb-rhs): -0.3073089122772217
45 domains visited
Cumulative time: 1.5905334949493408

BaB round 4
batch: 10
splitting decisions: 
split level 0: [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] 
split level 1: [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] [/input.3, 2230] 
split level 2: [/input.11, 73] [/input.7, 637] [/input.7, 637] [/input.7, 637] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.7, 637] [/input.11, 73] 
split level 3: [/input.11, 19] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 19] [/input.11, 19] [/input.11, 19] [/input.11, 19] [/input.11, 73] [/input.11, 19] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0307    bound 0.0077    transfer 0.0008    finalize 0.0114    func 0.0506    
Accumulated time: func 1.4858    prepare 0.0918    bound 1.3484    transfer 0.0043    finalize 0.0425    
Length of domains: 0
Time: pickout 0.0014    decision 0.0299    set_bounds 0.0191    solve 0.0507    add 0.0001    
Accumulated time: pickout 0.0048    decision 0.1225    set_bounds 0.0615    solve 1.4861    add 0.0052    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
45 domains visited
Cumulative time: 1.6930890083312988

Result: safe in 10.9919 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.20167038, -3.86093307, -0.11107039,  2.47882938, -2.13629031,
          8.54881096,  1.15275466, -1.31284392, -0.80291504, -4.24632454]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]100%|██████████| 1/1 [00:00<00:00,  1.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.51887363, -2.98380661,  1.43936849,  1.35755837, -0.51288283,
           5.15032339,  3.34705400, -1.73974645, -1.48355329, -5.27715302],
         [ 0.51887363, -2.98380661,  1.43936849,  1.35755837, -0.51288283,
           5.15032339,  3.34705400, -1.73974645, -1.48355329, -5.27715302]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.63144970,  8.13413048,  3.71095490,  3.79276514,  5.66320610,
           1.80326939,  6.89006996,  6.63387680, 10.42747688]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7008 seconds.
PGD attack failed
torch allclose failed: norm 5.559551254918915e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
          8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [682]; unstable size 682; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 185, 1, 682] with unstable size 184 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 38, 1, 682] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [184]; unstable size 184; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 38, 1, 184] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.80247700,  0.05655861, -3.69761348, -2.78390574, -2.17965388,
         -3.39783239, -1.85692859, -0.59258592,  1.29908895]], device='cuda:0') None
best_l after optimization: -4.316468238830566
alpha/beta optimization time: 4.672199726104736
initial alpha-crown bounds: tensor([[-0.76216829,  1.17524385, -2.26339245, -1.78277254, -0.88403893,
         -2.09877539, -0.76964593,  0.60418499,  2.46489668]], device='cuda:0')
Worst class: (+ rhs) -2.263392448425293
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5530858039856
##### Instance 166 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76216829]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76216829]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 41] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 63] 
split level 4: [/input.11, 74] 
split level 5: [/input.7, 108] 
split level 6: [/input.11, 37] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0077    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0172    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0172    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09691405296325684


Properties batch 1, size 1
Remaining timeout: 294.3037123680115
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.175243854522705.

Properties batch 2, size 1
Remaining timeout: 294.19501757621765
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.26339245]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.26339245]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 41] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 36] 
split level 3: [/input.11, 51] 
split level 4: [/input.11, 74] 
split level 5: [/input.7, 108] 
split level 6: [/input.7, 143] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013676881790161133
Time: prepare 0.0145    bound 0.4479    transfer 0.0011    finalize 0.0092    func 0.4728    
Accumulated time: func 0.4728    prepare 0.0151    bound 0.4479    transfer 0.0011    finalize 0.0092    
Current worst splitting domains lb-rhs (depth):
-0.20997 (7), -0.17886 (7), -0.06553 (7), -0.03260 (7), 
Length of domains: 4
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0170    solve 0.4729    add 0.0013    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0170    solve 0.4729    add 0.0013    
Current (lb-rhs): -0.20996761322021484
4 domains visited
Cumulative time: 0.5408964157104492

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.7, 588] [/input.7, 588] [/input.7, 588] [/input.7, 588] 
split level 1: [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] 
split level 2: [/input.11, 63] [/input.7, 308] [/input.11, 63] [/input.7, 308] 
split level 3: [/input.7, 308] [/input.11, 63] [/input.7, 308] [/input.11, 63] 
split level 4: [/input.7, 113] [/input.7, 113] [/input.7, 113] [/input.7, 113] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.749961853027344e-05
Time: prepare 0.0169    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0327    
Accumulated time: func 0.5055    prepare 0.0325    bound 0.4556    transfer 0.0017    finalize 0.0165    
Length of domains: 0
Time: pickout 0.0013    decision 0.0341    set_bounds 0.0164    solve 0.0328    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0753    set_bounds 0.0333    solve 0.5057    add 0.0014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.6264400482177734


Properties batch 3, size 1
Remaining timeout: 293.42553091049194
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.78277254]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.78277254]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 80] 
split level 1: [/input.11, 74] 
split level 2: [/input.11, 51] 
split level 3: [/input.7, 108] 
split level 4: [/input.11, 7] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 60] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.867813110351562e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0077    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09645676612854004


Properties batch 4, size 1
Remaining timeout: 293.181467294693
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.88403893]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.88403893]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 7] 
split level 1: [/input.11, 60] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 30] 
split level 4: [/input.7, 108] 
split level 5: [/input.11, 37] 
split level 6: [/input.7, 113] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0006    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0151    bound 0.0077    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0412    set_bounds 0.0168    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0412    set_bounds 0.0168    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09649920463562012


Properties batch 5, size 1
Remaining timeout: 292.9379336833954
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.09877539]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.09877539]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 60] 
split level 1: [/input.11, 74] 
split level 2: [/input.7, 588] 
split level 3: [/input.11, 30] 
split level 4: [/input.11, 41] 
split level 5: [/input.7, 108] 
split level 6: [/input.11, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 124 / 128 = 0.96875
pruning-in-iteration extra time: 0.013842582702636719
Time: prepare 0.0146    bound 0.4423    transfer 0.0011    finalize 0.0092    func 0.4673    
Accumulated time: func 0.4673    prepare 0.0152    bound 0.4423    transfer 0.0011    finalize 0.0092    
Current worst splitting domains lb-rhs (depth):
-0.93948 (7), -0.78075 (7), -0.73278 (7), -0.61800 (7), 
Length of domains: 4
Time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.4673    add 0.0013    
Accumulated time: pickout 0.0007    decision 0.0412    set_bounds 0.0169    solve 0.4673    add 0.0013    
Current (lb-rhs): -0.9394806623458862
4 domains visited
Cumulative time: 0.5352840423583984

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input.11, 80] [/input.11, 80] [/input.11, 80] [/input.11, 80] 
split level 1: [/input.11, 36] [/input.7, 593] [/input.11, 36] [/input.11, 36] 
split level 2: [/input.7, 593] [/input.11, 36] [/input.7, 241] [/input.7, 241] 
split level 3: [/input.7, 241] [/input.7, 241] [/input.7, 322] [/input.7, 322] 
split level 4: [/input.11, 6] [/input.11, 6] [/input.11, 6] [/input.11, 6] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 128 = 0.9140625
pruning-in-iteration extra time: 0.012798547744750977
Time: prepare 0.0168    bound 0.4348    transfer 0.0011    finalize 0.0090    func 0.4618    
Accumulated time: func 0.9290    prepare 0.0324    bound 0.8771    transfer 0.0022    finalize 0.0182    
Current worst splitting domains lb-rhs (depth):
-0.34250 (12), -0.33633 (12), -0.22778 (12), -0.22746 (12), -0.14319 (12), -0.11572 (12), -0.11377 (12), -0.06451 (12), -0.03472 (12), -0.00753 (12), -0.00086 (12), 
Length of domains: 11
Time: pickout 0.0013    decision 0.0343    set_bounds 0.0162    solve 0.4619    add 0.0055    
Accumulated time: pickout 0.0019    decision 0.0755    set_bounds 0.0331    solve 0.9292    add 0.0068    
Current (lb-rhs): -0.3424971401691437
15 domains visited
Cumulative time: 1.0559990406036377

BaB round 3
batch: 11
splitting decisions: 
split level 0: [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] 
split level 1: [/input.7, 142] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 142] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] 
split level 2: [/input.3, 2290] [/input.11, 7] [/input.11, 7] [/input.11, 7] [/input.3, 2304] [/input.11, 7] [/input.11, 7] [/input.3, 2304] [/input.3, 2304] [/input.3, 2304] 
split level 3: [/input.7, 322] [/input.3, 2290] [/input.3, 2304] [/input.3, 2304] [/input.7, 322] [/input.3, 2304] [/input.3, 2304] [/input.7, 113] [/input.7, 113] [/input.7, 113] 
pruning_in_iteration open status: True
ratio of positive domain = 175 / 176 = 0.9943181818181818
pruning-in-iteration extra time: 0.013168811798095703
Time: prepare 0.0339    bound 0.4505    transfer 0.0015    finalize 0.0150    func 0.5009    
Accumulated time: func 1.4300    prepare 0.0667    bound 1.3276    transfer 0.0037    finalize 0.0332    
Current worst splitting domains lb-rhs (depth):
-0.02784 (16), 
Length of domains: 1
Time: pickout 0.0015    decision 0.0304    set_bounds 0.0210    solve 0.5010    add 0.0008    
Accumulated time: pickout 0.0034    decision 0.1059    set_bounds 0.0541    solve 1.4302    add 0.0076    
Current (lb-rhs): -0.027842439711093903
16 domains visited
Cumulative time: 1.6130003929138184

BaB round 4
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.7, 114] 
split level 2: [/input.11, 51] 
split level 3: [/input.7, 408] 
split level 4: [/input.7, 142] 
split level 5: [/input.7, 113] 
split level 6: [/input.7, 587] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0239    bound 0.0076    transfer 0.0006    finalize 0.0090    func 0.0412    
Accumulated time: func 1.4712    prepare 0.0913    bound 1.3353    transfer 0.0043    finalize 0.0422    
Length of domains: 0
Time: pickout 0.0016    decision 0.0434    set_bounds 0.0200    solve 0.0413    add 0.0001    
Accumulated time: pickout 0.0050    decision 0.1493    set_bounds 0.0741    solve 1.4715    add 0.0077    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16 domains visited
Cumulative time: 1.7202908992767334


Properties batch 6, size 1
Remaining timeout: 291.0702440738678
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76964593]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.20167068, -3.86093307, -0.11106967,  2.47882843, -2.13629055,
         8.54881096,  1.15275466, -1.31284428, -0.80291516, -4.24632454],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76964593]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 682
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 178
Node /27 input 0: size torch.Size([100]) unstable 36
-----------------
# of unstable neurons: 896
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 74] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 19] 
split level 4: [/input.7, 108] 
split level 5: [/input.11, 37] 
split level 6: [/input.11, 14] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0145    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0077    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0171    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0171    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09676790237426758


Properties batch 7, size 1
Remaining timeout: 290.8253560066223
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6041849851608276.

Properties batch 8, size 1
Remaining timeout: 290.7165560722351
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4648966789245605.
Result: safe in 9.3877 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.69517183, 10.30374622,  0.03908778, -1.00509870, -1.12344217,
         -1.13312483, -0.03043256, -2.22616100,  2.81896591, -4.17550373]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.07874298,  8.83042336, -0.13908964, -0.92502403, -0.82069111,
          -1.08680844,  0.25973180, -2.04406834,  3.62926030, -3.83709598],
         [-4.07874298,  8.83042336, -0.13908964, -0.92502403, -0.82069111,
          -1.08680844,  0.25973180, -2.04406834,  3.62926030, -3.83709598]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.90916634,  8.96951294,  9.75544739,  9.65111446,  9.91723156,
           8.57069111, 10.87449169,  5.20116329, 12.66751957]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7049 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.69517183, 10.30374527,  0.03908778, -1.00509870, -1.12344253,
         -1.13312542, -0.03043292, -2.22616100,  2.81896663, -4.17550373]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [640]; unstable size 640; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 247, 1, 640] with unstable size 246 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 640] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [246]; unstable size 246; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 246] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.55505943, 4.34230137, 4.12106371, 6.27175093, 4.95194483, 4.20332861,
         6.23006392, 1.03631294, 7.16113853]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.7724 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.89296722,  0.02483232, -2.58087659, -4.43171549, 11.75505733,
         -0.69288248, -3.54584026,  3.28694582, -1.39150381,  2.35755992]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.14902735, -0.17439900, -2.87928581, -3.30436850,  9.23167419,
          -0.92111361, -4.19421721,  6.20446968, -3.08017659,  3.13715219],
         [-4.14902735, -0.17439900, -2.87928581, -3.30436850,  9.23167419,
          -0.92111361, -4.19421721,  6.20446968, -3.08017659,  3.13715219]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.38070107,  9.40607357, 12.11096001, 12.53604317, 10.15278816,
          13.42589188,  3.02720451, 12.31185055,  6.09452200]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6923 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.89296770,  0.02483216, -2.58087635, -4.43171549, 11.75505924,
         -0.69288248, -3.54584050,  3.28694582, -1.39150274,  2.35756040]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [705]; unstable size 705; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 167, 1, 705] with unstable size 166 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 705] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 705] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [166]; unstable size 166; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 166] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 166] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.75382423e+00,  3.10353565e+00,  3.33973932e+00,  2.35125303e+00,
          2.36845016e-03,  4.67921066e+00, -2.85230160e+00,  1.40275311e+00,
         -2.65780711e+00]], device='cuda:0') None
best_l after optimization: 19.038177490234375
alpha/beta optimization time: 4.549045562744141
initial alpha-crown bounds: tensor([[ 6.12659836,  3.39893603,  3.73122859,  2.77987432,  0.53741050,
          5.05261898, -2.18765259,  1.73152137, -2.13235927]], device='cuda:0')
Worst class: (+ rhs) -2.187652587890625
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.69101071357727
##### Instance 168 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.126598358154297.

Properties batch 1, size 1
Remaining timeout: 294.5768532752991
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3989360332489014.

Properties batch 2, size 1
Remaining timeout: 294.4723274707794
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7312285900115967.

Properties batch 3, size 1
Remaining timeout: 294.36837697029114
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.779874324798584.

Properties batch 4, size 1
Remaining timeout: 294.2647383213043
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5374104976654053.

Properties batch 5, size 1
Remaining timeout: 294.16105604171753
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.052618980407715.

Properties batch 6, size 1
Remaining timeout: 294.05761981010437
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.18765259]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.89296770,  0.02483216, -2.58087635, -4.43171549, 11.75505924,
        -0.69288248, -3.54584050,  3.28694582, -1.39150274,  2.35756040],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.18765259]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 705
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 165
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 901
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 1] 
split level 3: [/input.11, 99] 
split level 4: [/input.11, 51] 
split level 5: [/input.7, 707] 
split level 6: [/input.11, 25] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0144    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0150    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0007    decision 0.0411    set_bounds 0.0170    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0411    set_bounds 0.0170    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09645700454711914


Properties batch 7, size 1
Remaining timeout: 293.81897807121277
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7315213680267334.

Properties batch 8, size 1
Remaining timeout: 293.7101135253906
##### Instance 168 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.13235927]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.89296770,  0.02483216, -2.58087635, -4.43171549, 11.75505924,
        -0.69288248, -3.54584050,  3.28694582, -1.39150274,  2.35756040],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.13235927]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 705
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 165
Node /27 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 901
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 6] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 99] 
split level 5: [/input.11, 95] 
split level 6: [/input.11, 25] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.177757263183594e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0158    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08659124374389648

Result: safe in 6.5191 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.04662037, -1.09011745, -1.09763086, -1.01350653,  9.18842506,
         -1.43666768, -4.41026688,  0.67448622,  1.14697480,  2.96643901]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]100%|██████████| 1/1 [00:00<00:00,  1.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.35139132, -1.83636653, -1.90498018,  0.26498073,  6.24880409,
          -1.01134372, -5.26413250,  1.64428627,  0.85980254,  5.26715279],
         [-4.35139132, -1.83636653, -1.90498018,  0.26498073,  6.24880409,
          -1.01134372, -5.26413250,  1.64428627,  0.85980254,  5.26715279]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.60019493,  8.08517075,  8.15378380,  5.98382330,  7.26014805,
          11.51293659,  4.60451794,  5.38900137,  0.98165131]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7019 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
         -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [777]; unstable size 777; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 161, 1, 777] with unstable size 160 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 36, 1, 777] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 777] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [160]; unstable size 160; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 36, 1, 160] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 160] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.59627247,  1.66514969, -0.36852503, -2.44534540, -1.73352504,
          3.08611679, -2.69052505, -3.70168352, -3.72647190]], device='cuda:0') None
best_l after optimization: 2.7889788150787354
alpha/beta optimization time: 4.630403518676758
initial alpha-crown bounds: tensor([[ 5.18136692,  2.23694158,  0.86364985, -1.22625494, -0.71736312,
          3.73137569, -1.89689255, -2.62022042, -2.76362419]], device='cuda:0')
Worst class: (+ rhs) -2.7636241912841797
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.59587812423706
##### Instance 169 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.181366920471191.

Properties batch 1, size 1
Remaining timeout: 294.480268239975
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2369415760040283.

Properties batch 2, size 1
Remaining timeout: 294.3758041858673
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.863649845123291.

Properties batch 3, size 1
Remaining timeout: 294.27213430404663
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.22625494]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
        -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.22625494]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 777
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 966
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 51] 
split level 3: [/input.11, 99] 
split level 4: [/input.7, 112] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 9] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0148    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0309    
Accumulated time: func 0.0309    prepare 0.0154    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0168    solve 0.0310    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0168    solve 0.0310    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09660720825195312


Properties batch 4, size 1
Remaining timeout: 294.03303956985474
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.71736312]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
        -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.71736312]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 777
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 966
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 9] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 86] 
split level 4: [/input.11, 95] 
split level 5: [/input.7, 633] 
split level 6: [/input.7, 598] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.96453857421875e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0168    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09619379043579102


Properties batch 5, size 1
Remaining timeout: 293.79018092155457
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7313756942749023.

Properties batch 6, size 1
Remaining timeout: 293.68169951438904
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.89689255]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
        -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.89689255]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 777
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 966
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 1] 
split level 2: [/input.11, 86] 
split level 3: [/input.11, 99] 
split level 4: [/input.11, 51] 
split level 5: [/input.7, 112] 
split level 6: [/input.7, 633] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 9.393692016601562e-05
Time: prepare 0.0144    bound 0.0078    transfer 0.0006    finalize 0.0074    func 0.0305    
Accumulated time: func 0.0305    prepare 0.0150    bound 0.0078    transfer 0.0006    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0306    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.0306    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09642696380615234


Properties batch 7, size 1
Remaining timeout: 293.4427216053009
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.62022042]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
        -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.62022042]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 777
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 966
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 99] 
split level 1: [/input.11, 58] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 95] 
split level 4: [/input.11, 51] 
split level 5: [/input.7, 112] 
split level 6: [/input.11, 65] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 128 = 0.8671875
pruning-in-iteration extra time: 0.013734817504882812
Time: prepare 0.0144    bound 0.4429    transfer 0.0011    finalize 0.0091    func 0.4676    
Accumulated time: func 0.4676    prepare 0.0150    bound 0.4429    transfer 0.0011    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-1.06093 (7), -1.03528 (7), -0.47440 (7), -0.41018 (7), -0.35717 (7), -0.33058 (7), -0.29352 (7), -0.23478 (7), -0.19023 (7), -0.18028 (7), -0.11023 (7), -0.07200 (7), -0.07128 (7), -0.03979 (7), -0.00917 (7), -0.00555 (7), -0.00167 (7), 
Length of domains: 17
Time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4677    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0411    set_bounds 0.0170    solve 0.4677    add 0.0018    
Current (lb-rhs): -1.0609261989593506
17 domains visited
Cumulative time: 0.5358192920684814

BaB round 2
batch: 17
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] 
split level 1: [/input.7, 193] [/input.11, 12] [/input.7, 193] [/input.7, 193] [/input.7, 193] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.7, 193] [/input.7, 193] 
split level 2: [/input.11, 12] [/input.7, 598] [/input.7, 598] [/input.7, 317] [/input.11, 12] [/input.7, 598] [/input.7, 598] [/input.3, 2242] [/input.7, 598] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 129 / 136 = 0.9485294117647058
pruning-in-iteration extra time: 0.013087987899780273
Time: prepare 0.0198    bound 0.4534    transfer 0.0013    finalize 0.0105    func 0.4851    
Accumulated time: func 0.9527    prepare 0.0351    bound 0.8963    transfer 0.0024    finalize 0.0197    
Current worst splitting domains lb-rhs (depth):
-0.72749 (10), -0.70008 (10), -0.66030 (10), -0.59206 (10), -0.06538 (10), -0.00574 (10), -0.00433 (10), 
Length of domains: 7
Time: pickout 0.0013    decision 0.0253    set_bounds 0.0131    solve 0.4852    add 0.0014    
Accumulated time: pickout 0.0020    decision 0.0664    set_bounds 0.0301    solve 0.9529    add 0.0032    
Current (lb-rhs): -0.7274922132492065
24 domains visited
Cumulative time: 1.064044713973999

BaB round 3
batch: 7
splitting decisions: 
split level 0: [/input.11, 11] [/input.11, 11] [/input.7, 193] [/input.7, 193] [/input.11, 11] [/input.11, 11] [/input.11, 11] 
split level 1: [/input.11, 12] [/input.11, 12] [/input.11, 11] [/input.11, 11] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
split level 2: [/input.3, 2242] [/input.3, 2242] [/input.7, 633] [/input.7, 633] [/input.3, 2242] [/input.11, 9] [/input.11, 9] 
split level 3: [/input.11, 9] [/input.7, 703] [/input.7, 317] [/input.7, 317] [/input.11, 9] [/input.3, 2242] [/input.3, 2242] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 112 = 0.9196428571428571
pruning-in-iteration extra time: 0.01289510726928711
Time: prepare 0.0202    bound 0.4383    transfer 0.0011    finalize 0.0102    func 0.4698    
Accumulated time: func 1.4225    prepare 0.0557    bound 1.3346    transfer 0.0035    finalize 0.0299    
Current worst splitting domains lb-rhs (depth):
-0.40995 (14), -0.37202 (14), -0.32374 (14), -0.20685 (14), -0.20059 (14), -0.16732 (14), -0.14975 (14), -0.07269 (14), -0.01036 (14), 
Length of domains: 9
Time: pickout 0.0014    decision 0.0294    set_bounds 0.0120    solve 0.4699    add 0.0015    
Accumulated time: pickout 0.0034    decision 0.0957    set_bounds 0.0421    solve 1.4228    add 0.0047    
Current (lb-rhs): -0.40995052456855774
33 domains visited
Cumulative time: 1.5797045230865479

BaB round 4
batch: 9
splitting decisions: 
split level 0: [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] 
split level 1: [/input.7, 633] [/input.7, 723] [/input.7, 723] [/input.7, 723] [/input.7, 633] [/input.7, 723] [/input.7, 633] [/input.7, 723] [/input.7, 633] 
split level 2: [/input.11, 9] [/input.7, 317] [/input.7, 633] [/input.7, 317] [/input.11, 9] [/input.7, 317] [/input.11, 9] [/input.7, 317] [/input.7, 317] 
split level 3: [/input.7, 317] [/input.7, 703] [/input.7, 703] [/input.7, 703] [/input.7, 317] [/input.7, 703] [/input.3, 2230] [/input.7, 703] [/input.7, 703] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 144 / 144 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0278    bound 0.0077    transfer 0.0007    finalize 0.0106    func 0.0469    
Accumulated time: func 1.4694    prepare 0.0840    bound 1.3422    transfer 0.0042    finalize 0.0405    
Length of domains: 0
Time: pickout 0.0013    decision 0.0299    set_bounds 0.0162    solve 0.0470    add 0.0001    
Accumulated time: pickout 0.0047    decision 0.1257    set_bounds 0.0583    solve 1.4697    add 0.0048    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
33 domains visited
Cumulative time: 1.6752920150756836


Properties batch 8, size 1
Remaining timeout: 291.6202464103699
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.76362419]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.04661989, -1.09011722, -1.09763145, -1.01350737,  9.18842602,
        -1.43666792, -4.41026640,  0.67448634,  1.14697456,  2.96643901],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.76362419]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 777
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 157
Node /27 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 966
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.11, 6] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 95] 
split level 5: [/input.3, 2242] 
split level 6: [/input.7, 633] 
pruning_in_iteration open status: True
ratio of positive domain = 113 / 128 = 0.8828125
pruning-in-iteration extra time: 0.011755704879760742
Time: prepare 0.0215    bound 0.4077    transfer 0.0017    finalize 0.0114    func 0.4425    
Accumulated time: func 0.4425    prepare 0.0221    bound 0.4077    transfer 0.0017    finalize 0.0114    
Current worst splitting domains lb-rhs (depth):
-0.89127 (7), -0.87405 (7), -0.81385 (7), -0.58055 (7), -0.57926 (7), -0.55195 (7), -0.47776 (7), -0.31791 (7), -0.31341 (7), -0.29104 (7), -0.20916 (7), -0.07236 (7), -0.06999 (7), -0.05694 (7), -0.02935 (7), 
Length of domains: 15
Time: pickout 0.0007    decision 0.0429    set_bounds 0.0198    solve 0.4426    add 0.0018    
Accumulated time: pickout 0.0007    decision 0.0429    set_bounds 0.0198    solve 0.4426    add 0.0018    
Current (lb-rhs): -0.8912698030471802
15 domains visited
Cumulative time: 0.5165996551513672

BaB round 2
batch: 15
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 0] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.11, 0] 
split level 1: [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.7, 258] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.11, 0] [/input.7, 703] 
split level 2: [/input.7, 258] [/input.7, 703] [/input.7, 118] [/input.7, 703] [/input.7, 258] [/input.7, 703] [/input.7, 118] [/input.7, 258] [/input.7, 258] [/input.7, 118] 
pruning_in_iteration open status: True
ratio of positive domain = 108 / 120 = 0.9
pruning-in-iteration extra time: 0.013187408447265625
Time: prepare 0.0233    bound 0.4530    transfer 0.0012    finalize 0.0103    func 0.4878    
Accumulated time: func 0.9302    prepare 0.0457    bound 0.8608    transfer 0.0029    finalize 0.0217    
Current worst splitting domains lb-rhs (depth):
-0.55743 (10), -0.53910 (10), -0.45590 (10), -0.44295 (10), -0.43732 (10), -0.37198 (10), -0.29384 (10), -0.28380 (10), -0.26655 (10), -0.24015 (10), -0.22288 (10), -0.17473 (10), 
Length of domains: 12
Time: pickout 0.0017    decision 0.0247    set_bounds 0.0118    solve 0.4879    add 0.0016    
Accumulated time: pickout 0.0024    decision 0.0676    set_bounds 0.0317    solve 0.9304    add 0.0034    
Current (lb-rhs): -0.5574347972869873
27 domains visited
Cumulative time: 1.0459411144256592

BaB round 3
batch: 12
splitting decisions: 
split level 0: [/input.11, 32] [/input.11, 97] [/input.11, 97] [/input.11, 97] [/input.11, 32] [/input.11, 32] [/input.11, 97] [/input.11, 97] [/input.11, 11] [/input.11, 97] 
split level 1: [/input.11, 97] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 11] [/input.11, 97] [/input.7, 257] [/input.11, 11] [/input.7, 703] [/input.11, 11] 
split level 2: [/input.11, 11] [/input.7, 258] [/input.7, 703] [/input.7, 258] [/input.7, 258] [/input.11, 11] [/input.11, 11] [/input.7, 703] [/input.3, 2245] [/input.7, 257] 
split level 3: [/input.7, 258] [/input.7, 118] [/input.7, 258] [/input.7, 703] [/input.3, 2230] [/input.7, 258] [/input.7, 708] [/input.7, 258] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 186 / 192 = 0.96875
pruning-in-iteration extra time: 0.013084888458251953
Time: prepare 0.0367    bound 0.4468    transfer 0.0015    finalize 0.0158    func 0.5011    
Accumulated time: func 1.4313    prepare 0.0829    bound 1.3076    transfer 0.0044    finalize 0.0375    
Current worst splitting domains lb-rhs (depth):
-0.21280 (14), -0.20252 (14), -0.12535 (14), -0.11466 (14), -0.10720 (14), -0.03600 (14), 
Length of domains: 6
Time: pickout 0.0014    decision 0.0310    set_bounds 0.0223    solve 0.5012    add 0.0013    
Accumulated time: pickout 0.0037    decision 0.0987    set_bounds 0.0540    solve 1.4316    add 0.0047    
Current (lb-rhs): -0.21279919147491455
33 domains visited
Cumulative time: 1.6054301261901855

BaB round 4
batch: 6
splitting decisions: 
split level 0: [/input.7, 257] [/input.7, 257] [/input.7, 257] [/input.7, 257] [/input.11, 73] [/input.11, 73] 
split level 1: [/input.3, 2252] [/input.3, 2252] [/input.7, 28] [/input.7, 28] [/input.3, 2252] [/input.3, 2252] 
split level 2: [/input.7, 28] [/input.7, 28] [/input.3, 2252] [/input.3, 2252] [/input.7, 708] [/input.7, 708] 
split level 3: [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.3, 2245] [/input.3, 2245] 
split level 4: [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 597] [/input.7, 28] [/input.7, 28] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 192 / 192 = 1.0
pruning-in-iteration extra time: 8.559226989746094e-05
Time: prepare 0.0375    bound 0.0078    transfer 0.0009    finalize 0.0139    func 0.0600    
Accumulated time: func 1.4913    prepare 0.1208    bound 1.3154    transfer 0.0053    finalize 0.0514    
Length of domains: 0
Time: pickout 0.0015    decision 0.0332    set_bounds 0.0251    solve 0.0602    add 0.0001    
Accumulated time: pickout 0.0053    decision 0.1319    set_bounds 0.0791    solve 1.4918    add 0.0048    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
33 domains visited
Cumulative time: 1.7269318103790283

Result: safe in 10.2593 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -0.64843720,  -4.74963570,   4.86595583,   6.39208889,  -6.06040478,
          -4.37399912, -13.95263767,  11.19494057,   3.73435211,   3.64851785]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.84570777,  -5.44740582,   4.82585669,   6.98724127,  -6.91791534,
           -2.58807874, -12.85082912,   6.84123135,   4.49421215,   3.90890288],
         [  0.84570777,  -5.44740582,   4.82585669,   6.98724127,  -6.91791534,
           -2.58807874, -12.85082912,   6.84123135,   4.49421215,   3.90890288]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.99552345, 12.28863716,  2.01537466, -0.14600992, 13.75914669,
           9.42930984, 19.69206047,  2.34701920,  2.93232846]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0184 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0194 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 2.64666033,  3.54651499, 11.20341301,  5.01235485, -7.73671961,
         -4.30333710, -4.79010773, -0.86034048,  3.09042740, -7.83691072]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]100%|██████████| 1/1 [00:00<00:00,  1.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.52477729,  2.94829845,  9.28460026,  8.99941635, -9.23227596,
          -3.09884739, -5.86074829, -1.56957543,  3.42286515, -6.44938278],
         [ 1.52477729,  2.94829845,  9.28460026,  8.99941635, -9.23227596,
          -3.09884739, -5.86074829, -1.56957543,  3.42286515, -6.44938278]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.75982285,  6.33630180,  0.28518391, 18.51687622, 12.38344765,
          15.14534855, 10.85417557,  5.86173534, 15.73398304]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.6955 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 2.64666080,  3.54651499, 11.20341587,  5.01235485, -7.73671961,
         -4.30333710, -4.79010773, -0.86033958,  3.09042645, -7.83691120]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [630]; unstable size 630; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 116, 1, 630] with unstable size 115 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 23, 1, 630] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 630] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [115]; unstable size 115; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 23, 1, 115] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.58916450,  1.46125031, -4.21337128, 11.64636803,  3.37117577,
          5.69309473,  6.12470388, -0.74061632,  8.95056152]], device='cuda:0') None
best_l after optimization: 38.46710968017578
alpha/beta optimization time: 4.591883420944214
initial alpha-crown bounds: tensor([[ 1.94277108,  1.92721581, -3.74683428, 12.13713455,  4.11263514,
          6.32726431,  6.49120617, -0.38623977,  9.66195679]], device='cuda:0')
Worst class: (+ rhs) -3.7468342781066895
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.6443099975586
##### Instance 171 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.942771077156067.

Properties batch 1, size 1
Remaining timeout: 294.5300598144531
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.927215814590454.

Properties batch 2, size 1
Remaining timeout: 294.4252989292145
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.74683428]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.64666080,  3.54651499, 11.20341587,  5.01235485, -7.73671961,
        -4.30333710, -4.79010773, -0.86033958,  3.09042645, -7.83691120],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.74683428]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 630
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 113
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 763
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 80] 
split level 2: [/input.11, 56] 
split level 3: [/input.7, 191] 
split level 4: [/input.11, 60] 
split level 5: [/input.11, 59] 
split level 6: [/input.7, 123] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 128 = 0.8203125
pruning-in-iteration extra time: 0.01312112808227539
Time: prepare 0.0145    bound 0.4541    transfer 0.0012    finalize 0.0093    func 0.4793    
Accumulated time: func 0.4793    prepare 0.0151    bound 0.4541    transfer 0.0012    finalize 0.0093    
Current worst splitting domains lb-rhs (depth):
-2.43746 (7), -2.43664 (7), -2.03779 (7), -1.98995 (7), -1.90701 (7), -1.89952 (7), -1.86106 (7), -1.83859 (7), -1.64100 (7), -1.60763 (7), -1.43809 (7), -1.41320 (7), -1.24189 (7), -1.21073 (7), -0.90037 (7), -0.88057 (7), -0.45003 (7), -0.42672 (7), -0.37166 (7), -0.31023 (7), 
Length of domains: 23
Time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.4794    add 0.0020    
Accumulated time: pickout 0.0006    decision 0.0410    set_bounds 0.0170    solve 0.4794    add 0.0020    
Current (lb-rhs): -2.43746280670166
23 domains visited
Cumulative time: 0.5475242137908936

BaB round 2
batch: 23
splitting decisions: 
split level 0: [/input.7, 641] [/input.7, 641] [/input.7, 641] [/input.7, 266] [/input.7, 641] [/input.7, 266] [/input.7, 641] [/input.7, 641] [/input.7, 641] [/input.7, 266] 
split level 1: [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.7, 316] [/input.7, 266] [/input.7, 316] [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.7, 316] 
split level 2: [/input.7, 124] [/input.7, 583] [/input.7, 124] [/input.7, 583] [/input.7, 583] [/input.7, 583] [/input.7, 423] [/input.7, 583] [/input.7, 423] [/input.7, 583] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 184 = 0.3695652173913043
pruning-in-iteration extra time: 0.013766050338745117
Time: prepare 0.0239    bound 0.4732    transfer 0.0016    finalize 0.0126    func 0.5113    
Accumulated time: func 0.9906    prepare 0.0393    bound 0.9273    transfer 0.0028    finalize 0.0219    
Current worst splitting domains lb-rhs (depth):
-1.83902 (10), -1.83377 (10), -1.74908 (10), -1.73501 (10), -1.72161 (10), -1.70443 (10), -1.63923 (10), -1.61881 (10), -1.39944 (10), -1.39179 (10), -1.35589 (10), -1.35550 (10), -1.33792 (10), -1.31978 (10), -1.31805 (10), -1.31584 (10), -1.27410 (10), -1.27338 (10), -1.26620 (10), -1.25877 (10), 
Length of domains: 116
Time: pickout 0.0014    decision 0.0271    set_bounds 0.0135    solve 0.5115    add 0.0029    
Accumulated time: pickout 0.0020    decision 0.0681    set_bounds 0.0305    solve 0.9908    add 0.0049    
Current (lb-rhs): -1.839024305343628
139 domains visited
Cumulative time: 1.1049840450286865

BaB round 3
batch: 116
splitting decisions: 
split level 0: [/input.7, 248] [/input.7, 248] [/input.7, 248] [/input.7, 248] [/input.7, 248] [/input.7, 248] [/input.7, 641] [/input.7, 248] [/input.7, 423] [/input.7, 248] 
pruning_in_iteration open status: False
ratio of positive domain = 42 / 232 = 0.18103448275862066
pruning-in-iteration extra time: 0.00022125244140625
Time: prepare 0.0299    bound 0.3798    transfer 0.0015    finalize 0.0163    func 0.4277    
Accumulated time: func 1.4182    prepare 0.0696    bound 1.3071    transfer 0.0043    finalize 0.0382    
Current worst splitting domains lb-rhs (depth):
-1.78234 (11), -1.77695 (11), -1.71325 (11), -1.69555 (11), -1.68999 (11), -1.66080 (11), -1.59433 (11), -1.56447 (11), -1.41210 (11), -1.37951 (11), -1.32612 (11), -1.29635 (11), -1.28802 (11), -1.28537 (11), -1.26260 (11), -1.24063 (11), -1.23725 (11), -1.22181 (11), -1.21434 (11), -1.20287 (11), 
Length of domains: 189
Time: pickout 0.0014    decision 0.0444    set_bounds 0.0103    solve 0.4278    add 0.0036    
Accumulated time: pickout 0.0035    decision 0.1125    set_bounds 0.0408    solve 1.4186    add 0.0085    
Current (lb-rhs): -1.7823352813720703
328 domains visited
Cumulative time: 1.5937869548797607

BaB round 4
batch: 189
splitting decisions: 
split level 0: [/input.7, 423] [/input.7, 423] [/input.7, 641] [/input.7, 641] [/input.7, 188] [/input.7, 124] [/input.7, 248] [/input.7, 423] [/input.7, 41] [/input.7, 423] 
pruning_in_iteration open status: True
ratio of positive domain = 85 / 378 = 0.22486772486772488
pruning-in-iteration extra time: 0.0053479671478271484
Time: prepare 0.0484    bound 0.4212    transfer 0.0020    finalize 0.0217    func 0.4935    
Accumulated time: func 1.9118    prepare 0.1183    bound 1.7283    transfer 0.0063    finalize 0.0599    
Current worst splitting domains lb-rhs (depth):
-1.72712 (12), -1.71654 (12), -1.66434 (12), -1.57460 (12), -1.55790 (12), -1.51910 (12), -1.51129 (12), -1.48685 (12), -1.41542 (12), -1.41293 (12), -1.37284 (12), -1.25303 (12), -1.23878 (12), -1.22769 (12), -1.21263 (12), -1.19638 (12), -1.16975 (12), -1.15100 (12), -1.15028 (12), -1.14963 (12), 
Length of domains: 293
Time: pickout 0.0019    decision 0.0444    set_bounds 0.0156    solve 0.4937    add 0.0041    
Accumulated time: pickout 0.0053    decision 0.1569    set_bounds 0.0564    solve 1.9123    add 0.0126    
Current (lb-rhs): -1.7271169424057007
621 domains visited
Cumulative time: 2.15531325340271

BaB round 5
batch: 293
splitting decisions: 
split level 0: [/input.7, 41] [/input.7, 41] [/input.7, 317] [/input.7, 317] [/input.7, 41] [/input.7, 41] [/input.7, 248] [/input.7, 641] [/input.7, 423] [/input.7, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 586 = 0.2593856655290102
pruning-in-iteration extra time: 0.00985860824584961
Time: prepare 0.0749    bound 0.6495    transfer 0.0028    finalize 0.0348    func 0.7622    
Accumulated time: func 2.6739    prepare 0.1936    bound 2.3778    transfer 0.0091    finalize 0.0947    
Current worst splitting domains lb-rhs (depth):
-1.68649 (13), -1.58131 (13), -1.55361 (13), -1.43503 (13), -1.42130 (13), -1.41379 (13), -1.39013 (13), -1.38928 (13), -1.37249 (13), -1.35168 (13), -1.31376 (13), -1.29822 (13), -1.27549 (13), -1.27312 (13), -1.23607 (13), -1.21202 (13), -1.19928 (13), -1.19261 (13), -1.17027 (13), -1.15446 (13), 
Length of domains: 434
Time: pickout 0.0019    decision 0.0601    set_bounds 0.0239    solve 0.7624    add 0.0050    
Accumulated time: pickout 0.0073    decision 0.2170    set_bounds 0.0802    solve 2.6747    add 0.0176    
Current (lb-rhs): -1.6864862442016602
1055 domains visited
Cumulative time: 3.0114264488220215

BaB round 6
batch: 434
splitting decisions: 
split level 0: [/input.7, 317] [/input.7, 262] [/input.7, 124] [/input.7, 124] [/input.7, 317] [/input.7, 317] [/input.7, 262] [/input.7, 124] [/input.7, 317] [/input.7, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 266 / 868 = 0.30645161290322576
pruning-in-iteration extra time: 0.010360002517700195
Time: prepare 0.1117    bound 0.6695    transfer 0.0037    finalize 0.0513    func 0.8379    
Accumulated time: func 3.5119    prepare 0.3056    bound 3.0473    transfer 0.0128    finalize 0.1459    
Current worst splitting domains lb-rhs (depth):
-1.55196 (14), -1.51665 (14), -1.48129 (14), -1.38151 (14), -1.37002 (14), -1.36811 (14), -1.35441 (14), -1.35285 (14), -1.26727 (14), -1.25996 (14), -1.25891 (14), -1.25315 (14), -1.24503 (14), -1.19853 (14), -1.18992 (14), -1.18371 (14), -1.18170 (14), -1.13198 (14), -1.10926 (14), -1.10870 (14), 
Length of domains: 602
Time: pickout 0.0025    decision 0.0685    set_bounds 0.0349    solve 0.8382    add 0.0069    
Accumulated time: pickout 0.0098    decision 0.2855    set_bounds 0.1152    solve 3.5129    add 0.0245    
Current (lb-rhs): -1.5519596338272095
1657 domains visited
Cumulative time: 3.9669852256774902

BaB round 7
batch: 602
splitting decisions: 
split level 0: [/input.7, 262] [/input.7, 317] [/input.7, 423] [/input.7, 262] [/input.7, 317] [/input.7, 188] [/input.7, 262] [/input.7, 262] [/input.7, 423] [/input.7, 423] 
pruning_in_iteration open status: True
ratio of positive domain = 521 / 1204 = 0.43272425249169433
pruning-in-iteration extra time: 0.01089334487915039
Time: prepare 0.1540    bound 0.7189    transfer 0.0057    finalize 0.0719    func 0.9507    
Accumulated time: func 4.4625    prepare 0.4599    bound 3.7663    transfer 0.0185    finalize 0.2178    
Current worst splitting domains lb-rhs (depth):
-1.38865 (15), -1.37791 (15), -1.34452 (15), -1.33508 (15), -1.24069 (15), -1.22673 (15), -1.21730 (15), -1.21261 (15), -1.20712 (15), -1.18312 (15), -1.18199 (15), -1.17183 (15), -1.16207 (15), -1.15076 (15), -1.14963 (15), -1.14503 (15), -1.14422 (15), -1.10007 (15), -1.09655 (15), -1.08945 (15), 
Length of domains: 683
Time: pickout 0.0032    decision 0.0862    set_bounds 0.0483    solve 0.9511    add 0.0066    
Accumulated time: pickout 0.0131    decision 0.3717    set_bounds 0.1635    solve 4.4640    add 0.0311    
Current (lb-rhs): -1.3886483907699585
2340 domains visited
Cumulative time: 5.06964898109436

BaB round 8
batch: 683
splitting decisions: 
split level 0: [/input.7, 267] [/input.7, 316] [/input.7, 41] [/input.7, 316] [/input.7, 316] [/input.7, 262] [/input.7, 316] [/input.7, 316] [/input.7, 41] [/input.7, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 538 / 1366 = 0.39385065885797954
pruning-in-iteration extra time: 0.009914636611938477
Time: prepare 0.1743    bound 0.6600    transfer 0.0080    finalize 0.0832    func 0.9258    
Accumulated time: func 5.3883    prepare 0.6346    bound 4.4263    transfer 0.0265    finalize 0.3010    
Current worst splitting domains lb-rhs (depth):
-1.30821 (16), -1.26475 (16), -1.22956 (16), -1.21662 (16), -1.19302 (16), -1.15729 (16), -1.14612 (16), -1.11441 (16), -1.10870 (16), -1.09630 (16), -1.09113 (16), -1.08925 (16), -1.07482 (16), -1.06055 (16), -1.05372 (16), -1.05318 (16), -1.04444 (16), -1.04336 (16), -1.03216 (16), -1.02629 (16), 
Length of domains: 828
Time: pickout 0.0039    decision 0.0999    set_bounds 0.0537    solve 0.9264    add 0.0076    
Accumulated time: pickout 0.0170    decision 0.4717    set_bounds 0.2172    solve 5.3904    add 0.0387    
Current (lb-rhs): -1.3082067966461182
3168 domains visited
Cumulative time: 6.169728755950928

BaB round 9
batch: 828
splitting decisions: 
split level 0: [/input.7, 316] [/input.7, 267] [/input.7, 188] [/input.7, 424] [/input.7, 316] [/input.7, 267] [/input.7, 267] [/input.7, 316] [/input.7, 316] [/input.7, 267] 
pruning_in_iteration open status: True
ratio of positive domain = 666 / 1656 = 0.40217391304347827
pruning-in-iteration extra time: 0.009999990463256836
Time: prepare 0.2105    bound 0.7368    transfer 0.0057    finalize 0.2105    func 1.1638    
Accumulated time: func 6.5521    prepare 0.8454    bound 5.1631    transfer 0.0322    finalize 0.5115    
Current worst splitting domains lb-rhs (depth):
-1.18162 (17), -1.16030 (17), -1.15023 (17), -1.14798 (17), -1.12317 (17), -1.12244 (17), -1.08707 (17), -1.05349 (17), -1.03478 (17), -1.00767 (17), -0.98819 (17), -0.98107 (17), -0.97611 (17), -0.96195 (17), -0.94300 (17), -0.93957 (17), -0.93811 (17), -0.93179 (17), -0.93042 (17), -0.92628 (17), 
Length of domains: 990
Time: pickout 0.0035    decision 0.1155    set_bounds 0.0654    solve 1.1643    add 0.0087    
Accumulated time: pickout 0.0205    decision 0.5872    set_bounds 0.2826    solve 6.5546    add 0.0473    
Current (lb-rhs): -1.1816246509552002
4158 domains visited
Cumulative time: 7.537919759750366

BaB round 10
batch: 990
splitting decisions: 
split level 0: [/input.7, 188] [/input.7, 267] [/input.7, 424] [/input.7, 316] [/input.7, 267] [/input.7, 267] [/input.7, 316] [/input.7, 424] [/input.7, 188] [/input.7, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 792 / 1980 = 0.4
pruning-in-iteration extra time: 0.011465311050415039
Time: prepare 0.2513    bound 0.6120    transfer 0.0085    finalize 0.1136    func 0.9858    
Accumulated time: func 7.5379    prepare 1.0971    bound 5.7751    transfer 0.0407    finalize 0.6252    
Current worst splitting domains lb-rhs (depth):
-1.04115 (18), -1.02053 (18), -1.00113 (18), -0.99826 (18), -0.99526 (18), -0.99173 (18), -0.98579 (18), -0.98354 (18), -0.97573 (18), -0.96182 (18), -0.96068 (18), -0.94617 (18), -0.93375 (18), -0.92845 (18), -0.91323 (18), -0.91204 (18), -0.88873 (18), -0.88059 (18), -0.85953 (18), -0.85111 (18), 
Length of domains: 1188
Time: pickout 0.0033    decision 0.1320    set_bounds 0.0781    solve 0.9872    add 0.0105    
Accumulated time: pickout 0.0238    decision 0.7191    set_bounds 0.3606    solve 7.5419    add 0.0579    
Current (lb-rhs): -1.0411498546600342
5346 domains visited
Cumulative time: 8.759734392166138

BaB round 11
batch: 1188
splitting decisions: 
split level 0: [/input.7, 188] [/input.7, 188] [/input.7, 188] [/input.7, 249] [/input.7, 267] [/input.7, 249] [/input.7, 249] [/input.7, 188] [/input.7, 267] [/input.7, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 886 / 2376 = 0.37289562289562295
pruning-in-iteration extra time: 0.009749174118041992
Time: prepare 0.3054    bound 0.7514    transfer 0.0080    finalize 0.1359    func 1.2010    
Accumulated time: func 8.7388    prepare 1.4029    bound 6.5265    transfer 0.0487    finalize 0.7611    
Current worst splitting domains lb-rhs (depth):
-0.91610 (19), -0.89918 (19), -0.88466 (19), -0.87690 (19), -0.87629 (19), -0.87614 (19), -0.86950 (19), -0.86418 (19), -0.86171 (19), -0.85977 (19), -0.84284 (19), -0.83874 (19), -0.83801 (19), -0.83735 (19), -0.83304 (19), -0.83203 (19), -0.82940 (19), -0.81891 (19), -0.81852 (19), -0.81796 (19), 
Length of domains: 1490
Time: pickout 0.0053    decision 0.1530    set_bounds 0.0939    solve 1.2017    add 0.0119    
Accumulated time: pickout 0.0291    decision 0.8721    set_bounds 0.4546    solve 8.7436    add 0.0698    
Current (lb-rhs): -0.9160953760147095
6836 domains visited
Cumulative time: 10.23810601234436

BaB round 12
batch: 1490
splitting decisions: 
split level 0: [/input.7, 42] [/input.7, 188] [/input.7, 192] [/input.7, 42] [/input.7, 192] [/input.7, 595] [/input.7, 192] [/input.7, 192] [/input.7, 249] [/input.7, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 1089 / 2980 = 0.3654362416107383
pruning-in-iteration extra time: 0.011961936950683594
Time: prepare 0.3837    bound 0.5949    transfer 0.0104    finalize 0.1655    func 1.1559    
Accumulated time: func 9.8948    prepare 1.7870    bound 7.1214    transfer 0.0591    finalize 0.9266    
Current worst splitting domains lb-rhs (depth):
-0.83786 (20), -0.82752 (20), -0.81554 (20), -0.79978 (20), -0.79599 (20), -0.79131 (20), -0.78854 (20), -0.78489 (20), -0.77949 (20), -0.77599 (20), -0.77556 (20), -0.76053 (20), -0.75794 (20), -0.75420 (20), -0.74985 (20), -0.74903 (20), -0.74323 (20), -0.74270 (20), -0.73256 (20), -0.72958 (20), 
Length of domains: 1891
Time: pickout 0.0066    decision 0.1863    set_bounds 0.2513    solve 1.1568    add 0.0154    
Accumulated time: pickout 0.0358    decision 1.0584    set_bounds 0.7059    solve 9.9004    add 0.0852    
Current (lb-rhs): -0.8378596305847168
8727 domains visited
Cumulative time: 11.87113070487976

BaB round 13
batch: 1891
splitting decisions: 
split level 0: [/input.7, 249] [/input.7, 192] [/input.7, 192] [/input.7, 42] [/input.7, 42] [/input.7, 188] [/input.7, 249] [/input.7, 192] [/input.7, 42] [/input.7, 192] 
pruning_in_iteration open status: True
ratio of positive domain = 1595 / 3782 = 0.4217345319936542
pruning-in-iteration extra time: 0.010544776916503906
Time: prepare 0.4870    bound 0.6107    transfer 0.0124    finalize 0.3571    func 1.4675    
Accumulated time: func 11.3623    prepare 2.2743    bound 7.7321    transfer 0.0715    finalize 1.2837    
Current worst splitting domains lb-rhs (depth):
-0.75334 (21), -0.74935 (21), -0.72801 (21), -0.72798 (21), -0.71891 (21), -0.71485 (21), -0.71113 (21), -0.70304 (21), -0.70067 (21), -0.69725 (21), -0.68739 (21), -0.68255 (21), -0.68171 (21), -0.66935 (21), -0.66797 (21), -0.66739 (21), -0.66738 (21), -0.66568 (21), -0.66346 (21), -0.66059 (21), 
Length of domains: 2187
Time: pickout 0.0061    decision 0.2298    set_bounds 0.1506    solve 1.4686    add 0.0171    
Accumulated time: pickout 0.0418    decision 1.2882    set_bounds 0.8565    solve 11.3690    add 0.1023    
Current (lb-rhs): -0.7533386945724487
10914 domains visited
Cumulative time: 13.76431918144226

BaB round 14
batch: 2048
splitting decisions: 
split level 0: [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 709] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] 
pruning_in_iteration open status: True
ratio of positive domain = 1525 / 4096 = 0.372314453125
pruning-in-iteration extra time: 0.010576725006103516
Time: prepare 0.5276    bound 0.7051    transfer 0.0138    finalize 0.2437    func 1.4905    
Accumulated time: func 12.8528    prepare 2.8023    bound 8.4372    transfer 0.0853    finalize 1.5273    
Current worst splitting domains lb-rhs (depth):
-0.69089 (22), -0.68583 (22), -0.66965 (22), -0.66563 (22), -0.66529 (22), -0.65584 (22), -0.65243 (22), -0.64881 (22), -0.64321 (22), -0.63995 (22), -0.63499 (22), -0.62437 (22), -0.62354 (22), -0.61912 (22), -0.61725 (22), -0.61503 (22), -0.61319 (22), -0.60873 (22), -0.60740 (22), -0.60545 (22), 
Length of domains: 2710
Time: pickout 0.0095    decision 0.2450    set_bounds 0.1622    solve 1.4920    add 0.0192    
Accumulated time: pickout 0.0513    decision 1.5332    set_bounds 1.0186    solve 12.8610    add 0.1215    
Current (lb-rhs): -0.6908925771713257
13485 domains visited
Cumulative time: 15.716415166854858

BaB round 15
batch: 2048
splitting decisions: 
split level 0: [/input.7, 709] [/input.7, 709] [/input.7, 192] [/input.7, 709] [/input.7, 709] [/input.7, 709] [/input.7, 42] [/input.7, 583] [/input.7, 709] [/input.7, 249] 
pruning_in_iteration open status: True
ratio of positive domain = 1650 / 4096 = 0.40283203125
pruning-in-iteration extra time: 0.010271549224853516
Time: prepare 0.5282    bound 0.6639    transfer 0.0134    finalize 0.2583    func 1.4641    
Accumulated time: func 14.3170    prepare 3.3308    bound 9.1012    transfer 0.0986    finalize 1.7857    
Current worst splitting domains lb-rhs (depth):
-0.60989 (23), -0.60020 (23), -0.59890 (23), -0.59345 (22), -0.57905 (23), -0.57724 (23), -0.57086 (22), -0.56195 (23), -0.56029 (22), -0.56003 (22), -0.55927 (23), -0.55917 (23), -0.55601 (22), -0.55525 (23), -0.55140 (23), -0.54823 (22), -0.54609 (23), -0.54529 (22), -0.54356 (22), -0.54256 (22), 
Length of domains: 3108
Time: pickout 0.0063    decision 0.2401    set_bounds 0.2960    solve 1.4658    add 0.0175    
Accumulated time: pickout 0.0576    decision 1.7733    set_bounds 1.3146    solve 14.3268    add 0.1390    
Current (lb-rhs): -0.6098850965499878
15931 domains visited
Cumulative time: 17.766533136367798

BaB round 16
batch: 2048
splitting decisions: 
split level 0: [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] 
pruning_in_iteration open status: True
ratio of positive domain = 2333 / 4096 = 0.569580078125
pruning-in-iteration extra time: 0.011332273483276367
Time: prepare 0.5298    bound 0.5518    transfer 0.0142    finalize 0.3977    func 1.4946    
Accumulated time: func 15.8116    prepare 3.8610    bound 9.6529    transfer 0.1129    finalize 2.1834    
Current worst splitting domains lb-rhs (depth):
-0.59345 (22), -0.57980 (24), -0.57174 (24), -0.57108 (24), -0.57086 (22), -0.56029 (22), -0.56003 (22), -0.55601 (22), -0.54823 (22), -0.54529 (22), -0.54529 (24), -0.54356 (22), -0.54256 (22), -0.54122 (24), -0.53828 (24), -0.53664 (24), -0.53564 (22), -0.53474 (23), -0.53394 (24), -0.52969 (23), 
Length of domains: 2823
Time: pickout 0.0091    decision 0.2445    set_bounds 0.1654    solve 1.4957    add 0.0135    
Accumulated time: pickout 0.0667    decision 2.0178    set_bounds 1.4800    solve 15.8225    add 0.1525    
Current (lb-rhs): -0.5934491157531738
17694 domains visited
Cumulative time: 19.72283124923706

BaB round 17
batch: 2048
splitting decisions: 
split level 0: [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] 
pruning_in_iteration open status: True
ratio of positive domain = 2080 / 4096 = 0.5078125
pruning-in-iteration extra time: 0.010994195938110352
Time: prepare 0.5309    bound 0.5595    transfer 0.0137    finalize 0.2613    func 1.3668    
Accumulated time: func 17.1784    prepare 4.3923    bound 10.2125    transfer 0.1266    finalize 2.4447    
Current worst splitting domains lb-rhs (depth):
-0.59345 (22), -0.57086 (22), -0.56029 (22), -0.56003 (22), -0.55601 (22), -0.54823 (22), -0.54529 (22), -0.54356 (22), -0.54256 (22), -0.53564 (22), -0.52335 (22), -0.51853 (22), -0.51659 (25), -0.51354 (24), -0.51289 (22), -0.50873 (22), -0.50742 (25), -0.50727 (21), -0.50710 (23), -0.50296 (22), 
Length of domains: 2791
Time: pickout 0.0097    decision 0.2415    set_bounds 0.1648    solve 1.3680    add 0.0149    
Accumulated time: pickout 0.0765    decision 2.2593    set_bounds 1.6448    solve 17.1905    add 0.1675    
Current (lb-rhs): -0.5934491157531738
19710 domains visited
Cumulative time: 21.550857543945312

BaB round 18
batch: 2048
splitting decisions: 
split level 0: [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] 
pruning_in_iteration open status: True
ratio of positive domain = 2276 / 4096 = 0.5556640625
pruning-in-iteration extra time: 0.010381460189819336
Time: prepare 0.5654    bound 0.5877    transfer 0.0137    finalize 0.2754    func 1.4425    
Accumulated time: func 18.6208    prepare 4.9580    bound 10.8002    transfer 0.1402    finalize 2.7201    
Current worst splitting domains lb-rhs (depth):
-0.59345 (22), -0.57086 (22), -0.56029 (22), -0.56003 (22), -0.55601 (22), -0.54823 (22), -0.54529 (22), -0.54356 (22), -0.54256 (22), -0.53564 (22), -0.52335 (22), -0.51853 (22), -0.51289 (22), -0.50873 (22), -0.50727 (21), -0.50710 (23), -0.50296 (22), -0.50064 (22), -0.49538 (22), -0.49193 (22), 
Length of domains: 2563
Time: pickout 0.0067    decision 0.2417    set_bounds 0.2846    solve 1.4439    add 0.0136    
Accumulated time: pickout 0.0832    decision 2.5010    set_bounds 1.9294    solve 18.6344    add 0.1811    
Current (lb-rhs): -0.5934491157531738
21530 domains visited
Cumulative time: 23.56907892227173

BaB round 19
batch: 2048
splitting decisions: 
split level 0: [/input.7, 709] [/input.7, 192] [/input.7, 192] [/input.7, 583] [/input.7, 709] [/input.7, 42] [/input.7, 709] [/input.7, 192] [/input.7, 249] [/input.7, 192] 
pruning_in_iteration open status: True
ratio of positive domain = 2338 / 4096 = 0.57080078125
pruning-in-iteration extra time: 0.011075258255004883
Time: prepare 0.5698    bound 0.6450    transfer 0.0141    finalize 0.4072    func 1.6365    
Accumulated time: func 20.2573    prepare 5.5282    bound 11.4451    transfer 0.1543    finalize 3.1273    
Current worst splitting domains lb-rhs (depth):
-0.59345 (22), -0.57086 (22), -0.56003 (22), -0.55601 (22), -0.54356 (22), -0.54256 (22), -0.53564 (22), -0.52335 (22), -0.51853 (22), -0.51289 (22), -0.50873 (22), -0.50727 (21), -0.50296 (22), -0.50064 (22), -0.49538 (22), -0.49193 (22), -0.48631 (23), -0.48359 (22), -0.48033 (22), -0.47878 (24), 
Length of domains: 2273
Time: pickout 0.0088    decision 0.2410    set_bounds 0.1641    solve 1.6379    add 0.0136    
Accumulated time: pickout 0.0920    decision 2.7420    set_bounds 2.0935    solve 20.2722    add 0.1947    
Current (lb-rhs): -0.5934491157531738
23288 domains visited
Cumulative time: 25.66472029685974

BaB round 20
batch: 2048
splitting decisions: 
split level 0: [/input.7, 709] [/input.7, 42] [/input.7, 709] [/input.7, 709] [/input.7, 192] [/input.7, 249] [/input.7, 709] [/input.7, 42] [/input.7, 42] [/input.7, 709] 
pruning_in_iteration open status: True
ratio of positive domain = 2334 / 4096 = 0.56982421875
pruning-in-iteration extra time: 0.011674165725708008
Time: prepare 0.5659    bound 0.5731    transfer 0.0143    finalize 0.2767    func 1.4304    
Accumulated time: func 21.6877    prepare 6.0944    bound 12.0183    transfer 0.1686    finalize 3.4040    
Current worst splitting domains lb-rhs (depth):
-0.55601 (22), -0.53564 (22), -0.51853 (22), -0.50873 (22), -0.50727 (21), -0.50296 (22), -0.49538 (22), -0.48173 (23), -0.45784 (23), -0.45419 (24), -0.44955 (22), -0.44552 (23), -0.44486 (23), -0.43474 (23), -0.43459 (23), -0.43014 (22), -0.42951 (23), -0.42805 (21), -0.42512 (24), -0.42461 (21), 
Length of domains: 1987
Time: pickout 0.0092    decision 0.2415    set_bounds 0.1634    solve 1.4320    add 0.0149    
Accumulated time: pickout 0.1012    decision 2.9835    set_bounds 2.2569    solve 21.7043    add 0.2096    
Current (lb-rhs): -0.5560109615325928
25050 domains visited
Cumulative time: 27.558725833892822

BaB round 21
batch: 1987
splitting decisions: 
split level 0: [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] [/input.7, 595] 
pruning_in_iteration open status: True
ratio of positive domain = 2261 / 3974 = 0.5689481630598893
pruning-in-iteration extra time: 0.011128425598144531
Time: prepare 0.5543    bound 0.6390    transfer 0.0129    finalize 0.2715    func 1.4781    
Accumulated time: func 23.1658    prepare 6.6491    bound 12.6572    transfer 0.1815    finalize 3.6755    
Current worst splitting domains lb-rhs (depth):
-0.50260 (23), -0.46881 (23), -0.45792 (24), -0.45603 (23), -0.45123 (22), -0.44865 (23), -0.43488 (24), -0.43119 (23), -0.42434 (23), -0.42267 (24), -0.41868 (24), -0.41727 (24), -0.40663 (23), -0.40172 (25), -0.39950 (24), -0.39935 (24), -0.39821 (24), -0.39679 (24), -0.39365 (24), -0.38165 (23), 
Length of domains: 1713
Time: pickout 0.0071    decision 0.2414    set_bounds 0.2818    solve 1.4797    add 0.0133    
Accumulated time: pickout 0.1083    decision 3.2249    set_bounds 2.5388    solve 23.1840    add 0.2230    
Current (lb-rhs): -0.5026005506515503
26763 domains visited
Cumulative time: 29.6113224029541

BaB round 22
batch: 1713
splitting decisions: 
split level 0: [/input.7, 249] [/input.7, 42] [/input.7, 192] [/input.7, 424] [/input.7, 249] [/input.7, 709] [/input.7, 192] [/input.7, 709] [/input.7, 192] [/input.7, 249] 
pruning_in_iteration open status: True
ratio of positive domain = 1968 / 3426 = 0.5744308231173381
pruning-in-iteration extra time: 0.009856462478637695
Time: prepare 0.4776    bound 0.6695    transfer 0.0113    finalize 0.2336    func 1.3933    
Accumulated time: func 24.5592    prepare 7.1271    bound 13.3268    transfer 0.1928    finalize 3.9091    
Current worst splitting domains lb-rhs (depth):
-0.47285 (24), -0.43763 (24), -0.42785 (24), -0.41695 (24), -0.40557 (24), -0.38760 (24), -0.38569 (23), -0.37951 (24), -0.37745 (26), -0.37474 (25), -0.37439 (25), -0.35096 (26), -0.34585 (24), -0.34530 (24), -0.34251 (24), -0.33837 (25), -0.33624 (25), -0.33491 (24), -0.33338 (25), -0.33127 (26), 
Length of domains: 1458
Time: pickout 0.0098    decision 0.2112    set_bounds 0.1371    solve 1.5198    add 0.0117    
Accumulated time: pickout 0.1181    decision 3.4361    set_bounds 2.6759    solve 24.7038    add 0.2347    
Current (lb-rhs): -0.47285377979278564
28221 domains visited
Cumulative time: 31.52751064300537

BaB round 23
batch: 1458
splitting decisions: 
split level 0: [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] [/input.7, 187] 
pruning_in_iteration open status: True
ratio of positive domain = 1741 / 2916 = 0.5970507544581618
pruning-in-iteration extra time: 0.011400699615478516
Time: prepare 0.4084    bound 0.6150    transfer 0.0103    finalize 0.1771    func 1.2125    
Accumulated time: func 25.7717    prepare 7.5358    bound 13.9418    transfer 0.2030    finalize 4.0862    
Current worst splitting domains lb-rhs (depth):
-0.35378 (24), -0.35321 (26), -0.35246 (26), -0.35166 (25), -0.33777 (25), -0.31729 (26), -0.31679 (25), -0.31385 (26), -0.31308 (26), -0.30917 (26), -0.30680 (25), -0.30348 (25), -0.30342 (26), -0.29525 (25), -0.29348 (26), -0.29168 (25), -0.29104 (26), -0.28808 (26), -0.28509 (26), -0.28464 (25), 
Length of domains: 1175
Time: pickout 0.0081    decision 0.1819    set_bounds 0.1146    solve 1.2134    add 0.0096    
Accumulated time: pickout 0.1263    decision 3.6180    set_bounds 2.7905    solve 25.9172    add 0.2443    
Current (lb-rhs): -0.3537822961807251
29396 domains visited
Cumulative time: 33.07721829414368

BaB round 24
batch: 1175
splitting decisions: 
split level 0: [/input.7, 319] [/input.3, 2267] [/input.7, 319] [/input.7, 708] [/input.3, 2267] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 1508 / 2350 = 0.6417021276595745
pruning-in-iteration extra time: 0.010476112365722656
Time: prepare 0.3380    bound 0.6429    transfer 0.0080    finalize 0.1402    func 1.1304    
Accumulated time: func 26.9021    prepare 7.8742    bound 14.5847    transfer 0.2110    finalize 4.2265    
Current worst splitting domains lb-rhs (depth):
-0.33310 (26), -0.31866 (26), -0.30048 (25), -0.29689 (26), -0.29176 (27), -0.28737 (26), -0.28374 (26), -0.27727 (26), -0.27213 (26), -0.27049 (27), -0.26533 (26), -0.26350 (26), -0.25834 (27), -0.25585 (27), -0.25362 (27), -0.24781 (26), -0.24767 (26), -0.24661 (26), -0.24482 (27), -0.24459 (27), 
Length of domains: 842
Time: pickout 0.0055    decision 0.1505    set_bounds 0.0906    solve 1.1311    add 0.0075    
Accumulated time: pickout 0.1318    decision 3.7685    set_bounds 2.8811    solve 27.0483    add 0.2518    
Current (lb-rhs): -0.333096981048584
30238 domains visited
Cumulative time: 34.48153614997864

BaB round 25
batch: 842
splitting decisions: 
split level 0: [/input.7, 319] [/input.7, 319] [/input.7, 319] [/input.7, 708] [/input.7, 319] [/input.7, 319] [/input.7, 319] [/input.7, 319] [/input.7, 319] [/input.7, 319] 
pruning_in_iteration open status: True
ratio of positive domain = 1060 / 1684 = 0.6294536817102138
pruning-in-iteration extra time: 0.010191202163696289
Time: prepare 0.2476    bound 0.7202    transfer 0.0060    finalize 0.1008    func 1.0760    
Accumulated time: func 27.9780    prepare 8.1221    bound 15.3049    transfer 0.2170    finalize 4.3272    
Current worst splitting domains lb-rhs (depth):
-0.28096 (26), -0.25550 (28), -0.24852 (27), -0.23804 (28), -0.23457 (27), -0.22679 (28), -0.22593 (27), -0.22392 (28), -0.21736 (28), -0.21062 (27), -0.21010 (27), -0.20859 (28), -0.20833 (28), -0.20814 (27), -0.20176 (29), -0.19787 (28), -0.19641 (27), -0.19608 (28), -0.19443 (27), -0.19058 (28), 
Length of domains: 624
Time: pickout 0.0052    decision 0.1152    set_bounds 0.1807    solve 1.0765    add 0.0061    
Accumulated time: pickout 0.1371    decision 3.8837    set_bounds 3.0618    solve 28.1249    add 0.2579    
Current (lb-rhs): -0.280956506729126
30862 domains visited
Cumulative time: 35.87853813171387

BaB round 26
batch: 624
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 319] [/input.7, 708] [/input.3, 2267] [/input.7, 708] [/input.7, 708] 
pruning_in_iteration open status: True
ratio of positive domain = 863 / 1248 = 0.6915064102564102
pruning-in-iteration extra time: 0.0106658935546875
Time: prepare 0.1961    bound 0.6361    transfer 0.0044    finalize 0.0801    func 0.9169    
Accumulated time: func 28.8950    prepare 8.3186    bound 15.9410    transfer 0.2215    finalize 4.4074    
Current worst splitting domains lb-rhs (depth):
-0.22481 (29), -0.22244 (28), -0.21105 (28), -0.20778 (29), -0.20151 (28), -0.18714 (29), -0.18579 (28), -0.18452 (28), -0.18105 (28), -0.17836 (29), -0.17778 (29), -0.17295 (28), -0.16867 (28), -0.16136 (27), -0.15988 (29), -0.15698 (28), -0.15384 (29), -0.15368 (29), -0.15360 (29), -0.14764 (27), 
Length of domains: 385
Time: pickout 0.0049    decision 0.0863    set_bounds 0.0489    solve 0.9173    add 0.0045    
Accumulated time: pickout 0.1420    decision 3.9700    set_bounds 3.1107    solve 29.0422    add 0.2624    
Current (lb-rhs): -0.22481143474578857
31247 domains visited
Cumulative time: 36.951255321502686

BaB round 27
batch: 385
splitting decisions: 
split level 0: [/input.7, 708] [/input.7, 708] [/input.7, 708] [/input.7, 319] [/input.7, 708] [/input.7, 708] [/input.7, 319] [/input.7, 708] [/input.7, 708] [/input.7, 637] 
pruning_in_iteration open status: True
ratio of positive domain = 529 / 770 = 0.6870129870129871
pruning-in-iteration extra time: 0.012855291366577148
Time: prepare 0.1199    bound 0.5752    transfer 0.0034    finalize 0.0507    func 0.7494    
Accumulated time: func 29.6443    prepare 8.4388    bound 16.5162    transfer 0.2249    finalize 4.4580    
Current worst splitting domains lb-rhs (depth):
-0.15908 (29), -0.15355 (29), -0.15130 (30), -0.14877 (29), -0.14242 (30), -0.14223 (29), -0.13543 (28), -0.12347 (28), -0.11815 (29), -0.11591 (30), -0.11524 (30), -0.11249 (30), -0.10707 (30), -0.10658 (30), -0.10655 (29), -0.10650 (29), -0.10639 (29), -0.10599 (35), -0.10221 (30), -0.10075 (29), 
Length of domains: 241
Time: pickout 0.0040    decision 0.0679    set_bounds 0.0309    solve 0.7496    add 0.0036    
Accumulated time: pickout 0.1459    decision 4.0378    set_bounds 3.1416    solve 29.7918    add 0.2660    
Current (lb-rhs): -0.15908408164978027
31488 domains visited
Cumulative time: 37.815027952194214

BaB round 28
batch: 241
splitting decisions: 
split level 0: [/input.7, 637] [/input.7, 118] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 367 / 482 = 0.7614107883817427
pruning-in-iteration extra time: 0.01435399055480957
Time: prepare 0.0758    bound 0.4676    transfer 0.0025    finalize 0.0313    func 0.5773    
Accumulated time: func 30.2216    prepare 8.5149    bound 16.9838    transfer 0.2274    finalize 4.4893    
Current worst splitting domains lb-rhs (depth):
-0.12883 (30), -0.11811 (30), -0.10355 (29), -0.08927 (30), -0.08789 (30), -0.08297 (31), -0.07868 (31), -0.07850 (30), -0.07735 (36), -0.07579 (30), -0.07498 (30), -0.06732 (30), -0.06435 (36), -0.06244 (30), -0.05826 (36), -0.05685 (36), -0.05586 (29), -0.05446 (30), -0.05101 (30), -0.05007 (36), 
Length of domains: 115
Time: pickout 0.0020    decision 0.0537    set_bounds 0.0194    solve 0.5775    add 0.0027    
Accumulated time: pickout 0.1479    decision 4.0916    set_bounds 3.1609    solve 30.3693    add 0.2686    
Current (lb-rhs): -0.12883007526397705
31603 domains visited
Cumulative time: 38.47483205795288

BaB round 29
batch: 115
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.7, 709] [/input.7, 312] 
pruning_in_iteration open status: True
ratio of positive domain = 177 / 230 = 0.7695652173913043
pruning-in-iteration extra time: 0.013648271560668945
Time: prepare 0.0393    bound 0.4731    transfer 0.0016    finalize 0.0174    func 0.5317    
Accumulated time: func 30.7533    prepare 8.5546    bound 17.4569    transfer 0.2290    finalize 4.5067    
Current worst splitting domains lb-rhs (depth):
-0.06342 (31), -0.05987 (37), -0.05871 (32), -0.05500 (32), -0.05374 (37), -0.04958 (31), -0.04563 (37), -0.03951 (37), -0.03737 (30), -0.03517 (37), -0.02595 (31), -0.02466 (30), -0.02458 (31), -0.02381 (37), -0.02294 (37), -0.02284 (35), -0.02167 (37), -0.02068 (37), -0.02017 (31), -0.02004 (34), 
Length of domains: 53
Time: pickout 0.0023    decision 0.0415    set_bounds 0.0086    solve 0.5318    add 0.0021    
Accumulated time: pickout 0.1502    decision 4.1331    set_bounds 3.1695    solve 30.9011    add 0.2708    
Current (lb-rhs): -0.06341516971588135
31656 domains visited
Cumulative time: 39.06360125541687

BaB round 30
batch: 53
splitting decisions: 
split level 0: [/input.11, 73] [/input.11, 73] [/input.7, 129] [/input.3, 2267] [/input.11, 73] [/input.7, 189] [/input.7, 189] [/input.7, 189] [/input.7, 189] [/input.7, 189] 
pruning_in_iteration open status: True
ratio of positive domain = 81 / 106 = 0.7641509433962264
pruning-in-iteration extra time: 0.013867378234863281
Time: prepare 0.0188    bound 0.4651    transfer 0.0011    finalize 0.0094    func 0.4944    
Accumulated time: func 31.2477    prepare 8.5737    bound 17.9219    transfer 0.2301    finalize 4.5162    
Current worst splitting domains lb-rhs (depth):
-0.05634 (38), -0.04914 (38), -0.04211 (38), -0.03964 (32), -0.03482 (38), -0.03061 (38), -0.02685 (32), -0.02088 (33), -0.01937 (38), -0.01786 (38), -0.01714 (38), -0.01566 (33), -0.01401 (38), -0.01292 (38), -0.01212 (38), -0.01206 (32), -0.01161 (38), -0.01110 (34), -0.00985 (38), -0.00819 (37), 
Length of domains: 25
Time: pickout 0.0017    decision 0.0261    set_bounds 0.0047    solve 0.4945    add 0.0019    
Accumulated time: pickout 0.1519    decision 4.1592    set_bounds 3.1742    solve 31.3955    add 0.2727    
Current (lb-rhs): -0.05634450912475586
31681 domains visited
Cumulative time: 39.59373688697815

BaB round 31
batch: 25
splitting decisions: 
split level 0: [/input.7, 319] [/input.7, 190] [/input.7, 190] [/input.7, 190] [/input.7, 190] [/input.7, 129] [/input.7, 129] [/input.7, 190] [/input.7, 190] [/input.7, 129] 
split level 1: [/input.3, 2342] [/input.7, 129] [/input.7, 129] [/input.7, 129] [/input.7, 129] [/input.7, 190] [/input.7, 256] [/input.7, 129] [/input.7, 129] [/input.7, 190] 
split level 2: [/input.7, 129] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 256] [/input.7, 190] [/input.7, 256] [/input.7, 256] [/input.7, 256] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 200 / 200 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0388    bound 0.0129    transfer 0.0009    finalize 0.0146    func 0.0673    
Accumulated time: func 31.3150    prepare 8.6128    bound 17.9348    transfer 0.2310    finalize 4.5307    
Length of domains: 0
Time: pickout 0.0014    decision 0.0271    set_bounds 0.0150    solve 0.0674    add 0.0001    
Accumulated time: pickout 0.1533    decision 4.1863    set_bounds 3.1891    solve 31.4629    add 0.2728    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
31681 domains visited
Cumulative time: 39.70603799819946


Properties batch 3, size 1
Remaining timeout: 254.57687258720398
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 12.137134552001953.

Properties batch 4, size 1
Remaining timeout: 254.35720872879028
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.112635135650635.

Properties batch 5, size 1
Remaining timeout: 254.25215673446655
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.327264308929443.

Properties batch 6, size 1
Remaining timeout: 254.14828824996948
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.491206169128418.

Properties batch 7, size 1
Remaining timeout: 254.044513463974
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38623977]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.64666080,  3.54651499, 11.20341587,  5.01235485, -7.73671961,
        -4.30333710, -4.79010773, -0.86033958,  3.09042645, -7.83691120],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38623977]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 630
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 113
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 763
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.7, 583] 
split level 2: [/input.11, 11] 
split level 3: [/input.11, 56] 
split level 4: [/input.7, 123] 
split level 5: [/input.7, 187] 
split level 6: [/input.11, 60] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.0146    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0307    
Accumulated time: func 0.0307    prepare 0.0152    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0415    set_bounds 0.0169    solve 0.0308    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0415    set_bounds 0.0169    solve 0.0308    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09691619873046875


Properties batch 8, size 1
Remaining timeout: 253.80422353744507
##### Instance 171 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.661956787109375.
Result: safe in 46.3048 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.14926806, -2.38532615, -0.11258443,  8.42739773, -4.99422026,
          2.59095049, -3.33600688, -0.79543632,  1.41527474, -0.66794467]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.12038231, -3.61835408, -0.96860176,  4.49308872, -4.39769506,
           4.74829674, -1.91263592,  0.19210878,  1.95618904, -1.59036183],
         [ 1.12038231, -3.61835408, -0.96860176,  4.49308872, -4.39769506,
           4.74829674, -1.91263592,  0.19210878,  1.95618904, -1.59036183]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.37270641,  8.11144257,  5.46169043,  8.89078331, -0.25520802,
           6.40572453,  4.30098009,  2.53689957,  6.08345032]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0212 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0224 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.49077418, -0.34582430, 11.85289192,  3.16744566, -5.33661413,
         -4.32198095, -6.54263496,  2.77161884,  2.97643948, -3.68042850]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.04514658, -2.02170110, 10.00607204,  2.98039913, -6.37075043,
          -3.78908873, -6.01849461,  2.16351628,  5.80185080, -1.61659896],
         [-1.04514658, -2.02170110, 10.00607204,  2.98039913, -6.37075043,
          -3.78908873, -6.01849461,  2.16351628,  5.80185080, -1.61659896]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.05121899, 12.02777290,  7.02567291, 16.37682343, 13.79516029,
          16.02456665,  7.84255600,  4.20422125, 11.62267113]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7511 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-0.49077442, -0.34582442, 11.85289192,  3.16744661, -5.33661413,
         -4.32198095, -6.54263496,  2.77161884,  2.97643948, -3.68042898]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [672]; unstable size 672; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 146, 1, 672] with unstable size 145 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 29, 1, 672] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 672] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [145]; unstable size 145; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 29, 1, 145] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 145] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81512690,  2.06380749, -0.96227241,  6.02678156,  3.35628510,
          7.04603195,  0.86733198, -2.04266620,  2.24350595]], device='cuda:0') None
best_l after optimization: 29.479564666748047
alpha/beta optimization time: 4.682558536529541
initial alpha-crown bounds: tensor([[ 4.48198414e+00,  2.86157656e+00, -3.00788879e-03,  6.51611996e+00,
          4.22183704e+00,  7.67003250e+00,  1.41905046e+00, -1.06460214e+00,
          3.37657356e+00]], device='cuda:0')
Worst class: (+ rhs) -1.0646021366119385
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.4939467906952
##### Instance 173 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.4819841384887695.

Properties batch 1, size 1
Remaining timeout: 294.3815257549286
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.861576557159424.

Properties batch 2, size 1
Remaining timeout: 294.27581787109375
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00300789]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.49077442, -0.34582442, 11.85289192,  3.16744661, -5.33661413,
        -4.32198095, -6.54263496,  2.77161884,  2.97643948, -3.68042898],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00300789]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 672
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 142
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 842
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 10] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 5] 
split level 4: [/input.11, 59] 
split level 5: [/input.11, 92] 
split level 6: [/input.7, 248] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.797645568847656e-05
Time: prepare 0.0146    bound 0.0079    transfer 0.0009    finalize 0.0083    func 0.0319    
Accumulated time: func 0.0319    prepare 0.0152    bound 0.0079    transfer 0.0009    finalize 0.0083    
Length of domains: 0
Time: pickout 0.0007    decision 0.0420    set_bounds 0.0171    solve 0.0320    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0420    set_bounds 0.0171    solve 0.0320    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09914803504943848


Properties batch 3, size 1
Remaining timeout: 294.0325255393982
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.516119956970215.

Properties batch 4, size 1
Remaining timeout: 293.92319536209106
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.221837043762207.

Properties batch 5, size 1
Remaining timeout: 293.81911635398865
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.670032501220703.

Properties batch 6, size 1
Remaining timeout: 293.71501874923706
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4190504550933838.

Properties batch 7, size 1
Remaining timeout: 293.611111164093
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.06460214]], device='cuda:0') need to verify.
Model prediction is: tensor([-0.49077442, -0.34582442, 11.85289192,  3.16744661, -5.33661413,
        -4.32198095, -6.54263496,  2.77161884,  2.97643948, -3.68042898],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.06460214]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 672
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 142
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 842
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 5] 
split level 2: [/input.11, 84] 
split level 3: [/input.11, 11] 
split level 4: [/input.11, 9] 
split level 5: [/input.11, 92] 
split level 6: [/input.11, 30] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.0108642578125e-05
Time: prepare 0.0076    bound 0.0078    transfer 0.0006    finalize 0.0060    func 0.0222    
Accumulated time: func 0.0222    prepare 0.0082    bound 0.0078    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0418    set_bounds 0.0157    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0418    set_bounds 0.0157    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08724570274353027


Properties batch 8, size 1
Remaining timeout: 293.38109064102173
##### Instance 173 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3765735626220703.
Result: safe in 6.7277 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.04579508,  2.12265420,  0.32096851,  1.40330148, -1.50975454,
         -2.48002720, -4.06405640,  3.38914466,  0.05141344,  1.80395567]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.37962201,  2.16181779,  0.09127278,  1.22462583, -0.98793489,
          -1.73657322, -3.36170268,  0.54289889, -0.05116882,  2.54500031],
         [-0.37962201,  2.16181779,  0.09127278,  1.22462583, -0.98793489,
          -1.73657322, -3.36170268,  0.54289889, -0.05116882,  2.54500031]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.92252088, -1.61891890,  0.45162612, -0.68172693,  1.53083372,
           2.27947211,  3.90460157,  0.59406769, -2.00210142]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.0217 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0229 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.51897049,  6.55591440, -0.58150697, -1.23634875, -0.53808886,
         -1.01873088, -1.11927080,  0.14076677,  0.91912138, -1.72427380]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.39670181,  4.74464750, -0.59648609, -0.62736839, -0.30488873,
          -0.80077225, -1.61487579,  1.77259696,  0.47025660, -0.74420768],
         [-2.39670181,  4.74464750, -0.59648609, -0.62736839, -0.30488873,
          -0.80077225, -1.61487579,  1.77259696,  0.47025660, -0.74420768]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.14134932, 5.34113359, 5.37201595, 5.04953623, 5.54541969,
          6.35952330, 2.97205067, 4.27439070, 5.48885536]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7439 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.51897073,  6.55591440, -0.58150679, -1.23634875, -0.53808886,
         -1.01873064, -1.11927068,  0.14076671,  0.91912127, -1.72427368]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [728]; unstable size 728; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 308, 1, 728] with unstable size 307 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 728] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 728] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [307]; unstable size 307; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 307] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 307] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.06270075, -0.41644216, -0.77864647,  0.43729377, -0.34488916,
          0.46903992, -0.91991425, -1.28328240, -1.16095901]], device='cuda:0') None
best_l after optimization: 7.472982406616211
alpha/beta optimization time: 4.683315277099609
initial alpha-crown bounds: tensor([[ 2.93776608,  0.67465019,  0.47791648,  1.44225299,  0.61205339,
          1.27245665,  0.30003762, -0.34190434,  0.09775352]], device='cuda:0')
Worst class: (+ rhs) -0.34190434217453003
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.50024795532227
##### Instance 175 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9377660751342773.

Properties batch 1, size 1
Remaining timeout: 294.3860328197479
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6746501922607422.

Properties batch 2, size 1
Remaining timeout: 294.28191328048706
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4779164791107178.

Properties batch 3, size 1
Remaining timeout: 294.1781816482544
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4422529935836792.

Properties batch 4, size 1
Remaining timeout: 294.07439732551575
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.612053394317627.

Properties batch 5, size 1
Remaining timeout: 293.9707581996918
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2724566459655762.

Properties batch 6, size 1
Remaining timeout: 293.8670687675476
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3000376224517822.

Properties batch 7, size 1
Remaining timeout: 293.7633192539215
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34190434]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.51897073,  6.55591440, -0.58150679, -1.23634875, -0.53808886,
        -1.01873064, -1.11927068,  0.14076671,  0.91912127, -1.72427368],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34190434]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 728
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 305
Node /27 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 1067
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 48] 
split level 4: [/input.11, 65] 
split level 5: [/input.11, 84] 
split level 6: [/input.11, 25] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0061    func 0.0223    
Accumulated time: func 0.0223    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0061    
Length of domains: 0
Time: pickout 0.0007    decision 0.0415    set_bounds 0.0158    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0415    set_bounds 0.0158    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08716177940368652


Properties batch 8, size 1
Remaining timeout: 293.5332248210907
##### Instance 175 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.09775352478027344.
Result: safe in 6.5756 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.19823501, -5.15073109,  0.24486762,  0.14782523, -1.39791560,
         -1.33137739, -0.14614330, -3.30331326,  8.87395763,  1.75648582]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]100%|██████████| 1/1 [00:00<00:00,  1.33it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.11218580, -5.43607140, -0.90463066,  0.16303493,  0.74047661,
          -1.59446299, -1.20371401, -2.50913119,  5.66643524,  4.90383148],
         [ 0.11218580, -5.43607140, -0.90463066,  0.16303493,  0.74047661,
          -1.59446299, -1.20371401, -2.50913119,  5.66643524,  4.90383148]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.55424929, 11.10250664,  6.57106590,  5.50340033,  4.92595863,
           7.26089811,  6.87014914,  8.17556667,  0.76260376]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7591 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
         -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [640]; unstable size 640; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 194, 1, 640] with unstable size 193 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 37, 1, 640] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [193]; unstable size 193; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 37, 1, 193] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.18469024,  0.98303294, -3.55862403, -3.11593485, -5.13974476,
         -2.79227686, -1.94824243, -2.83459234, -5.65981913]], device='cuda:0') None
best_l after optimization: -19.657489776611328
alpha/beta optimization time: 4.613121271133423
initial alpha-crown bounds: tensor([[-1.51036549,  1.58783460, -2.57117200, -2.46503234, -4.31437731,
         -2.15830350, -1.35469317, -2.04954147, -4.82183981]], device='cuda:0')
Worst class: (+ rhs) -4.821839809417725
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5538604259491
##### Instance 176 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.51036549]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.51036549]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 89] 
split level 2: [/input.11, 8] 
split level 3: [/input.11, 19] 
split level 4: [/input.11, 36] 
split level 5: [/input.11, 47] 
split level 6: [/input.11, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0160    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0160    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08702397346496582


Properties batch 1, size 1
Remaining timeout: 294.29952239990234
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5878345966339111.

Properties batch 2, size 1
Remaining timeout: 294.19073033332825
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.57117200]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.57117200]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 8] 
split level 1: [/input.11, 45] 
split level 2: [/input.11, 33] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 19] 
split level 5: [/input.11, 89] 
split level 6: [/input.11, 81] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0006    finalize 0.0061    func 0.0223    
Accumulated time: func 0.0223    prepare 0.0082    bound 0.0077    transfer 0.0006    finalize 0.0061    
Length of domains: 0
Time: pickout 0.0006    decision 0.0415    set_bounds 0.0157    solve 0.0223    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0415    set_bounds 0.0157    solve 0.0223    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08716893196105957


Properties batch 3, size 1
Remaining timeout: 293.9597690105438
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.46503234]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.46503234]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 1] 
split level 1: [/input.11, 10] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 36] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 8] 
split level 6: [/input.11, 73] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.367134094238281e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0060    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0007    decision 0.0417    set_bounds 0.0161    solve 0.0222    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0417    set_bounds 0.0161    solve 0.0222    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08765697479248047


Properties batch 4, size 1
Remaining timeout: 293.7247757911682
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.31437731]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.31437731]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 8] 
split level 1: [/input.11, 19] 
split level 2: [/input.11, 7] 
split level 3: [/input.11, 47] 
split level 4: [/input.11, 96] 
split level 5: [/input.11, 63] 
split level 6: [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 119 / 128 = 0.9296875
pruning-in-iteration extra time: 0.01365041732788086
Time: prepare 0.0076    bound 0.4470    transfer 0.0012    finalize 0.0081    func 0.4640    
Accumulated time: func 0.4640    prepare 0.0082    bound 0.4470    transfer 0.0012    finalize 0.0081    
Current worst splitting domains lb-rhs (depth):
-1.49122 (7), -1.35337 (7), -1.17370 (7), -1.15793 (7), -1.04547 (7), -1.04046 (7), -0.43480 (7), -0.34244 (7), -0.11562 (7), 
Length of domains: 9
Time: pickout 0.0007    decision 0.0414    set_bounds 0.0158    solve 0.4641    add 0.0016    
Accumulated time: pickout 0.0007    decision 0.0414    set_bounds 0.0158    solve 0.4641    add 0.0016    
Current (lb-rhs): -1.4912195205688477
9 domains visited
Cumulative time: 0.5311462879180908

BaB round 2
batch: 9
splitting decisions: 
split level 0: [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] [/input.11, 90] 
split level 1: [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] 
split level 2: [/input.11, 81] [/input.7, 107] [/input.11, 36] [/input.7, 107] [/input.11, 81] [/input.7, 107] [/input.11, 36] [/input.7, 107] [/input.7, 107] 
split level 3: [/input.7, 122] [/input.7, 122] [/input.11, 81] [/input.11, 81] [/input.7, 122] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 81] 
pruning_in_iteration open status: True
ratio of positive domain = 128 / 144 = 0.8888888888888888
pruning-in-iteration extra time: 0.013406515121459961
Time: prepare 0.0183    bound 0.4588    transfer 0.0012    finalize 0.0101    func 0.4885    
Accumulated time: func 0.9525    prepare 0.0269    bound 0.9058    transfer 0.0024    finalize 0.0181    
Current worst splitting domains lb-rhs (depth):
-0.54701 (11), -0.45551 (11), -0.44758 (11), -0.40606 (11), -0.39720 (11), -0.38047 (11), -0.32370 (11), -0.22678 (11), -0.20850 (11), -0.20766 (11), -0.18857 (11), -0.17061 (11), -0.15785 (11), -0.11829 (11), -0.02903 (11), -0.01897 (11), 
Length of domains: 16
Time: pickout 0.0013    decision 0.0304    set_bounds 0.0139    solve 0.4887    add 0.0018    
Accumulated time: pickout 0.0020    decision 0.0718    set_bounds 0.0296    solve 0.9528    add 0.0034    
Current (lb-rhs): -0.5470070838928223
25 domains visited
Cumulative time: 1.0691001415252686

BaB round 3
batch: 16
splitting decisions: 
split level 0: [/input.11, 92] [/input.7, 147] [/input.11, 36] [/input.11, 92] [/input.7, 147] [/input.7, 147] [/input.7, 147] [/input.11, 92] [/input.11, 92] [/input.7, 147] 
split level 1: [/input.7, 147] [/input.11, 36] [/input.7, 718] [/input.7, 147] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.11, 36] [/input.7, 147] [/input.11, 36] 
split level 2: [/input.7, 107] [/input.7, 718] [/input.7, 122] [/input.7, 107] [/input.7, 718] [/input.7, 718] [/input.7, 718] [/input.11, 81] [/input.7, 122] [/input.7, 718] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 128 = 0.9921875
pruning-in-iteration extra time: 0.013131856918334961
Time: prepare 0.0176    bound 0.4514    transfer 0.0011    finalize 0.0101    func 0.4803    
Accumulated time: func 1.4328    prepare 0.0449    bound 1.3573    transfer 0.0035    finalize 0.0282    
Current worst splitting domains lb-rhs (depth):
-0.07943 (14), 
Length of domains: 1
Time: pickout 0.0014    decision 0.0253    set_bounds 0.0120    solve 0.4804    add 0.0008    
Accumulated time: pickout 0.0034    decision 0.0971    set_bounds 0.0416    solve 1.4332    add 0.0042    
Current (lb-rhs): -0.07942914962768555
26 domains visited
Cumulative time: 1.5904858112335205

BaB round 4
batch: 1
splitting decisions: 
split level 0: [/input.11, 92] 
split level 1: [/input.7, 118] 
split level 2: [/input.11, 10] 
split level 3: [/input.7, 648] 
split level 4: [/input.7, 122] 
split level 5: [/input.7, 307] 
split level 6: [/input.7, 418] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.581710815429688e-05
Time: prepare 0.0170    bound 0.0077    transfer 0.0007    finalize 0.0074    func 0.0329    
Accumulated time: func 1.4657    prepare 0.0626    bound 1.3650    transfer 0.0041    finalize 0.0356    
Length of domains: 0
Time: pickout 0.0011    decision 0.0440    set_bounds 0.0201    solve 0.0330    add 0.0001    
Accumulated time: pickout 0.0045    decision 0.1412    set_bounds 0.0617    solve 1.4662    add 0.0043    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
26 domains visited
Cumulative time: 1.6897666454315186


Properties batch 5, size 1
Remaining timeout: 291.88720083236694
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.15830350]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.15830350]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 81] 
split level 1: [/input.11, 73] 
split level 2: [/input.11, 10] 
split level 3: [/input.11, 96] 
split level 4: [/input.11, 19] 
split level 5: [/input.11, 8] 
split level 6: [/input.11, 47] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.034706115722656e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0221    
Accumulated time: func 0.0221    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08684778213500977


Properties batch 6, size 1
Remaining timeout: 291.642498254776
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.35469317]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.35469317]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 90] 
split level 1: [/input.11, 96] 
split level 2: [/input.11, 19] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 73] 
split level 5: [/input.11, 36] 
split level 6: [/input.11, 47] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0076    bound 0.0077    transfer 0.0007    finalize 0.0059    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0082    bound 0.0077    transfer 0.0007    finalize 0.0059    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0157    solve 0.0221    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0157    solve 0.0221    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08668375015258789


Properties batch 7, size 1
Remaining timeout: 291.4081082344055
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.04954147]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.04954147]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 47] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 8] 
split level 4: [/input.11, 36] 
split level 5: [/input.11, 81] 
split level 6: [/input.11, 6] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0075    bound 0.0077    transfer 0.0006    finalize 0.0058    func 0.0220    
Accumulated time: func 0.0220    prepare 0.0081    bound 0.0077    transfer 0.0006    finalize 0.0058    
Length of domains: 0
Time: pickout 0.0007    decision 0.0418    set_bounds 0.0157    solve 0.0220    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0418    set_bounds 0.0157    solve 0.0220    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08730649948120117


Properties batch 8, size 1
Remaining timeout: 291.17315220832825
##### Instance 176 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.82183981]], device='cuda:0') need to verify.
Model prediction is: tensor([ 0.19823465, -5.15073061,  0.24486780,  0.14782570, -1.39791548,
        -1.33137751, -0.14614402, -3.30331302,  8.87395763,  1.75648546],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.82183981]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 640
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 191
Node /27 input 0: size torch.Size([100]) unstable 35
-----------------
# of unstable neurons: 866
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 19] 
split level 1: [/input.11, 8] 
split level 2: [/input.11, 90] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 47] 
split level 5: [/input.11, 12] 
split level 6: [/input.11, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 108 / 128 = 0.84375
pruning-in-iteration extra time: 0.01352548599243164
Time: prepare 0.0075    bound 0.4504    transfer 0.0013    finalize 0.0076    func 0.4669    
Accumulated time: func 0.4669    prepare 0.0081    bound 0.4504    transfer 0.0013    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-2.02361 (7), -1.91582 (7), -1.81770 (7), -1.68923 (7), -1.68073 (7), -1.64456 (7), -1.62659 (7), -1.60968 (7), -1.59502 (7), -1.57224 (7), -0.92705 (7), -0.87768 (7), -0.77692 (7), -0.73219 (7), -0.65038 (7), -0.58878 (7), -0.40110 (7), -0.32693 (7), -0.32253 (7), -0.23066 (7), 
Length of domains: 20
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0156    solve 0.4670    add 0.0021    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0156    solve 0.4670    add 0.0021    
Current (lb-rhs): -2.0236079692840576
20 domains visited
Cumulative time: 0.5340602397918701

BaB round 2
batch: 20
splitting decisions: 
split level 0: [/input.7, 147] [/input.11, 45] [/input.11, 45] [/input.7, 147] [/input.11, 45] [/input.11, 45] [/input.11, 6] [/input.11, 45] [/input.7, 147] [/input.11, 45] 
split level 1: [/input.11, 45] [/input.11, 6] [/input.11, 6] [/input.11, 45] [/input.7, 147] [/input.7, 147] [/input.11, 45] [/input.11, 6] [/input.11, 45] [/input.7, 147] 
split level 2: [/input.11, 6] [/input.11, 73] [/input.7, 147] [/input.11, 6] [/input.11, 6] [/input.11, 6] [/input.11, 73] [/input.7, 147] [/input.11, 6] [/input.11, 6] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 160 = 0.76875
pruning-in-iteration extra time: 0.014392852783203125
Time: prepare 0.0206    bound 0.4929    transfer 0.0015    finalize 0.0122    func 0.5272    
Accumulated time: func 0.9941    prepare 0.0290    bound 0.9433    transfer 0.0028    finalize 0.0198    
Current worst splitting domains lb-rhs (depth):
-1.20586 (10), -1.08703 (10), -1.03824 (10), -0.97225 (10), -0.97128 (10), -0.95524 (10), -0.92630 (10), -0.88761 (10), -0.88429 (10), -0.86310 (10), -0.85423 (10), -0.81799 (10), -0.79598 (10), -0.78103 (10), -0.75608 (10), -0.71693 (10), -0.66946 (10), -0.66396 (10), -0.63907 (10), -0.63892 (10), 
Length of domains: 37
Time: pickout 0.0014    decision 0.0329    set_bounds 0.0133    solve 0.5273    add 0.0022    
Accumulated time: pickout 0.0020    decision 0.0743    set_bounds 0.0289    solve 0.9943    add 0.0042    
Current (lb-rhs): -1.2058568000793457
57 domains visited
Cumulative time: 1.1129050254821777

BaB round 3
batch: 37
splitting decisions: 
split level 0: [/input.7, 118] [/input.11, 73] [/input.7, 118] [/input.7, 118] [/input.11, 73] [/input.7, 118] [/input.7, 118] [/input.7, 118] [/input.7, 118] [/input.7, 118] 
split level 1: [/input.11, 92] [/input.7, 418] [/input.11, 73] [/input.11, 73] [/input.7, 418] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 148 = 0.75
pruning-in-iteration extra time: 0.012542009353637695
Time: prepare 0.0203    bound 0.4332    transfer 0.0012    finalize 0.0106    func 0.4654    
Accumulated time: func 1.4595    prepare 0.0497    bound 1.3765    transfer 0.0040    finalize 0.0304    
Current worst splitting domains lb-rhs (depth):
-0.96485 (12), -0.89009 (12), -0.84663 (12), -0.84184 (12), -0.79501 (12), -0.77418 (12), -0.72400 (12), -0.72381 (12), -0.71609 (12), -0.70285 (12), -0.60260 (12), -0.59239 (12), -0.58972 (12), -0.57890 (12), -0.56011 (12), -0.50930 (12), -0.50280 (12), -0.48363 (12), -0.47265 (12), -0.42390 (12), 
Length of domains: 37
Time: pickout 0.0015    decision 0.0335    set_bounds 0.0117    solve 0.4655    add 0.0021    
Accumulated time: pickout 0.0035    decision 0.1078    set_bounds 0.0405    solve 1.4598    add 0.0063    
Current (lb-rhs): -0.9648497104644775
94 domains visited
Cumulative time: 1.628758430480957

BaB round 4
batch: 37
splitting decisions: 
split level 0: [/input.11, 92] [/input.11, 92] [/input.7, 118] [/input.11, 92] [/input.7, 118] [/input.11, 92] [/input.7, 583] [/input.11, 92] [/input.11, 92] [/input.11, 92] 
split level 1: [/input.7, 122] [/input.7, 122] [/input.7, 122] [/input.7, 122] [/input.11, 92] [/input.7, 418] [/input.7, 418] [/input.7, 122] [/input.7, 122] [/input.7, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 109 / 148 = 0.7364864864864865
pruning-in-iteration extra time: 0.013912439346313477
Time: prepare 0.0204    bound 0.4676    transfer 0.0012    finalize 0.0105    func 0.4998    
Accumulated time: func 1.9593    prepare 0.0704    bound 1.8441    transfer 0.0052    finalize 0.0409    
Current worst splitting domains lb-rhs (depth):
-0.84928 (14), -0.72810 (14), -0.66145 (14), -0.65059 (14), -0.59975 (14), -0.59693 (14), -0.58177 (14), -0.58085 (14), -0.57401 (14), -0.46976 (14), -0.45025 (14), -0.44388 (14), -0.44065 (14), -0.43513 (14), -0.36952 (14), -0.36833 (14), -0.35648 (14), -0.35396 (14), -0.34338 (14), -0.30324 (14), 
Length of domains: 39
Time: pickout 0.0016    decision 0.0279    set_bounds 0.0117    solve 0.4999    add 0.0021    
Accumulated time: pickout 0.0051    decision 0.1357    set_bounds 0.0522    solve 1.9597    add 0.0084    
Current (lb-rhs): -0.8492817878723145
133 domains visited
Cumulative time: 2.1735355854034424

BaB round 5
batch: 39
splitting decisions: 
split level 0: [/input.11, 92] [/input.11, 92] [/input.7, 118] [/input.11, 92] [/input.7, 118] [/input.7, 717] [/input.7, 266] [/input.7, 583] [/input.7, 583] [/input.7, 122] 
split level 1: [/input.7, 717] [/input.7, 717] [/input.7, 583] [/input.7, 122] [/input.7, 648] [/input.7, 648] [/input.7, 122] [/input.7, 122] [/input.7, 122] [/input.7, 717] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 156 = 0.75
pruning-in-iteration extra time: 0.013915777206420898
Time: prepare 0.0202    bound 0.4532    transfer 0.0012    finalize 0.0103    func 0.4849    
Accumulated time: func 2.4442    prepare 0.0909    bound 2.2973    transfer 0.0064    finalize 0.0512    
Current worst splitting domains lb-rhs (depth):
-0.50095 (16), -0.44219 (16), -0.40118 (16), -0.36834 (16), -0.34941 (16), -0.33018 (16), -0.32390 (16), -0.31421 (16), -0.30376 (16), -0.29302 (16), -0.27064 (16), -0.23147 (16), -0.22765 (16), -0.21145 (16), -0.20466 (16), -0.19860 (16), -0.18995 (16), -0.15081 (16), -0.14596 (16), -0.13875 (16), 
Length of domains: 39
Time: pickout 0.0015    decision 0.0318    set_bounds 0.0099    solve 0.4850    add 0.0020    
Accumulated time: pickout 0.0066    decision 0.1675    set_bounds 0.0622    solve 2.4448    add 0.0105    
Current (lb-rhs): -0.500953197479248
172 domains visited
Cumulative time: 2.705209255218506

BaB round 6
batch: 39
splitting decisions: 
split level 0: [/input.7, 583] [/input.7, 583] [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.7, 266] [/input.7, 717] [/input.7, 583] [/input.7, 717] [/input.7, 266] 
split level 1: [/input.7, 266] [/input.7, 266] [/input.7, 648] [/input.7, 583] [/input.7, 648] [/input.7, 717] [/input.7, 648] [/input.7, 266] [/input.7, 648] [/input.7, 583] 
pruning_in_iteration open status: True
ratio of positive domain = 135 / 156 = 0.8653846153846154
pruning-in-iteration extra time: 0.013184785842895508
Time: prepare 0.0202    bound 0.4377    transfer 0.0014    finalize 0.0112    func 0.4706    
Accumulated time: func 2.9148    prepare 0.1115    bound 2.7350    transfer 0.0078    finalize 0.0624    
Current worst splitting domains lb-rhs (depth):
-0.36652 (18), -0.26575 (18), -0.21640 (18), -0.20355 (18), -0.16859 (18), -0.15149 (18), -0.14263 (18), -0.13769 (18), -0.10816 (18), -0.10648 (18), -0.07147 (18), -0.06604 (18), -0.06012 (18), -0.05745 (18), -0.05308 (18), -0.04166 (18), -0.03670 (18), -0.02740 (18), -0.02552 (18), -0.02071 (18), 
Length of domains: 21
Time: pickout 0.0010    decision 0.0269    set_bounds 0.0093    solve 0.4707    add 0.0019    
Accumulated time: pickout 0.0076    decision 0.1943    set_bounds 0.0715    solve 2.9155    add 0.0124    
Current (lb-rhs): -0.36651837825775146
193 domains visited
Cumulative time: 3.2166922092437744

BaB round 7
batch: 21
splitting decisions: 
split level 0: [/input.7, 583] [/input.11, 0] [/input.7, 583] [/input.11, 0] [/input.11, 0] [/input.7, 583] [/input.7, 323] [/input.11, 0] [/input.7, 648] [/input.7, 648] 
split level 1: [/input.11, 0] [/input.7, 583] [/input.7, 244] [/input.7, 244] [/input.7, 648] [/input.11, 0] [/input.7, 244] [/input.7, 583] [/input.7, 244] [/input.7, 311] 
split level 2: [/input.7, 244] [/input.7, 244] [/input.7, 712] [/input.3, 2284] [/input.7, 311] [/input.7, 244] [/input.7, 712] [/input.7, 244] [/input.7, 712] [/input.3, 2321] 
pruning_in_iteration open status: True
ratio of positive domain = 163 / 168 = 0.9702380952380952
pruning-in-iteration extra time: 0.013605117797851562
Time: prepare 0.0253    bound 0.4670    transfer 0.0013    finalize 0.0127    func 0.5063    
Accumulated time: func 3.4212    prepare 0.1371    bound 3.2020    transfer 0.0091    finalize 0.0750    
Current worst splitting domains lb-rhs (depth):
-0.10844 (21), -0.07912 (21), -0.04575 (21), -0.01542 (21), -0.00881 (21), 
Length of domains: 5
Time: pickout 0.0015    decision 0.0321    set_bounds 0.0146    solve 0.5065    add 0.0013    
Accumulated time: pickout 0.0091    decision 0.2264    set_bounds 0.0861    solve 3.4220    add 0.0136    
Current (lb-rhs): -0.10843753814697266
198 domains visited
Cumulative time: 3.7744638919830322

BaB round 8
batch: 5
splitting decisions: 
split level 0: [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] [/input.11, 95] 
split level 1: [/input.7, 244] [/input.3, 2284] [/input.11, 36] [/input.11, 36] [/input.11, 36] 
split level 2: [/input.11, 36] [/input.11, 36] [/input.7, 244] [/input.7, 244] [/input.7, 244] 
split level 3: [/input.3, 2284] [/input.7, 311] [/input.3, 2284] [/input.7, 183] [/input.3, 2284] 
split level 4: [/input.7, 183] [/input.7, 712] [/input.7, 183] [/input.7, 258] [/input.7, 183] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0295    bound 0.0082    transfer 0.0008    finalize 0.0111    func 0.0496    
Accumulated time: func 3.4707    prepare 0.1670    bound 3.2102    transfer 0.0099    finalize 0.0861    
Length of domains: 0
Time: pickout 0.0015    decision 0.0334    set_bounds 0.0211    solve 0.0497    add 0.0001    
Accumulated time: pickout 0.0106    decision 0.2598    set_bounds 0.1072    solve 3.4717    add 0.0137    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
198 domains visited
Cumulative time: 3.8816211223602295

Result: safe in 12.8561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.02622795, 10.66218567, -1.69591427, -0.79389584, -1.76069975,
         -3.13839293, -0.17767785, -0.08663377,  2.08010793, -2.31518674]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.38it/s]100%|██████████| 1/1 [00:00<00:00,  1.38it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.72250867,  8.58052158, -1.26085806, -0.10260915, -2.33323002,
          -3.21559238, -0.37079436,  0.46062905,  3.54003453, -1.81383216],
         [-3.72250867,  8.58052158, -1.26085806, -0.10260915, -2.33323002,
          -3.21559238, -0.37079436,  0.46062905,  3.54003453, -1.81383216]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.30303001,  9.84137917,  8.68313026, 10.91375160, 11.79611397,
           8.95131588,  8.11989212,  5.04048729, 10.39435387]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7353 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.02622819, 10.66218662, -1.69591439, -0.79389626, -1.76069963,
         -3.13839316, -0.17767797, -0.08663383,  2.08010840, -2.31518722]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [661]; unstable size 661; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 316, 1, 661] with unstable size 315 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 661] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [315]; unstable size 315; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 315] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 315] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.06221008, 5.23687029, 3.33952045, 6.21344852, 5.87140656, 4.11234808,
         3.69401336, 1.55592656, 4.67142439]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8050 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.17183053, -0.27255219,  5.78753233,  1.11077225, -6.35441589,
         -1.27406263, -4.51380014, -3.13419008, 12.66644764, -2.85514426]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.99941236,  1.30689061,  8.90248108,  2.17796016, -7.87713194,
          -2.13143253, -6.63989830, -1.75182676,  9.10586166, -4.07354021],
         [ 0.99941236,  1.30689061,  8.90248108,  2.17796016, -7.87713194,
          -2.13143253, -6.63989830, -1.75182676,  9.10586166, -4.07354021]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.10644913,  7.79897118,  0.20338058,  6.92790127, 16.98299408,
          11.23729420, 15.74575996, 10.85768890, 13.17940140]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7439 seconds.
PGD attack failed
torch allclose failed: norm 9.272905572288437e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.17183113, -0.27255231,  5.78753138,  1.11077201, -6.35441542,
         -1.27406240, -4.51380062, -3.13418984, 12.66644764, -2.85514426]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [588]; unstable size 588; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 108, 1, 588] with unstable size 107 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 28, 1, 588] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 588] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [107]; unstable size 107; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 28, 1, 107] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.05657530,  2.52976990, -3.64836216,  0.22911119, 11.02819729,
          2.60802555,  8.22663307,  5.21306610,  7.49782372]], device='cuda:0') None
best_l after optimization: 43.429752349853516
alpha/beta optimization time: 4.678791761398315
initial alpha-crown bounds: tensor([[ 4.60747528,  3.18260646, -3.21604848,  0.83642673, 11.79190254,
          3.44755173,  8.74727249,  5.92960119,  8.10296345]], device='cuda:0')
Worst class: (+ rhs) -3.2160484790802
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.50385212898254
##### Instance 178 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.607475280761719.

Properties batch 1, size 1
Remaining timeout: 294.3756003379822
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1826064586639404.

Properties batch 2, size 1
Remaining timeout: 294.27121782302856
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.21604848]], device='cuda:0') need to verify.
torch allclose failed: norm 6.583547929039923e-07
Model prediction is: tensor([-1.17183113, -0.27255231,  5.78753138,  1.11077201, -6.35441542,
        -1.27406240, -4.51380062, -3.13418984, 12.66644764, -2.85514426],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.21604848]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 588
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 105
Node /27 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 719
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 36] 
split level 1: [/input.11, 89] 
split level 2: [/input.11, 63] 
split level 3: [/input.11, 25] 
split level 4: [/input.7, 632] 
split level 5: [/input.7, 592] 
split level 6: [/input.7, 593] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 128 = 0.875
pruning-in-iteration extra time: 0.013526678085327148
Time: prepare 0.0145    bound 0.4561    transfer 0.0012    finalize 0.0097    func 0.4816    
Accumulated time: func 0.4816    prepare 0.0151    bound 0.4561    transfer 0.0012    finalize 0.0097    
Current worst splitting domains lb-rhs (depth):
-2.07686 (7), -1.99937 (7), -1.64009 (7), -1.56281 (7), -1.49735 (7), -1.44138 (7), -1.43300 (7), -1.37710 (7), -1.13410 (7), -1.08060 (7), -1.06238 (7), -1.00646 (7), -0.74033 (7), -0.66582 (7), -0.44244 (7), -0.36675 (7), 
Length of domains: 16
Time: pickout 0.0006    decision 0.0415    set_bounds 0.0169    solve 0.4817    add 0.0018    
Accumulated time: pickout 0.0006    decision 0.0415    set_bounds 0.0169    solve 0.4817    add 0.0018    
Current (lb-rhs): -2.076864719390869
16 domains visited
Cumulative time: 0.550316572189331

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 631] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 631] [/input.11, 81] [/input.11, 81] 
split level 1: [/input.7, 631] [/input.7, 631] [/input.7, 631] [/input.11, 81] [/input.7, 631] [/input.7, 631] [/input.7, 631] [/input.11, 81] [/input.7, 631] [/input.7, 631] 
split level 2: [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] [/input.11, 73] 
pruning_in_iteration open status: True
ratio of positive domain = 77 / 128 = 0.6015625
pruning-in-iteration extra time: 0.013298511505126953
Time: prepare 0.0169    bound 0.4594    transfer 0.0011    finalize 0.0089    func 0.4864    
Accumulated time: func 0.9680    prepare 0.0324    bound 0.9154    transfer 0.0023    finalize 0.0186    
Current worst splitting domains lb-rhs (depth):
-1.63633 (10), -1.59906 (10), -1.56151 (10), -1.50680 (10), -1.14520 (10), -1.12491 (10), -1.06964 (10), -1.03694 (10), -0.99248 (10), -0.99144 (10), -0.98525 (10), -0.97157 (10), -0.93895 (10), -0.91670 (10), -0.91383 (10), -0.89443 (10), -0.88757 (10), -0.87679 (10), -0.87418 (10), -0.86898 (10), 
Length of domains: 51
Time: pickout 0.0014    decision 0.0251    set_bounds 0.0125    solve 0.4865    add 0.0022    
Accumulated time: pickout 0.0020    decision 0.0666    set_bounds 0.0294    solve 0.9682    add 0.0041    
Current (lb-rhs): -1.636332392692566
67 domains visited
Cumulative time: 1.079343557357788

BaB round 3
batch: 51
splitting decisions: 
split level 0: [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] 
split level 1: [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.7, 413] [/input.11, 12] [/input.11, 12] [/input.11, 12] [/input.11, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 136 / 204 = 0.6666666666666667
pruning-in-iteration extra time: 0.014142990112304688
Time: prepare 0.0275    bound 0.4710    transfer 0.0015    finalize 0.0147    func 0.5148    
Accumulated time: func 1.4828    prepare 0.0603    bound 1.3864    transfer 0.0038    finalize 0.0333    
Current worst splitting domains lb-rhs (depth):
-1.43867 (12), -1.40908 (12), -1.36879 (12), -1.32409 (12), -1.27926 (12), -1.26209 (12), -1.20578 (12), -1.17385 (12), -0.95068 (12), -0.93742 (12), -0.88005 (12), -0.85726 (12), -0.80620 (12), -0.78728 (12), -0.75153 (12), -0.73646 (12), -0.73303 (12), -0.70811 (12), -0.69708 (12), -0.69269 (12), 
Length of domains: 68
Time: pickout 0.0013    decision 0.0343    set_bounds 0.0165    solve 0.5149    add 0.0022    
Accumulated time: pickout 0.0033    decision 0.1009    set_bounds 0.0459    solve 1.4831    add 0.0063    
Current (lb-rhs): -1.4386736154556274
135 domains visited
Cumulative time: 1.6504998207092285

BaB round 4
batch: 68
splitting decisions: 
split level 0: [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 108] [/input.7, 243] [/input.7, 243] [/input.7, 108] [/input.7, 108] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 136 = 0.4779411764705882
pruning-in-iteration extra time: 0.012972354888916016
Time: prepare 0.0188    bound 0.4733    transfer 0.0012    finalize 0.0096    func 0.5029    
Accumulated time: func 1.9857    prepare 0.0794    bound 1.8597    transfer 0.0050    finalize 0.0429    
Current worst splitting domains lb-rhs (depth):
-1.37720 (13), -1.35435 (13), -1.30689 (13), -1.26990 (13), -1.19011 (13), -1.17626 (13), -1.12188 (13), -1.11577 (13), -0.90088 (13), -0.89427 (13), -0.82890 (13), -0.81658 (13), -0.74725 (13), -0.73172 (13), -0.67734 (13), -0.66368 (13), -0.65617 (13), -0.64296 (13), -0.64127 (13), -0.63806 (13), 
Length of domains: 71
Time: pickout 0.0016    decision 0.0322    set_bounds 0.0060    solve 0.5030    add 0.0024    
Accumulated time: pickout 0.0049    decision 0.1331    set_bounds 0.0519    solve 1.9861    add 0.0087    
Current (lb-rhs): -1.3771957159042358
206 domains visited
Cumulative time: 2.196878433227539

BaB round 5
batch: 71
splitting decisions: 
split level 0: [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 108] [/input.7, 413] [/input.7, 413] [/input.7, 413] [/input.7, 243] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 142 = 0.43661971830985913
pruning-in-iteration extra time: 0.013593196868896484
Time: prepare 0.0196    bound 0.4778    transfer 0.0014    finalize 0.0111    func 0.5100    
Accumulated time: func 2.4957    prepare 0.0994    bound 2.3375    transfer 0.0064    finalize 0.0540    
Current worst splitting domains lb-rhs (depth):
-1.23374 (14), -1.21356 (14), -1.18700 (14), -1.18219 (14), -1.18016 (14), -1.14987 (14), -1.09520 (14), -1.08960 (14), -1.07437 (14), -1.07349 (14), -1.01718 (14), -1.01409 (14), -0.74625 (14), -0.74449 (14), -0.72295 (14), -0.72245 (14), -0.69200 (14), -0.68883 (14), -0.63413 (14), -0.62385 (14), 
Length of domains: 80
Time: pickout 0.0014    decision 0.0290    set_bounds 0.0063    solve 0.5101    add 0.0025    
Accumulated time: pickout 0.0063    decision 0.1621    set_bounds 0.0582    solve 2.4962    add 0.0112    
Current (lb-rhs): -1.2337394952774048
286 domains visited
Cumulative time: 2.7474660873413086

BaB round 6
batch: 80
splitting decisions: 
split level 0: [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] [/input.11, 45] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 160 = 0.5375
pruning-in-iteration extra time: 0.015016555786132812
Time: prepare 0.0225    bound 0.4851    transfer 0.0013    finalize 0.0113    func 0.5202    
Accumulated time: func 3.0159    prepare 0.1222    bound 2.8226    transfer 0.0076    finalize 0.0653    
Current worst splitting domains lb-rhs (depth):
-1.20493 (15), -1.18562 (15), -1.15634 (15), -1.15225 (15), -1.15165 (15), -1.12110 (15), -1.06182 (15), -1.04455 (15), -0.98862 (15), -0.97849 (15), -0.91227 (15), -0.90511 (15), -0.71354 (15), -0.71312 (15), -0.69184 (15), -0.69109 (15), -0.65991 (15), -0.65529 (15), -0.59995 (15), -0.59167 (15), 
Length of domains: 74
Time: pickout 0.0014    decision 0.0352    set_bounds 0.0070    solve 0.5204    add 0.0024    
Accumulated time: pickout 0.0077    decision 0.1973    set_bounds 0.0653    solve 3.0166    add 0.0136    
Current (lb-rhs): -1.2049274444580078
360 domains visited
Cumulative time: 3.31520414352417

BaB round 7
batch: 74
splitting decisions: 
split level 0: [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 243] 
pruning_in_iteration open status: True
ratio of positive domain = 56 / 148 = 0.3783783783783784
pruning-in-iteration extra time: 0.012293100357055664
Time: prepare 0.0194    bound 0.4802    transfer 0.0012    finalize 0.0099    func 0.5108    
Accumulated time: func 3.5267    prepare 0.1419    bound 3.3027    transfer 0.0088    finalize 0.0752    
Current worst splitting domains lb-rhs (depth):
-1.12819 (16), -1.08023 (16), -1.06653 (16), -1.05247 (16), -1.02342 (16), -1.02236 (16), -0.99820 (16), -0.99153 (16), -0.98294 (16), -0.95575 (16), -0.94845 (16), -0.94644 (16), -0.92502 (16), -0.87158 (16), -0.86836 (16), -0.84742 (16), -0.69139 (16), -0.67353 (16), -0.63992 (16), -0.63432 (16), 
Length of domains: 92
Time: pickout 0.0016    decision 0.0293    set_bounds 0.0066    solve 0.5109    add 0.0025    
Accumulated time: pickout 0.0093    decision 0.2266    set_bounds 0.0718    solve 3.5275    add 0.0161    
Current (lb-rhs): -1.1281864643096924
452 domains visited
Cumulative time: 3.86716890335083

BaB round 8
batch: 92
splitting decisions: 
split level 0: [/input.7, 596] [/input.7, 596] [/input.7, 596] [/input.7, 243] [/input.7, 596] [/input.7, 243] [/input.7, 243] [/input.7, 243] [/input.7, 719] [/input.7, 273] 
pruning_in_iteration open status: True
ratio of positive domain = 42 / 184 = 0.2282608695652174
pruning-in-iteration extra time: 0.010526180267333984
Time: prepare 0.0241    bound 0.4374    transfer 0.0013    finalize 0.0120    func 0.4749    
Accumulated time: func 4.0016    prepare 0.1663    bound 3.7402    transfer 0.0102    finalize 0.0872    
Current worst splitting domains lb-rhs (depth):
-1.00308 (17), -0.98432 (17), -0.97606 (17), -0.95510 (17), -0.95301 (17), -0.95144 (17), -0.94474 (17), -0.92989 (17), -0.92240 (17), -0.92004 (17), -0.91000 (17), -0.86494 (17), -0.85172 (17), -0.81433 (17), -0.81247 (17), -0.80675 (17), -0.79902 (17), -0.79757 (17), -0.78485 (17), -0.74705 (17), 
Length of domains: 142
Time: pickout 0.0014    decision 0.0369    set_bounds 0.0084    solve 0.4750    add 0.0028    
Accumulated time: pickout 0.0107    decision 0.2634    set_bounds 0.0802    solve 4.0025    add 0.0189    
Current (lb-rhs): -1.0030828714370728
594 domains visited
Cumulative time: 4.392744302749634

BaB round 9
batch: 142
splitting decisions: 
split level 0: [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.11, 14] [/input.7, 719] [/input.7, 719] [/input.7, 273] [/input.11, 14] [/input.11, 14] [/input.11, 14] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 284 = 0.5809859154929577
pruning-in-iteration extra time: 0.011514663696289062
Time: prepare 0.0390    bound 0.4477    transfer 0.0019    finalize 0.0195    func 0.5082    
Accumulated time: func 4.5098    prepare 0.2056    bound 4.1879    transfer 0.0121    finalize 0.1067    
Current worst splitting domains lb-rhs (depth):
-0.93204 (18), -0.91326 (18), -0.90616 (18), -0.88563 (18), -0.88088 (18), -0.87376 (18), -0.86193 (18), -0.85346 (18), -0.83922 (18), -0.82938 (18), -0.81905 (18), -0.79494 (18), -0.78452 (18), -0.78302 (18), -0.75439 (18), -0.74502 (18), -0.74304 (18), -0.73854 (18), -0.73047 (18), -0.72984 (18), 
Length of domains: 119
Time: pickout 0.0014    decision 0.0400    set_bounds 0.0117    solve 0.5084    add 0.0029    
Accumulated time: pickout 0.0121    decision 0.3034    set_bounds 0.0920    solve 4.5109    add 0.0218    
Current (lb-rhs): -0.9320417642593384
713 domains visited
Cumulative time: 4.959478378295898

BaB round 10
batch: 119
splitting decisions: 
split level 0: [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 243] [/input.11, 14] [/input.7, 273] [/input.7, 273] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 238 = 0.3067226890756303
pruning-in-iteration extra time: 0.012389421463012695
Time: prepare 0.0321    bound 0.5047    transfer 0.0018    finalize 0.0160    func 0.5553    
Accumulated time: func 5.0651    prepare 0.2380    bound 4.6925    transfer 0.0139    finalize 0.1226    
Current worst splitting domains lb-rhs (depth):
-0.85955 (19), -0.83368 (19), -0.81271 (19), -0.81169 (19), -0.80327 (19), -0.79387 (19), -0.78877 (19), -0.78491 (19), -0.77527 (19), -0.76531 (19), -0.76288 (19), -0.75786 (19), -0.74994 (19), -0.73702 (19), -0.71600 (19), -0.71416 (19), -0.71208 (19), -0.70255 (19), -0.69210 (19), -0.68614 (19), 
Length of domains: 165
Time: pickout 0.0013    decision 0.0388    set_bounds 0.0100    solve 0.5554    add 0.0032    
Accumulated time: pickout 0.0134    decision 0.3422    set_bounds 0.1019    solve 5.0663    add 0.0249    
Current (lb-rhs): -0.8595465421676636
878 domains visited
Cumulative time: 5.5701494216918945

BaB round 11
batch: 165
splitting decisions: 
split level 0: [/input.7, 273] [/input.7, 273] [/input.7, 273] [/input.7, 596] [/input.7, 273] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 719] [/input.7, 719] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 330 = 0.3848484848484849
pruning-in-iteration extra time: 0.012358665466308594
Time: prepare 0.0427    bound 0.5047    transfer 0.0021    finalize 0.0205    func 0.5700    
Accumulated time: func 5.6351    prepare 0.2810    bound 5.1972    transfer 0.0160    finalize 0.1431    
Current worst splitting domains lb-rhs (depth):
-0.75320 (20), -0.74415 (20), -0.71980 (20), -0.71901 (20), -0.70588 (20), -0.69984 (20), -0.69703 (20), -0.69166 (20), -0.68547 (20), -0.67480 (20), -0.67451 (20), -0.67207 (20), -0.66952 (20), -0.66476 (20), -0.66463 (20), -0.64690 (20), -0.64508 (20), -0.64318 (20), -0.63795 (20), -0.63467 (20), 
Length of domains: 203
Time: pickout 0.0017    decision 0.0442    set_bounds 0.0136    solve 0.5702    add 0.0036    
Accumulated time: pickout 0.0151    decision 0.3864    set_bounds 0.1156    solve 5.6365    add 0.0285    
Current (lb-rhs): -0.7531975507736206
1081 domains visited
Cumulative time: 6.20579195022583

BaB round 12
batch: 203
splitting decisions: 
split level 0: [/input.7, 183] [/input.7, 183] [/input.7, 718] [/input.7, 718] [/input.11, 8] [/input.7, 596] [/input.7, 273] [/input.7, 718] [/input.7, 718] [/input.7, 718] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 406 = 0.4408866995073891
pruning-in-iteration extra time: 0.01371002197265625
Time: prepare 0.0547    bound 0.4863    transfer 0.0026    finalize 0.0276    func 0.5714    
Accumulated time: func 6.2065    prepare 0.3361    bound 5.6835    transfer 0.0186    finalize 0.1707    
Current worst splitting domains lb-rhs (depth):
-0.70072 (21), -0.67638 (21), -0.67573 (21), -0.65937 (21), -0.64837 (21), -0.64361 (21), -0.63652 (21), -0.63454 (21), -0.62599 (21), -0.61450 (21), -0.60840 (21), -0.60390 (21), -0.60228 (21), -0.59421 (21), -0.59370 (21), -0.57718 (21), -0.57667 (21), -0.56168 (21), -0.55480 (21), -0.55470 (21), 
Length of domains: 227
Time: pickout 0.0020    decision 0.0510    set_bounds 0.0171    solve 0.5716    add 0.0038    
Accumulated time: pickout 0.0171    decision 0.4374    set_bounds 0.1327    solve 6.2081    add 0.0324    
Current (lb-rhs): -0.7007232904434204
1308 domains visited
Cumulative time: 6.854226350784302

BaB round 13
batch: 227
splitting decisions: 
split level 0: [/input.11, 8] [/input.11, 8] [/input.7, 183] [/input.7, 183] [/input.7, 183] [/input.7, 183] [/input.11, 8] [/input.7, 32] [/input.7, 32] [/input.7, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 201 / 454 = 0.44273127753303965
pruning-in-iteration extra time: 0.0134429931640625
Time: prepare 0.0613    bound 0.4905    transfer 0.0026    finalize 0.0282    func 0.5827    
Accumulated time: func 6.7892    prepare 0.3977    bound 6.1740    transfer 0.0212    finalize 0.1989    
Current worst splitting domains lb-rhs (depth):
-0.67714 (22), -0.65209 (22), -0.65027 (22), -0.63654 (22), -0.62215 (22), -0.62048 (22), -0.61357 (22), -0.61016 (22), -0.59825 (22), -0.59075 (22), -0.58350 (22), -0.58208 (22), -0.57396 (22), -0.56937 (22), -0.56762 (22), -0.55413 (22), -0.54919 (22), -0.53668 (22), -0.53153 (22), -0.53079 (22), 
Length of domains: 253
Time: pickout 0.0022    decision 0.0482    set_bounds 0.0187    solve 0.5829    add 0.0036    
Accumulated time: pickout 0.0193    decision 0.4856    set_bounds 0.1514    solve 6.7910    add 0.0360    
Current (lb-rhs): -0.6771382093429565
1561 domains visited
Cumulative time: 7.512863636016846

BaB round 14
batch: 253
splitting decisions: 
split level 0: [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] [/input.11, 8] 
pruning_in_iteration open status: True
ratio of positive domain = 271 / 506 = 0.5355731225296443
pruning-in-iteration extra time: 0.012806177139282227
Time: prepare 0.0683    bound 0.4988    transfer 0.0029    finalize 0.0328    func 0.6030    
Accumulated time: func 7.3922    prepare 0.4662    bound 6.6729    transfer 0.0241    finalize 0.2317    
Current worst splitting domains lb-rhs (depth):
-0.64418 (23), -0.61862 (23), -0.61850 (23), -0.60382 (23), -0.58988 (23), -0.58149 (23), -0.58055 (23), -0.57898 (23), -0.56689 (23), -0.55184 (23), -0.55156 (23), -0.54589 (23), -0.54206 (23), -0.53536 (23), -0.53054 (23), -0.51807 (23), -0.51621 (23), -0.49797 (23), -0.49545 (23), -0.49200 (23), 
Length of domains: 235
Time: pickout 0.0022    decision 0.0556    set_bounds 0.0207    solve 0.6032    add 0.0037    
Accumulated time: pickout 0.0215    decision 0.5413    set_bounds 0.1721    solve 7.3942    add 0.0397    
Current (lb-rhs): -0.6441829204559326
1796 domains visited
Cumulative time: 8.202253103256226

BaB round 15
batch: 235
splitting decisions: 
split level 0: [/input.11, 96] [/input.11, 96] [/input.11, 96] [/input.11, 96] [/input.11, 96] [/input.11, 96] [/input.7, 183] [/input.11, 96] [/input.11, 96] [/input.11, 96] 
pruning_in_iteration open status: True
ratio of positive domain = 216 / 470 = 0.4595744680851064
pruning-in-iteration extra time: 0.013795137405395508
Time: prepare 0.0634    bound 0.4789    transfer 0.0029    finalize 0.0296    func 0.5749    
Accumulated time: func 7.9671    prepare 0.5300    bound 7.1517    transfer 0.0270    finalize 0.2613    
Current worst splitting domains lb-rhs (depth):
-0.55640 (24), -0.54939 (24), -0.52937 (24), -0.51904 (24), -0.51396 (24), -0.51093 (24), -0.50855 (24), -0.50004 (24), -0.48572 (24), -0.48409 (24), -0.48232 (24), -0.48090 (24), -0.47176 (24), -0.46685 (24), -0.46469 (24), -0.46404 (24), -0.46145 (24), -0.45352 (24), -0.45224 (24), -0.45090 (24), 
Length of domains: 254
Time: pickout 0.0023    decision 0.0532    set_bounds 0.0197    solve 0.5751    add 0.0037    
Accumulated time: pickout 0.0239    decision 0.5944    set_bounds 0.1918    solve 7.9693    add 0.0434    
Current (lb-rhs): -0.5563973188400269
2050 domains visited
Cumulative time: 8.859521627426147

BaB round 16
batch: 254
splitting decisions: 
split level 0: [/input.7, 718] [/input.7, 718] [/input.7, 274] [/input.7, 274] [/input.7, 32] [/input.7, 32] [/input.7, 32] [/input.7, 274] [/input.7, 718] [/input.7, 718] 
pruning_in_iteration open status: True
ratio of positive domain = 189 / 508 = 0.3720472440944882
pruning-in-iteration extra time: 0.012590408325195312
Time: prepare 0.0688    bound 0.5665    transfer 0.0028    finalize 0.0308    func 0.6691    
Accumulated time: func 8.6362    prepare 0.5991    bound 7.7182    transfer 0.0298    finalize 0.2921    
Current worst splitting domains lb-rhs (depth):
-0.46730 (25), -0.45757 (25), -0.44025 (25), -0.43555 (25), -0.42641 (25), -0.42184 (25), -0.42165 (25), -0.41680 (25), -0.41586 (25), -0.40816 (25), -0.40611 (25), -0.40317 (25), -0.40254 (25), -0.39976 (25), -0.39535 (25), -0.39346 (25), -0.39179 (25), -0.39145 (25), -0.39020 (25), -0.38346 (25), 
Length of domains: 319
Time: pickout 0.0015    decision 0.0506    set_bounds 0.0212    solve 0.6693    add 0.0041    
Accumulated time: pickout 0.0253    decision 0.6451    set_bounds 0.2131    solve 8.6386    add 0.0475    
Current (lb-rhs): -0.46730244159698486
2369 domains visited
Cumulative time: 9.610169887542725

BaB round 17
batch: 319
splitting decisions: 
split level 0: [/input.11, 10] [/input.7, 32] [/input.7, 32] [/input.11, 10] [/input.7, 274] [/input.7, 32] [/input.11, 10] [/input.11, 10] [/input.11, 10] [/input.7, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 253 / 638 = 0.39655172413793105
pruning-in-iteration extra time: 0.013236284255981445
Time: prepare 0.0863    bound 0.5390    transfer 0.0035    finalize 0.0414    func 0.6703    
Accumulated time: func 9.3065    prepare 0.6857    bound 8.2572    transfer 0.0333    finalize 0.3334    
Current worst splitting domains lb-rhs (depth):
-0.43164 (26), -0.40302 (26), -0.40040 (26), -0.40030 (26), -0.38242 (26), -0.37849 (26), -0.37444 (26), -0.37208 (26), -0.35854 (26), -0.35457 (26), -0.35260 (26), -0.35161 (26), -0.34904 (26), -0.34851 (26), -0.34147 (26), -0.33608 (26), -0.33004 (26), -0.32956 (26), -0.32518 (26), -0.32396 (26), 
Length of domains: 385
Time: pickout 0.0025    decision 0.0621    set_bounds 0.0263    solve 0.6706    add 0.0048    
Accumulated time: pickout 0.0278    decision 0.7071    set_bounds 0.2393    solve 9.3092    add 0.0523    
Current (lb-rhs): -0.43163740634918213
2754 domains visited
Cumulative time: 10.380675554275513

BaB round 18
batch: 385
splitting decisions: 
split level 0: [/input.11, 10] [/input.11, 10] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.7, 274] [/input.7, 274] [/input.7, 274] [/input.7, 274] 
pruning_in_iteration open status: True
ratio of positive domain = 287 / 770 = 0.3727272727272727
pruning-in-iteration extra time: 0.011364936828613281
Time: prepare 0.1066    bound 0.6590    transfer 0.0034    finalize 0.0457    func 0.8148    
Accumulated time: func 10.1213    prepare 0.7926    bound 8.9162    transfer 0.0367    finalize 0.3791    
Current worst splitting domains lb-rhs (depth):
-0.36716 (27), -0.36399 (27), -0.33621 (27), -0.33540 (27), -0.33227 (27), -0.31725 (27), -0.31360 (27), -0.31240 (27), -0.30451 (27), -0.29710 (27), -0.29264 (27), -0.28565 (27), -0.28559 (27), -0.28021 (27), -0.27897 (27), -0.27527 (27), -0.26896 (27), -0.26188 (27), -0.26057 (27), -0.25960 (27), 
Length of domains: 483
Time: pickout 0.0028    decision 0.0597    set_bounds 0.0304    solve 0.8150    add 0.0052    
Accumulated time: pickout 0.0306    decision 0.7668    set_bounds 0.2697    solve 10.1242    add 0.0575    
Current (lb-rhs): -0.3671649694442749
3237 domains visited
Cumulative time: 11.298493146896362

BaB round 19
batch: 483
splitting decisions: 
split level 0: [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 633] [/input.7, 232] [/input.7, 633] [/input.7, 232] [/input.7, 633] [/input.11, 50] [/input.7, 633] 
pruning_in_iteration open status: True
ratio of positive domain = 539 / 966 = 0.5579710144927537
pruning-in-iteration extra time: 0.010999202728271484
Time: prepare 0.1353    bound 0.6133    transfer 0.0039    finalize 0.0625    func 0.8152    
Accumulated time: func 10.9364    prepare 0.9283    bound 9.5295    transfer 0.0405    finalize 0.4416    
Current worst splitting domains lb-rhs (depth):
-0.34218 (28), -0.32756 (28), -0.31352 (28), -0.29699 (28), -0.29320 (28), -0.29278 (28), -0.27255 (28), -0.26520 (28), -0.26511 (28), -0.25711 (28), -0.25344 (28), -0.24374 (28), -0.24081 (28), -0.23785 (28), -0.23653 (28), -0.22663 (28), -0.22634 (28), -0.22537 (28), -0.22202 (28), -0.22122 (28), 
Length of domains: 427
Time: pickout 0.0030    decision 0.0751    set_bounds 0.0381    solve 0.8155    add 0.0047    
Accumulated time: pickout 0.0337    decision 0.8419    set_bounds 0.3078    solve 10.9397    add 0.0622    
Current (lb-rhs): -0.3421759605407715
3664 domains visited
Cumulative time: 12.242249727249146

BaB round 20
batch: 427
splitting decisions: 
split level 0: [/input.11, 50] [/input.7, 232] [/input.11, 50] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.7, 232] [/input.11, 50] [/input.11, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 548 / 854 = 0.6416861826697893
pruning-in-iteration extra time: 0.011342763900756836
Time: prepare 0.1168    bound 0.5984    transfer 0.0038    finalize 0.1646    func 0.8837    
Accumulated time: func 11.8201    prepare 1.0454    bound 10.1279    transfer 0.0443    finalize 0.6062    
Current worst splitting domains lb-rhs (depth):
-0.26652 (29), -0.23793 (29), -0.23604 (29), -0.21934 (29), -0.21418 (29), -0.20772 (29), -0.19665 (29), -0.19639 (29), -0.19628 (29), -0.19150 (29), -0.19096 (29), -0.18853 (29), -0.17870 (29), -0.17779 (29), -0.17300 (29), -0.16823 (29), -0.16780 (29), -0.16633 (29), -0.16415 (29), -0.16381 (29), 
Length of domains: 306
Time: pickout 0.0033    decision 0.0676    set_bounds 0.0339    solve 0.8840    add 0.0041    
Accumulated time: pickout 0.0370    decision 0.9095    set_bounds 0.3418    solve 11.8237    add 0.0663    
Current (lb-rhs): -0.2665177583694458
3970 domains visited
Cumulative time: 13.242619037628174

BaB round 21
batch: 306
splitting decisions: 
split level 0: [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] [/input.11, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 410 / 612 = 0.6699346405228759
pruning-in-iteration extra time: 0.014120340347290039
Time: prepare 0.0865    bound 0.5252    transfer 0.0035    finalize 0.0387    func 0.6542    
Accumulated time: func 12.4744    prepare 1.1323    bound 10.6531    transfer 0.0478    finalize 0.6450    
Current worst splitting domains lb-rhs (depth):
-0.20091 (30), -0.17063 (30), -0.17046 (30), -0.15451 (30), -0.14819 (30), -0.14672 (30), -0.14026 (30), -0.13332 (30), -0.13020 (30), -0.12963 (30), -0.12538 (30), -0.12468 (30), -0.12420 (30), -0.12262 (30), -0.12172 (30), -0.11648 (30), -0.11301 (30), -0.11217 (30), -0.11171 (30), -0.11133 (30), 
Length of domains: 202
Time: pickout 0.0030    decision 0.0497    set_bounds 0.0238    solve 0.6546    add 0.0034    
Accumulated time: pickout 0.0400    decision 0.9592    set_bounds 0.3656    solve 12.4783    add 0.0698    
Current (lb-rhs): -0.20091497898101807
4172 domains visited
Cumulative time: 13.982940673828125

BaB round 22
batch: 202
splitting decisions: 
split level 0: [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.7, 599] [/input.11, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 275 / 404 = 0.6806930693069306
pruning-in-iteration extra time: 0.013493061065673828
Time: prepare 0.0528    bound 0.4896    transfer 0.0023    finalize 0.0247    func 0.5695    
Accumulated time: func 13.0439    prepare 1.1854    bound 11.1427    transfer 0.0502    finalize 0.6696    
Current worst splitting domains lb-rhs (depth):
-0.16577 (31), -0.13546 (31), -0.13531 (31), -0.11925 (31), -0.11558 (31), -0.11050 (31), -0.10546 (31), -0.10508 (31), -0.09815 (31), -0.09690 (31), -0.09270 (31), -0.09207 (31), -0.08906 (31), -0.08747 (31), -0.08021 (31), -0.08018 (31), -0.07772 (31), -0.07710 (31), -0.07701 (31), -0.07625 (31), 
Length of domains: 129
Time: pickout 0.0026    decision 0.0497    set_bounds 0.0165    solve 0.5697    add 0.0028    
Accumulated time: pickout 0.0427    decision 1.0089    set_bounds 0.3821    solve 13.0480    add 0.0725    
Current (lb-rhs): -0.16577255725860596
4301 domains visited
Cumulative time: 14.627793788909912

BaB round 23
batch: 129
splitting decisions: 
split level 0: [/input.7, 274] [/input.7, 599] [/input.7, 599] [/input.7, 267] [/input.7, 599] [/input.7, 274] [/input.7, 274] [/input.7, 274] [/input.7, 267] [/input.7, 302] 
pruning_in_iteration open status: True
ratio of positive domain = 200 / 258 = 0.7751937984496124
pruning-in-iteration extra time: 0.01238107681274414
Time: prepare 0.0337    bound 0.4502    transfer 0.0018    finalize 0.0163    func 0.5022    
Accumulated time: func 13.5460    prepare 1.2194    bound 11.5929    transfer 0.0519    finalize 0.6859    
Current worst splitting domains lb-rhs (depth):
-0.11365 (32), -0.09296 (32), -0.08791 (32), -0.08385 (32), -0.08321 (32), -0.06727 (32), -0.06422 (32), -0.06252 (32), -0.06046 (32), -0.05840 (32), -0.05751 (32), -0.05650 (32), -0.05328 (32), -0.04636 (32), -0.04622 (32), -0.04377 (32), -0.04048 (32), -0.04037 (32), -0.03791 (32), -0.03771 (32), 
Length of domains: 58
Time: pickout 0.0021    decision 0.0428    set_bounds 0.0108    solve 0.5023    add 0.0023    
Accumulated time: pickout 0.0447    decision 1.0517    set_bounds 0.3929    solve 13.5503    add 0.0748    
Current (lb-rhs): -0.11364579200744629
4359 domains visited
Cumulative time: 15.191112041473389

BaB round 24
batch: 58
splitting decisions: 
split level 0: [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 107] [/input.7, 267] [/input.7, 107] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 116 = 0.8879310344827587
pruning-in-iteration extra time: 0.013498783111572266
Time: prepare 0.0154    bound 0.4572    transfer 0.0012    finalize 0.0084    func 0.4824    
Accumulated time: func 14.0284    prepare 1.2351    bound 12.0502    transfer 0.0531    finalize 0.6943    
Current worst splitting domains lb-rhs (depth):
-0.04776 (33), -0.04585 (33), -0.02735 (33), -0.02720 (33), -0.02593 (33), -0.02245 (33), -0.01981 (33), -0.01732 (33), -0.01542 (33), -0.01470 (33), -0.01061 (33), -0.00871 (33), -0.00494 (33), 
Length of domains: 13
Time: pickout 0.0016    decision 0.0326    set_bounds 0.0053    solve 0.4825    add 0.0016    
Accumulated time: pickout 0.0463    decision 1.0844    set_bounds 0.3981    solve 14.0328    add 0.0764    
Current (lb-rhs): -0.04776144027709961
4372 domains visited
Cumulative time: 15.716277122497559

BaB round 25
batch: 13
splitting decisions: 
split level 0: [/input.7, 267] [/input.7, 267] [/input.7, 267] [/input.7, 581] [/input.7, 581] [/input.7, 267] [/input.7, 581] [/input.7, 302] [/input.7, 267] [/input.7, 267] 
split level 1: [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] [/input.7, 716] 
split level 2: [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] [/input.7, 38] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 104 / 104 = 1.0
pruning-in-iteration extra time: 8.511543273925781e-05
Time: prepare 0.0138    bound 0.0132    transfer 0.0006    finalize 0.0061    func 0.0338    
Accumulated time: func 14.0623    prepare 1.2493    bound 12.0634    transfer 0.0537    finalize 0.7004    
Length of domains: 0
Time: pickout 0.0013    decision 0.0246    set_bounds 0.0080    solve 0.0339    add 0.0001    
Accumulated time: pickout 0.0476    decision 1.1089    set_bounds 0.4062    solve 14.0667    add 0.0765    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4372 domains visited
Cumulative time: 15.784801006317139


Properties batch 3, size 1
Remaining timeout: 278.3403797149658
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8364267349243164.

Properties batch 4, size 1
Remaining timeout: 278.2189223766327
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.791902542114258.

Properties batch 5, size 1
Remaining timeout: 278.11466240882874
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.447551727294922.

Properties batch 6, size 1
Remaining timeout: 278.01101899147034
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.747272491455078.

Properties batch 7, size 1
Remaining timeout: 277.90739393234253
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.929601192474365.

Properties batch 8, size 1
Remaining timeout: 277.8037579059601
##### Instance 178 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.1029634475708.
Result: safe in 22.3001 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.14135957,  9.15162563, -1.57773745, -0.69784993, -1.19571054,
         -3.49510241, -2.40371990,  1.33514011,  1.60045838,  0.24633212]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.81009650,  7.71928072, -1.36345887, -0.79905516, -1.26989353,
          -3.50253916, -1.97683513,  1.70179820,  2.87730336,  0.25490141],
         [-3.81009650,  7.71928072, -1.36345887, -0.79905516, -1.26989353,
          -3.50253916, -1.97683513,  1.70179820,  2.87730336,  0.25490141]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.52937698,  9.08273983,  8.51833630,  8.98917389, 11.22181988,
           9.69611549,  6.01748276,  4.84197712,  7.46437931]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7443 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.14135981,  9.15162563, -1.57773793, -0.69785047, -1.19571078,
         -3.49510241, -2.40371990,  1.33513999,  1.60045898,  0.24633215]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [758]; unstable size 758; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 354, 1, 758] with unstable size 353 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 758] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 758] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [353]; unstable size 353; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 353] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 353] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.08365107, 4.91647816, 2.76339722, 4.67486238, 5.42840004, 5.85523701,
         2.05644751, 1.72159159, 1.20348740]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8149 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.53017163, -2.56302857,  2.18444991,  1.07983398, -7.59914446,
          0.43964535,  1.03049970, -5.13176203, 14.26163101, -1.30073428]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.21631575, -2.72918487,  1.72113180,  5.27122831, -8.66456509,
           1.20159578, -1.03081179, -4.52937841, 11.31843567, -0.46153080],
         [-2.21631575, -2.72918487,  1.72113180,  5.27122831, -8.66456509,
           1.20159578, -1.03081179, -4.52937841, 11.31843567, -0.46153080]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.53475189, 14.04762077,  9.59730339,  6.04720736, 19.98300171,
          10.11684036, 12.34924698, 15.84781456, 11.77996635]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7450 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.53017235, -2.56302881,  2.18445015,  1.07983410, -7.59914446,
          0.43964559,  1.03049827, -5.13176155, 14.26163292, -1.30073369]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [661]; unstable size 661; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 199, 1, 661] with unstable size 198 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 661] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [198]; unstable size 198; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 198] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 198] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.13876629,  5.96001911,  0.62003589,  1.27653813, 12.77305603,
          2.53031611,  3.11535501,  8.65661144,  6.37367821]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8101 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.33888006, -1.51117969, -3.38517976,  2.87755251, -4.15279627,
         10.85544872,  0.62726843, -4.56495047,  2.35320044, -0.03191961]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.65906286, -2.03621817, -2.78722811,  1.97294641, -2.85498333,
           8.85768890,  0.81189162, -4.80109692,  3.87064695,  0.35962689],
         [-3.65906286, -2.03621817, -2.78722811,  1.97294641, -2.85498333,
           8.85768890,  0.81189162, -4.80109692,  3.87064695,  0.35962689]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.51675224, 10.89390755, 11.64491653,  6.88474274, 11.71267223,
           8.04579735, 13.65878582,  4.98704195,  8.49806213]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7530 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-3.33888054, -1.51118040, -3.38518000,  2.87755275, -4.15279675,
         10.85544872,  0.62726879, -4.56495142,  2.35320044, -0.03191961]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [737]; unstable size 737; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 173, 1, 737] with unstable size 172 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 737] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [172]; unstable size 172; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 172] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.97644186,  2.33468843,  3.55344200,  0.27833533,  5.59388971,
          2.52671003,  5.17476559, -0.48662925,  3.34398317]], device='cuda:0') None

all verified at 4th iter
best_l after optimization: 32.528038024902344
alpha/beta optimization time: 0.20151066780090332
initial alpha-crown bounds: tensor([[5.49467182, 2.94200706, 4.15375042, 0.92247200, 6.20248699, 3.00459528,
         5.78977299, 0.12063253, 3.89764881]], device='cuda:0')
Worst class: (+ rhs) 0.12063252925872803
verified with init bound!
Result: safe-incomplete in 1.0229 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[14.31460571, -1.96740818,  1.36711121, -3.26655149, -2.22280049,
         -2.70717907,  2.05241370, -3.05418706, -4.22626925, -0.84780598]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[11.79146194, -1.89946342,  0.74635488, -2.91799402, -1.83465314,
          -1.23443902,  2.89765477, -2.72109461, -4.26153278, -1.15781021],
         [11.79146194, -1.89946342,  0.74635488, -2.91799402, -1.83465314,
          -1.23443902,  2.89765477, -2.72109461, -4.26153278, -1.15781021]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.69092560, 11.04510689, 14.70945549, 13.62611485, 13.02590084,
           8.89380741, 14.51255608, 16.05299377, 12.94927216]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7441 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[14.31460571, -1.96740842,  1.36711097, -3.26655149, -2.22280073,
         -2.70717931,  2.05241346, -3.05418730, -4.22626877, -0.84780586]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [629]; unstable size 629; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 100, 1, 629] with unstable size 99 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 26, 1, 629] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 629] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [99]; unstable size 99; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 26, 1, 99] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 99] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.70624542,  6.19187307, 10.20055771, 10.19391441,  8.24265099,
          6.31602526, 10.49707222, 11.37664795,  8.95965958]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8093 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.20261994, -4.32839966,  1.08402848,  6.12775564, -5.38805151,
          0.15682583,  0.29111412, -3.48790359,  8.69117260, -3.05486488]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.14320806, -3.57567048,  1.24139965,  9.73704052, -6.30998993,
          -0.65113086, -1.88521755, -3.24634528,  6.12469625, -1.66555166],
         [ 0.14320806, -3.57567048,  1.24139965,  9.73704052, -6.30998993,
          -0.65113086, -1.88521755, -3.24634528,  6.12469625, -1.66555166]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.98148823,  9.70036697,  4.88329649, -3.61234426, 12.43468666,
           6.77582693,  8.00991344,  9.37104130,  7.79024792]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0175 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.59239149, -4.74334478, -1.39741147, -2.47225904,  4.11571217,
         -4.09074879,  1.61177015, -0.14216426, -0.38105544,  8.87937355]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.33268189, -3.62958193, -1.13985872, -3.38252878,  7.62613249,
          -4.30554438,  2.43340445, -0.53815472, -0.87378967,  5.88634491],
         [-2.33268189, -3.62958193, -1.13985872, -3.38252878,  7.62613249,
          -4.30554438,  2.43340445, -0.53815472, -0.87378967,  5.88634491]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.21902657,  9.51592636,  7.02620363,  9.26887321, -1.73978758,
          10.19188881,  3.45294046,  6.42449951,  6.76013470]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0165 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0174 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  3.75923038,   1.51043880,  17.06682014,   7.10069132, -11.23026562,
          -5.87469769,  -9.68608570,   3.30331898,   3.96165895,  -9.91140270]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  2.74126816,   1.77613366,  14.57013988,  10.64186096, -11.70659065,
           -4.94245052, -10.70842266,   2.51571274,   3.89169884,  -8.76582718],
         [  2.74126816,   1.77613366,  14.57013988,  10.64186096, -11.70659065,
           -4.94245052, -10.70842266,   2.51571274,   3.89169884,  -8.76582718]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.82887173, 12.79400635,  3.92827892, 26.27672958, 19.51259041,
          25.27856255, 12.05442715, 10.67844105, 23.33596802]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7422 seconds.
PGD attack failed
torch allclose failed: norm 1.5172865914792055e-06
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  3.75922966,   1.51043892,  17.06682014,   7.10069084, -11.23026562,
          -5.87469864,  -9.68608570,   3.30331898,   3.96165895,  -9.91140366]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [604]; unstable size 604; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 121, 1, 604] with unstable size 120 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 17, 1, 604] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [120]; unstable size 120; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 17, 1, 120] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 120] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.80208969,  6.86180973, -0.34768379, 19.19006729, 10.52368546,
         16.24339104,  7.01138401,  3.64950037, 15.40298462]], device='cuda:0') None

all verified at 6th iter
best_l after optimization: 88.56880950927734
alpha/beta optimization time: 0.30814409255981445
initial alpha-crown bounds: tensor([[6.29944563e+00, 7.22412777e+00, 1.36576891e-02, 1.95008545e+01,
         1.13880377e+01, 1.67013645e+01, 7.31904507e+00, 4.13073730e+00,
         1.59915419e+01]], device='cuda:0')
Worst class: (+ rhs) 0.013657689094543457
verified with init bound!
Result: safe-incomplete in 1.1257 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.47282743, -6.33412504, -2.66589379,  7.90637827, -9.59700108,
         13.89011002, -1.54624295, -6.77710438,  4.47954273,  4.07293892]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.76201439,  -4.87673759,  -0.54451615,  10.60362720, -10.18597889,
           10.41551495,  -3.53594375,  -5.35888481,   4.86549091,   2.41388822],
         [ -3.76201439,  -4.87673759,  -0.54451615,  10.60362720, -10.18597889,
           10.41551495,  -3.53594375,  -5.35888481,   4.86549091,   2.41388822]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.17752934, 15.29225254, 10.96003151, -0.18811226, 20.60149384,
          13.95145893, 15.77439976,  5.55002403,  8.00162697]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0185 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0196 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[15.98012829, -3.69038558,  2.42450953, -5.77739859, -3.10867214,
          1.08937991,  0.27910832,  1.03496480, -0.32707366, -8.19963264]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[13.03515244, -3.47575378,  1.32980549, -4.26581955, -3.53796935,
           4.54970264, -1.33853388,  1.30724084, -0.65803617, -7.21259308],
         [13.03515244, -3.47575378,  1.32980549, -4.26581955, -3.53796935,
           4.54970264, -1.33853388,  1.30724084, -0.65803617, -7.21259308]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[16.51090622, 11.70534706, 17.30097198, 16.57312202,  8.48544979,
          14.37368584, 11.72791195, 13.69318867, 20.24774551]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7400 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[15.98013115, -3.69038606,  2.42450905, -5.77739954, -3.10867238,
          1.08938050,  0.27910879,  1.03496599, -0.32707319, -8.19963360]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [675]; unstable size 675; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 105, 1, 675] with unstable size 104 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 675] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [104]; unstable size 104; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 104] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 104] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.57437134,  5.45681715, 10.77169800, 11.77555370,  3.09267092,
         10.08379936,  5.44023466,  7.66209698, 13.41694450]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8084 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.03147125,  6.39626122, -0.53068948, -0.46064299,  0.84483367,
         -0.27297336, -0.13238643, -1.53837395,  1.98390257, -2.37453818]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.91124344,  4.88696957, -0.68466586,  0.58763713, -0.17842208,
          -0.17932124, -0.37644532, -1.77151823,  2.93756270, -1.39313674],
         [-3.91124344,  4.88696957, -0.68466586,  0.58763713, -0.17842208,
          -0.17932124, -0.37644532, -1.77151823,  2.93756270, -1.39313674]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[8.79821301, 5.57163525, 4.29933262, 5.06539154, 5.06629086,
          5.26341486, 6.65848780, 1.94940686, 6.28010654]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7417 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.03147078,  6.39626169, -0.53068984, -0.46064329,  0.84483385,
         -0.27297324, -0.13238595, -1.53837395,  1.98390257, -2.37453842]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [688]; unstable size 688; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 250, 1, 688] with unstable size 249 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 33, 1, 688] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [249]; unstable size 249; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 33, 1, 249] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.51421070e+00,  9.95792389e-01, -5.98119736e-01, -1.32596493e-03,
          2.09802151e-01,  1.53855443e+00,  1.36920190e+00, -2.22711825e+00,
          5.94302416e-01]], device='cuda:0') None
best_l after optimization: 14.298218727111816
alpha/beta optimization time: 4.664427042007446
initial alpha-crown bounds: tensor([[ 5.04461384,  1.50902224,  0.26353121,  1.05237126,  1.04019952,
          2.22842550,  2.11389494, -0.74186754,  1.78802729]], device='cuda:0')
Worst class: (+ rhs) -0.7418675422668457
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5228841304779
##### Instance 188 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.044613838195801.

Properties batch 1, size 1
Remaining timeout: 294.40810441970825
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5090222358703613.

Properties batch 2, size 1
Remaining timeout: 294.3037793636322
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2635312080383301.

Properties batch 3, size 1
Remaining timeout: 294.19992232322693
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0523712635040283.

Properties batch 4, size 1
Remaining timeout: 294.096209526062
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0401995182037354.

Properties batch 5, size 1
Remaining timeout: 293.9927005767822
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2284255027770996.

Properties batch 6, size 1
Remaining timeout: 293.8889117240906
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1138949394226074.

Properties batch 7, size 1
Remaining timeout: 293.78522872924805
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.74186754]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.03147078,  6.39626169, -0.53068984, -0.46064329,  0.84483385,
        -0.27297324, -0.13238595, -1.53837395,  1.98390257, -2.37453842],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.74186754]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 688
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 248
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 965
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 32] 
split level 2: [/input.11, 17] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 48] 
split level 5: [/input.11, 65] 
split level 6: [/input.11, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.62939453125e-05
Time: prepare 0.0075    bound 0.0081    transfer 0.0010    finalize 0.0067    func 0.0235    
Accumulated time: func 0.0235    prepare 0.0081    bound 0.0081    transfer 0.0010    finalize 0.0067    
Length of domains: 0
Time: pickout 0.0007    decision 0.0416    set_bounds 0.0157    solve 0.0236    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0416    set_bounds 0.0157    solve 0.0236    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08870911598205566


Properties batch 8, size 1
Remaining timeout: 293.5530831813812
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.788027286529541.
Result: safe in 6.5555 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.73021150,  9.58917141, -1.10358477, -1.13368237,  0.11357460,
         -4.89675188, -4.05553865,  1.93243933,  2.75381422, -1.59654307]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.59512734,  7.01243782, -1.15484107, -0.80376107, -1.33744621,
          -2.21794772, -3.43967247,  0.34413636,  4.38642073, -1.29711723],
         [-1.59512734,  7.01243782, -1.15484107, -0.80376107, -1.33744621,
          -2.21794772, -3.43967247,  0.34413636,  4.38642073, -1.29711723]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.60756493,  8.16727924,  7.81619883,  8.34988403,  9.23038578,
          10.45211029,  6.66830158,  2.62601709,  8.30955505]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7516 seconds.
PGD attack failed
torch allclose failed: norm 7.251600777635758e-07
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-1.73021162,  9.58917332, -1.10358572, -1.13368189,  0.11357448,
         -4.89675331, -4.05553913,  1.93244064,  2.75381327, -1.59654200]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [697]; unstable size 697; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 192, 1, 697] with unstable size 191 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 23, 1, 697] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 697] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [191]; unstable size 191; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 23, 1, 191] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.88354635,  2.97030711,  2.57683849,  2.57536411,  4.53061962,
          5.63542414,  0.97538275, -1.01443803,  2.10766673]], device='cuda:0') None
best_l after optimization: 30.723892211914062
alpha/beta optimization time: 4.629554510116577
initial alpha-crown bounds: tensor([[ 5.43291140,  3.55566573,  3.04192710,  3.36476493,  5.09780169,
          6.31005859,  1.52623415, -0.50373316,  2.89826107]], device='cuda:0')
Worst class: (+ rhs) -0.5037331581115723
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.5431890487671
##### Instance 189 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.432911396026611.

Properties batch 1, size 1
Remaining timeout: 294.4291181564331
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5556657314300537.

Properties batch 2, size 1
Remaining timeout: 294.3249273300171
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0419270992279053.

Properties batch 3, size 1
Remaining timeout: 294.2212245464325
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.364764928817749.

Properties batch 4, size 1
Remaining timeout: 294.1175649166107
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.097801685333252.

Properties batch 5, size 1
Remaining timeout: 294.0139842033386
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.31005859375.

Properties batch 6, size 1
Remaining timeout: 293.9102485179901
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5262341499328613.

Properties batch 7, size 1
Remaining timeout: 293.80670619010925
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50373316]], device='cuda:0') need to verify.
Model prediction is: tensor([-1.73021162,  9.58917332, -1.10358572, -1.13368189,  0.11357448,
        -4.89675331, -4.05553913,  1.93244064,  2.75381327, -1.59654200],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50373316]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 697
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 187
Node /27 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 904
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 97] 
split level 1: [/input.11, 32] 
split level 2: [/input.7, 312] 
split level 3: [/input.11, 84] 
split level 4: [/input.11, 25] 
split level 5: [/input.7, 192] 
split level 6: [/input.7, 713] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0145    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0306    
Accumulated time: func 0.0306    prepare 0.0151    bound 0.0078    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0414    set_bounds 0.0169    solve 0.0307    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09727144241333008


Properties batch 8, size 1
Remaining timeout: 293.5663139820099
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.898261070251465.
Result: safe in 6.5426 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.83904409,  6.49901533, -0.65238941, -0.27999341,  0.86289394,
          0.60368615, -0.66143191, -1.42456460,  2.80763626, -2.00157309]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.24760389,  4.94504499, -0.94973361,  0.61888242,  0.70229775,
           0.28521460, -1.03534162, -1.54091704,  4.05168438, -0.86265087],
         [-6.24760389,  4.94504499, -0.94973361,  0.61888242,  0.70229775,
           0.28521460, -1.03534162, -1.54091704,  4.05168438, -0.86265087]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.19264889,  5.89477873,  4.32616234,  4.24274731,  4.65983057,
           5.98038673,  6.48596191,  0.89336061,  5.80769587]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7585 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-5.83904505,  6.49901628, -0.65238947, -0.27999431,  0.86289406,
          0.60368639, -0.66143179, -1.42456520,  2.80763626, -2.00157261]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [691]; unstable size 691; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 228, 1, 691] with unstable size 227 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 691] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 691] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [227]; unstable size 227; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 227] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 227] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.87333345,  0.86286616, -0.15839082,  0.02797186,  0.41361761,
          2.56636000,  1.23338127, -2.39310503,  0.41375911]], device='cuda:0') None
best_l after optimization: 14.67380142211914
alpha/beta optimization time: 4.492664337158203
initial alpha-crown bounds: tensor([[ 7.18640327,  1.44549441,  0.32873929,  0.62371850,  0.92915285,
          2.79633474,  1.84093463, -1.71260917,  1.23563302]], device='cuda:0')
Worst class: (+ rhs) -1.7126091718673706
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.67385387420654
##### Instance 190 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.186403274536133.

Properties batch 1, size 1
Remaining timeout: 294.5601873397827
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4454944133758545.

Properties batch 2, size 1
Remaining timeout: 294.45629143714905
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3287392854690552.

Properties batch 3, size 1
Remaining timeout: 294.3527522087097
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6237185001373291.

Properties batch 4, size 1
Remaining timeout: 294.2490928173065
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9291528463363647.

Properties batch 5, size 1
Remaining timeout: 294.1458673477173
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.796334743499756.

Properties batch 6, size 1
Remaining timeout: 294.0423662662506
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8409346342086792.

Properties batch 7, size 1
Remaining timeout: 293.93877243995667
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.71260917]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.83904505,  6.49901628, -0.65238947, -0.27999431,  0.86289406,
         0.60368639, -0.66143179, -1.42456520,  2.80763626, -2.00157261],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.71260917]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 691
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 227
Node /27 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 946
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 32] 
split level 1: [/input.11, 17] 
split level 2: [/input.11, 48] 
split level 3: [/input.11, 65] 
split level 4: [/input.11, 84] 
split level 5: [/input.11, 59] 
split level 6: [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 115 / 128 = 0.8984375
pruning-in-iteration extra time: 0.013684749603271484
Time: prepare 0.0076    bound 0.4547    transfer 0.0012    finalize 0.0076    func 0.4711    
Accumulated time: func 0.4711    prepare 0.0082    bound 0.4547    transfer 0.0012    finalize 0.0076    
Current worst splitting domains lb-rhs (depth):
-0.29862 (7), -0.29356 (7), -0.29082 (7), -0.24585 (7), -0.23916 (7), -0.14063 (7), -0.13542 (7), -0.09347 (7), -0.08467 (7), -0.06710 (7), -0.03953 (7), -0.00966 (7), -0.00446 (7), 
Length of domains: 13
Time: pickout 0.0007    decision 0.0416    set_bounds 0.0158    solve 0.4712    add 0.0017    
Accumulated time: pickout 0.0007    decision 0.0416    set_bounds 0.0158    solve 0.4712    add 0.0017    
Current (lb-rhs): -0.29861533641815186
13 domains visited
Cumulative time: 0.5386226177215576

BaB round 2
batch: 13
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 5] [/input.7, 702] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] 
split level 1: [/input.7, 702] [/input.7, 702] [/input.7, 597] [/input.7, 592] [/input.7, 702] [/input.7, 702] [/input.7, 702] [/input.7, 702] [/input.7, 702] [/input.7, 702] 
split level 2: [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 581] [/input.7, 597] [/input.7, 597] [/input.7, 581] [/input.7, 597] [/input.7, 581] 
pruning_in_iteration open status: True
ratio of positive domain = 99 / 104 = 0.9519230769230769
pruning-in-iteration extra time: 0.013351678848266602
Time: prepare 0.0145    bound 0.4655    transfer 0.0010    finalize 0.0078    func 0.4889    
Accumulated time: func 0.9600    prepare 0.0230    bound 0.9202    transfer 0.0022    finalize 0.0154    
Current worst splitting domains lb-rhs (depth):
-0.11705 (10), -0.05448 (10), -0.03932 (10), -0.02150 (10), -0.01179 (10), 
Length of domains: 5
Time: pickout 0.0010    decision 0.0249    set_bounds 0.0089    solve 0.4890    add 0.0014    
Accumulated time: pickout 0.0017    decision 0.0665    set_bounds 0.0248    solve 0.9602    add 0.0031    
Current (lb-rhs): -0.11705242097377777
18 domains visited
Cumulative time: 1.0653765201568604

BaB round 3
batch: 5
splitting decisions: 
split level 0: [/input.11, 56] [/input.11, 56] [/input.7, 592] [/input.7, 712] [/input.11, 56] 
split level 1: [/input.7, 581] [/input.7, 592] [/input.11, 56] [/input.7, 592] [/input.7, 581] 
split level 2: [/input.7, 592] [/input.3, 2253] [/input.3, 2253] [/input.11, 56] [/input.7, 592] 
split level 3: [/input.3, 2253] [/input.7, 597] [/input.7, 581] [/input.3, 2253] [/input.3, 2253] 
split level 4: [/input.7, 142] [/input.7, 142] [/input.7, 142] [/input.7, 597] [/input.7, 142] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.510185241699219e-05
Time: prepare 0.0300    bound 0.0078    transfer 0.0008    finalize 0.0114    func 0.0500    
Accumulated time: func 1.0100    prepare 0.0535    bound 0.9280    transfer 0.0029    finalize 0.0268    
Length of domains: 0
Time: pickout 0.0013    decision 0.0352    set_bounds 0.0217    solve 0.0501    add 0.0001    
Accumulated time: pickout 0.0030    decision 0.1017    set_bounds 0.0465    solve 1.0103    add 0.0032    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18 domains visited
Cumulative time: 1.1752429008483887


Properties batch 8, size 1
Remaining timeout: 292.62103748321533
##### Instance 190 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2356330156326294.
Result: safe in 7.5033 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.50287437, -2.06517863,  2.86355066, -3.14134979, -2.49413061,
         -1.81102884,  0.90987206, -2.77632546,  0.53233671, -3.90158415]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 8.97993183, -2.10977697,  4.29167700, -3.09771490, -1.18335164,
          -2.20404315,  0.53163528, -1.73602569,  0.44910154, -4.25250769],
         [ 8.97993183, -2.10977697,  4.29167700, -3.09771490, -1.18335164,
          -2.20404315,  0.53163528, -1.73602569,  0.44910154, -4.25250769]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.08970833,  4.68825483, 12.07764626, 10.16328335, 11.18397522,
           8.44829655, 10.71595764,  8.53083038, 13.23243904]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7507 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.50287342, -2.06517863,  2.86355066, -3.14134955, -2.49413085,
         -1.81102848,  0.90987241, -2.77632618,  0.53233683, -3.90158343]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [686]; unstable size 686; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 173, 1, 686] with unstable size 172 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 31, 1, 686] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [172]; unstable size 172; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 31, 1, 172] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.65923882,  0.06236672,  2.92419338,  4.15998077, -0.04350424,
          1.22555757,  4.55637646,  0.94981480,  3.80740690]], device='cuda:0') None

all verified at 1th iter
best_l after optimization: 22.37186050415039
alpha/beta optimization time: 0.06659460067749023
initial alpha-crown bounds: tensor([[3.78088951, 0.17817593, 3.06000710, 4.27098083, 0.10342216, 1.32747269,
         4.65536499, 1.05106139, 3.94448519]], device='cuda:0')
Worst class: (+ rhs) 0.10342216491699219
verified with init bound!
Result: safe-incomplete in 0.8873 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.42744350, -2.09788513, -1.76257181,  1.61735845,  0.58438426,
          1.84583831, -5.85863304,  2.86909795,  3.13645577,  5.08301163]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60413647, -0.72607559, -1.62018037,  3.79695630,  0.20670781,
           2.05491114, -4.86991978,  2.10354805,  3.40103531,  1.22193050],
         [-5.60413647, -0.72607559, -1.62018037,  3.79695630,  0.20670781,
           2.05491114, -4.86991978,  2.10354805,  3.40103531,  1.22193050]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.82606697,  1.94800615,  2.84211087, -2.57502580,  1.01522267,
          -0.83298063,  6.09185028, -0.88161755, -2.17910480]]],
       device='cuda:0')
number of violation:  4
Attack finished in 0.0159 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0169 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[11.51226044, -2.15816283,  2.07630062, -2.34033179, -4.59053564,
          0.23528562, -3.68482280,  0.47241703, -2.26988387,  0.53547490]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 8.59894753, -1.86676109,  1.02894819, -0.84330535, -4.91898680,
           4.05613470, -5.03676367,  0.81527305, -2.90282393,  0.88256907],
         [ 8.59894753, -1.86676109,  1.02894819, -0.84330535, -4.91898680,
           4.05613470, -5.03676367,  0.81527305, -2.90282393,  0.88256907]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.46570873,  7.56999922,  9.44225311, 13.51793480,  4.54281282,
          13.63571167,  7.78367424, 11.50177193,  7.71637821]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7388 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[11.51226139, -2.15816307,  2.07629967, -2.34033203, -4.59053659,
          0.23528664, -3.68482280,  0.47241786, -2.26988411,  0.53547513]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [710]; unstable size 710; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 103, 1, 710] with unstable size 102 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 32, 1, 710] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 710] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [102]; unstable size 102; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 32, 1, 102] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 102] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.26045132,  2.04666042,  2.85703325,  7.29988194, -0.45553160,
          8.79866409,  0.34779572,  5.01750183,  0.50792551]], device='cuda:0') None

all verified at 6th iter
best_l after optimization: 34.35704803466797
alpha/beta optimization time: 0.2784240245819092
initial alpha-crown bounds: tensor([[5.48050022, 2.26652551, 3.21371984, 7.54522657, 0.04355001, 8.98816204,
         0.60813785, 5.37995386, 0.83127284]], device='cuda:0')
Worst class: (+ rhs) 0.04355001449584961
verified with init bound!
Result: safe-incomplete in 1.0863 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.77065873,  0.70560390,  0.85576737,  3.22454619,  0.61674923,
          0.67574978, -2.54760671,  0.33742651,  1.30434382, -1.39451396]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.73055243,  1.77781463,  0.91952854,  1.52713645,  1.57044411,
           0.30313990, -1.02074945, -0.64313936,  1.26166523, -1.98253727],
         [-3.73055243,  1.77781463,  0.91952854,  1.52713645,  1.57044411,
           0.30313990, -1.02074945, -0.64313936,  1.26166523, -1.98253727]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.25768900, -0.25067818,  0.60760790, -0.04330766,  1.22399652,
           2.54788589,  2.17027569,  0.26547122,  3.50967360]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0164 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0174 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.56814528, 10.03369808, -1.06228805, -3.21791506, -0.39734951,
         -1.29669476,  1.20865083, -2.44467402,  4.07986355, -4.58284950]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]100%|██████████| 1/1 [00:00<00:00,  1.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.85762787,  8.51063919, -1.07298172, -4.09580755, -0.28397226,
          -1.10786009,  1.89467740, -2.69818354,  5.83811474, -4.36512852],
         [-2.85762787,  8.51063919, -1.07298172, -4.09580755, -0.28397226,
          -1.10786009,  1.89467740, -2.69818354,  5.83811474, -4.36512852]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.36826706,  9.58362103, 12.60644722,  8.79461098,  9.61849976,
           6.61596203, 11.20882225,  2.67252445, 12.87576771]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7529 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-2.56814623, 10.03369808, -1.06228733, -3.21791434, -0.39734939,
         -1.29669440,  1.20865059, -2.44467402,  4.07986355, -4.58284950]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [684]; unstable size 684; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 238, 1, 684] with unstable size 237 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 20, 1, 684] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 684] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [237]; unstable size 237; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 20, 1, 237] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 237] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.06669235, 4.96780491, 6.36373806, 5.41814804, 4.93293190, 2.59317899,
         6.47248840, 0.27955115, 7.38639641]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8229 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.21049139, -8.25726795, -1.15960479, -3.41272759, -1.52149200,
          6.83593225, 15.68483639, -9.66850281,  4.72109604, -4.05022287]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.17123093, -8.70992661, -1.33387697, -3.35433912, -1.94095469,
           7.18660498, 13.36941242, -8.71676159,  5.82658005, -3.05527878],
         [ 0.17123093, -8.70992661, -1.33387697, -3.35433912, -1.94095469,
           7.18660498, 13.36941242, -8.71676159,  5.82658005, -3.05527878]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.19818115, 22.07933807, 14.70328903, 16.72375107, 15.31036758,
           6.18280745, 22.08617401,  7.54283237, 16.42469025]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7479 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 0.21049055, -8.25726795, -1.15960407, -3.41272759, -1.52149224,
          6.83593273, 15.68483734, -9.66850281,  4.72109604, -4.05022287]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [634]; unstable size 634; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 116, 1, 634] with unstable size 115 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 24, 1, 634] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 634] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [115]; unstable size 115; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 24, 1, 115] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.49151134, 15.96622181,  8.89540005, 11.86115646,  9.34506226,
          3.41427207, 17.08275032,  3.74684310, 11.54821777]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.8150 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.25072813, -0.64609879, -3.81213236, -1.74052656, 10.07235622,
         -2.48805737, -3.54282260,  2.30550575,  0.04911043,  3.91514945]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.51080227, -1.64737618, -3.73004770, -0.84162927,  6.94334412,
          -1.58761871, -4.10253143,  2.10230613,  0.34488973,  5.92355394],
         [-3.51080227, -1.64737618, -3.73004770, -0.84162927,  6.94334412,
          -1.58761871, -4.10253143,  2.10230613,  0.34488973,  5.92355394]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.45414639,  8.59072018, 10.67339134,  7.78497314,  8.53096294,
          11.04587555,  4.84103775,  6.59845448,  1.01979017]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7419 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-4.25072813, -0.64609903, -3.81213236, -1.74052632, 10.07235622,
         -2.48805761, -3.54282236,  2.30550528,  0.04911103,  3.91514921]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [726]; unstable size 726; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 222, 1, 726] with unstable size 221 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 34, 1, 726] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [221]; unstable size 221; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 34, 1, 221] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.43485403,  2.03986597,  3.39486694, -0.29764271,  0.51838255,
          4.51851177, -2.84073305, -0.83897626, -3.77429104]], device='cuda:0') None
best_l after optimization: 19.20063018798828
alpha/beta optimization time: 4.53766942024231
initial alpha-crown bounds: tensor([[ 5.88207865,  3.09265709,  4.66223145,  1.07309973,  1.98522282,
          5.65436316, -1.49246597,  0.44014862, -2.09670448]], device='cuda:0')
Worst class: (+ rhs) -2.0967044830322266
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.649210691452
##### Instance 197 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.882078647613525.

Properties batch 1, size 1
Remaining timeout: 294.5138247013092
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0926570892333984.

Properties batch 2, size 1
Remaining timeout: 294.40775966644287
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6622314453125.

Properties batch 3, size 1
Remaining timeout: 294.3023130893707
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0730997323989868.

Properties batch 4, size 1
Remaining timeout: 294.1966013908386
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9852228164672852.

Properties batch 5, size 1
Remaining timeout: 294.0913071632385
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.65436315536499.

Properties batch 6, size 1
Remaining timeout: 293.9858453273773
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.49246597]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.25072813, -0.64609903, -3.81213236, -1.74052632, 10.07235622,
        -2.48805761, -3.54282236,  2.30550528,  0.04911103,  3.91514921],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.49246597]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 726
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 215
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 971
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 6] 
split level 1: [/input.11, 86] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 14] 
split level 4: [/input.11, 1] 
split level 5: [/input.11, 51] 
split level 6: [/input.11, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0076    bound 0.0079    transfer 0.0007    finalize 0.0060    func 0.0223    
Accumulated time: func 0.0223    prepare 0.0082    bound 0.0079    transfer 0.0007    finalize 0.0060    
Length of domains: 0
Time: pickout 0.0007    decision 0.0422    set_bounds 0.0158    solve 0.0224    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0422    set_bounds 0.0158    solve 0.0224    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08808493614196777


Properties batch 7, size 1
Remaining timeout: 293.75183510780334
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.44014862179756165.

Properties batch 8, size 1
Remaining timeout: 293.64107871055603
##### Instance 197 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.09670448]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.25072813, -0.64609903, -3.81213236, -1.74052632, 10.07235622,
        -2.48805761, -3.54282236,  2.30550528,  0.04911103,  3.91514921],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.09670448]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 726
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 215
Node /27 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 971
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 51] 
split level 1: [/input.3, 2242] 
split level 2: [/input.11, 99] 
split level 3: [/input.11, 12] 
split level 4: [/input.11, 6] 
split level 5: [/input.11, 95] 
split level 6: [/input.11, 0] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.013380050659179688
Time: prepare 0.0145    bound 0.4803    transfer 0.0012    finalize 0.0091    func 0.5052    
Accumulated time: func 0.5052    prepare 0.0151    bound 0.4803    transfer 0.0012    finalize 0.0091    
Current worst splitting domains lb-rhs (depth):
-0.77719 (7), -0.33598 (7), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0422    set_bounds 0.0171    solve 0.5053    add 0.0012    
Accumulated time: pickout 0.0006    decision 0.0422    set_bounds 0.0171    solve 0.5053    add 0.0012    
Current (lb-rhs): -0.7771850228309631
2 domains visited
Cumulative time: 0.5743463039398193

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input.7, 707] [/input.7, 707] 
split level 1: [/input.11, 11] [/input.11, 11] 
split level 2: [/input.7, 257] [/input.11, 73] 
split level 3: [/input.7, 258] [/input.7, 258] 
split level 4: [/input.11, 73] [/input.7, 118] 
split level 5: [/input.7, 717] [/input.7, 188] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 128 = 0.984375
pruning-in-iteration extra time: 0.012661457061767578
Time: prepare 0.0238    bound 0.4331    transfer 0.0012    finalize 0.0103    func 0.4685    
Accumulated time: func 0.9738    prepare 0.0394    bound 0.9134    transfer 0.0025    finalize 0.0195    
Current worst splitting domains lb-rhs (depth):
-0.13274 (13), -0.04279 (13), 
Length of domains: 2
Time: pickout 0.0014    decision 0.0456    set_bounds 0.0164    solve 0.4687    add 0.0012    
Accumulated time: pickout 0.0020    decision 0.0878    set_bounds 0.0335    solve 0.9741    add 0.0024    
Current (lb-rhs): -0.13274335861206055
4 domains visited
Cumulative time: 1.1093790531158447

BaB round 3
batch: 2
splitting decisions: 
split level 0: [/input.11, 97] [/input.11, 97] 
split level 1: [/input.7, 257] [/input.7, 257] 
split level 2: [/input.11, 10] [/input.11, 10] 
split level 3: [/input.7, 717] [/input.7, 142] 
split level 4: [/input.7, 142] [/input.7, 717] 
split level 5: [/input.7, 722] [/input.7, 722] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0238    bound 0.0078    transfer 0.0007    finalize 0.0090    func 0.0415    
Accumulated time: func 1.0152    prepare 0.0639    bound 0.9213    transfer 0.0031    finalize 0.0285    
Length of domains: 0
Time: pickout 0.0014    decision 0.0401    set_bounds 0.0179    solve 0.0415    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.1279    set_bounds 0.0514    solve 1.0156    add 0.0025    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 1.211273193359375

Result: safe in 7.7156 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  0.42052910,   1.15208602,  15.28444767,   9.33135796, -10.66334248,
          -8.63980579, -12.42360306,   5.06098270,   4.88623238,  -4.35744953]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]100%|██████████| 1/1 [00:00<00:00,  1.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.28584117,   0.40389669,  13.14068222,  11.42341805, -11.52352428,
           -8.11297131, -12.25471020,   3.64522290,   5.70966291,  -2.64111137],
         [  0.28584117,   0.40389669,  13.14068222,  11.42341805, -11.52352428,
           -8.11297131, -12.25471020,   3.64522290,   5.70966291,  -2.64111137]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.85484123, 12.73678589,  1.71726418, 24.66420746, 21.25365448,
          25.39539337,  9.49545956,  7.43101931, 15.78179359]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7405 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  0.42052910,   1.15208578,  15.28445053,   9.33135986, -10.66334343,
          -8.63980865, -12.42360306,   5.06098413,   4.88623285,  -4.35745001]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [626]; unstable size 626; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 135, 1, 626] with unstable size 134 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 22, 1, 626] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 626] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [134]; unstable size 134; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 22, 1, 134] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 134] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.67744064,  6.09429502, -2.16912055, 17.87992859, 12.24977493,
         16.52352715,  4.37054729,  1.95230079,  9.96816540]], device='cuda:0') None
best_l after optimization: 78.45265197753906
alpha/beta optimization time: 4.7530598640441895
initial alpha-crown bounds: tensor([[ 8.00877953,  6.47984362, -1.78707314, 18.17799377, 12.79946518,
         16.99538422,  4.73534393,  2.34317017, 10.69974136]], device='cuda:0')
Worst class: (+ rhs) -1.7870731353759766
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.4338753223419
##### Instance 198 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.008779525756836.

Properties batch 1, size 1
Remaining timeout: 294.31818318367004
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.479843616485596.

Properties batch 2, size 1
Remaining timeout: 294.2118103504181
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.78707314]], device='cuda:0') need to verify.
torch allclose failed: norm 9.684608812676743e-07
Model prediction is: tensor([  0.42052910,   1.15208578,  15.28445053,   9.33135986, -10.66334343,
         -8.63980865, -12.42360306,   5.06098413,   4.88623285,  -4.35745001],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.78707314]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 626
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 133
Node /27 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 780
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 5] 
split level 1: [/input.11, 97] 
split level 2: [/input.11, 9] 
split level 3: [/input.11, 59] 
split level 4: [/input.11, 60] 
split level 5: [/input.7, 596] 
split level 6: [/input.7, 646] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.916854858398438e-05
Time: prepare 0.0146    bound 0.0079    transfer 0.0007    finalize 0.0075    func 0.0310    
Accumulated time: func 0.0310    prepare 0.0152    bound 0.0079    transfer 0.0007    finalize 0.0075    
Length of domains: 0
Time: pickout 0.0007    decision 0.0422    set_bounds 0.0170    solve 0.0310    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0422    set_bounds 0.0170    solve 0.0310    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.09814071655273438


Properties batch 3, size 1
Remaining timeout: 293.96516942977905
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 18.177993774414062.

Properties batch 4, size 1
Remaining timeout: 293.85461711883545
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 12.79946517944336.

Properties batch 5, size 1
Remaining timeout: 293.74871587753296
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 16.995384216308594.

Properties batch 6, size 1
Remaining timeout: 293.642781496048
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.735343933105469.

Properties batch 7, size 1
Remaining timeout: 293.5373649597168
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.343170166015625.

Properties batch 8, size 1
Remaining timeout: 293.43193078041077
##### Instance 198 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.69974136352539.
Result: safe in 6.6736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.027500003576278687, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.27736735, -4.20075083,  4.58688879, 14.41303635, -8.70591640,
          1.20074868, -6.51003361, -3.76832008,  4.74409485, -3.12549520]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 2.46986103, -4.69586515,  4.17922115,  9.50066090, -6.60794973,
          -0.81784827, -5.06077051, -5.29793978,  8.48574066, -2.21722317],
         [ 2.46986103, -4.69586515,  4.17922115,  9.50066090, -6.60794973,
          -0.81784827, -5.06077051, -5.29793978,  8.48574066, -2.21722317]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.03079987, 14.19652557,  5.32143974, 16.10861015, 10.31850910,
          14.56143188, 14.79860115,  1.01492023, 11.71788406]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7448 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/13): BoundParams(name=/13, inputs=[], perturbed=False)
  (/14): BoundParams(name=/14, inputs=[], perturbed=False)
  (/15): BoundParams(name=/15, inputs=[], perturbed=False)
  (/16): BoundParams(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundSub(name=/19, inputs=[/0, /9], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True)
  (/22): BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True)
  (/24): BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
  (/25): BoundFlatten(name=/25, inputs=[/24], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True)
  (/27): BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
  (/28): BoundLinear(name=/28, inputs=[/27, /17, /18], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/10], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/19, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ 1.27736795, -4.20075083,  4.58688879, 14.41303730, -8.70591640,
          1.20074964, -6.51003313, -3.76832151,  4.74409485, -3.12549472]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /11, /12], perturbed=True): [(BoundRelu(name=/22, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/22, /13, /14], perturbed=True): [(BoundRelu(name=/24, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/25, /15, /16], perturbed=True): [(BoundRelu(name=/27, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/22, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/24, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/27, inputs=[/input.11], perturbed=True)
layer /22 using sparse-features alpha with shape [515]; unstable size 515; total size 2704 ([1, 16, 13, 13])
layer /22 start_node /input.7 using sparse-spec alpha [2, 108, 1, 515] with unstable size 107 total_size 800 output_shape (32, 5, 5)
layer /22 start_node /input.11 using sparse-spec alpha [2, 30, 1, 515] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /22 start_node /28 using full alpha [2, 9, 1, 515] with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [107]; unstable size 107; total size 800 ([1, 32, 5, 5])
layer /24 start_node /input.11 using sparse-spec alpha [2, 30, 1, 107] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /24 start_node /28 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
layer /27 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /27 start_node /28 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.21789980,  5.86394978, -4.34462500,  7.40685320, -0.22388792,
          5.90947294,  5.25683308, -4.75971985,  4.05739021]], device='cuda:0') None
best_l after optimization: 22.9124755859375
alpha/beta optimization time: 4.750389337539673
initial alpha-crown bounds: tensor([[-0.79842901,  6.53817415, -3.78306985,  8.14531708,  0.37945461,
          6.57575369,  5.68992043, -4.36650991,  4.53186369]], device='cuda:0')
Worst class: (+ rhs) -4.366509914398193
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 13, 13]), torch.Size([9, 1, 32, 5, 5]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 294.4329113960266
##### Instance 199 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.79842901]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.27736795, -4.20075083,  4.58688879, 14.41303730, -8.70591640,
         1.20074964, -6.51003313, -3.76832151,  4.74409485, -3.12549472],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.79842901]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 515
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 105
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 649
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 65] 
split level 2: [/input.11, 60] 
split level 3: [/input.11, 81] 
split level 4: [/input.11, 30] 
split level 5: [/input.11, 25] 
split level 6: [/input.7, 197] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 8.058547973632812e-05
Time: prepare 0.0145    bound 0.0082    transfer 0.0007    finalize 0.0074    func 0.0310    
Accumulated time: func 0.0310    prepare 0.0151    bound 0.0082    transfer 0.0007    finalize 0.0074    
Length of domains: 0
Time: pickout 0.0006    decision 0.0422    set_bounds 0.0169    solve 0.0311    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0422    set_bounds 0.0169    solve 0.0311    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0984029769897461


Properties batch 1, size 1
Remaining timeout: 294.1794419288635
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.538174152374268.

Properties batch 2, size 1
Remaining timeout: 294.0687928199768
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.78306985]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.27736795, -4.20075083,  4.58688879, 14.41303730, -8.70591640,
         1.20074964, -6.51003313, -3.76832151,  4.74409485, -3.12549472],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.78306985]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 515
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 105
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 649
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 63] 
split level 1: [/input.11, 14] 
split level 2: [/input.11, 50] 
split level 3: [/input.11, 25] 
split level 4: [/input.11, 81] 
split level 5: [/input.11, 30] 
split level 6: [/input.11, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 128 = 0.921875
pruning-in-iteration extra time: 0.013257265090942383
Time: prepare 0.0076    bound 0.4574    transfer 0.0013    finalize 0.0075    func 0.4740    
Accumulated time: func 0.4740    prepare 0.0082    bound 0.4574    transfer 0.0013    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-0.63449 (7), -0.61850 (7), -0.44839 (7), -0.38924 (7), -0.22225 (7), -0.18867 (7), -0.13835 (7), -0.13366 (7), -0.06637 (7), -0.04200 (7), 
Length of domains: 10
Time: pickout 0.0007    decision 0.0421    set_bounds 0.0158    solve 0.4741    add 0.0017    
Accumulated time: pickout 0.0007    decision 0.0421    set_bounds 0.0158    solve 0.4741    add 0.0017    
Current (lb-rhs): -0.6344903707504272
10 domains visited
Cumulative time: 0.5420379638671875

BaB round 2
batch: 10
splitting decisions: 
split level 0: [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] [/input.7, 198] 
split level 1: [/input.11, 65] [/input.11, 65] [/input.11, 32] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 65] [/input.11, 32] [/input.11, 65] 
split level 2: [/input.11, 32] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.11, 32] [/input.11, 32] [/input.11, 32] [/input.7, 238] [/input.7, 238] [/input.7, 238] 
split level 3: [/input.7, 238] [/input.11, 32] [/input.7, 197] [/input.11, 32] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.11, 32] [/input.7, 197] [/input.11, 32] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 160 / 160 = 1.0
pruning-in-iteration extra time: 7.891654968261719e-05
Time: prepare 0.0221    bound 0.0081    transfer 0.0008    finalize 0.0098    func 0.0408    
Accumulated time: func 0.5148    prepare 0.0308    bound 0.4655    transfer 0.0021    finalize 0.0173    
Length of domains: 0
Time: pickout 0.0011    decision 0.0315    set_bounds 0.0158    solve 0.0409    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0737    set_bounds 0.0317    solve 0.5150    add 0.0018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 0.6327934265136719


Properties batch 3, size 1
Remaining timeout: 293.289936542511
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.145317077636719.

Properties batch 4, size 1
Remaining timeout: 293.17848944664
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3794546127319336.

Properties batch 5, size 1
Remaining timeout: 293.0722162723541
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.575753688812256.

Properties batch 6, size 1
Remaining timeout: 292.9667909145355
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.689920425415039.

Properties batch 7, size 1
Remaining timeout: 292.8613398075104
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.36650991]], device='cuda:0') need to verify.
torch allclose failed: norm 4.500051886680012e-07
Model prediction is: tensor([ 1.27736795, -4.20075083,  4.58688879, 14.41303730, -8.70591640,
         1.20074964, -6.51003313, -3.76832151,  4.74409485, -3.12549472],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /22 start_node /28 with alignment adjustment
setting alpha for layer /24 start_node /28 with alignment adjustment
setting alpha for layer /27 start_node /28 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 13, 13]), torch.Size([1, 1, 32, 5, 5]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.36650991]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/28
Keeping alphas for these layers: ['/28']
Keeping alphas for these layers: ['/28']
Node /22 input 0: size torch.Size([16, 13, 13]) unstable 515
Node /24 input 0: size torch.Size([32, 5, 5]) unstable 105
Node /27 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 649
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.11, 65] 
split level 1: [/input.11, 30] 
split level 2: [/input.11, 11] 
split level 3: [/input.11, 50] 
split level 4: [/input.11, 14] 
split level 5: [/input.11, 32] 
split level 6: [/input.11, 25] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 128 = 0.90625
pruning-in-iteration extra time: 0.013059377670288086
Time: prepare 0.0076    bound 0.4421    transfer 0.0012    finalize 0.0075    func 0.4584    
Accumulated time: func 0.4584    prepare 0.0082    bound 0.4421    transfer 0.0012    finalize 0.0075    
Current worst splitting domains lb-rhs (depth):
-1.63447 (7), -1.45704 (7), -1.39275 (7), -1.25770 (7), -1.17181 (7), -0.85377 (7), -0.46448 (7), -0.21897 (7), -0.09776 (7), -0.07447 (7), -0.03094 (7), -0.01163 (7), 
Length of domains: 12
Time: pickout 0.0006    decision 0.0421    set_bounds 0.0158    solve 0.4585    add 0.0016    
Accumulated time: pickout 0.0006    decision 0.0421    set_bounds 0.0158    solve 0.4585    add 0.0016    
Current (lb-rhs): -1.6344702243804932
12 domains visited
Cumulative time: 0.5260653495788574

BaB round 2
batch: 12
splitting decisions: 
split level 0: [/input.11, 5] [/input.11, 37] [/input.11, 5] [/input.11, 81] [/input.11, 81] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 5] [/input.11, 81] 
split level 1: [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.7, 311] [/input.11, 37] [/input.11, 37] [/input.11, 81] [/input.11, 81] [/input.11, 81] [/input.11, 37] 
split level 2: [/input.11, 37] [/input.7, 311] [/input.7, 238] [/input.11, 37] [/input.7, 187] [/input.11, 81] [/input.11, 37] [/input.11, 37] [/input.7, 238] [/input.7, 238] 
split level 3: [/input.7, 238] [/input.7, 238] [/input.11, 37] [/input.7, 187] [/input.7, 312] [/input.7, 238] [/input.7, 238] [/input.7, 238] [/input.11, 37] [/input.7, 187] 
pruning_in_iteration open status: True
ratio of positive domain = 162 / 192 = 0.84375
pruning-in-iteration extra time: 0.011595726013183594
Time: prepare 0.0261    bound 0.4637    transfer 0.0014    finalize 0.0129    func 0.5043    
Accumulated time: func 0.9627    prepare 0.0348    bound 0.9058    transfer 0.0025    finalize 0.0204    
Current worst splitting domains lb-rhs (depth):
-0.88191 (11), -0.67580 (11), -0.59264 (11), -0.59086 (11), -0.57235 (11), -0.51548 (11), -0.46857 (11), -0.45955 (11), -0.39977 (11), -0.39373 (11), -0.35799 (11), -0.35046 (11), -0.33754 (11), -0.33538 (11), -0.30721 (11), -0.25285 (11), -0.18156 (11), -0.15577 (11), -0.14266 (11), -0.12557 (11), 
Length of domains: 30
Time: pickout 0.0013    decision 0.0317    set_bounds 0.0186    solve 0.5044    add 0.0019    
Accumulated time: pickout 0.0019    decision 0.0738    set_bounds 0.0344    solve 0.9629    add 0.0036    
Current (lb-rhs): -0.8819088935852051
42 domains visited
Cumulative time: 1.08620023727417

BaB round 3
batch: 30
splitting decisions: 
split level 0: [/input.11, 52] [/input.7, 417] [/input.7, 311] [/input.7, 417] [/input.7, 311] [/input.7, 311] [/input.7, 311] [/input.7, 311] [/input.7, 417] [/input.7, 311] 
split level 1: [/input.7, 311] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.11, 52] [/input.7, 311] [/input.11, 52] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 120 = 0.875
pruning-in-iteration extra time: 0.011903524398803711
Time: prepare 0.0165    bound 0.4306    transfer 0.0010    finalize 0.0084    func 0.4566    
Accumulated time: func 1.4193    prepare 0.0516    bound 1.3364    transfer 0.0036    finalize 0.0288    
Current worst splitting domains lb-rhs (depth):
-0.64183 (13), -0.38867 (13), -0.34651 (13), -0.30515 (13), -0.29391 (13), -0.22306 (13), -0.21282 (13), -0.19246 (13), -0.18113 (13), -0.09992 (13), -0.08732 (13), -0.04676 (13), -0.04662 (13), -0.04300 (13), -0.01427 (13), 
Length of domains: 15
Time: pickout 0.0010    decision 0.0260    set_bounds 0.0096    solve 0.4567    add 0.0019    
Accumulated time: pickout 0.0029    decision 0.0999    set_bounds 0.0440    solve 1.4196    add 0.0054    
Current (lb-rhs): -0.6418312788009644
57 domains visited
Cumulative time: 1.5834319591522217

BaB round 4
batch: 15
splitting decisions: 
split level 0: [/input.7, 307] [/input.7, 417] [/input.7, 417] [/input.7, 417] [/input.7, 307] [/input.7, 417] [/input.7, 417] [/input.7, 307] [/input.7, 417] [/input.7, 417] 
split level 1: [/input.7, 311] [/input.7, 187] [/input.7, 307] [/input.7, 187] [/input.11, 52] [/input.7, 187] [/input.7, 307] [/input.7, 311] [/input.7, 187] [/input.7, 187] 
split level 2: [/input.7, 187] [/input.7, 312] [/input.7, 187] [/input.7, 312] [/input.7, 187] [/input.7, 312] [/input.7, 187] [/input.7, 187] [/input.7, 312] [/input.7, 312] 
pruning_in_iteration open status: True
ratio of positive domain = 118 / 120 = 0.9833333333333333
pruning-in-iteration extra time: 0.013206005096435547
Time: prepare 0.0158    bound 0.4468    transfer 0.0011    finalize 0.0085    func 0.4723    
Accumulated time: func 1.8916    prepare 0.0677    bound 1.7832    transfer 0.0047    finalize 0.0373    
Current worst splitting domains lb-rhs (depth):
-0.21572 (16), -0.19966 (16), 
Length of domains: 2
Time: pickout 0.0014    decision 0.0255    set_bounds 0.0100    solve 0.4724    add 0.0012    
Accumulated time: pickout 0.0043    decision 0.1254    set_bounds 0.0540    solve 1.8920    add 0.0066    
Current (lb-rhs): -0.2157226800918579
59 domains visited
Cumulative time: 2.0951478481292725

BaB round 5
batch: 2
splitting decisions: 
split level 0: [/input.11, 63] [/input.11, 63] 
split level 1: [/input.7, 421] [/input.7, 421] 
split level 2: [/input.7, 197] [/input.7, 197] 
split level 3: [/input.11, 92] [/input.11, 92] 
split level 4: [/input.7, 407] [/input.7, 407] 
split level 5: [/input.7, 312] [/input.7, 312] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0169    bound 0.0078    transfer 0.0007    finalize 0.0074    func 0.0328    
Accumulated time: func 1.9244    prepare 0.0852    bound 1.7909    transfer 0.0053    finalize 0.0447    
Length of domains: 0
Time: pickout 0.0014    decision 0.0407    set_bounds 0.0181    solve 0.0329    add 0.0001    
Accumulated time: pickout 0.0056    decision 0.1660    set_bounds 0.0721    solve 1.9248    add 0.0067    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
59 domains visited
Cumulative time: 2.189127206802368


Properties batch 8, size 1
Remaining timeout: 290.52408242225647
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.531863689422607.
Result: safe in 9.5884 seconds
############# Summary #############
Final verified acc: 81.5% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 163 , total falsified (unsafe/sat): 36 , timeout: 1
mean time for ALL instances (total 200):6.098252529169023, max time: 301.35836601257324
mean time for verified SAFE instances(total 163): 5.629917895135704, max time: 108.49936127662659
mean time for verified (SAFE + UNSAFE) instances (total 199): 4.614533672380687, max time: [6.2625555992126465, 4.727328300476074, 0.45755577087402344, 18.172311305999756, 0.4476630687713623, 8.748187065124512, 0.4482569694519043, 7.661608934402466, 0.5957915782928467, 0.42815661430358887, 9.29945182800293, 0.30070924758911133, 3.8614659309387207, 6.829376935958862, 3.846515655517578, 0.4327354431152344, 0.6368076801300049, 6.725721120834351, 0.9933028221130371, 0.6284539699554443, 6.0978100299835205, 0.6282057762145996, 1.0731263160705566, 0.6189441680908203, 0.6394565105438232, 6.158036708831787, 6.023385524749756, 0.6320343017578125, 0.6436457633972168, 8.30710220336914, 6.100771188735962, 5.655340671539307, 1.0280978679656982, 6.563562870025635, 6.044232606887817, 7.38310980796814, 9.972959756851196, 6.04325795173645, 6.13721776008606, 0.9027578830718994, 6.116946458816528, 11.433198690414429, 6.193679571151733, 5.97480034828186, 0.623481273651123, 0.6205401420593262, 7.15041446685791, 16.30448317527771, 0.646780252456665, 6.167924642562866, 0.6659440994262695, 108.49936127662659, 0.743823766708374, 0.7257022857666016, 0.7375166416168213, 0.7347326278686523, 0.7276480197906494, 6.367074966430664, 0.7189435958862305, 0.7341678142547607, 6.298825025558472, 7.7053749561309814, 0.7325732707977295, 6.425943374633789, 1.0801618099212646, 0.7330071926116943, 6.241791486740112, 8.606242895126343, 1.2487132549285889, 0.7328133583068848, 6.9072253704071045, 0.7478172779083252, 6.942610502243042, 1.2241201400756836, 0.7287688255310059, 6.292597532272339, 6.870580434799194, 10.770645141601562, 6.399701833724976, 8.770005464553833, 6.423464059829712, 45.960541009902954, 0.753089189529419, 6.440845251083374, 0.7618408203125, 7.2919676303863525, 6.78797721862793, 6.550685405731201, 10.956807613372803, 6.644985198974609, 7.024856328964233, 10.103686094284058, 6.510661602020264, 7.183926820755005, 0.7825586795806885, 0.7756156921386719, 1.2031354904174805, 1.1182739734649658, 6.4912803173065186, 0.7726259231567383, 0.9292137622833252, 0.7638649940490723, 0.7803223133087158, 0.7678530216217041, 0.7565655708312988, 0.7744667530059814, 0.7753469944000244, 0.7640585899353027, 6.98414158821106, 0.7869360446929932, 6.458776473999023, 0.782616376876831, 0.7608036994934082, 14.368641376495361, 0.7629086971282959, 6.25540828704834, 0.7781922817230225, 6.114104747772217, 0.7689526081085205, 6.336710691452026, 0.7677750587463379, 0.9556918144226074, 6.281865835189819, 6.490800142288208, 8.703723430633545, 0.763390064239502, 0.7599091529846191, 0.8364086151123047, 6.527422904968262, 13.578235626220703, 25.90150213241577, 6.498966217041016, 0.77229905128479, 0.7577698230743408, 6.562903165817261, 0.9238860607147217, 10.991891860961914, 9.387677431106567, 0.7723710536956787, 6.519068241119385, 10.25931429862976, 46.30476236343384, 6.727716684341431, 6.575592756271362, 12.856091022491455, 0.804950475692749, 22.30011534690857, 0.8149271011352539, 0.8101325035095215, 1.0229475498199463, 0.8092951774597168, 1.125744342803955, 0.8084125518798828, 6.555461168289185, 6.542590379714966, 7.50333833694458, 0.8872954845428467, 1.0863194465637207, 0.8229126930236816, 0.8150405883789062, 7.715643405914307, 6.673644065856934, 9.588407516479492]
mean time for verified SAFE + TIMEOUT instances (total 164): 7.433140139754226, max time: [301.35836601257324] 
mean time for verified UNSAFE instances (total 36): 0.01709955268436008, max time: 0.025404691696166992
safe-incomplete (total 80), index: [0, 1, 2, 4, 9, 12, 13, 16, 22, 24, 26, 27, 29, 30, 31, 33, 36, 38, 42, 50, 55, 56, 59, 63, 66, 67, 68, 69, 70, 73, 74, 78, 80, 81, 84, 85, 87, 89, 90, 100, 102, 113, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 140, 142, 144, 146, 147, 153, 154, 155, 161, 162, 164, 167, 177, 179, 180, 181, 182, 185, 187, 191, 193, 195, 196]
safe (total 83), index: [3, 6, 11, 15, 18, 20, 21, 25, 28, 34, 35, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 62, 65, 71, 75, 76, 79, 82, 83, 86, 88, 92, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 133, 135, 139, 141, 143, 145, 149, 151, 152, 156, 157, 158, 160, 163, 165, 166, 168, 169, 171, 173, 175, 176, 178, 188, 189, 190, 197, 198, 199]
unsafe-pgd (total 36), index: [5, 7, 8, 10, 14, 17, 19, 32, 37, 44, 60, 61, 64, 72, 77, 91, 94, 103, 114, 115, 117, 118, 120, 124, 138, 148, 150, 159, 170, 172, 174, 183, 184, 186, 192, 194]
unknown (total 1), index: [23]
Result dict saved to out.pkl.
