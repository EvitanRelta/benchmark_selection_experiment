/home/shauntan/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/layer.py:29: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /opt/conda/conda-bld/pytorch_1708025845868/work/torch/csrc/utils/tensor_numpy.cpp:206.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/shauntan/miniconda3/envs/alpha-beta-crown/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: out.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: /home/shauntan/benchmark_selection_experiment/models/cifar10/convBigRELU__DiffAI.onnx
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 200
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_ERAN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1024
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 300
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 100
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Sun Jun  2 23:03:09 2024 on peacock
Loading onnx /home/shauntan/benchmark_selection_experiment/models/cifar10/convBigRELU__DiffAI.onnx wih quirks {}
ConvertModel(
  (Constant_15): Constant(
    constant=tensor([[[[0.49140000]],
    
             [[0.48220003]],
    
             [[0.44650000]]]])
  )
  (Sub_16): sub()
  (Constant_17): Constant(
    constant=tensor([[[[0.20230001]],
    
             [[0.19940001]],
    
             [[0.20100001]]]])
  )
  (Div_18): Div()
  (Conv_19): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (Relu_20): ReLU(inplace=True)
  (Conv_21): Conv2d(32, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_22): ReLU(inplace=True)
  (Conv_23): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (Relu_24): ReLU(inplace=True)
  (Conv_25): Conv2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_26): ReLU(inplace=True)
  (Flatten_27): Flatten()
  (Gemm_28): Linear(in_features=4096, out_features=512, bias=True)
  (Relu_29): ReLU(inplace=True)
  (Gemm_30): Linear(in_features=512, out_features=512, bias=True)
  (Relu_31): ReLU(inplace=True)
  (Gemm_output): Linear(in_features=512, out_features=10, bias=True)
)
Parameters:
  Conv_19.weight: shape torch.Size([32, 3, 3, 3])
  Conv_19.bias: shape torch.Size([32])
  Conv_21.weight: shape torch.Size([32, 32, 4, 4])
  Conv_21.bias: shape torch.Size([32])
  Conv_23.weight: shape torch.Size([64, 32, 3, 3])
  Conv_23.bias: shape torch.Size([64])
  Conv_25.weight: shape torch.Size([64, 64, 4, 4])
  Conv_25.bias: shape torch.Size([64])
  Gemm_28.weight: shape torch.Size([512, 4096])
  Gemm_28.bias: shape torch.Size([512])
  Gemm_30.weight: shape torch.Size([512, 512])
  Gemm_30.bias: shape torch.Size([512])
  Gemm_output.weight: shape torch.Size([10, 512])
/home/shauntan/alpha-beta-CROWN/complete_verifier/data_utils.py:262: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp / std).reshape(1, -1, 1, 1)
  Gemm_output.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([1000, 3, 32, 32]) torch.Size([1000]) torch.Size([1000])
X range: tensor(2.75373125) tensor(-2.42906570) tensor(0.02368872)
Note runnerup label is empty here!
############################
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.30948567,  -8.08446884, -15.48118019,  -2.45509148, -14.83467865,
          -7.10844803, -11.59389496, -15.31579208, -18.58116531,  -8.26577282]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.30948615,  -8.08446884, -15.48117828,  -2.45509171, -14.83467865,
           -7.10844898, -11.59389496, -15.31579018, -18.58116722,  -8.26577282],
         [ -3.30948615,  -8.08446884, -15.48117828,  -2.45509171, -14.83467865,
           -7.10844898, -11.59389496, -15.31579018, -18.58116722,  -8.26577282]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-15.27168083, -10.49669838,  -3.09998894, -16.12607574,  -3.74648857,
          -11.47271824,  -6.98727226,  -3.26537704, -10.31539440]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 4.6410 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.72469521,  -3.03580236, -10.73299026,  -2.32684994,  -1.34700716,
          -8.55060005,  -8.32261372,  -7.41082191, -18.42527771, -13.93427753]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.72469425,  -3.03580308, -10.73299026,  -2.32684922,  -1.34700668,
           -8.55059910,  -8.32261467,  -7.41082191, -18.42527580, -13.93427753],
         [ -8.72469425,  -3.03580308, -10.73299026,  -2.32684922,  -1.34700668,
           -8.55059910,  -8.32261467,  -7.41082191, -18.42527580, -13.93427753]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -9.70058155, -15.38947296,  -7.69228554, -16.09842682, -17.07826996,
           -9.87467670, -10.10266113, -11.01445389,  -4.49099827]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0078 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.38559914, -8.44359207, -6.32280064,  0.74760115, -5.01503754,
         -1.70223808, -7.14907122, -6.84288836, -8.49003029, -4.21670914]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.38559926, -8.44359112, -6.32280064,  0.74760115, -5.01503754,
          -1.70223808, -7.14907169, -6.84288836, -8.49003029, -4.21670818],
         [-0.38559926, -8.44359112, -6.32280064,  0.74760115, -5.01503754,
          -1.70223808, -7.14907169, -6.84288836, -8.49003029, -4.21670818]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.05799198,  5.93720150, -1.13320041,  4.62943840,  1.31663883,
           6.76347256,  6.45728922,  8.10443115,  3.83110905]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.96694374,  1.18914330, -3.51958251, -3.65391064, -3.74453330,
         -4.66259813, -2.44402695, -4.80881119, -1.06546688, -1.89789796]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.96694446,  1.18914294, -3.51958251, -3.65391040, -3.74453306,
          -4.66259813, -2.44402719, -4.80881071, -1.06546712, -1.89789784],
         [-2.96694446,  1.18914294, -3.51958251, -3.65391040, -3.74453306,
          -4.66259813, -2.44402719, -4.80881071, -1.06546712, -1.89789784]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.52291727, -3.63317013,  1.07555532,  1.20988321,  1.30050588,
           2.21857095,  2.36478353, -1.37856007, -0.54612935]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.79768181,  -7.38482237,  -5.37811804,  -0.97531784,  -3.55508685,
          -3.41478467,   0.24428509,  -8.79881287, -21.18390083,  -9.33609867]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.92s/it]100%|██████████| 1/1 [00:01<00:00,  1.93s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.01186323,  -8.06112003,  -4.63350868,  -0.44279388,  -4.14292192,
           -3.09712625,  -1.34084320,  -9.28891277, -19.34805298,  -9.28520298],
         [ -7.01186323,  -8.06112003,  -4.63350868,  -0.44279388,  -4.14292192,
           -3.09712625,  -1.34084320,  -9.28891277, -19.34805298,  -9.28520298]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.67102003,  6.72027683,  3.29266548, -0.89804935,  2.80207872,
           1.75628304,  7.94806957, 18.00720978,  7.94435978]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.9345 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.9357 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.45310974,  -2.58713078,  -8.01641464,  -1.97782290,  -4.99984837,
          -4.09727097,  -6.03108120,  -4.74965000, -29.64273071,  -7.94053173]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.45310974,  -2.58713150,  -8.01641273,  -1.97782230,  -4.99984837,
           -4.09727097,  -6.03108311,  -4.74965000, -29.64273453,  -7.94053173],
         [-16.45310974,  -2.58713150,  -8.01641273,  -1.97782230,  -4.99984837,
           -4.09727097,  -6.03108311,  -4.74965000, -29.64273453,  -7.94053173]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.86597824,  5.42928123, -0.60930920,  2.41271687,  1.51013947,
           3.44395161,  2.16251850, 27.05560303,  5.35340023]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0076 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.68897772,  0.01748947, -6.30595303, -3.08326602, -2.58471036,
         -7.00650644, -5.82019854, -7.21061993, -8.25581837, -6.21546936]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.68897772,  0.01748966, -6.30595398, -3.08326602, -2.58471084,
          -7.00650644, -5.82019854, -7.21062040, -8.25581932, -6.21546888],
         [-5.68897772,  0.01748966, -6.30595398, -3.08326602, -2.58471084,
          -7.00650644, -5.82019854, -7.21062040, -8.25581932, -6.21546888]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.13122082, -5.83768797,  0.48575544, -2.73693252, -3.23548770,
           1.18630791,  1.39042187,  2.43562078,  0.39527035]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.07506526, -0.94889528, -3.10255313, -8.20610237, -2.31861138,
         -6.41063690, -8.28763485, -2.50910115, -0.10575145, -1.55289209]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.07506537, -0.94889516, -3.10255313, -8.20610237, -2.31861138,
          -6.41063690, -8.28763390, -2.50910115, -0.10575161, -1.55289197],
         [ 1.07506537, -0.94889516, -3.10255313, -8.20610237, -2.31861138,
          -6.41063690, -8.28763390, -2.50910115, -0.10575161, -1.55289197]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-9.28116798, -7.25720739, -5.10354900, -5.88749123, -1.79546547,
           0.08153152, -5.69700146, -8.10035038, -6.65321064]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.93520164,   2.78455663, -11.62492371, -14.24659634, -11.34818363,
         -11.18382931,  -8.98070145, -12.35369492, -22.25026512,  -2.25268817]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]
/home/shauntan/alpha-beta-CROWN/complete_verifier/auto_LiRPA/operators/leaf.py:192: UserWarning: The "has_batchdim" option for BoundBuffers is deprecated. It may be removed from the next release.
  warnings.warn('The "has_batchdim" option for BoundBuffers is deprecated.'
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.39690876,   1.20901442, -11.74172592, -11.62965679, -11.78374767,
           -9.81080818,  -8.35326672, -11.80080414, -22.69997978,  -0.99133092],
         [-10.39690876,   1.20901442, -11.74172592, -11.62965679, -11.78374767,
           -9.81080818,  -8.35326672, -11.80080414, -22.69997978,  -0.99133092]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.60592270, 12.95074081, 12.83867073, 12.99276161, 11.01982307,
           9.56228065, 13.00981903, 23.90899467,  2.20034528]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5850 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -8.93520164,   2.78455710, -11.62492371, -14.24659920, -11.34818459,
         -11.18383121,  -8.98069859, -12.35369682, -22.25026512,  -2.25268793]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2807]; unstable size 2807; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.15 using sparse-spec alpha [2, 22, 1, 2807] with unstable size 21 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 38, 1, 2807] with unstable size 37 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 159, 1, 2807] with unstable size 158 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2807] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.15 using sparse-spec alpha [2, 22, 1, 0] with unstable size 21 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 38, 1, 0] with unstable size 37 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 159, 1, 0] with unstable size 158 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 22, 1, 0] with unstable size 21 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 38, 1, 0] with unstable size 37 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 159, 1, 0] with unstable size 158 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [21]; unstable size 21; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 38, 1, 21] with unstable size 37 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 159, 1, 21] with unstable size 158 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [37]; unstable size 37; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 159, 1, 37] with unstable size 158 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [158]; unstable size 158; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 158] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.35940513,  5.29001331,  6.29641867,  4.75546360,  3.65677571,
          3.07961869,  6.71511841, 15.54908085, -2.33883548]], device='cuda:0') None

all verified at 13th iter
best_l after optimization: 55.17540740966797
alpha/beta optimization time: 5.6064088344573975
initial alpha-crown bounds: tensor([[ 1.37012196,  6.64977741,  7.42075920,  5.87078381,  5.46316767,
          4.02808905,  7.83013725, 16.57554626, -0.03297544]], device='cuda:0')
Worst class: (+ rhs) -0.03297543525695801
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 32, 32]), torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 64, 16, 16]), torch.Size([9, 1, 64, 8, 8]), torch.Size([9, 1, 512]), torch.Size([9, 1, 512])]

Properties batch 0, size 1
Remaining timeout: 291.644006729126
##### Instance 8 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.370121955871582.

Properties batch 1, size 1
Remaining timeout: 291.50777673721313
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.649777412414551.

Properties batch 2, size 1
Remaining timeout: 291.4017822742462
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.420759201049805.

Properties batch 3, size 1
Remaining timeout: 291.2975912094116
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.870783805847168.

Properties batch 4, size 1
Remaining timeout: 291.1931269168854
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.463167667388916.

Properties batch 5, size 1
Remaining timeout: 291.08860182762146
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.0280890464782715.

Properties batch 6, size 1
Remaining timeout: 290.9840123653412
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.830137252807617.

Properties batch 7, size 1
Remaining timeout: 290.879492521286
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 16.575546264648438.

Properties batch 8, size 1
Remaining timeout: 290.7752470970154
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03297544]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.93520164,   2.78455710, -11.62492371, -14.24659920, -11.34818459,
        -11.18383121,  -8.98069859, -12.35369682, -22.25026512,  -2.25268793],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03297544]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2807
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 20
Node /43 input 0: size torch.Size([512]) unstable 34
Node /45 input 0: size torch.Size([512]) unstable 153
-----------------
# of unstable neurons: 3014
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 210] 
split level 1: [/input.19, 449] 
split level 2: [/input.23, 273] 
split level 3: [/input.19, 392] 
split level 4: [/input.23, 203] 
split level 5: [/input.19, 465] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010132789611816406
Time: prepare 0.0104    bound 0.0203    transfer 0.0041    finalize 0.0280    func 0.0628    
Accumulated time: func 0.0628    prepare 0.0112    bound 0.0203    transfer 0.0041    finalize 0.0280    
Length of domains: 0
Time: pickout 0.0016    decision 0.3436    set_bounds 0.0136    solve 0.0630    add 0.0002    
Accumulated time: pickout 0.0016    decision 0.3436    set_bounds 0.0136    solve 0.0630    add 0.0002    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7737090587615967

Result: safe in 10.1895 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.85872030, -1.29417288, -1.25137126, -3.79059625, -2.54274774,
         -2.66625261, -6.83668518, -0.40446356, -3.33843946, -0.13452032]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.85872090, -1.29417276, -1.25137103, -3.79059601, -2.54274774,
          -2.66625285, -6.83668518, -0.40446362, -3.33843994, -0.13452044],
         [-1.85872090, -1.29417276, -1.25137103, -3.79059601, -2.54274774,
          -2.66625285, -6.83668518, -0.40446362, -3.33843994, -0.13452044]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.56454813, -0.60734987,  1.93187511,  0.68402684,  0.80753195,
           4.97796440, -1.45425725,  1.47971904, -1.72420049]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0082 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.20968628,  -4.91927862, -17.61794090,  -7.98808289,  -1.12596166,
         -10.83587360, -15.59378624,  -7.45901966, -29.21590805, -21.26879311]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.20968628,  -4.91927767, -17.61793900,  -7.98808289,  -1.12596178,
          -10.83587360, -15.59378815,  -7.45901918, -29.21590805, -21.26879311],
         [-20.20968628,  -4.91927767, -17.61793900,  -7.98808289,  -1.12596178,
          -10.83587360, -15.59378815,  -7.45901918, -29.21590805, -21.26879311]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -1.05910683, -16.34951591,  -3.65085411, -13.28071022, -20.14283180,
          -10.43291950,  -5.67500496, -13.80977440,   7.94711494]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.73858690,   0.61332309,  -5.07988548,  -7.09645939,  -2.94507909,
          -5.27295828,  -4.49401712,  -0.84553659, -10.40112209,  -2.49084330]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.73858643,   0.61332285,  -5.07988596,  -7.09645939,  -2.94507909,
           -5.27295828,  -4.49401665,  -0.84553659, -10.40112305,  -2.49084330],
         [ -6.73858643,   0.61332285,  -5.07988596,  -7.09645939,  -2.94507909,
           -5.27295828,  -4.49401665,  -0.84553659, -10.40112305,  -2.49084330]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.46562815, -5.88628101, -0.19307232,  1.82350111, -2.32787919,
          -0.77894163, -4.42742157,  5.12816477, -2.78211498]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.38069725,  -7.74597549,  -7.14567471,  -0.70709842,  -5.99246502,
          -3.88262844,  -6.19274712, -11.67460823, -22.59192276, -13.59028244]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.38069725,  -7.74597549,  -7.14567327,  -0.70709980,  -5.99246502,
           -3.88262963,  -6.19274807, -11.67460728, -22.59192467, -13.59028244],
         [ -4.38069725,  -7.74597549,  -7.14567327,  -0.70709980,  -5.99246502,
           -3.88262963,  -6.19274807, -11.67460728, -22.59192467, -13.59028244]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -7.29391003,  -3.92863178,  -4.52893400, -10.96750736,  -5.68214226,
           -7.79197788,  -5.48185921,  10.91731739,   1.91567516]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.34332085,  -4.98022127, -11.64415836,  -1.65791440,  -7.10677147,
          -7.58757591,  -6.47279024,  -3.52544618, -36.82573700,  -7.79220629]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.34332085,  -4.98022270, -11.64415836,  -1.65791476,  -7.10677052,
           -7.58757639,  -6.47278929,  -3.52544546, -36.82573700,  -7.79220724],
         [-18.34332085,  -4.98022270, -11.64415836,  -1.65791476,  -7.10677052,
           -7.58757639,  -6.47278929,  -3.52544546, -36.82573700,  -7.79220724]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.55111313, -2.81198454,  3.85195112, -6.13429260, -0.68543673,
          -0.20463085, -1.31941795, -4.26676178, 29.03352928]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.18602276,  -5.68739319,  -5.72902107,  -0.93757683,  -2.71814561,
          -3.48675108,   0.80269432,  -4.64051104, -17.22216988,  -6.37792921]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.18602371,  -5.68739462,  -5.72902155,  -0.93757701,  -2.71814561,
           -3.48675108,   0.80269480,  -4.64051104, -17.22216988,  -6.37793016],
         [-12.18602371,  -5.68739462,  -5.72902155,  -0.93757701,  -2.71814561,
           -3.48675108,   0.80269480,  -4.64051104, -17.22216988,  -6.37793016]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -5.03614616, -11.53477478, -11.49314880, -16.28459358, -14.50402451,
          -13.73541832, -18.02486420, -12.58165932, -10.84424019]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.17955303,   0.96126491, -14.92843056, -12.05532837, -10.45319462,
         -10.61363697, -16.69555855, -15.83756924, -11.59370327,   0.78615355]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.17955208,   0.96126497, -14.92843151, -12.05532742, -10.45319462,
          -10.61363697, -16.69555855, -15.83756924, -11.59370136,   0.78615403],
         [ -8.17955208,   0.96126497, -14.92843151, -12.05532742, -10.45319462,
          -10.61363697, -16.69555855, -15.83756924, -11.59370136,   0.78615403]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -2.43408489, -11.57490158,   4.31479454,   1.44169044,  -0.16044235,
            6.08192158,   5.22393227,   0.98006439, -11.39979076]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.45151138,  -4.87714148, -10.63527107,  -1.53210640,  -6.60106134,
          -7.21269846,  -8.36449242,  -2.45493555, -20.64388084,  -0.58929121]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.45151138,  -4.87714243, -10.63527203,  -1.53210568,  -6.60106134,
           -7.21269846,  -8.36449146,  -2.45493603, -20.64387703,  -0.58929133],
         [ -6.45151138,  -4.87714243, -10.63527203,  -1.53210568,  -6.60106134,
           -7.21269846,  -8.36449146,  -2.45493603, -20.64387703,  -0.58929133]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.99657536,  2.42220640,  8.18033600, -0.92283034,  4.14612532,
           4.75776243,  5.90955544, 18.18894196, -1.86564469]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  3.02171254,  -2.44376922, -21.05981255, -16.83970642, -16.54294014,
         -19.23467445, -20.47052574, -22.51541519, -34.85864258, -13.53490448]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  3.02171254,  -2.44376683, -21.05981255, -16.83970833, -16.54294395,
          -19.23467445, -20.47052574, -22.51541328, -34.85863876, -13.53490543],
         [  3.02171254,  -2.44376683, -21.05981255, -16.83970833, -16.54294395,
          -19.23467445, -20.47052574, -22.51541328, -34.85863876, -13.53490543]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-37.88035202, -32.41487122, -13.79882622, -18.01893044, -18.31569481,
          -15.62396431, -14.38811302, -12.34322548, -21.32373428]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.71741009,  0.42688528, -6.50197077, -5.35297108, -6.21134567,
         -5.92467070, -4.51795578, -5.57024860, -8.30566120, -0.64904708]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.71741152,  0.42688453, -6.50197077, -5.35296965, -6.21134567,
          -5.92467022, -4.51795626, -5.57024908, -8.30566120, -0.64904720],
         [-7.71741152,  0.42688453, -6.50197077, -5.35296965, -6.21134567,
          -5.92467022, -4.51795626, -5.57024908, -8.30566120, -0.64904720]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.19945526, -4.94484091,  1.98401451,  0.83501339,  1.69338942,
           1.40671396,  1.05229282,  3.78770494, -3.86890912]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.58126450,  -6.04944181, -14.31617737,  -2.63038588, -14.66031456,
         -10.68805790, -13.14447308,  -8.85069180, -38.10593414, -10.40509033]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.58126545,  -6.04944134, -14.31617832,  -2.63038516, -14.66031265,
          -10.68805885, -13.14447308,  -8.85068989, -38.10593033, -10.40508938],
         [-15.58126545,  -6.04944134, -14.31617832,  -2.63038516, -14.66031265,
          -10.68805885, -13.14447308,  -8.85068989, -38.10593033, -10.40508938]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.73057556, -2.80124855,  5.46548843, -6.22030449,  5.80962276,
           1.83736897,  4.29378319, 29.25524139,  1.55439949]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.07334352,  -0.81474906, -14.68257046, -12.80528545, -12.14857006,
         -25.93429756, -19.49551201, -11.73953152,  -9.79153442,  -1.01459992]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.07334280,  -0.81474882, -14.68256950, -12.80528545, -12.14856911,
          -25.93429947, -19.49551392, -11.73953056,  -9.79153252,  -1.01459944],
         [ -3.07334280,  -0.81474882, -14.68256950, -12.80528545, -12.14856911,
          -25.93429947, -19.49551392, -11.73953056,  -9.79153252,  -1.01459944]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.25859404, 11.60922623,  9.73194313,  9.07522583, 22.86095619,
          16.42217064,  8.66618729,  6.71818972, -2.05874348]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.91856718,  -1.66708827,  -8.58871174,  -5.66811943,  -4.92266941,
          -9.74232674,  -6.36302233,  -7.63328171, -17.07206917, -10.11817455]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.91856718,  -1.66708779,  -8.58871269,  -5.66811991,  -4.92266941,
           -9.74232674,  -6.36302137,  -7.63328266, -17.07206726, -10.11817455],
         [ -6.91856718,  -1.66708779,  -8.58871269,  -5.66811991,  -4.92266941,
           -9.74232674,  -6.36302137,  -7.63328266, -17.07206726, -10.11817455]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.99589777, -3.25558162,  3.66604328,  0.74545050,  4.81965733,
           1.44035196,  2.71061325, 12.14939785,  5.19550514]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.35785103,   0.72019821, -16.88257980,  -5.65372086, -13.89839077,
         -11.75957870,  -9.21970654,  -8.71369362, -34.68380356,   0.27438870]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.35785484,   0.72019571, -16.88257980,  -5.65371609, -13.89839077,
          -11.75957680,  -9.21970558,  -8.71369362, -34.68380356,   0.27438873],
         [-24.35785484,   0.72019571, -16.88257980,  -5.65371609, -13.89839077,
          -11.75957680,  -9.21970558,  -8.71369362, -34.68380356,   0.27438873]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[24.63224411, -0.44580698, 17.15696907,  5.92810488, 14.17277908,
          12.03396511,  9.49409389,  8.98808193, 34.95819092]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.34473419,  -7.90175104, -13.25681210,  -2.40148139,  -8.43900585,
          -5.50938177,  -7.09372568, -13.68079185, -20.97990990,  -8.95618439]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.34473372,  -7.90175200, -13.25681210,  -2.40148234,  -8.43900585,
           -5.50938177,  -7.09372473, -13.68079185, -20.97991180,  -8.95618534],
         [ -6.34473372,  -7.90175200, -13.25681210,  -2.40148234,  -8.43900585,
           -5.50938177,  -7.09372473, -13.68079185, -20.97991180,  -8.95618534]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.83535194,  2.39237022,  7.74743032, -3.10789943,  2.92962408,
           1.58434296,  8.17140961, 15.47052956,  3.44680357]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.09115791,  -2.76672888,  -9.93733406,  -1.54181778,  -5.74944878,
          -5.65823269,  -1.51183438,  -9.33558941, -21.67774773,  -5.43632507]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.09115982,  -2.76672912,  -9.93733311,  -1.54181826,  -5.74944782,
           -5.65823364,  -1.51183474,  -9.33558846, -21.67775154,  -5.43632650],
         [-11.09115982,  -2.76672912,  -9.93733311,  -1.54181826,  -5.74944782,
           -5.65823364,  -1.51183474,  -9.33558846, -21.67775154,  -5.43632650]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.15382671, -7.17060375, -8.39551449, -4.18788528, -4.27909946,
          -8.42549801, -0.60174465, 11.74041843, -4.50100660]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.49400425,  -3.42927742,  -6.97186136,  -3.34735036,  -6.69634342,
          -9.33261013, -12.53682613,  -8.06637955,  -9.51908302,  -6.65721464]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.49400187,  -3.42927718,  -6.97186089,  -3.34735131,  -6.69634295,
           -9.33261108, -12.53682518,  -8.06638050,  -9.51908016,  -6.65721512],
         [ -5.49400187,  -3.42927718,  -6.97186089,  -3.34735131,  -6.69634295,
           -9.33261108, -12.53682518,  -8.06638050,  -9.51908016,  -6.65721512]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.20234108, -3.26706576,  0.27551794, -3.34899163,  2.63626814,
           5.84048223,  1.37003756,  2.82273722, -0.03912783]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.23355675,   0.59882057, -12.37403679,  -3.58086300,  -6.55177307,
          -9.38114452,  -7.36741447,  -6.92006969, -26.39123726,  -7.87883329]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.23355770,   0.59881979, -12.37403870,  -3.58086276,  -6.55177450,
           -9.38114357,  -7.36741495,  -6.92006779, -26.39123726,  -7.87883377],
         [-11.23355770,   0.59881979, -12.37403870,  -3.58086276,  -6.55177450,
           -9.38114357,  -7.36741495,  -6.92006779, -26.39123726,  -7.87883377]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-11.83237743,   1.14048100,  -7.65269470,  -4.68178320,  -1.85241413,
           -3.86614275,  -4.31348991,  15.15767956,  -3.35472393]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.76273918,  -6.39956760, -10.34392643,  -4.82445669, -10.38954067,
          -3.23451638,  -5.40961742,  -8.21694851, -34.88118362, -10.43960571]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.76273727,  -6.39956617, -10.34392643,  -4.82445765, -10.38954067,
           -3.23451638,  -5.40961981,  -8.21694946, -34.88118362, -10.43960476],
         [-20.76273727,  -6.39956617, -10.34392643,  -4.82445765, -10.38954067,
           -3.23451638,  -5.40961981,  -8.21694946, -34.88118362, -10.43960476]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.32313251, -4.04003859, -0.09567833, -5.61514711, -0.05006409,
          -7.20508862, -5.02998495, -2.22265530, 24.44157791]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.72879791,  -3.76390815, -10.23843479,  -3.02203345,  -5.65015268,
          -9.09426403, -11.00256729,  -6.44298649, -23.09348869, -10.82216167]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.72879791,  -3.76391006, -10.23843479,  -3.02203369,  -5.65015316,
           -9.09426403, -11.00256729,  -6.44298601, -23.09349060, -10.82216072],
         [ -6.72879791,  -3.76391006, -10.23843479,  -3.02203369,  -5.65015316,
           -9.09426403, -11.00256729,  -6.44298601, -23.09349060, -10.82216072]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.27376938, -7.23865700, -0.76413250, -7.98053360, -5.35241413,
          -1.90830326, -4.55958128, 12.09092331, -0.18040657]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.45033169,   1.94298673, -13.91741753,  -5.18591022, -10.68793011,
         -15.93535233,  -9.36406803, -17.08034325, -12.04151249,  -9.97583485]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.45033121,   1.94298637, -13.91741562,  -5.18590927, -10.68792820,
          -15.93535233,  -9.36406803, -17.08034134, -12.04151154,  -9.97583580],
         [ -6.45033121,   1.94298637, -13.91741562,  -5.18590927, -10.68792820,
          -15.93535233,  -9.36406803, -17.08034134, -12.04151154,  -9.97583580]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -2.91373682, -11.30705452,   4.55334759,  -4.17815876,   1.32386017,
            6.57128429,   7.71627331,   2.67744350,   0.61176777]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.60761535,  -1.53286052,  -8.73643017,  -4.10052729,  -4.05656481,
          -7.74744940,  -6.41611195,  -7.80544567, -11.01326561,  -4.58128691]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.60761452,  -1.53286111,  -8.73643017,  -4.10052824,  -4.05656433,
           -7.74744987,  -6.41611195,  -7.80544615, -11.01326561,  -4.58128738],
         [ -1.60761452,  -1.53286111,  -8.73643017,  -4.10052824,  -4.05656433,
           -7.74744987,  -6.41611195,  -7.80544615, -11.01326561,  -4.58128738]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-6.13983536, -6.21458864,  0.98898029, -3.64692163, -3.69088554,
          -1.33133793,  0.05799627,  3.26581573, -3.16616249]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.64499187, -1.88556695, -3.60635328, -3.98296356, -2.35778236,
         -4.56054068, -8.47956371, -2.85254931,  0.39722139, -5.29749250]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.64499187, -1.88556695, -3.60635352, -3.98296356, -2.35778213,
          -4.56054068, -8.47956371, -2.85254908,  0.39722127, -5.29749250],
         [-2.64499187, -1.88556695, -3.60635352, -3.98296356, -2.35778213,
          -4.56054068, -8.47956371, -2.85254908,  0.39722127, -5.29749250]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.28720975, -0.47221518,  1.24857140,  1.62518144,  2.20275855,
           6.12178135,  0.49476695, -2.75500345,  2.93971038]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.06617260, -11.00516701,  -1.42231047,   1.11663222,  -3.65583730,
          -0.47999287,  -6.92323732,  -7.38770247, -16.93104553,  -9.87696266]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.06617260, -11.00516987,  -1.42231023,   1.11663246,  -3.65583706,
           -0.47999269,  -6.92323732,  -7.38770247, -16.93104553,  -9.87696266],
         [-11.06617260, -11.00516987,  -1.42231023,   1.11663246,  -3.65583706,
           -0.47999269,  -6.92323732,  -7.38770247, -16.93104553,  -9.87696266]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.58617973, 10.52517700,  0.94231755, -1.59662509,  3.17584443,
           6.44324446,  6.90770960, 16.45105362,  9.39696980]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.38298035,  -6.27157259, -17.98190689,  -5.84232759,  -8.95163441,
         -12.88029861,  -9.27610302,  -5.23644114, -49.34661102, -16.12431908]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.38298225,  -6.27157259, -17.98190689,  -5.84232807,  -8.95163441,
          -12.88029861,  -9.27610302,  -5.23644161, -49.34661865, -16.12431908],
         [-18.38298225,  -6.27157259, -17.98190689,  -5.84232807,  -8.95163441,
          -12.88029861,  -9.27610302,  -5.23644161, -49.34661865, -16.12431908]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  2.25866318,  -9.85274696,   1.85758781, -10.28199100,  -7.17268467,
           -3.24402046,  -6.84821606, -10.88787746,  33.22229767]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.41413188,   1.33835340,  -4.69277811,  -1.88158762,  -8.29427052,
          -8.44824123,  -3.94687653, -11.36390972,   1.29307067,  -3.71802473]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.41413212,   1.33835316,  -4.69277763,  -1.88158727,  -8.29427052,
           -8.44824123,  -3.94687700, -11.36391068,   1.29307115,  -3.71802521],
         [ -1.41413212,   1.33835316,  -4.69277763,  -1.88158727,  -8.29427052,
           -8.44824123,  -3.94687700, -11.36391068,   1.29307115,  -3.71802521]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.27864552, -6.03113079, -2.81119037,  3.60149288,  3.75546360,
          -0.74590063,  6.67113304, -5.98584890, -0.97475243]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.63038349,  -6.05187368,  -7.28216982,  -2.08155942,  -3.79564476,
          -5.52146435,  -3.22211337,  -6.29138517, -18.38462830,  -8.77275467]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.63038397,  -6.05187464,  -7.28216887,  -2.08155847,  -3.79564476,
           -5.52146387,  -3.22211337,  -6.29138660, -18.38462830,  -8.77275467],
         [ -7.63038397,  -6.05187464,  -7.28216887,  -2.08155847,  -3.79564476,
           -5.52146387,  -3.22211337,  -6.29138660, -18.38462830,  -8.77275467]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.83473921,  2.25622988,  3.48652411, -1.71408629,  1.72581911,
          -0.57353139,  2.49574184, 14.58898354,  4.97710991]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.47796249,  -9.56920719, -14.25877476,   0.64202899,  -2.59574246,
          -4.01840973,  -0.64577508,  -9.23903179, -31.73469543, -15.47382832]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.47796059,  -9.56920719, -14.25877476,   0.64202994,  -2.59574294,
           -4.01840878,  -0.64577460,  -9.23903275, -31.73469734, -15.47383022],
         [-26.47796059,  -9.56920719, -14.25877476,   0.64202994,  -2.59574294,
           -4.01840878,  -0.64577460,  -9.23903275, -31.73469734, -15.47383022]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 16.90875244,   4.68956757, -10.21123695,  -6.97346401,  -5.55079842,
           -8.92343235,  -0.33017445,  22.16548920,   5.90462303]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.51432800, -10.24168205,  -5.76092148,   0.49919423, -11.86175060,
           1.28665304, -12.31068134,  -4.34372044, -39.47382736,  -4.89371872]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.51432800, -10.24168205,  -5.76092100,   0.49919471, -11.86175060,
            1.28665292, -12.31068039,  -4.34372044, -39.47382736,  -4.89371967],
         [-24.51432800, -10.24168205,  -5.76092100,   0.49919471, -11.86175060,
            1.28665292, -12.31068039,  -4.34372044, -39.47382736,  -4.89371967]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[19.62060928,  5.34796238,  0.86720133, -5.39291430,  6.96803093,
          -6.18037271,  7.41696072, -0.54999924, 34.58010864]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  0.16876633,   0.26983374,  -9.67439175, -12.23822880,  -7.78571892,
         -12.99018669, -17.17498207,  -3.83690953,  -0.22510883,   1.14272285]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.16876633,   0.26983365,  -9.67439175, -12.23822880,  -7.78571892,
          -12.99018669, -17.17498398,  -3.83690858,  -0.22510895,   1.14272273],
         [  0.16876633,   0.26983365,  -9.67439175, -12.23822880,  -7.78571892,
          -12.99018669, -17.17498398,  -3.83690858,  -0.22510895,   1.14272273]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-13.15895271, -13.26002026,  -3.31579494,  -0.75195789,  -5.20446777,
            4.18479729,  -9.15327835, -12.76507759, -14.13290977]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -0.55544686,   0.59571320,  -9.14064026, -11.12921715, -11.17372608,
          -8.80397129, -16.25402641,  -8.38581562, -10.49283218,  -4.52786207]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.55544513,   0.59571308,  -9.14064026, -11.12921619, -11.17372704,
           -8.80397224, -16.25402260,  -8.38581562, -10.49283218,  -4.52786207],
         [ -0.55544513,   0.59571308,  -9.14064026, -11.12921619, -11.17372704,
           -8.80397224, -16.25402260,  -8.38581562, -10.49283218,  -4.52786207]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-10.61828232, -11.76943970,  -2.03308678,  -0.04451084,  -2.36975479,
            5.08029556,  -2.78791142,  -0.68089485,  -6.64586496]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.57542562,  -3.04186893, -11.09202290,  -4.70113659,  -5.24054003,
         -11.61292267,  -6.33524752, -11.36015320, -22.02783394, -13.18732262]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.57542467,  -3.04186916, -11.09202290,  -4.70113802,  -5.24053955,
          -11.61292171,  -6.33524799, -11.36015129, -22.02783394, -13.18732262],
         [ -5.57542467,  -3.04186916, -11.09202290,  -4.70113802,  -5.24053955,
          -11.61292171,  -6.33524799, -11.36015129, -22.02783394, -13.18732262]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.75982332, -3.29337883,  4.75677490, -1.63410997, -1.09470844,
           5.27767372,  5.02490330, 15.69258595,  6.85207462]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.64147186,  -7.37298536, -14.56030846,  -4.18810892,  -4.27591801,
         -12.00371838, -12.95040321, -16.45129204, -39.81602859, -19.92556381]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.64146996,  -7.37298393, -14.56030750,  -4.18810987,  -4.27591896,
          -12.00371933, -12.95040226, -16.45129013, -39.81603622, -19.92556572],
         [-18.64146996,  -7.37298393, -14.56030750,  -4.18810987,  -4.27591896,
          -12.00371933, -12.95040226, -16.45129013, -39.81603622, -19.92556572]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.63775063, -4.63073540,  2.55658817, -7.81560946, -7.72780037,
           0.94668293,  4.44757080, 27.81231689,  7.92184639]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.58015060,  -1.69061065,  -9.19422913,  -1.27021134,  -3.22701812,
          -8.09529209, -11.91126156,  -7.54588890, -13.51888561,  -6.33398008]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.58014870,  -1.69060969,  -9.19422913,  -1.27021134,  -3.22701859,
           -8.09529209, -11.91126060,  -7.54588890, -13.51888466,  -6.33398008],
         [-11.58014870,  -1.69060969,  -9.19422913,  -1.27021134,  -3.22701859,
           -8.09529209, -11.91126060,  -7.54588890, -13.51888466,  -6.33398008]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -0.33111191, -10.22065067,  -2.71703148, -10.64104939,  -8.68424225,
           -3.81596851,  -4.36537170,   1.60762405,  -5.57728052]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  2.20998693,  -5.93643045, -10.60087204, -16.41274643,  -5.99960995,
         -11.26839542, -19.87141418, -15.34866333, -12.06485081,  -9.49760246]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.03008615,  -2.93402815, -12.26178741, -17.68387794,  -8.86213779,
          -12.24986839, -19.80295563, -17.87666893, -12.23540401,  -7.96157598],
         [ -0.03008615,  -2.93402815, -12.26178741, -17.68387794,  -8.86213779,
          -12.24986839, -19.80295563, -17.87666893, -12.23540401,  -7.96157598]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.90394211, 12.23170090, 17.65379143,  8.83205128, 12.21978188,
          19.77286911, 17.84658241, 12.20531750,  7.93148994]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5908 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  2.20998669,  -5.93642902, -10.60087109, -16.41275024,  -5.99960804,
         -11.26839638, -19.87141609, -15.34866047, -12.06484795,  -9.49760342]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2435]; unstable size 2435; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.11 using sparse-spec alpha [2, 2, 1, 2435] with unstable size 1 total_size 16384 output_shape (64, 16, 16)
layer /34 start_node /input.15 using sparse-spec alpha [2, 14, 1, 2435] with unstable size 13 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 34, 1, 2435] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 58, 1, 2435] with unstable size 57 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2435] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.11 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 16384 output_shape (64, 16, 16)
layer /36 start_node /input.15 using sparse-spec alpha [2, 14, 1, 0] with unstable size 13 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 34, 1, 0] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 58, 1, 0] with unstable size 57 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [1]; unstable size 1; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 14, 1, 1] with unstable size 13 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 34, 1, 1] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 58, 1, 1] with unstable size 57 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [13]; unstable size 13; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 34, 1, 13] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 58, 1, 13] with unstable size 57 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [33]; unstable size 33; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 58, 1, 33] with unstable size 57 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [57]; unstable size 57; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 57] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.35070574,  8.10339737, 10.16710854,  4.38940239,  5.89208555,
         14.82730770, 12.39803123, 10.07445908,  3.15940714]], device='cuda:0') None

all verified at 3th iter
best_l after optimization: 70.02113342285156
alpha/beta optimization time: 0.6313724517822266
initial alpha-crown bounds: tensor([[ 0.05325317,  8.14771461, 10.29390526,  4.46437693,  5.97304678,
         15.02635765, 12.49013329, 10.10971069,  3.46263456]], device='cuda:0')
Worst class: (+ rhs) 0.053253173828125
verified with init bound!
Result: safe-incomplete in 2.3607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.57137489,  -8.29785919, -15.74065018,  -1.70883334,  -0.12140564,
          -5.44798326, -10.83143806,  -8.46073627, -25.31404495, -23.57489395]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.57137299,  -8.29785919, -15.74065018,  -1.70883381,  -0.12140612,
           -5.44798326, -10.83143806,  -8.46073627, -25.31404686, -23.57489395],
         [-18.57137299,  -8.29785919, -15.74065018,  -1.70883381,  -0.12140612,
           -5.44798326, -10.83143806,  -8.46073627, -25.31404686, -23.57489395]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -5.00352097, -15.27703476,  -7.83424377, -21.86606026, -23.45348740,
          -18.12691116, -12.74345589, -15.11415768,   1.73915291]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.46160984,  -1.91017807,  -8.48627567,  -1.85249674,  -5.16957664,
          -5.61485243,  -0.91739953,  -7.34811401, -19.35500336,  -4.98654366]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.46161079,  -1.91017854,  -8.48627567,  -1.85249722,  -5.16957617,
           -5.61485291,  -0.91739941,  -7.34811354, -19.35500145,  -4.98654413],
         [-12.46161079,  -1.91017854,  -8.48627567,  -1.85249722,  -5.16957617,
           -5.61485291,  -0.91739941,  -7.34811354, -19.35500145,  -4.98654413]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.60911369,  0.05768132,  6.63377857,  3.31707907,  3.76235580,
          -0.93509781,  5.49561644, 17.50250435,  3.13404703]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.83271694,   0.42178157,  -6.28381538,  -7.90070105,  -4.57781219,
          -6.22608900,  -2.22814655,  -8.49627209, -12.25444031,  -5.45837259]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.83271742,   0.42178163,  -6.28381538,  -7.90070200,  -4.57781219,
           -6.22608900,  -2.22814655,  -8.49627209, -12.25444031,  -5.45837307],
         [ -4.83271742,   0.42178163,  -6.28381538,  -7.90070200,  -4.57781219,
           -6.22608900,  -2.22814655,  -8.49627209, -12.25444031,  -5.45837307]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.62565565, -5.88015461,  0.82544231,  2.44232893, -0.88056087,
           0.76771593, -3.23022652,  3.03789902,  6.79606724]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.44855118,  -3.20239663,  -4.01671171,  -2.33084011,  -1.90820038,
          -2.98778701,   0.36291754,  -5.42090321, -12.61704254,  -6.44837093]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.44855022,  -3.20239615,  -4.01671219,  -2.33084011,  -1.90820014,
           -2.98778725,   0.36291736,  -5.42090321, -12.61704254,  -6.44837141],
         [ -8.44855022,  -3.20239615,  -4.01671219,  -2.33084011,  -1.90820014,
           -2.98778725,   0.36291736,  -5.42090321, -12.61704254,  -6.44837141]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.02764702, -2.21850705, -1.40419102, -3.09006310, -3.51270294,
          -2.43311596, -5.78382063,  7.19613934,  1.02746820]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.43134403,  -1.27049375,  -9.87954426,  -2.61561036,  -4.81061935,
          -8.79718590,  -5.53461599,  -7.34801149, -16.02311897, -10.05403519]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.43134356,  -1.27049387,  -9.87954426,  -2.61560988,  -4.81061840,
           -8.79718590,  -5.53461504,  -7.34801006, -16.02311707, -10.05403519],
         [ -5.43134356,  -1.27049387,  -9.87954426,  -2.61560988,  -4.81061840,
           -8.79718590,  -5.53461504,  -7.34801006, -16.02311707, -10.05403519]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.10327148, -4.26412106,  4.34492922, -2.91900516, -0.72399664,
           3.26257086,  1.81339502, 10.48850250,  4.51942015]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.52705455,  -3.19085932, -14.28087425,  -5.18593454, -10.75555801,
          -8.08408356,  -7.89540005, -15.22251129, -24.42100716,  -9.81751251]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.52705264,  -3.19085932, -14.28087425,  -5.18593502, -10.75555706,
           -8.08408451,  -7.89539909, -15.22251034, -24.42101097,  -9.81751251],
         [ -2.52705264,  -3.19085932, -14.28087425,  -5.18593502, -10.75555706,
           -8.08408451,  -7.89539909, -15.22251034, -24.42101097,  -9.81751251]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-7.29045963, -6.62665319,  4.46336174, -4.63157749,  0.93804455,
          -1.73342800, -1.92211342,  5.40499783, 14.60349846]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.57707429,  -8.51691055,  -5.26336432,  -0.16568324,  -3.29416776,
          -4.10965633,  -0.59136742,  -3.58075547, -18.33207703,  -9.46609879]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.57707477,  -8.51690960,  -5.26336432,  -0.16568366,  -3.29416776,
           -4.10965633,  -0.59136730,  -3.58075547, -18.33207703,  -9.46609879],
         [ -2.57707477,  -8.51690960,  -5.26336432,  -0.16568366,  -3.29416776,
           -4.10965633,  -0.59136730,  -3.58075547, -18.33207703,  -9.46609879]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-15.75500202,  -9.81516743, -13.06871223, -18.16639328, -15.03790951,
          -14.22242069, -17.74070930, -14.75132179,  -8.86597824]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.13939238,   0.33136305,  -8.80592918,  -5.83653975,  -4.13906956,
         -12.74809361,  -9.56156445,  -7.89901161,  -7.79516172,  -4.62875795]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.13939238,   0.33136216,  -8.80592823,  -5.83653927,  -4.13906956,
          -12.74809265,  -9.56156635,  -7.89901114,  -7.79516125,  -4.62875795],
         [ -5.13939238,   0.33136216,  -8.80592823,  -5.83653927,  -4.13906956,
          -12.74809265,  -9.56156635,  -7.89901114,  -7.79516125,  -4.62875795]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-5.47075462,  3.66653585,  0.69714689, -1.00032282,  7.60870028,
           4.42217398,  2.75961876,  2.65576887, -0.51063442]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.78117371,  -2.45770168, -16.29049683,  -3.11752152,  -6.04507113,
         -10.57376957,  -6.31610823,  -7.46975565, -36.25089264, -11.16066360]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.78117180,  -2.45770121, -16.29049492,  -3.11752152,  -6.04507160,
          -10.57376957,  -6.31610823,  -7.46975565, -36.25089264, -11.16066360],
         [-16.78117180,  -2.45770121, -16.29049492,  -3.11752152,  -6.04507160,
          -10.57376957,  -6.31610823,  -7.46975565, -36.25089264, -11.16066360]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.66365051, -0.65982032, 13.17297363,  2.92755008,  7.45624828,
           3.19858670,  4.35223389, 33.13336945,  8.04314232]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.16659260,  -5.30784845, -12.82460403,  -1.08285069,   0.26706809,
          -4.46600008, -19.00575447,  -3.51115513, -25.73148346, -17.68782425]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.16659069,  -5.30784750, -12.82460308,  -1.08285153,   0.26706797,
           -4.46600103, -19.00575447,  -3.51115608, -25.73148155, -17.68782043],
         [-15.16659069,  -5.30784750, -12.82460308,  -1.08285153,   0.26706797,
           -4.46600103, -19.00575447,  -3.51115608, -25.73148155, -17.68782043]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-10.56489086, -20.42363358, -12.90687847, -24.64863014, -25.99855042,
          -21.26548004,  -6.72572708, -22.22032547,  -8.04366112]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.46706533,  -2.79823351,  -6.51227808,  -2.75730610, -11.05245590,
          -0.16624132,  -8.54446220, -14.13256454,  -8.38801003,  -7.32049990]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.46706533,  -2.79823279,  -6.51227760,  -2.75730729, -11.05245590,
           -0.16624165,  -8.54446220, -14.13256454,  -8.38801003,  -7.32049942],
         [ -4.46706533,  -2.79823279,  -6.51227760,  -2.75730729, -11.05245590,
           -0.16624165,  -8.54446220, -14.13256454,  -8.38801003,  -7.32049942]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.92094469, -5.58977699, -1.87573242, -5.63070297,  2.66444588,
          -8.22176838,  0.15645218,  5.74455452, -1.06751060]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.34386444,  -9.14605141,  -7.67916441,  -2.39224195, -13.71413517,
          -1.81552589, -16.72360420, -10.97295952, -17.70897865, -12.18112373]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.34386253,  -9.14605141,  -7.67916441,  -2.39224076, -13.71413517,
           -1.81552517, -16.72360229, -10.97296143, -17.70897865, -12.18112373],
         [-19.34386253,  -9.14605141,  -7.67916441,  -2.39224076, -13.71413517,
           -1.81552517, -16.72360229, -10.97296143, -17.70897865, -12.18112373]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.37090111, -1.82691002, -3.29379702, -8.58072090,  2.74117374,
          -9.15743637,  5.75064087,  6.73601723,  1.20816231]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.58653164,  -9.47979450, -12.00011349,  -1.73418319,  -3.82529545,
         -10.11026287,  -5.47061014, -10.98615360, -30.92724609, -13.35472298]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.58652973,  -9.47979450, -12.00011349,  -1.73418272,  -3.82529640,
          -10.11026096,  -5.47061205, -10.98615360, -30.92724609, -13.35472107],
         [-14.58652973,  -9.47979450, -12.00011349,  -1.73418272,  -3.82529640,
          -10.11026096,  -5.47061205, -10.98615360, -30.92724609, -13.35472107]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.60037613, -1.50635910,  1.01395988, -9.25197124, -7.16085720,
          -0.87589264, -5.51554155, 19.94109344,  2.36856747]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.28133488,  -1.02969956,  -5.61203766,  -1.29998350,  -4.69574070,
          -3.70890427,  -2.88194728,  -2.79133248, -12.31656265,  -1.65206194]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.28133440,  -1.02969885,  -5.61203718,  -1.29998386,  -4.69574022,
           -3.70890498,  -2.88194776,  -2.79133248, -12.31656075,  -1.65206170],
         [ -6.28133440,  -1.02969885,  -5.61203718,  -1.29998386,  -4.69574022,
           -3.70890498,  -2.88194776,  -2.79133248, -12.31656075,  -1.65206170]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.58559418, -3.66604137,  0.91629696, -3.39575624, -0.98683524,
          -1.81379247, -1.90440774,  7.62082052, -3.04367852]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.50051403,  -3.16998291,  -8.47472382,   0.34580663,  -5.19017982,
          -2.46309209,  -6.37988329,   0.08014622, -12.53089523,  -2.63747048]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.50051355,  -3.16998363,  -8.47472382,   0.34580657,  -5.19017982,
           -2.46309233,  -6.37988377,   0.08014696, -12.53089523,  -2.63747072],
         [ -5.50051355,  -3.16998363,  -8.47472382,   0.34580657,  -5.19017982,
           -2.46309233,  -6.37988377,   0.08014696, -12.53089523,  -2.63747072]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.87937021, -3.20990014,  2.09484005, -6.72569036, -1.18970394,
          -3.91679144, -6.46003056,  6.15101147, -3.74241304]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.48644352,  -1.73499978, -10.14107704,   0.42525861,  -9.39419651,
          -1.18883860,  -8.36928749, -11.10550499,  -9.50535870,  -6.15679932]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.48644304,  -1.73499966, -10.14107704,   0.42525861,  -9.39419651,
           -1.18883872,  -8.36928749, -11.10550404,  -9.50535870,  -6.15679932],
         [ -5.48644304,  -1.73499966, -10.14107704,   0.42525861,  -9.39419651,
           -1.18883872,  -8.36928749, -11.10550404,  -9.50535870,  -6.15679932]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -5.61906099,  -9.37050438,  -0.96442699, -11.53076267,  -1.71130753,
           -9.91666508,  -2.73621655,  -1.60014534,  -4.94870472]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-9.74218941,  0.44021800, -6.87717342, -2.85715055, -5.71662521,
         -7.58651638, -5.04759264, -5.96074200, -9.86188889, -3.34003186]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-9.74218941,  0.44021863, -6.87717438, -2.85715055, -5.71662617,
          -7.58651686, -5.04759216, -5.96074295, -9.86188984, -3.34003091],
         [-9.74218941,  0.44021863, -6.87717438, -2.85715055, -5.71662617,
          -7.58651686, -5.04759216, -5.96074295, -9.86188984, -3.34003091]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.88503885, -3.29736924,  4.02002382,  2.85947561,  4.72936630,
           2.19044161,  3.10359240,  7.00473928,  0.48288035]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.64053595,  0.05902865, -7.31804323, -3.70895505, -4.67179871,
         -9.99679852, -5.84589243, -8.20242405, -9.42985821, -7.98622894]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.64053595,  0.05902880, -7.31804276, -3.70895553, -4.67179871,
          -9.99679947, -5.84589291, -8.20242405, -9.42985821, -7.98622799],
         [-1.64053595,  0.05902880, -7.31804276, -3.70895553, -4.67179871,
          -9.99679947, -5.84589291, -8.20242405, -9.42985821, -7.98622799]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.20535707, -5.90492153,  1.47214985, -2.13693738, -1.17409420,
           4.15090656,  2.35653114,  3.58396530,  2.14033508]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.08129883, -14.18622398, -20.25756836,  -5.46421623, -13.24065685,
         -12.39671993, -13.94021511, -23.07919884, -47.05432510, -24.19951439]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.08129954, -14.18622589, -20.25757027,  -5.46421337, -13.24065685,
          -12.39671898, -13.94021797, -23.07919884, -47.05432510, -24.19951248],
         [ -3.08129954, -14.18622589, -20.25757027,  -5.46421337, -13.24065685,
          -12.39671898, -13.94021797, -23.07919884, -47.05432510, -24.19951248]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.38291383,  8.72201252, 14.79335690,  7.77644348,  6.93250561,
           8.47600460, 17.61498642, 41.59011078, 18.73529816]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.12945080,   1.13500798, -11.20760345,  -6.52542830,  -8.16442299,
          -8.90491676,  -1.44445300, -10.20297813, -15.53093624,  -4.00063324]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.12945080,   1.13500798, -11.20760250,  -6.52542830,  -8.16442204,
           -8.90491581,  -1.44445193, -10.20297813, -15.53093624,  -4.00063372],
         [-14.12945080,   1.13500798, -11.20760250,  -6.52542830,  -8.16442204,
           -8.90491581,  -1.44445193, -10.20297813, -15.53093624,  -4.00063372]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.68499851, -2.57945991,  9.76315022,  5.08097649,  6.71997023,
           7.46046400,  8.75852585, 14.08648396,  2.55618191]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.27359867,  -3.63689590,  -7.93859005,  -2.92475653,  -4.44527149,
         -10.25091171,  -2.04097533,  -9.23917007, -11.11215019,  -9.80934334]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.27359915,  -3.63689590,  -7.93859053,  -2.92475677,  -4.44527149,
          -10.25091267,  -2.04097509,  -9.23917007, -11.11215115,  -9.80934334],
         [ -6.27359915,  -3.63689590,  -7.93859053,  -2.92475677,  -4.44527149,
          -10.25091267,  -2.04097509,  -9.23917007, -11.11215115,  -9.80934334]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.66499138, -4.30169487, -5.01383400, -3.49331903,  2.31232214,
          -5.89761543,  1.30057955,  3.17356062,  1.87075281]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.63121438,  -8.06506062,  -5.03273726,   0.54184330,  -3.66312242,
          -3.53917170, -10.49593163,  -4.99973536, -17.01527977,  -9.25480080]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.63121343,  -8.06506062,  -5.03273773,   0.54184306,  -3.66312194,
           -3.53917217, -10.49593258,  -4.99973536, -17.01527977,  -9.25479984],
         [ -2.63121343,  -8.06506062,  -5.03273773,   0.54184306,  -3.66312194,
           -3.53917217, -10.49593258,  -4.99973536, -17.01527977,  -9.25479984]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-5.43384743, -3.03232288, -8.60690403, -4.40193844, -4.52588844,
           2.43087196, -3.06532526,  8.95021915,  1.18973923]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.89938164,  -1.35356879, -12.36239147,  -7.85351038,  -3.46360087,
          -8.58815098, -10.68781662,  -1.82742858, -14.30068588,  -0.08133584]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.89938068,  -1.35356843, -12.36239147,  -7.85351038,  -3.46360087,
           -8.58815193, -10.68781662,  -1.82742834, -14.30068588,  -0.08133584],
         [ -9.89938068,  -1.35356843, -12.36239147,  -7.85351038,  -3.46360087,
           -8.58815193, -10.68781662,  -1.82742834, -14.30068588,  -0.08133584]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -2.46301079, -11.00882339,  -4.50888109,  -8.89879036,  -3.77423954,
           -1.67457485, -10.53496361,   1.93829441, -12.28105545]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0073 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.14416313, -14.37032032, -15.96010017,  -3.01675963,  -6.90114403,
         -14.29810524, -12.79528522,  -9.89659023, -49.35491180, -22.17618942]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]100%|██████████| 1/1 [00:01<00:00,  1.59s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.44553566, -12.01485729, -16.28024292,  -5.39231300,  -5.88525343,
          -15.29930973, -13.51700306,  -8.33857250, -47.87251663, -21.81076431],
         [-11.44553566, -12.01485729, -16.28024292,  -5.39231300,  -5.88525343,
          -15.29930973, -13.51700306,  -8.33857250, -47.87251663, -21.81076431]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.05322266,  6.62254429, 10.88792992,  0.49294043,  9.90699673,
           8.12469006,  2.94625950, 42.48020172, 16.41845131]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5923 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-12.14416218, -14.37032509, -15.96010208,  -3.01675725,  -6.90114498,
         -14.29810524, -12.79528522,  -9.89659214, -49.35491180, -22.17619133]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2410]; unstable size 2410; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.11 using sparse-spec alpha [2, 5, 1, 2410] with unstable size 4 total_size 16384 output_shape (64, 16, 16)
layer /34 start_node /input.15 using sparse-spec alpha [2, 9, 1, 2410] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 34, 1, 2410] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 104, 1, 2410] with unstable size 103 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2410] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.11 using sparse-spec alpha [2, 5, 1, 0] with unstable size 4 total_size 16384 output_shape (64, 16, 16)
layer /36 start_node /input.15 using sparse-spec alpha [2, 9, 1, 0] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 34, 1, 0] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 104, 1, 0] with unstable size 103 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [4]; unstable size 4; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 9, 1, 4] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 34, 1, 4] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 104, 1, 4] with unstable size 103 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [8]; unstable size 8; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 34, 1, 8] with unstable size 33 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 104, 1, 8] with unstable size 103 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [33]; unstable size 33; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 104, 1, 33] with unstable size 103 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [103]; unstable size 103; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 103] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.28349137, -5.42252302,  6.41621590, -3.99129033,  6.11429405,
          1.94975388, -3.19387484, 30.68818474,  9.49316883]], device='cuda:0') None
best_l after optimization: 44.99705505371094
alpha/beta optimization time: 8.49363899230957
initial alpha-crown bounds: tensor([[-2.17571878, -3.90301037,  6.73830557, -3.55753374,  6.52491093,
          2.32636786, -2.49762678, 31.45520401, 10.08615780]], device='cuda:0')
Worst class: (+ rhs) -3.903010368347168
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 32, 32]), torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 64, 16, 16]), torch.Size([9, 1, 64, 8, 8]), torch.Size([9, 1, 512]), torch.Size([9, 1, 512])]

Properties batch 0, size 1
Remaining timeout: 289.7784514427185
##### Instance 67 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.17571878]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.14416218, -14.37032509, -15.96010208,  -3.01675725,  -6.90114498,
        -14.29810524, -12.79528522,  -9.89659214, -49.35491180, -22.17619133],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.17571878]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2410
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 4
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 8
Node /43 input 0: size torch.Size([512]) unstable 31
Node /45 input 0: size torch.Size([512]) unstable 101
-----------------
# of unstable neurons: 2554
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 277] 
split level 1: [/input.19, 378] 
split level 2: [/input.19, 418] 
split level 3: [/input.19, 161] 
split level 4: [/input.19, 431] 
split level 5: [/input.23, 484] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.560585021972656e-05
Time: prepare 0.0104    bound 0.0131    transfer 0.0038    finalize 0.0230    func 0.0504    
Accumulated time: func 0.0504    prepare 0.0111    bound 0.0131    transfer 0.0038    finalize 0.0230    
Length of domains: 0
Time: pickout 0.0014    decision 0.0613    set_bounds 0.0137    solve 0.0506    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0613    set_bounds 0.0137    solve 0.0506    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.14218688011169434


Properties batch 1, size 1
Remaining timeout: 289.4188632965088
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.90301037]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.14416218, -14.37032509, -15.96010208,  -3.01675725,  -6.90114498,
        -14.29810524, -12.79528522,  -9.89659214, -49.35491180, -22.17619133],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.90301037]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2410
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 4
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 8
Node /43 input 0: size torch.Size([512]) unstable 31
Node /45 input 0: size torch.Size([512]) unstable 101
-----------------
# of unstable neurons: 2554
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 378] 
split level 1: [/input.19, 277] 
split level 2: [/input.19, 1] 
split level 3: [/input.19, 161] 
split level 4: [/input.19, 431] 
split level 5: [/input.19, 59] 
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.017086029052734375
Time: prepare 0.0056    bound 1.0783    transfer 0.0048    finalize 0.0157    func 1.1045    
Accumulated time: func 1.1045    prepare 0.0062    bound 1.0783    transfer 0.0048    finalize 0.0157    
Current worst splitting domains lb-rhs (depth):
-0.39728 (6), -0.24291 (6), -0.16570 (6), -0.13705 (6), -0.11381 (6), -0.02982 (6), 
Length of domains: 6
Time: pickout 0.0014    decision 0.0612    set_bounds 0.0129    solve 1.1046    add 0.0032    
Accumulated time: pickout 0.0014    decision 0.0612    set_bounds 0.0129    solve 1.1046    add 0.0032    
Current (lb-rhs): -0.3972792625427246
6 domains visited
Cumulative time: 1.1942822933197021

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input.23, 370] [/input.19, 339] [/input.19, 339] [/input.23, 370] [/input.19, 339] [/input.19, 339] 
split level 1: [/input.19, 339] [/input.23, 370] [/input.23, 370] [/input.19, 339] [/input.23, 370] [/input.23, 370] 
split level 2: [/input.19, 173] [/input.19, 173] [/input.19, 173] [/input.19, 173] [/input.19, 173] [/input.19, 173] 
split level 3: [/input.23, 484] [/input.23, 484] [/input.23, 484] [/input.23, 484] [/input.23, 484] [/input.23, 484] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 9.799003601074219e-05
Time: prepare 0.0208    bound 0.0196    transfer 0.0056    finalize 0.0329    func 0.0790    
Accumulated time: func 1.1835    prepare 0.0275    bound 1.0979    transfer 0.0105    finalize 0.0487    
Length of domains: 0
Time: pickout 0.0018    decision 0.0526    set_bounds 0.0165    solve 0.0791    add 0.0002    
Accumulated time: pickout 0.0032    decision 0.1138    set_bounds 0.0294    solve 1.1836    add 0.0033    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 1.3465549945831299


Properties batch 2, size 1
Remaining timeout: 287.8990488052368
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.738305568695068.

Properties batch 3, size 1
Remaining timeout: 287.78793239593506
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.55753374]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.14416218, -14.37032509, -15.96010208,  -3.01675725,  -6.90114498,
        -14.29810524, -12.79528522,  -9.89659214, -49.35491180, -22.17619133],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.55753374]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2410
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 4
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 8
Node /43 input 0: size torch.Size([512]) unstable 31
Node /45 input 0: size torch.Size([512]) unstable 101
-----------------
# of unstable neurons: 2554
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 74] 
split level 1: [/input.19, 277] 
split level 2: [/input.19, 161] 
split level 3: [/input.23, 484] 
split level 4: [/input.19, 431] 
split level 5: [/input.19, 378] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 64 = 0.0
pruning-in-iteration extra time: 0.0001430511474609375
Time: prepare 0.0105    bound 0.4973    transfer 0.0042    finalize 0.0195    func 0.5317    
Accumulated time: func 0.5317    prepare 0.0112    bound 0.4973    transfer 0.0042    finalize 0.0195    
Current worst splitting domains lb-rhs (depth):
-1.25007 (6), -1.24864 (6), -1.22982 (6), -1.20780 (6), -1.20358 (6), -1.17434 (6), -1.15950 (6), -1.15111 (6), -1.13153 (6), -1.09055 (6), -1.05524 (6), -1.03401 (6), -1.03330 (6), -1.03241 (6), -1.03000 (6), -1.02823 (6), -1.00879 (6), -1.00225 (6), -0.99079 (6), -0.96908 (6), 
Length of domains: 64
Time: pickout 0.0014    decision 0.0609    set_bounds 0.0136    solve 0.5318    add 0.0099    
Accumulated time: pickout 0.0014    decision 0.0609    set_bounds 0.0136    solve 0.5318    add 0.0099    
Current (lb-rhs): -1.2500663995742798
64 domains visited
Cumulative time: 0.6280617713928223

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] [/input.23, 370] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 128 = 0.5078125
pruning-in-iteration extra time: 0.018308401107788086
Time: prepare 0.0275    bound 0.6901    transfer 0.0121    finalize 0.0438    func 0.7735    
Accumulated time: func 1.3052    prepare 0.0391    bound 1.1873    transfer 0.0163    finalize 0.0633    
Current worst splitting domains lb-rhs (depth):
-1.11412 (7), -1.11066 (7), -1.09348 (7), -1.07840 (7), -1.05498 (7), -1.04804 (7), -1.02453 (7), -1.02133 (7), -1.00246 (7), -0.95174 (7), -0.92226 (7), -0.89460 (7), -0.89133 (7), -0.88968 (7), -0.88519 (7), -0.88320 (7), -0.86530 (7), -0.86282 (7), -0.84769 (7), -0.84440 (7), 
Length of domains: 63
Time: pickout 0.0021    decision 0.0603    set_bounds 0.0093    solve 0.7736    add 0.0090    
Accumulated time: pickout 0.0035    decision 0.1212    set_bounds 0.0229    solve 1.3054    add 0.0189    
Current (lb-rhs): -1.114121913909912
127 domains visited
Cumulative time: 1.4861679077148438

BaB round 3
batch: 63
splitting decisions: 
split level 0: [/input.19, 339] [/input.19, 173] [/input.19, 339] [/input.19, 339] [/input.19, 386] [/input.19, 386] [/input.19, 173] [/input.19, 173] [/input.19, 386] [/input.19, 386] 
pruning_in_iteration open status: True
ratio of positive domain = 30 / 126 = 0.23809523809523814
pruning-in-iteration extra time: 0.009293079376220703
Time: prepare 0.0272    bound 0.6476    transfer 0.0075    finalize 0.0431    func 0.7254    
Accumulated time: func 2.0307    prepare 0.0667    bound 1.8349    transfer 0.0238    finalize 0.1064    
Current worst splitting domains lb-rhs (depth):
-0.86925 (8), -0.85047 (8), -0.84680 (8), -0.84621 (8), -0.84027 (8), -0.83982 (8), -0.78906 (8), -0.76147 (8), -0.73095 (8), -0.72013 (8), -0.71841 (8), -0.71760 (8), -0.70408 (8), -0.69333 (8), -0.69180 (8), -0.69025 (8), -0.68989 (8), -0.67891 (8), -0.66880 (8), -0.66059 (8), 
Length of domains: 96
Time: pickout 0.0023    decision 0.0571    set_bounds 0.0096    solve 0.7256    add 0.0122    
Accumulated time: pickout 0.0059    decision 0.1783    set_bounds 0.0325    solve 2.0310    add 0.0311    
Current (lb-rhs): -0.8692471981048584
223 domains visited
Cumulative time: 2.296138286590576

BaB round 4
batch: 96
splitting decisions: 
split level 0: [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 498] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 192 = 0.5364583333333333
pruning-in-iteration extra time: 0.017498254776000977
Time: prepare 0.0407    bound 0.7376    transfer 0.0257    finalize 0.0661    func 0.8703    
Accumulated time: func 2.9010    prepare 0.1079    bound 2.5725    transfer 0.0495    finalize 0.1725    
Current worst splitting domains lb-rhs (depth):
-0.74288 (9), -0.73460 (9), -0.73023 (9), -0.71799 (9), -0.71306 (9), -0.70614 (9), -0.66911 (9), -0.65636 (9), -0.63118 (9), -0.59932 (9), -0.59826 (9), -0.59151 (9), -0.57306 (9), -0.57290 (9), -0.57124 (9), -0.57053 (9), -0.55752 (9), -0.54637 (9), -0.53892 (9), -0.53512 (9), 
Length of domains: 89
Time: pickout 0.0034    decision 0.0721    set_bounds 0.0133    solve 0.8704    add 0.0115    
Accumulated time: pickout 0.0092    decision 0.2503    set_bounds 0.0458    solve 2.9014    add 0.0427    
Current (lb-rhs): -0.7428795099258423
312 domains visited
Cumulative time: 3.271738052368164

BaB round 5
batch: 89
splitting decisions: 
split level 0: [/input.19, 130] [/input.19, 130] [/input.19, 130] [/input.19, 386] [/input.19, 173] [/input.19, 173] [/input.19, 173] [/input.19, 130] [/input.19, 130] [/input.19, 130] 
pruning_in_iteration open status: True
ratio of positive domain = 95 / 178 = 0.5337078651685394
pruning-in-iteration extra time: 0.016394615173339844
Time: prepare 0.0382    bound 0.6907    transfer 0.0102    finalize 0.0643    func 0.8035    
Accumulated time: func 3.7045    prepare 0.1465    bound 3.2633    transfer 0.0597    finalize 0.2368    
Current worst splitting domains lb-rhs (depth):
-0.67372 (10), -0.58643 (10), -0.52620 (10), -0.51877 (10), -0.51084 (10), -0.50393 (10), -0.50181 (10), -0.48717 (10), -0.48643 (10), -0.48457 (10), -0.48006 (10), -0.47531 (10), -0.47110 (10), -0.46549 (10), -0.44785 (10), -0.43644 (10), -0.43562 (10), -0.42271 (10), -0.42027 (10), -0.37288 (10), 
Length of domains: 83
Time: pickout 0.0032    decision 0.0682    set_bounds 0.0125    solve 0.8036    add 0.0109    
Accumulated time: pickout 0.0124    decision 0.3186    set_bounds 0.0583    solve 3.7051    add 0.0536    
Current (lb-rhs): -0.6737176179885864
395 domains visited
Cumulative time: 4.171849727630615

BaB round 6
batch: 83
splitting decisions: 
split level 0: [/input.19, 498] [/input.19, 498] [/input.19, 339] [/input.19, 498] [/input.19, 498] [/input.19, 498] [/input.19, 498] [/input.19, 498] [/input.19, 498] [/input.19, 498] 
pruning_in_iteration open status: True
ratio of positive domain = 102 / 166 = 0.6144578313253012
pruning-in-iteration extra time: 0.017206430435180664
Time: prepare 0.0353    bound 0.7088    transfer 0.0098    finalize 0.0371    func 0.7911    
Accumulated time: func 4.4955    prepare 0.1822    bound 3.9720    transfer 0.0695    finalize 0.2739    
Current worst splitting domains lb-rhs (depth):
-0.46553 (11), -0.44423 (11), -0.44089 (11), -0.42864 (11), -0.42028 (11), -0.41545 (11), -0.37772 (11), -0.36770 (11), -0.32052 (11), -0.30973 (11), -0.30790 (11), -0.29621 (11), -0.29205 (11), -0.28866 (11), -0.27293 (11), -0.26523 (11), -0.26040 (11), -0.25964 (11), -0.24115 (11), -0.23648 (11), 
Length of domains: 64
Time: pickout 0.0030    decision 0.0661    set_bounds 0.0118    solve 0.7913    add 0.0092    
Accumulated time: pickout 0.0155    decision 0.3846    set_bounds 0.0701    solve 4.4963    add 0.0628    
Current (lb-rhs): -0.4655311107635498
459 domains visited
Cumulative time: 5.054704904556274

BaB round 7
batch: 64
splitting decisions: 
split level 0: [/input.23, 279] [/input.23, 279] [/input.19, 173] [/input.23, 279] [/input.23, 279] [/input.23, 279] [/input.23, 279] [/input.23, 279] [/input.19, 334] [/input.23, 279] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 128 = 0.71875
pruning-in-iteration extra time: 0.017296552658081055
Time: prepare 0.0287    bound 0.6487    transfer 0.0077    finalize 0.0288    func 0.7141    
Accumulated time: func 5.2096    prepare 0.2113    bound 4.6207    transfer 0.0773    finalize 0.3027    
Current worst splitting domains lb-rhs (depth):
-0.32631 (12), -0.31201 (12), -0.30848 (12), -0.29943 (12), -0.29891 (12), -0.26144 (12), -0.24828 (12), -0.19191 (12), -0.18443 (12), -0.17281 (12), -0.16774 (12), -0.15324 (12), -0.14827 (12), -0.14128 (12), -0.12635 (12), -0.12262 (12), -0.11629 (12), -0.11081 (12), -0.10365 (12), -0.10099 (12), 
Length of domains: 36
Time: pickout 0.0025    decision 0.0528    set_bounds 0.0094    solve 0.7142    add 0.0058    
Accumulated time: pickout 0.0179    decision 0.4375    set_bounds 0.0795    solve 5.2106    add 0.0686    
Current (lb-rhs): -0.3263084888458252
495 domains visited
Cumulative time: 5.840860843658447

BaB round 8
batch: 36
splitting decisions: 
split level 0: [/input.23, 279] [/input.19, 386] [/input.19, 386] [/input.19, 386] [/input.19, 386] [/input.19, 173] [/input.19, 173] [/input.19, 339] [/input.23, 279] [/input.19, 173] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 72 = 0.8611111111111112
pruning-in-iteration extra time: 0.017859697341918945
Time: prepare 0.0158    bound 0.6727    transfer 0.0055    finalize 0.0234    func 0.7174    
Accumulated time: func 5.9271    prepare 0.2275    bound 5.2934    transfer 0.0828    finalize 0.3261    
Current worst splitting domains lb-rhs (depth):
-0.13490 (13), -0.11299 (13), -0.06649 (13), -0.06584 (13), -0.04562 (13), -0.04515 (13), -0.03746 (13), -0.01079 (13), -0.01064 (13), -0.00941 (13), 
Length of domains: 10
Time: pickout 0.0022    decision 0.0474    set_bounds 0.0059    solve 0.7175    add 0.0034    
Accumulated time: pickout 0.0201    decision 0.4849    set_bounds 0.0854    solve 5.9281    add 0.0720    
Current (lb-rhs): -0.13489603996276855
505 domains visited
Cumulative time: 6.618274688720703

BaB round 9
batch: 10
splitting decisions: 
split level 0: [/input.19, 1] [/input.19, 1] [/input.19, 1] [/input.19, 1] [/input.19, 339] [/input.19, 1] [/input.19, 1] [/input.19, 1] [/input.19, 1] [/input.19, 1] 
split level 1: [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] [/input.19, 334] 
split level 2: [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 9.679794311523438e-05
Time: prepare 0.0174    bound 0.0195    transfer 0.0049    finalize 0.0219    func 0.0638    
Accumulated time: func 5.9909    prepare 0.2453    bound 5.3129    transfer 0.0877    finalize 0.3480    
Length of domains: 0
Time: pickout 0.0019    decision 0.0438    set_bounds 0.0112    solve 0.0639    add 0.0001    
Accumulated time: pickout 0.0220    decision 0.5287    set_bounds 0.0966    solve 5.9920    add 0.0721    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
505 domains visited
Cumulative time: 6.739854574203491


Properties batch 4, size 1
Remaining timeout: 280.87748861312866
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.524910926818848.

Properties batch 5, size 1
Remaining timeout: 280.74918246269226
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3263678550720215.

Properties batch 6, size 1
Remaining timeout: 280.64303708076477
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.49762678]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.14416218, -14.37032509, -15.96010208,  -3.01675725,  -6.90114498,
        -14.29810524, -12.79528522,  -9.89659214, -49.35491180, -22.17619133],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.49762678]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2410
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 4
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 8
Node /43 input 0: size torch.Size([512]) unstable 31
Node /45 input 0: size torch.Size([512]) unstable 101
-----------------
# of unstable neurons: 2554
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 74] 
split level 1: [/input.19, 161] 
split level 2: [/input.19, 431] 
split level 3: [/input.19, 277] 
split level 4: [/input.23, 484] 
split level 5: [/input.19, 378] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.017652273178100586
Time: prepare 0.0104    bound 0.6623    transfer 0.0050    finalize 0.0157    func 0.6935    
Accumulated time: func 0.6935    prepare 0.0111    bound 0.6623    transfer 0.0050    finalize 0.0157    
Current worst splitting domains lb-rhs (depth):
-0.54571 (6), -0.46911 (6), -0.41578 (6), -0.30235 (6), -0.05400 (6), 
Length of domains: 5
Time: pickout 0.0014    decision 0.0612    set_bounds 0.0136    solve 0.6936    add 0.0027    
Accumulated time: pickout 0.0014    decision 0.0612    set_bounds 0.0136    solve 0.6936    add 0.0027    
Current (lb-rhs): -0.5457056164741516
5 domains visited
Cumulative time: 0.783111572265625

BaB round 2
batch: 5
splitting decisions: 
split level 0: [/input.23, 388] [/input.23, 388] [/input.23, 370] [/input.23, 388] [/input.23, 370] 
split level 1: [/input.23, 370] [/input.23, 370] [/input.19, 498] [/input.23, 370] [/input.19, 498] 
split level 2: [/input.19, 173] [/input.19, 173] [/input.19, 339] [/input.19, 339] [/input.19, 339] 
split level 3: [/input.19, 339] [/input.19, 339] [/input.19, 173] [/input.19, 173] [/input.19, 173] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 9.393692016601562e-05
Time: prepare 0.0180    bound 0.0129    transfer 0.0049    finalize 0.0189    func 0.0547    
Accumulated time: func 0.7482    prepare 0.0296    bound 0.6752    transfer 0.0098    finalize 0.0346    
Length of domains: 0
Time: pickout 0.0018    decision 0.0530    set_bounds 0.0158    solve 0.0548    add 0.0001    
Accumulated time: pickout 0.0032    decision 0.1142    set_bounds 0.0293    solve 0.7483    add 0.0028    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 0.9091958999633789


Properties batch 7, size 1
Remaining timeout: 279.5640001296997
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 31.455204010009766.

Properties batch 8, size 1
Remaining timeout: 279.45316338539124
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 10.08615779876709.
Result: safe in 20.6555 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.12883759,  -0.19994825, -17.30972290,  -8.98571396,  -8.70187092,
         -14.60518456,  -9.57038021, -10.62025928, -44.21675491, -11.92644978]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.12883568,  -0.19994754, -17.30972481,  -8.98571396,  -8.70186996,
          -14.60518551,  -9.57038212, -10.62025928, -44.21674728, -11.92644882],
         [-18.12883568,  -0.19994754, -17.30972481,  -8.98571396,  -8.70186996,
          -14.60518551,  -9.57038212, -10.62025928, -44.21674728, -11.92644882]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  7.50857639, -10.42031193,   6.68946552,  -1.63454533,  -1.91838932,
            3.98492622,  -1.04987717,  33.59648895,   1.30618954]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0087 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.21746516,  0.40046889, -3.77450418, -2.86013198, -5.14351559,
         -5.00261736, -6.46495819, -4.83902693, -5.00006628, -4.05736685]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.21746492,  0.40046903, -3.77450418, -2.86013222, -5.14351559,
          -5.00261831, -6.46495867, -4.83902740, -5.00006580, -4.05736685],
         [-3.21746492,  0.40046903, -3.77450418, -2.86013222, -5.14351559,
          -5.00261831, -6.46495867, -4.83902740, -5.00006580, -4.05736685]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.55703926, -4.17497301, -0.91437197,  1.36901140,  1.22811413,
           2.69045448,  1.06452322,  1.22556162,  0.28286266]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0076 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.13599539,   0.75414401,  -9.10962200,  -6.72888517,  -3.47887635,
          -8.38960743,  -4.15280581,  -7.35179710, -11.46268654,  -6.38964510]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.13599682,   0.75414389,  -9.10962200,  -6.72888279,  -3.47887611,
           -8.38960648,  -4.15280581,  -7.35179710, -11.46268654,  -6.38964510],
         [ -7.13599682,   0.75414389,  -9.10962200,  -6.72888279,  -3.47887611,
           -8.38960648,  -4.15280581,  -7.35179710, -11.46268654,  -6.38964510]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.98319101, -4.90694952,  4.95681620,  2.57607698, -0.67392969,
           4.23680067,  3.19899130,  7.30988073,  2.23683929]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.62737942, -9.63340664,  0.60234052,  1.22736537, -3.25862813,
          1.29942298, -0.53703898, -4.22218800, -8.71956635, -7.27955818]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.62737942, -9.63340664,  0.60234016,  1.22736549, -3.25862813,
           1.29942298, -0.53703934, -4.22218800, -8.71956635, -7.27955818],
         [-7.62737942, -9.63340664,  0.60234016,  1.22736549, -3.25862813,
           1.29942298, -0.53703934, -4.22218800, -8.71956635, -7.27955818]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -1.09218693,   0.91384029,  -9.32190609,  -9.94693184,  -5.46093845,
          -10.01898956,  -8.18252659,  -4.49737835,  -1.44000816]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  4.36365652,  -4.39395285,  -5.38798237,  -4.39090395,  -2.27524209,
          -5.75447559,  -7.06717873,  -6.34639835, -10.63263702,  -9.74110508]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  4.36365652,  -4.39395332,  -5.38798237,  -4.39090347,  -2.27524257,
           -5.75447512,  -7.06717873,  -6.34639835, -10.63263607,  -9.74110508],
         [  4.36365652,  -4.39395332,  -5.38798237,  -4.39090347,  -2.27524257,
           -5.75447512,  -7.06717873,  -6.34639835, -10.63263607,  -9.74110508]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-14.99629211,  -6.23868275,  -5.24465370,  -6.24173260,  -8.35739326,
           -4.87816095,  -3.56545734,  -4.28623772,  -0.89153099]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.19312286,  -1.54952872, -31.42635918, -18.75750923, -20.34548378,
         -20.56043243, -14.75967598, -19.48984909, -49.93246460, -10.29077435]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.19312096,  -1.54952741, -31.42635918, -18.75750923, -20.34548378,
          -20.56043243, -14.75967598, -19.48985100, -49.93246460, -10.29077339],
         [ -4.19312096,  -1.54952741, -31.42635918, -18.75750923, -20.34548378,
          -20.56043243, -14.75967598, -19.48985100, -49.93246460, -10.29077339]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.64359355, 27.23323822, 14.56438828, 16.15236282, 16.36731148,
          10.56655502, 15.29673004, 45.73934174,  6.09765244]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.03499508,  -5.25531578,  -5.62606573,  -1.39043939,  -2.39385104,
          -4.65481329,  -0.22160415,  -5.54360676, -16.50867081,  -6.43671560]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.03499508,  -5.25531483,  -5.62606621,  -1.39044023,  -2.39385152,
           -4.65481377,  -0.22160338,  -5.54360628, -16.50867271,  -6.43671513],
         [-11.03499508,  -5.25531483,  -5.62606621,  -1.39044023,  -2.39385152,
           -4.65481377,  -0.22160338,  -5.54360628, -16.50867271,  -6.43671513]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.40892887, -0.37075138, -4.23562622, -3.23221469, -0.97125244,
          -5.40446281, -0.08245993, 10.88260651,  0.81064892]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.80230141,  -9.06724358, -13.21007061,   1.45459676,  -7.52298880,
          -2.72110677,  -4.99708033,  -4.64826488, -28.71164131,  -6.41414356]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.80229950,  -9.06724167, -13.21007061,   1.45459640,  -7.52298832,
           -2.72110677,  -4.99708176,  -4.64826488, -28.71164131,  -6.41414213],
         [-21.80229950,  -9.06724167, -13.21007061,   1.45459640,  -7.52298832,
           -2.72110677,  -4.99708176,  -4.64826488, -28.71164131,  -6.41414213]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.38815689,  2.65309954,  6.79592848, -7.86873865,  1.10884619,
          -3.69303536, -1.41706038, -1.76587725, 22.29749870]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.77160454,  -2.48837090,  -9.05591965,  -3.28005886,  -5.75150967,
          -6.28105688,  -2.29718161,  -6.17312670, -16.45866394,  -4.32737303]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.77160406,  -2.48837256,  -9.05591965,  -3.28005934,  -5.75151014,
           -6.28105688,  -2.29718161,  -6.17312670, -16.45866394,  -4.32737446],
         [ -5.77160406,  -2.48837256,  -9.05591965,  -3.28005934,  -5.75151014,
           -6.28105688,  -2.29718161,  -6.17312670, -16.45866394,  -4.32737446]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.49154472, -0.79168677,  5.77586031,  2.47145081,  3.00099754,
          -0.98287773,  2.89306736, 13.17860413,  1.04731512]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.85335684,  -5.55094767,  -9.64237595,  -1.07873380,  -7.50334167,
          -8.45317078,  -4.15465450,  -7.50504351, -23.82216644, -11.64735413]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.22315645,  -2.46539044, -10.22515011,  -1.89396536,  -8.32949543,
           -9.02444077,  -4.53142643,  -8.71284771, -22.52734375,  -9.61060429],
         [ -7.22315645,  -2.46539044, -10.22515011,  -1.89396536,  -8.32949543,
           -9.02444077,  -4.53142643,  -8.71284771, -22.52734375,  -9.61060429]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.32919121,  0.57142508,  8.33118439,  6.43553019,  7.13047552,
           2.63746119,  6.81888247, 20.63337898,  7.71663904]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5886 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -5.85335732,  -5.55094719,  -9.64237595,  -1.07873368,  -7.50334072,
          -8.45317173,  -4.15465546,  -7.50504351, -23.82216835, -11.64735508]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2233]; unstable size 2233; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.15 using sparse-spec alpha [2, 8, 1, 2233] with unstable size 7 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 30, 1, 2233] with unstable size 29 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 113, 1, 2233] with unstable size 112 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2233] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.15 using sparse-spec alpha [2, 8, 1, 0] with unstable size 7 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 30, 1, 0] with unstable size 29 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 113, 1, 0] with unstable size 112 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 8, 1, 0] with unstable size 7 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 30, 1, 0] with unstable size 29 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 113, 1, 0] with unstable size 112 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [7]; unstable size 7; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 30, 1, 7] with unstable size 29 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 113, 1, 7] with unstable size 112 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [29]; unstable size 29; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 113, 1, 29] with unstable size 112 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [112]; unstable size 112; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 112] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.52876079, -2.31499553,  5.00166988,  1.57986665,  4.67812347,
         -0.57489765,  0.35313225, 15.49756908,  4.51946926]], device='cuda:0') None
best_l after optimization: 32.442474365234375
alpha/beta optimization time: 7.448371648788452
initial alpha-crown bounds: tensor([[-0.09488451, -1.63767290,  5.38560867,  2.28721523,  4.83473396,
         -0.39419448,  0.93421364, 16.22601700,  4.90144062]], device='cuda:0')
Worst class: (+ rhs) -1.6376729011535645
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 32, 32]), torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 64, 16, 16]), torch.Size([9, 1, 64, 8, 8]), torch.Size([9, 1, 512]), torch.Size([9, 1, 512])]

Properties batch 0, size 1
Remaining timeout: 290.83552837371826
##### Instance 77 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09488451]], device='cuda:0') need to verify.
Model prediction is: tensor([ -5.85335732,  -5.55094719,  -9.64237595,  -1.07873368,  -7.50334072,
         -8.45317173,  -4.15465546,  -7.50504351, -23.82216835, -11.64735508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09488451]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2233
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 7
Node /43 input 0: size torch.Size([512]) unstable 29
Node /45 input 0: size torch.Size([512]) unstable 106
-----------------
# of unstable neurons: 2375
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.23, 384] 
split level 1: [/input.19, 277] 
split level 2: [/input.19, 418] 
split level 3: [/input.23, 370] 
split level 4: [/input.19, 161] 
split level 5: [/input.19, 74] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.703636169433594e-05
Time: prepare 0.0105    bound 0.0130    transfer 0.0069    finalize 0.0201    func 0.0506    
Accumulated time: func 0.0506    prepare 0.0112    bound 0.0130    transfer 0.0069    finalize 0.0201    
Length of domains: 0
Time: pickout 0.0014    decision 0.0613    set_bounds 0.0137    solve 0.0508    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0613    set_bounds 0.0137    solve 0.0508    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.1381845474243164


Properties batch 1, size 1
Remaining timeout: 290.4912371635437
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.63767290]], device='cuda:0') need to verify.
Model prediction is: tensor([ -5.85335732,  -5.55094719,  -9.64237595,  -1.07873368,  -7.50334072,
         -8.45317173,  -4.15465546,  -7.50504351, -23.82216835, -11.64735508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.63767290]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2233
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 7
Node /43 input 0: size torch.Size([512]) unstable 29
Node /45 input 0: size torch.Size([512]) unstable 106
-----------------
# of unstable neurons: 2375
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 497] 
split level 1: [/input.19, 431] 
split level 2: [/input.19, 361] 
split level 3: [/input.19, 277] 
split level 4: [/input.19, 161] 
split level 5: [/input.23, 370] 
pruning_in_iteration open status: True
ratio of positive domain = 59 / 64 = 0.921875
pruning-in-iteration extra time: 0.0173337459564209
Time: prepare 0.0104    bound 0.6231    transfer 0.0069    finalize 0.0158    func 0.6562    
Accumulated time: func 0.6562    prepare 0.0110    bound 0.6231    transfer 0.0069    finalize 0.0158    
Current worst splitting domains lb-rhs (depth):
-0.26913 (6), -0.25176 (6), -0.22751 (6), -0.17573 (6), -0.10476 (6), 
Length of domains: 5
Time: pickout 0.0014    decision 0.0613    set_bounds 0.0136    solve 0.6563    add 0.0029    
Accumulated time: pickout 0.0014    decision 0.0613    set_bounds 0.0136    solve 0.6563    add 0.0029    
Current (lb-rhs): -0.26912832260131836
5 domains visited
Cumulative time: 0.7463293075561523

BaB round 2
batch: 5
splitting decisions: 
split level 0: [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] [/input.19, 59] 
split level 1: [/input.23, 384] [/input.23, 384] [/input.15, 3936] [/input.23, 384] [/input.23, 384] 
split level 2: [/input.15, 3936] [/input.15, 3936] [/input.23, 384] [/input.19, 498] [/input.19, 498] 
split level 3: [/input.23, 164] [/input.23, 164] [/input.15, 3928] [/input.19, 80] [/input.19, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 80 = 0.975
pruning-in-iteration extra time: 0.018033504486083984
Time: prepare 0.0221    bound 0.6539    transfer 0.0059    finalize 0.0226    func 0.7046    
Accumulated time: func 1.3608    prepare 0.0336    bound 1.2770    transfer 0.0128    finalize 0.0384    
Current worst splitting domains lb-rhs (depth):
-0.05296 (10), -0.04332 (10), 
Length of domains: 2
Time: pickout 0.0016    decision 0.0453    set_bounds 0.0163    solve 0.7047    add 0.0025    
Accumulated time: pickout 0.0030    decision 0.1066    set_bounds 0.0299    solve 1.3610    add 0.0054    
Current (lb-rhs): -0.05295643210411072
7 domains visited
Cumulative time: 1.5180487632751465

BaB round 3
batch: 2
splitting decisions: 
split level 0: [/input.19, 173] [/input.19, 173] 
split level 1: [/input.19, 435] [/input.19, 435] 
split level 2: [/input.19, 498] [/input.19, 498] 
split level 3: [/input.15, 3928] [/input.19, 181] 
split level 4: [/input.19, 80] [/input.19, 80] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.5367431640625e-05
Time: prepare 0.0195    bound 0.0130    transfer 0.0040    finalize 0.0166    func 0.0531    
Accumulated time: func 1.4139    prepare 0.0537    bound 1.2900    transfer 0.0168    finalize 0.0549    
Length of domains: 0
Time: pickout 0.0018    decision 0.0536    set_bounds 0.0135    solve 0.0531    add 0.0001    
Accumulated time: pickout 0.0048    decision 0.1602    set_bounds 0.0434    solve 1.4141    add 0.0055    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
7 domains visited
Cumulative time: 1.6407008171081543


Properties batch 2, size 1
Remaining timeout: 288.6741292476654
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.385608673095703.

Properties batch 3, size 1
Remaining timeout: 288.55013275146484
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.287215232849121.

Properties batch 4, size 1
Remaining timeout: 288.4442617893219
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.834733963012695.

Properties batch 5, size 1
Remaining timeout: 288.3392963409424
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39419448]], device='cuda:0') need to verify.
Model prediction is: tensor([ -5.85335732,  -5.55094719,  -9.64237595,  -1.07873368,  -7.50334072,
         -8.45317173,  -4.15465546,  -7.50504351, -23.82216835, -11.64735508],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39419448]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2233
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 7
Node /43 input 0: size torch.Size([512]) unstable 29
Node /45 input 0: size torch.Size([512]) unstable 106
-----------------
# of unstable neurons: 2375
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.23, 384] 
split level 1: [/input.23, 164] 
split level 2: [/input.19, 161] 
split level 3: [/input.23, 370] 
split level 4: [/input.19, 498] 
split level 5: [/input.19, 277] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 9.560585021972656e-05
Time: prepare 0.0104    bound 0.0129    transfer 0.0040    finalize 0.0152    func 0.0425    
Accumulated time: func 0.0425    prepare 0.0110    bound 0.0129    transfer 0.0040    finalize 0.0152    
Length of domains: 0
Time: pickout 0.0014    decision 0.0610    set_bounds 0.0137    solve 0.0427    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0610    set_bounds 0.0137    solve 0.0427    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.1292247772216797


Properties batch 6, size 1
Remaining timeout: 288.0406801700592
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9342136383056641.

Properties batch 7, size 1
Remaining timeout: 287.93060278892517
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 16.226016998291016.

Properties batch 8, size 1
Remaining timeout: 287.82492756843567
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.901440620422363.
Result: safe in 12.2800 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.61514783,  -8.72355270,  -9.41210556,   0.17848256, -15.66904831,
          -2.17131734, -12.51650906, -19.00153732, -14.64844036,  -2.72112203]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.61514735,  -8.72355652,  -9.41210270,   0.17848304, -15.66905117,
           -2.17131686, -12.51651001, -19.00153732, -14.64843941,  -2.72112250],
         [ -3.61514735,  -8.72355652,  -9.41210270,   0.17848304, -15.66905117,
           -2.17131686, -12.51651001, -19.00153732, -14.64843941,  -2.72112250]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-11.03329182,  -5.92488289,  -5.23633671, -14.82692242,   1.02061176,
          -12.47712231,  -2.13192940,   4.35309792, -11.92731667]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0088 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.70741653,  -3.79991603, -14.75167656,  -5.97698689,  -3.93434930,
          -6.65595865, -12.61964893,  -3.76749563, -31.38199806,  -8.20864201]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.70741653,  -3.79991579, -14.75167656,  -5.97698927,  -3.93434882,
           -6.65595913, -12.61964893,  -3.76749349, -31.38199806,  -8.20864296],
         [-18.70741653,  -3.79991579, -14.75167656,  -5.97698927,  -3.93434882,
           -6.65595913, -12.61964893,  -3.76749349, -31.38199806,  -8.20864296]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-12.67458153, -27.58208275, -16.63032150, -25.40500832, -27.44764900,
          -24.72603989, -18.76234818, -27.61450386, -23.17335510]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0076 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.93942642,  -8.70668983, -11.35247421,  -1.45392644,  -3.78957176,
         -10.96024704,  -0.69196171, -11.66452980, -22.38122749, -13.66599083]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.93942547,  -8.70668983, -11.35247231,  -1.45392656,  -3.78957081,
          -10.96024799,  -0.69196212, -11.66452980, -22.38122559, -13.66599083],
         [ -6.93942547,  -8.70668983, -11.35247231,  -1.45392656,  -3.78957081,
          -10.96024799,  -0.69196212, -11.66452980, -22.38122559, -13.66599083]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.76726437,  2.64578247, -7.25276327, -4.91711903,  2.25355816,
          -8.01472759,  2.95783997, 13.67453575,  4.95930099]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0075 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.21019363,   1.05172884, -10.43856907,  -7.44340420,  -3.59907317,
          -7.70708799,  -7.42078257,  -7.07868385,  -8.85323811,  -6.37471199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]100%|██████████| 1/1 [00:01<00:00,  1.58s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.33353901,   0.17604539,  -9.53397083,  -6.18107700,  -1.05630469,
           -6.85892105,  -7.26042318,  -5.59531546, -10.57915401,  -8.98337936],
         [ -8.33353901,   0.17604539,  -9.53397083,  -6.18107700,  -1.05630469,
           -6.85892105,  -7.26042318,  -5.59531546, -10.57915401,  -8.98337936]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.50958443,  9.71001625,  6.35712242,  1.23235011,  7.03496647,
           7.43646860,  5.77136087, 10.75519943,  9.15942478]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5885 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[ -8.21019459,   1.05172884, -10.43857002,  -7.44340324,  -3.59907269,
          -7.70708799,  -7.42078161,  -7.07868338,  -8.85323906,  -6.37471104]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [3215]; unstable size 3215; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.7 using sparse-spec alpha [2, 3, 1, 3215] with unstable size 2 total_size 8192 output_shape (32, 16, 16)
layer /34 start_node /input.15 using sparse-spec alpha [2, 32, 1, 3215] with unstable size 31 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 59, 1, 3215] with unstable size 58 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 218, 1, 3215] with unstable size 217 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 3215] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [2]; unstable size 2; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.15 using sparse-spec alpha [2, 32, 1, 2] with unstable size 31 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 59, 1, 2] with unstable size 58 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 218, 1, 2] with unstable size 217 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 32, 1, 0] with unstable size 31 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 59, 1, 0] with unstable size 58 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 218, 1, 0] with unstable size 217 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [31]; unstable size 31; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 59, 1, 31] with unstable size 58 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 218, 1, 31] with unstable size 217 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [58]; unstable size 58; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 218, 1, 58] with unstable size 217 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 58] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [217]; unstable size 217; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.83029556,  3.06975579, -2.39079332, -3.74179506, -0.44493079,
         -0.61249590,  0.52099168, -3.64737225,  1.04119372]], device='cuda:0') None
best_l after optimization: 14.039287567138672
alpha/beta optimization time: 8.353113889694214
initial alpha-crown bounds: tensor([[ 1.33102798,  4.95117474,  0.94667149, -1.51896858,  2.18471408,
          1.20185792,  2.23144102,  0.22431469,  2.48705339]], device='cuda:0')
Worst class: (+ rhs) -1.5189685821533203
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 32, 32]), torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 64, 16, 16]), torch.Size([9, 1, 64, 8, 8]), torch.Size([9, 1, 512]), torch.Size([9, 1, 512])]

Properties batch 0, size 1
Remaining timeout: 289.92499232292175
##### Instance 81 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3310279846191406.

Properties batch 1, size 1
Remaining timeout: 289.80757761001587
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.951174736022949.

Properties batch 2, size 1
Remaining timeout: 289.70182824134827
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9466714859008789.

Properties batch 3, size 1
Remaining timeout: 289.5970027446747
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.51896858]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.21019459,   1.05172884, -10.43857002,  -7.44340324,  -3.59907269,
         -7.70708799,  -7.42078161,  -7.07868338,  -8.85323906,  -6.37471104],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.51896858]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 3215
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 2
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 29
Node /43 input 0: size torch.Size([512]) unstable 53
Node /45 input 0: size torch.Size([512]) unstable 188
-----------------
# of unstable neurons: 3487
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.19, 74] 
split level 1: [/input.19, 354] 
split level 2: [/input.19, 175] 
split level 3: [/input.19, 23] 
split level 4: [/input.19, 293] 
split level 5: [/input.23, 273] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 64 = 0.78125
pruning-in-iteration extra time: 0.015507221221923828
Time: prepare 0.0109    bound 0.7331    transfer 0.0046    finalize 0.0131    func 0.7617    
Accumulated time: func 0.7617    prepare 0.0116    bound 0.7331    transfer 0.0046    finalize 0.0131    
Current worst splitting domains lb-rhs (depth):
-0.59895 (6), -0.54114 (6), -0.51722 (6), -0.46372 (6), -0.36087 (6), -0.29064 (6), -0.28800 (6), -0.28458 (6), -0.27724 (6), -0.27456 (6), -0.23696 (6), -0.14678 (6), -0.06033 (6), -0.04607 (6), 
Length of domains: 14
Time: pickout 0.0015    decision 0.0649    set_bounds 0.0143    solve 0.7617    add 0.0036    
Accumulated time: pickout 0.0015    decision 0.0649    set_bounds 0.0143    solve 0.7617    add 0.0036    
Current (lb-rhs): -0.5989487171173096
14 domains visited
Cumulative time: 0.8573601245880127

BaB round 2
batch: 14
splitting decisions: 
split level 0: [/input.19, 294] [/input.19, 294] [/input.19, 294] [/input.23, 203] [/input.19, 294] [/input.19, 294] [/input.23, 203] [/input.19, 294] [/input.19, 294] [/input.19, 294] 
split level 1: [/input.23, 203] [/input.23, 203] [/input.23, 203] [/input.23, 502] [/input.23, 203] [/input.23, 203] [/input.23, 502] [/input.23, 203] [/input.23, 203] [/input.23, 203] 
pruning_in_iteration open status: True
ratio of positive domain = 41 / 56 = 0.7321428571428572
pruning-in-iteration extra time: 0.013856649398803711
Time: prepare 0.0093    bound 0.8093    transfer 0.0041    finalize 0.0116    func 0.8344    
Accumulated time: func 1.5960    prepare 0.0212    bound 1.5424    transfer 0.0087    finalize 0.0247    
Current worst splitting domains lb-rhs (depth):
-0.44388 (8), -0.38519 (8), -0.37953 (8), -0.32757 (8), -0.15705 (8), -0.11976 (8), -0.10746 (8), -0.10491 (8), -0.07879 (8), -0.07355 (8), -0.05916 (8), -0.05834 (8), -0.04126 (8), -0.03089 (8), -0.02053 (8), 
Length of domains: 15
Time: pickout 0.0015    decision 0.0392    set_bounds 0.0058    solve 0.8345    add 0.0044    
Accumulated time: pickout 0.0030    decision 0.1041    set_bounds 0.0201    solve 1.5962    add 0.0079    
Current (lb-rhs): -0.44388294219970703
29 domains visited
Cumulative time: 1.7435002326965332

BaB round 3
batch: 15
splitting decisions: 
split level 0: [/input.23, 502] [/input.23, 502] [/input.19, 10] [/input.19, 10] [/input.23, 502] [/input.23, 502] [/input.19, 294] [/input.23, 502] [/input.23, 502] [/input.19, 10] 
split level 1: [/input.23, 498] [/input.23, 498] [/input.23, 502] [/input.23, 502] [/input.23, 498] [/input.23, 498] [/input.23, 498] [/input.23, 498] [/input.23, 498] [/input.23, 502] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 60 = 0.8833333333333333
pruning-in-iteration extra time: 0.014398336410522461
Time: prepare 0.0099    bound 0.7117    transfer 0.0045    finalize 0.0126    func 0.7388    
Accumulated time: func 2.3349    prepare 0.0314    bound 2.2542    transfer 0.0131    finalize 0.0373    
Current worst splitting domains lb-rhs (depth):
-0.34574 (10), -0.28866 (10), -0.22574 (10), -0.20659 (10), -0.17559 (10), -0.12417 (10), -0.02224 (10), 
Length of domains: 7
Time: pickout 0.0015    decision 0.0392    set_bounds 0.0057    solve 0.7389    add 0.0041    
Accumulated time: pickout 0.0045    decision 0.1433    set_bounds 0.0258    solve 2.3351    add 0.0121    
Current (lb-rhs): -0.345736026763916
36 domains visited
Cumulative time: 2.5337724685668945

BaB round 4
batch: 7
splitting decisions: 
split level 0: [/input.19, 492] [/input.19, 351] [/input.19, 10] [/input.19, 10] [/input.23, 498] [/input.23, 498] [/input.23, 498] 
split level 1: [/input.23, 148] [/input.23, 148] [/input.19, 492] [/input.19, 492] [/input.19, 492] [/input.19, 492] [/input.19, 492] 
split level 2: [/input.15, 3941] [/input.23, 490] [/input.23, 148] [/input.23, 148] [/input.23, 148] [/input.23, 148] [/input.23, 148] 
pruning_in_iteration open status: True
ratio of positive domain = 34 / 56 = 0.6071428571428572
pruning-in-iteration extra time: 0.013773679733276367
Time: prepare 0.0097    bound 0.7335    transfer 0.0042    finalize 0.0124    func 0.7599    
Accumulated time: func 3.0948    prepare 0.0414    bound 2.9877    transfer 0.0174    finalize 0.0497    
Current worst splitting domains lb-rhs (depth):
-0.09223 (13), -0.09073 (13), -0.08573 (13), -0.08434 (13), -0.06254 (13), -0.05597 (13), -0.04928 (13), -0.04582 (13), -0.03460 (13), -0.03306 (13), -0.03001 (13), -0.02298 (13), -0.02091 (13), -0.01865 (13), -0.01639 (13), -0.01389 (13), -0.00998 (13), -0.00955 (13), -0.00928 (13), -0.00707 (13), 
Length of domains: 22
Time: pickout 0.0014    decision 0.0371    set_bounds 0.0069    solve 0.7600    add 0.0042    
Accumulated time: pickout 0.0059    decision 0.1804    set_bounds 0.0327    solve 3.0951    add 0.0162    
Current (lb-rhs): -0.09223103523254395
58 domains visited
Cumulative time: 3.3442046642303467

BaB round 5
batch: 22
splitting decisions: 
split level 0: [/input.19, 10] [/input.19, 351] [/input.19, 351] [/input.19, 351] [/input.19, 10] [/input.7, 2970] [/input.19, 10] [/input.19, 351] [/input.7, 2970] [/input.19, 351] 
split level 1: [/input.19, 351] [/input.7, 2970] [/input.7, 2970] [/input.7, 2970] [/input.19, 351] [/input.15, 3941] [/input.19, 351] [/input.7, 2970] [/input.15, 3941] [/input.7, 2970] 
pruning_in_iteration open status: True
ratio of positive domain = 82 / 88 = 0.9318181818181819
pruning-in-iteration extra time: 0.016343355178833008
Time: prepare 0.0190    bound 0.7482    transfer 0.0075    finalize 0.0240    func 0.7987    
Accumulated time: func 3.8935    prepare 0.0607    bound 3.7359    transfer 0.0248    finalize 0.0737    
Current worst splitting domains lb-rhs (depth):
-0.04970 (15), -0.04685 (15), -0.04126 (15), -0.03824 (15), -0.02408 (15), -0.00986 (15), 
Length of domains: 6
Time: pickout 0.0015    decision 0.0395    set_bounds 0.0068    solve 0.7988    add 0.0025    
Accumulated time: pickout 0.0075    decision 0.2200    set_bounds 0.0394    solve 3.8939    add 0.0187    
Current (lb-rhs): -0.04969930648803711
64 domains visited
Cumulative time: 4.194435119628906

BaB round 6
batch: 6
splitting decisions: 
split level 0: [/input.23, 190] [/input.23, 190] [/input.15, 3938] [/input.15, 1824] [/input.15, 1824] [/input.15, 1824] 
split level 1: [/input.15, 3941] [/input.15, 3941] [/input.23, 190] [/input.23, 190] [/input.23, 190] [/input.15, 3938] 
split level 2: [/input.23, 53] [/input.23, 53] [/input.15, 3941] [/input.15, 3941] [/input.15, 3941] [/input.15, 3941] 
split level 3: [/input.23, 192] [/input.23, 192] [/input.23, 192] [/input.23, 192] [/input.23, 192] [/input.23, 192] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0260    bound 0.0110    transfer 0.0056    finalize 0.0225    func 0.0651    
Accumulated time: func 3.9587    prepare 0.0871    bound 3.7469    transfer 0.0304    finalize 0.0962    
Length of domains: 0
Time: pickout 0.0016    decision 0.0376    set_bounds 0.0103    solve 0.0652    add 0.0001    
Accumulated time: pickout 0.0091    decision 0.2576    set_bounds 0.0497    solve 3.9591    add 0.0188    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
64 domains visited
Cumulative time: 4.3098695278167725


Properties batch 4, size 1
Remaining timeout: 285.1091194152832
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1847140789031982.

Properties batch 5, size 1
Remaining timeout: 284.9978663921356
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2018579244613647.

Properties batch 6, size 1
Remaining timeout: 284.89292454719543
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.231441020965576.

Properties batch 7, size 1
Remaining timeout: 284.7884011268616
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.22431468963623047.

Properties batch 8, size 1
Remaining timeout: 284.6838982105255
##### Instance 81 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.487053394317627.
Result: safe in 15.4205 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.00394106,  -3.50591421,  -2.87578082,  -1.51853979,  -4.97201633,
          -1.79527831,  -6.20892811,  -4.32379627, -10.75210094,  -2.31399965]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.00394154,  -3.50591397,  -2.87578106,  -1.51853979,  -4.97201633,
           -1.79527843,  -6.20892811,  -4.32379627, -10.75210094,  -2.31399941],
         [ -6.00394154,  -3.50591397,  -2.87578106,  -1.51853979,  -4.97201633,
           -1.79527843,  -6.20892811,  -4.32379627, -10.75210094,  -2.31399941]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.68014526, -0.81788230, -1.44801521, -2.80525637,  0.64822006,
          -2.52851772,  1.88513184,  6.42830467, -2.00979686]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.00449276,  -7.14232302,  -4.58707190,   0.05409881,  -2.48590112,
          -2.15730643,  -7.86156273,  -4.17721987, -18.43123055,  -7.36245394]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.00449276,  -7.14232349,  -4.58707142,   0.05409905,  -2.48590112,
           -2.15730596,  -7.86156273,  -4.17721987, -18.43123055,  -7.36245441],
         [ -7.00449276,  -7.14232349,  -4.58707142,   0.05409905,  -2.48590112,
           -2.15730596,  -7.86156273,  -4.17721987, -18.43123055,  -7.36245441]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.41742134,  2.55525208, -4.64117050, -2.10117030, -2.42976546,
           3.27449131, -0.40985155, 13.84415913,  2.77538300]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.50243568,  -2.19366312, -17.84053421,  -7.45424938,  -7.32398081,
         -18.68131256, -22.93445587, -13.64529800, -26.71691322, -16.72079277]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.50243473,  -2.19366431, -17.84053421,  -7.45424891,  -7.32398033,
          -18.68131256, -22.93445587, -13.64529705, -26.71690941, -16.72079277],
         [-10.50243473,  -2.19366431, -17.84053421,  -7.45424891,  -7.32398033,
          -18.68131256, -22.93445587, -13.64529705, -26.71690941, -16.72079277]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -8.17887783, -16.48764801,  -0.84077835, -11.22706413, -11.35733223,
            4.25314331,  -5.03601551,   8.03559685,  -1.96051979]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.89491129,  -4.11143637, -13.29956722,  -3.61420655,  -4.99151468,
          -8.56501675,  -6.44790077, -10.58890533, -24.77271652,  -9.87404728]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.89491129,  -4.11143541, -13.29956722,  -3.61420655,  -4.99151468,
           -8.56501675,  -6.44790077, -10.58890533, -24.77271652,  -9.87404728],
         [ -6.89491129,  -4.11143541, -13.29956722,  -3.61420655,  -4.99151468,
           -8.56501675,  -6.44790077, -10.58890533, -24.77271652,  -9.87404728]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-6.40465593, -9.18813133, -9.68536091, -8.30805206, -4.73455048,
          -6.85166645, -2.71066189, 11.47314930, -3.42551994]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.48486447, -12.29698753,  -3.67800140,   1.18198347,  -8.23476315,
          -0.11114133, -10.72018337, -15.47531319, -13.71455002,  -9.39190102]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.48486459, -12.29698658,  -3.67800140,   1.18198347,  -8.23476124,
           -0.11114150, -10.72018242, -15.47531414, -13.71455002,  -9.39190102],
         [ -1.48486459, -12.29698658,  -3.67800140,   1.18198347,  -8.23476124,
           -0.11114150, -10.72018242, -15.47531414, -13.71455002,  -9.39190102]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-13.99044991,  -3.17832756, -11.79731274, -16.65729713,  -7.24055290,
          -15.36417294,  -4.75513172,  -1.76076412,  -6.08341312]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.37522292, -15.34000397, -12.03911781,  -4.97208834,  -7.51786089,
          -4.64647532, -15.60106945, -11.89271259, -26.30421066, -14.09172726]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.37522149, -15.34000587, -12.03911686,  -4.97208786,  -7.51786232,
           -4.64647436, -15.60106754, -11.89271355, -26.30421066, -14.09172821],
         [ -3.37522149, -15.34000587, -12.03911686,  -4.97208786,  -7.51786232,
           -4.64647436, -15.60106754, -11.89271355, -26.30421066, -14.09172821]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-22.92898941, -10.96420479, -14.26509380, -21.33212280, -18.78634834,
          -21.65773582, -10.70314312, -14.41149712, -12.21248245]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  2.64888740,  -6.06163836, -10.87541199,  -1.86817813,  -8.45826435,
          -5.43795872,  -8.10583496, -11.58165169, -20.64349937,  -8.39378548]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  2.64888597,  -6.06163883, -10.87541008,  -1.86817789,  -8.45826435,
           -5.43795776,  -8.10583496, -11.58165169, -20.64349937,  -8.39378548],
         [  2.64888597,  -6.06163883, -10.87541008,  -1.86817789,  -8.45826435,
           -5.43795776,  -8.10583496, -11.58165169, -20.64349937,  -8.39378548]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-11.04267120,  -2.33214664,   2.48162460,  -6.52560759,   0.06447887,
           -2.95582771,  -0.28795052,   3.18786621,  12.24971390]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.52211428,  -2.28609228,  -5.33158112,  -2.54335666,  -0.68644571,
          -3.54906988, -10.12969589,  -3.57009411,  -9.82472134,  -7.28039742]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.52211428,  -2.28609204,  -5.33158112,  -2.54335761,  -0.68644500,
           -3.54907012, -10.12969589,  -3.57009363,  -9.82472038,  -7.28039837],
         [ -6.52211428,  -2.28609204,  -5.33158112,  -2.54335761,  -0.68644500,
           -3.54907012, -10.12969589,  -3.57009363,  -9.82472038,  -7.28039837]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.23602200, -1.19053316, -3.97875667, -5.83566952, -2.97304416,
           3.60758162, -2.95202065,  3.30260611,  0.75828409]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.65782309,  -2.39009023,  -9.66485500,  -3.51601100,  -4.00089169,
          -8.50775909,  -3.61096716,  -9.71715164, -18.53866005,  -9.20290756]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.65782309,  -2.39008927,  -9.66485500,  -3.51601148,  -4.00089169,
           -8.50775909,  -3.61096716,  -9.71715069, -18.53866005,  -9.20290756],
         [ -6.65782309,  -2.39008927,  -9.66485500,  -3.51601148,  -4.00089169,
           -8.50775909,  -3.61096716,  -9.71715069, -18.53866005,  -9.20290756]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.14181161, -1.12592220,  6.14884377,  0.48488021,  4.99174786,
           0.09495568,  6.20113945, 15.02264881,  5.68689632]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.32169724, -5.67972898, -0.98625034,  0.76011884, -3.09761596,
         -0.95489573, -0.09045365, -5.07233715, -8.05837822, -4.03354073]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.32169724, -5.67972851, -0.98625022,  0.76011884, -3.09761548,
          -0.95489579, -0.09045368, -5.07233620, -8.05837822, -4.03354073],
         [-3.32169724, -5.67972851, -0.98625022,  0.76011884, -3.09761548,
          -0.95489579, -0.09045368, -5.07233620, -8.05837822, -4.03354073]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.73668098, -2.37864971, -7.07212782, -8.81849670, -4.96076298,
          -7.10348225, -7.96792459, -2.98604202, -4.02483749]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.32887363,  -7.80649948,  -9.71138763,  -6.88898325,  -8.88336849,
          -7.46860409,  -7.11730194, -11.35914516, -36.42091751, -15.43783092]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.32887363,  -7.80650139,  -9.71138573,  -6.88898325,  -8.88336754,
           -7.46860313,  -7.11730289, -11.35914516, -36.42092133, -15.43783092],
         [-15.32887363,  -7.80650139,  -9.71138573,  -6.88898325,  -8.88336754,
           -7.46860313,  -7.11730289, -11.35914516, -36.42092133, -15.43783092]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 8.21157074,  0.68919849,  2.59408283, -0.22831964,  1.76606464,
           0.35130024,  4.24184227, 29.30361938,  8.32052803]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.21626210,  -5.66943836,  -9.32083321,  -3.65890598,  -3.59382796,
         -11.11699677,  -4.96713638, -10.06847000, -22.51476860, -14.29779339]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.21626115,  -5.66943836,  -9.32083511,  -3.65890598,  -3.59382796,
          -11.11699677,  -4.96713638, -10.06847000, -22.51476860, -14.29779339],
         [ -3.21626115,  -5.66943836,  -9.32083511,  -3.65890598,  -3.59382796,
          -11.11699677,  -4.96713638, -10.06847000, -22.51476860, -14.29779339]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.37756681,  2.07561040,  5.72700691,  0.06507802,  7.52316856,
           1.37330842,  6.47464180, 18.92094040, 10.70396519]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.74346066,  -4.49934626,  -6.36604738,  -0.58346176,  -9.48481846,
          -2.99901772,  -0.62391722,  -5.11176586, -18.44435692,  -2.68875837]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.74346066,  -4.49934626,  -6.36604738,  -0.58346182,  -9.48481846,
           -2.99901748,  -0.62391704,  -5.11176586, -18.44435501,  -2.68875813],
         [-13.74346066,  -4.49934626,  -6.36604738,  -0.58346182,  -9.48481846,
           -2.99901748,  -0.62391704,  -5.11176586, -18.44435501,  -2.68875813]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.11954403,  3.87542915,  5.74213028, -0.04045522,  8.86090183,
           2.37510037,  4.48784876, 17.82043839,  2.06484103]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.71312809,  -0.43603531,  -6.75737381,  -0.88989025,  -5.40506172,
          -4.51949787,  -3.67802477,  -5.13310003, -11.33239269,  -3.00256777]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.71312809,  -0.43603519,  -6.75737381,  -0.88989025,  -5.40506268,
           -4.51949835,  -3.67802477,  -5.13310051, -11.33239269,  -3.00256777],
         [ -8.71312809,  -0.43603519,  -6.75737381,  -0.88989025,  -5.40506268,
           -4.51949835,  -3.67802477,  -5.13310051, -11.33239269,  -3.00256777]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.03510332, -3.24198961,  3.07934904, -2.78813457,  1.72703791,
           0.84147358,  1.45507574,  7.65436792, -0.67545700]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.95481879, -3.95242858, -0.72168714, -1.26413071, -0.33551016,
         -2.69074297, -0.40753728, -1.64933801, -1.56243587, -1.57749140]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.95481884, -3.95242858, -0.72168714, -1.26413083, -0.33551008,
          -2.69074273, -0.40753734, -1.64933789, -1.56243587, -1.57749164],
         [-0.95481884, -3.95242858, -0.72168714, -1.26413083, -0.33551008,
          -2.69074273, -0.40753734, -1.64933789, -1.56243587, -1.57749164]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.99760962, -0.23313171,  0.30931199, -0.61930877,  1.73592389,
          -0.54728150,  0.69451904,  0.60761702,  0.62267280]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.33559752,  -3.19681549, -16.57255745,  -4.19985008, -12.31427097,
         -18.80408859, -40.73827744, -10.21286488,  -5.13404751,  -4.39872742]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.33559847,  -3.19681525, -16.57255936,  -4.19985056, -12.31427097,
          -18.80408859, -40.73827744, -10.21286392,  -5.13404608,  -4.39872646],
         [ -6.33559847,  -3.19681525, -16.57255936,  -4.19985056, -12.31427097,
          -18.80408859, -40.73827744, -10.21286392,  -5.13404608,  -4.39872646]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.13878322, 10.23696136, -2.13574791,  5.97867250, 12.46849060,
          34.40267944,  3.87726545, -1.20155239, -1.93687201]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.93037224,  -9.96212959, -13.78030109,   0.79338211,  -8.85708523,
          -6.70607901,   0.83457655, -15.80162907, -33.68392563, -13.77662659]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.93037224,  -9.96212864, -13.78030014,   0.79338175,  -8.85708618,
           -6.70607948,   0.83457571, -15.80162811, -33.68392563, -13.77662754],
         [-17.93037224,  -9.96212864, -13.78030014,   0.79338175,  -8.85708618,
           -6.70607948,   0.83457571, -15.80162811, -33.68392563, -13.77662754]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  2.12874413,  -5.83949947,  -2.02132797, -16.59501076,  -6.94454193,
           -9.09554863, -16.63620377,  17.88229752,  -2.02500057]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -0.34579664,  -0.09636806,  -4.53805828,  -8.39657402,  -3.17677426,
         -12.44951820,  -9.28300095,  -4.93779993,  -1.25747013,  -5.40486574]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.34579635,  -0.09636785,  -4.53805780,  -8.39657497,  -3.17677426,
          -12.44951820,  -9.28300095,  -4.93779993,  -1.25746942,  -5.40486574],
         [ -0.34579635,  -0.09636785,  -4.53805780,  -8.39657497,  -3.17677426,
          -12.44951820,  -9.28300095,  -4.93779993,  -1.25746942,  -5.40486574]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.83097792, -3.08040643,  1.36128354,  5.21980095,  9.27274418,
           6.10622692,  1.76102567, -1.91930485,  2.22809148]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.61163926,  -4.16419029,  -7.03815413,  -1.34599686,  -6.50080061,
          -0.96470731, -10.00031567,  -3.64667726,   1.06438625,  -6.12296867]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.61163974,  -4.16419077,  -7.03815508,  -1.34599686,  -6.50080109,
           -0.96470702, -10.00031567,  -3.64667702,   1.06438625,  -6.12296820],
         [ -3.61163974,  -4.16419077,  -7.03815508,  -1.34599686,  -6.50080109,
           -0.96470702, -10.00031567,  -3.64667702,   1.06438625,  -6.12296820]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.64693260,  3.19948387,  6.07344818,  0.38128984,  5.53609419,
           9.03560829,  2.68197012, -2.02909327,  5.15826130]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.04534817,  -4.97664928,  -9.99570370,  -4.55071640,  -6.30514431,
          -7.80673409,  -6.23131943,  -1.18127739, -27.30451965,  -9.88509941]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.04534912,  -4.97664928,  -9.99570370,  -4.55071783,  -6.30514431,
           -7.80673361,  -6.23131943,  -1.18127811, -27.30451584,  -9.88509941],
         [ -9.04534912,  -4.97664928,  -9.99570370,  -4.55071783,  -6.30514431,
           -7.80673361,  -6.23131943,  -1.18127811, -27.30451584,  -9.88509941]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.81402969, -1.25467014,  3.76438427, -1.68060160,  0.07382488,
           1.57541418, -5.05004120, 21.07319641,  3.65377998]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.99457741,  -4.84948254, -12.10337448,   0.78352737,  -6.46605396,
          -4.74854183,  -3.38918614,  -7.15037107, -27.69216537,  -7.23219347]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.55283928,  -5.08753490, -13.36194134,   0.86962020,  -6.84413385,
           -4.67803526,   0.13423789,  -6.43862581, -30.13781929,  -6.94688463],
         [-18.55283928,  -5.08753490, -13.36194134,   0.86962020,  -6.84413385,
           -4.67803526,   0.13423789,  -6.43862581, -30.13781929,  -6.94688463]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[19.42245865,  5.95715523, 14.23156166,  7.71375418,  5.54765558,
           0.73538232,  7.30824614, 31.00743866,  7.81650496]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5702 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[-16.99457550,  -4.84948301, -12.10337448,   0.78352749,  -6.46605492,
          -4.74854183,  -3.38918710,  -7.15037155, -27.69216537,  -7.23219538]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2713]; unstable size 2713; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.15 using sparse-spec alpha [2, 20, 1, 2713] with unstable size 19 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 49, 1, 2713] with unstable size 48 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 175, 1, 2713] with unstable size 174 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2713] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.15 using sparse-spec alpha [2, 20, 1, 0] with unstable size 19 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 49, 1, 0] with unstable size 48 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 175, 1, 0] with unstable size 174 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 20, 1, 0] with unstable size 19 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 49, 1, 0] with unstable size 48 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 175, 1, 0] with unstable size 174 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [19]; unstable size 19; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 49, 1, 19] with unstable size 48 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 175, 1, 19] with unstable size 174 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [48]; unstable size 48; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 175, 1, 48] with unstable size 174 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [174]; unstable size 174; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 174] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.34010506, -0.35841882,  7.50933695,  2.29417419,  2.81638503,
         -1.61127019,  0.18341875, 17.48694611,  3.28876781]], device='cuda:0') None
best_l after optimization: 50.28490447998047
alpha/beta optimization time: 7.211213827133179
initial alpha-crown bounds: tensor([[12.31385040,  0.59394944,  8.25052357,  2.84097338,  3.11867881,
         -0.76281142,  1.09911084, 19.01803589,  3.81259084]], device='cuda:0')
Worst class: (+ rhs) -0.7628114223480225
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 32, 32]), torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 64, 16, 16]), torch.Size([9, 1, 64, 8, 8]), torch.Size([9, 1, 512]), torch.Size([9, 1, 512])]

Properties batch 0, size 1
Remaining timeout: 291.10239815711975
##### Instance 102 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 12.313850402832031.

Properties batch 1, size 1
Remaining timeout: 290.9529356956482
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5939494371414185.

Properties batch 2, size 1
Remaining timeout: 290.8471693992615
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.250523567199707.

Properties batch 3, size 1
Remaining timeout: 290.74243092536926
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.840973377227783.

Properties batch 4, size 1
Remaining timeout: 290.63791847229004
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1186788082122803.

Properties batch 5, size 1
Remaining timeout: 290.5332176685333
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76281142]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.99457550,  -4.84948301, -12.10337448,   0.78352749,  -6.46605492,
         -4.74854183,  -3.38918710,  -7.15037155, -27.69216537,  -7.23219538],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /46 with alignment adjustment
setting alpha for layer /36 start_node /46 with alignment adjustment
setting alpha for layer /38 start_node /46 with alignment adjustment
setting alpha for layer /40 start_node /46 with alignment adjustment
setting alpha for layer /43 start_node /46 with alignment adjustment
setting alpha for layer /45 start_node /46 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 64, 16, 16]), torch.Size([1, 1, 64, 8, 8]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76281142]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input.3,/input.7,/input.11,/input.15,/input.19,/input.23,/46
Keeping alphas for these layers: ['/46']
Keeping alphas for these layers: ['/46']
Node /34 input 0: size torch.Size([32, 32, 32]) unstable 2713
Node /36 input 0: size torch.Size([32, 16, 16]) unstable 0
Node /38 input 0: size torch.Size([64, 16, 16]) unstable 0
Node /40 input 0: size torch.Size([64, 8, 8]) unstable 19
Node /43 input 0: size torch.Size([512]) unstable 48
Node /45 input 0: size torch.Size([512]) unstable 168
-----------------
# of unstable neurons: 2948
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.23, 384] 
split level 1: [/input.23, 57] 
split level 2: [/input.23, 164] 
split level 3: [/input.19, 378] 
split level 4: [/input.19, 486] 
split level 5: [/input.19, 1] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0077    bound 0.0112    transfer 0.0048    finalize 0.0156    func 0.0393    
Accumulated time: func 0.0393    prepare 0.0082    bound 0.0112    transfer 0.0048    finalize 0.0156    
Length of domains: 0
Time: pickout 0.0010    decision 0.0509    set_bounds 0.0087    solve 0.0395    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0509    set_bounds 0.0087    solve 0.0395    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.10944032669067383


Properties batch 6, size 1
Remaining timeout: 290.2573971748352
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0991108417510986.

Properties batch 7, size 1
Remaining timeout: 290.14724016189575
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 19.018035888671875.

Properties batch 8, size 1
Remaining timeout: 290.04177832603455
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8125908374786377.
Result: safe in 10.0629 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.74169922,   3.18487740, -25.70098686, -12.89040375,  -9.66670895,
         -28.16256523, -20.96620560, -18.18441963,   1.72282946, -21.98796654]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.86662483,   2.27109456, -24.40559769, -13.94390106,  -8.29424858,
          -29.69194031, -21.02261734, -17.66981125,   4.54541445, -25.05205345],
         [ -9.86662483,   2.27109456, -24.40559769, -13.94390106,  -8.29424858,
          -29.69194031, -21.02261734, -17.66981125,   4.54541445, -25.05205345]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.13771915, 26.67669296, 16.21499634, 10.56534290, 31.96303558,
          23.29371262, 19.94090652, -2.27431989, 27.32314873]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.5685 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5697 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.07852077,  -2.82473326, -19.64451981,  -8.46486664, -28.73138428,
          -3.53202033, -23.93880844, -36.17374420, -16.69297218,  -3.18862009]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.55s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.20244980,  -5.29941893, -17.41183853,  -7.33339214, -25.26585579,
           -3.30891895, -24.17010307, -34.09719467, -17.29442024,  -5.28576040],
         [ -5.20244980,  -5.29941893, -17.41183853,  -7.33339214, -25.26585579,
           -3.30891895, -24.17010307, -34.09719467, -17.29442024,  -5.28576040]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-9.69691277e-02,  1.21124191e+01,  2.03397322e+00,  1.99664364e+01,
          -1.99049997e+00,  1.88706837e+01,  2.87977753e+01,  1.19950008e+01,
          -1.36585236e-02]]], device='cuda:0')
number of violation:  3
Attack finished in 1.5610 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5621 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.75049162, -1.61846590, -6.71544027, -1.74783969, -4.10665226,
         -8.85754490, -8.02492237, -6.23690844, -2.80973506, -6.40669012]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.75049257, -1.61846638, -6.71544027, -1.74783897, -4.10665226,
          -8.85754299, -8.02492142, -6.23690844, -2.80973601, -6.40669012],
         [-2.75049257, -1.61846638, -6.71544027, -1.74783897, -4.10665226,
          -8.85754299, -8.02492142, -6.23690844, -2.80973601, -6.40669012]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.00265360, -0.12937260,  4.96760130,  2.35881329,  7.10970402,
           6.27708244,  4.48906946,  1.06189704,  4.65885115]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.36683083,  -2.77566624,  -9.05318260,  -3.50911069,  -4.38716936,
          -9.58188248,  -8.21267796,  -9.95783806, -17.91349602, -11.32176018]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.36682796,  -2.77566743,  -9.05318069,  -3.50911117,  -4.38716984,
           -9.58188343,  -8.21268082,  -9.95783710, -17.91349602, -11.32176113],
         [ -9.36682796,  -2.77566743,  -9.05318069,  -3.50911117,  -4.38716984,
           -9.58188343,  -8.21268082,  -9.95783710, -17.91349602, -11.32176113]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.15414715, -5.43701363,  0.84049988, -4.70356941, -3.82551098,
           1.36920261,  1.74515629,  9.70081520,  3.10908031]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.78005314,   1.24556470, -13.53361511,  -7.41494846,  -8.72108555,
          -9.73473549, -13.20783710,  -2.03235698,   0.92838502,  -3.68797302]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.78005266,   1.24556482, -13.53361511,  -7.41494799,  -8.72108555,
           -9.73473644, -13.20783710,  -2.03235674,   0.92838526,  -3.68797326],
         [ -3.78005266,   1.24556482, -13.53361511,  -7.41494799,  -8.72108555,
           -9.73473644, -13.20783710,  -2.03235674,   0.92838526,  -3.68797326]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.70843792, -0.31717956, 14.46199989,  8.34333324,  9.64947128,
          10.66312218, 14.13622284,  2.96074200,  4.61635876]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.52524018,  -1.13238120,  -7.54355478, -12.52637291,  -7.05800247,
         -15.12257004, -20.58467293,  -2.34594321,  -3.45654488,   0.37368381]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.52524018,  -1.13238084,  -7.54355478, -12.52637386,  -7.05800247,
          -15.12257004, -20.58467484,  -2.34594297,  -3.45654488,   0.37368420],
         [ -2.52524018,  -1.13238084,  -7.54355478, -12.52637386,  -7.05800247,
          -15.12257004, -20.58467484,  -2.34594297,  -3.45654488,   0.37368420]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.17929721, -1.21356213,  5.19761181, 10.18043137,  4.71205950,
          12.77662659, 18.23873138,  1.11060190, -2.71962714]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.66679764,  -7.24595308,  -2.51498556,  -3.81927013,  -1.46658003,
          -3.10215831,  -0.31577611,  -3.35733318, -17.94328117,  -9.56610680]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.66679764,  -7.24595308,  -2.51498532,  -3.81927013,  -1.46657979,
           -3.10215831,  -0.31577632,  -3.35733318, -17.94327927,  -9.56610775],
         [ -8.66679764,  -7.24595308,  -2.51498532,  -3.81927013,  -1.46657979,
           -3.10215831,  -0.31577632,  -3.35733318, -17.94327927,  -9.56610775]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.20021772,  5.77937317,  1.04840553,  2.35269022,  1.63557851,
          -1.15080345,  1.89075339, 16.47669983,  8.09952831]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.40221894,   0.64240992, -13.55899715, -14.93097019,  -5.87814426,
         -13.23385334, -38.02618408, -10.90735626,   2.93142486, -10.45031261]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.40221965,   0.64240974, -13.55899620, -14.93096924,  -5.87814426,
          -13.23385239, -38.02618408, -10.90735626,   2.93142486, -10.45031357],
         [ -1.40221965,   0.64240974, -13.55899620, -14.93096924,  -5.87814426,
          -13.23385239, -38.02618408, -10.90735626,   2.93142486, -10.45031357]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.04462934, 12.15677643, 13.52874947,  4.47592449, 11.83163261,
          36.62396622,  9.50513649, -4.33364439,  9.04809380]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.70983982,  -2.06241989,  -7.77931023,  -5.04453278,  -4.66524744,
          -8.46803665,  -0.81839901,  -6.37674999, -21.49002647,  -8.61859417]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.55s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.19865417,   1.87581313,  -8.98377132,  -7.71248674,  -4.78796196,
          -10.75580215,  -2.41580319,  -9.30465698, -20.86062241,  -6.98851776],
         [-13.19865417,   1.87581313,  -8.98377132,  -7.71248674,  -4.78796196,
          -10.75580215,  -2.41580319,  -9.30465698, -20.86062241,  -6.98851776]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.78285122, -4.29161644,  6.56796837,  5.29668331,  2.37215877,
           8.33999920,  6.88885403, 18.44481850,  4.57271481]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.5611 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5621 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.60288554, -1.07444584, -4.36888409, -4.47937346, -0.78954661,
         -4.80151892, -2.00151443, -3.77182913, -7.67866898, -5.15578127]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.60288590, -1.07444525, -4.36888456, -4.47937346, -0.78954649,
          -4.80151939, -2.00151420, -3.77182961, -7.67866850, -5.15578032],
         [-0.60288590, -1.07444525, -4.36888456, -4.47937346, -0.78954649,
          -4.80151939, -2.00151420, -3.77182961, -7.67866850, -5.15578032]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.76599860, -3.29443932,  0.11048889, -3.57933807,  0.43263483,
          -2.36737037, -0.59705496,  3.30978394,  0.78689575]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.04168320,  -1.18751466, -14.38288498,  -4.87309980,  -8.02017498,
         -10.92590904,  -0.62096632, -10.46642590, -31.75866699,  -9.20481968]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.04168510,  -1.18751538, -14.38288593,  -4.87309885,  -8.02017593,
          -10.92591000,  -0.62096602, -10.46642494, -31.75867081,  -9.20481968],
         [-17.04168510,  -1.18751538, -14.38288593,  -4.87309885,  -8.02017593,
          -10.92591000,  -0.62096602, -10.46642494, -31.75867081,  -9.20481968]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[15.85416985, 13.19537067,  3.68558359,  6.83266068,  9.73839474,
          -0.56654936,  9.27890968, 30.57115555,  8.01730442]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.63376808,  -6.11120367, -13.97346783,  -3.42411232, -15.31267357,
          -7.90391159, -11.50662899, -11.69882679, -35.41975403,  -9.52661705]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.19239044,  -0.42147869, -15.96116066,  -7.64053249, -16.02614594,
          -10.14452648, -12.03427219, -10.79015350, -34.01986694,  -5.69307661],
         [-19.19239044,  -0.42147869, -15.96116066,  -7.64053249, -16.02614594,
          -10.14452648, -12.03427219, -10.79015350, -34.01986694,  -5.69307661]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.55185795, -7.21905375,  8.32062817,  8.38561344,  2.50399399,
           4.39373970,  3.14962101, 26.37933350, -1.94745588]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0363 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0373 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.07929134,   0.79436576, -11.20468426,  -6.24869585, -10.23436069,
          -5.78545427,  -2.83481908, -10.23679256, -13.00019836,   1.40243375]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.07929134,   0.79436606, -11.20468330,  -6.24869633, -10.23436069,
           -5.78545570,  -2.83481908, -10.23679161, -13.00020027,   1.40243340],
         [-10.07929134,   0.79436606, -11.20468330,  -6.24869633, -10.23436069,
           -5.78545570,  -2.83481908, -10.23679161, -13.00020027,   1.40243340]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-10.87365723,   1.12539196,  -3.83059502,   0.15506935,  -4.29383564,
           -7.24447250,   0.15750027,   2.92090893, -11.48172474]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.58976936,  -7.12990141, -15.98322582,  -2.52799654,  -5.40733957,
         -13.75404644,  -4.87056684, -15.52890491, -34.04583359, -17.17292786]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.58976936,  -7.12990093, -15.98322582,  -2.52799654,  -5.40733910,
          -13.75404358,  -4.87056875, -15.52890491, -34.04582977, -17.17292786],
         [-15.58976936,  -7.12990093, -15.98322582,  -2.52799654,  -5.40733910,
          -13.75404358,  -4.87056875, -15.52890491, -34.04582977, -17.17292786]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.18243027,  1.72256184, 10.57588673, -2.87934256,  8.34670448,
          -0.53677034, 10.12156582, 28.63849068, 11.76558876]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.67278147,  -2.77054501, -12.82126617,  -5.32177401, -10.78132153,
         -16.70773506, -12.02611065, -13.66221523, -17.33079529, -13.67185020]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.67278290,  -2.77054405, -12.82126522,  -5.32177401, -10.78132057,
          -16.70773506, -12.02610970, -13.66221333, -17.33080101, -13.67184830],
         [ -6.67278290,  -2.77054405, -12.82126522,  -5.32177401, -10.78132057,
          -16.70773506, -12.02610970, -13.66221333, -17.33080101, -13.67184830]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -6.14848232, -10.05072117,  -7.49949121,  -2.03994465,   3.88646984,
           -0.79515553,   0.84094810,   4.50953579,   0.85058308]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.74822044,  -0.48604485,  -8.22577572,  -0.69968146,  -6.55691910,
          -2.23174953,  -9.49248314,  -1.28838444, -16.71300316,  -0.60378063]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.74822044,  -0.48604444,  -8.22577572,  -0.69968146,  -6.55692005,
           -2.23174953,  -9.49248409,  -1.28838468, -16.71300316,  -0.60378045],
         [ -8.74822044,  -0.48604444,  -8.22577572,  -0.69968146,  -6.55692005,
           -2.23174953,  -9.49248409,  -1.28838468, -16.71300316,  -0.60378045]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.45983601, -0.80234027,  6.93739128, -0.58870322,  5.26853561,
           0.94336486,  8.20409966, 15.42461872, -0.68460423]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  0.06537486,  -5.40609550,  -3.90952611,  -6.59715605,  -1.24354422,
          -5.50748348,  -4.38628864,  -3.76517248, -15.04938412, -11.35495186]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.06537468,  -5.40609598,  -3.90952611,  -6.59715605,  -1.24354422,
           -5.50748348,  -4.38628721,  -3.76517272, -15.04938412, -11.35495186],
         [  0.06537468,  -5.40609598,  -3.90952611,  -6.59715605,  -1.24354422,
           -5.50748348,  -4.38628721,  -3.76517272, -15.04938412, -11.35495186]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-15.11475849,  -9.64328766, -11.13985825,  -8.45222855, -13.80583954,
           -9.54190063, -10.66309738, -11.28421116,  -3.69443226]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.09446621,  -2.86222982, -12.50047302,  -2.14987659,   0.79749912,
          -8.94926167, -18.66614723,  -5.87760973,  -7.19454479, -16.02576828]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.09446621,  -2.86223054, -12.50047207,  -2.14987659,   0.79749888,
           -8.94926167, -18.66614723,  -5.87760973,  -7.19454527, -16.02576637],
         [ -9.09446621,  -2.86223054, -12.50047207,  -2.14987659,   0.79749888,
           -8.94926167, -18.66614723,  -5.87760973,  -7.19454527, -16.02576637]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.94458961,  0.71235394, 10.35059547, -2.94737554,  6.79938507,
          16.51626968,  3.72773314,  5.04466867, 13.87588978]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.78544140,  -1.46991253,  -7.56749535,  -7.61003542,  -5.93753338,
          -8.51879597,  -7.82068253,  -2.99463034, -22.20390320,  -6.57589149]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.26273656,  -3.53132677,  -6.16445637,  -7.39865112,  -4.86752510,
           -9.15328217,  -9.38514042,  -2.97496915, -18.40727806,  -8.21840096],
         [ -3.26273656,  -3.53132677,  -6.16445637,  -7.39865112,  -4.86752510,
           -9.15328217,  -9.38514042,  -2.97496915, -18.40727806,  -8.21840096]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.26859021,  2.63312960,  3.86732435,  1.33619833,  5.62195539,
           5.85381365, -0.55635762, 14.87595177,  4.68707418]]],
       device='cuda:0')
number of violation:  2
Attack finished in 1.5621 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5631 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.79969215,  -0.38847452, -12.59098339,  -5.35565948, -10.63870335,
         -10.05735016,  -8.92679596, -12.26361942, -26.48243332,  -8.84506321]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.79969120,  -0.38847423, -12.59098339,  -5.35566092, -10.63870430,
          -10.05734825,  -8.92679405, -12.26361942, -26.48243332,  -8.84506416],
         [-13.79969120,  -0.38847423, -12.59098339,  -5.35566092, -10.63870430,
          -10.05734825,  -8.92679405, -12.26361942, -26.48243332,  -8.84506416]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  1.20870781, -12.20250893,  -7.23532248,  -1.95227909,  -2.53363514,
           -3.66418934,  -0.32736397,  13.89144993,  -3.74591923]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  4.22038364,  -2.54846644, -20.47895432,  -9.43184280, -10.44663429,
         -15.18779182, -12.73101902, -15.38336849, -24.42556190, -10.61895752]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  4.22038221,  -2.54846597, -20.47895432,  -9.43184280, -10.44663525,
          -15.18779373, -12.73101997, -15.38336754, -24.42556190, -10.61895561],
         [  4.22038221,  -2.54846597, -20.47895432,  -9.43184280, -10.44663525,
          -15.18779373, -12.73101997, -15.38336754, -24.42556190, -10.61895561]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-28.64594460, -21.87709618,  -3.94660759, -14.99371910, -13.97892666,
           -9.23776817, -11.69454193,  -9.04219437, -13.80660629]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.04103374,  -0.32037404,  -5.57347488,  -2.49376559,  -5.35333157,
          -3.79350543,  -2.87516952,  -6.19369316, -13.90657806,  -4.46146202]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.04102993,  -0.32037398,  -5.57347441,  -2.49376655,  -5.35333157,
           -3.79350567,  -2.87516999,  -6.19369316, -13.90657616,  -4.46146202],
         [ -9.04102993,  -0.32037398,  -5.57347441,  -2.49376655,  -5.35333157,
           -3.79350567,  -2.87516999,  -6.19369316, -13.90657616,  -4.46146202]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-8.72065639, -3.46755552, -6.54726315, -3.68769836, -5.24752426,
          -6.16586018, -2.84733677,  4.86554623, -4.57956791]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.96516800,  -3.03102827, -10.42327023,  -2.31780720,  -0.77100849,
          -4.92677641,  -6.94387484,  -3.82543564, -18.47957039, -12.05539799]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.96516991,  -3.03103042, -10.42327023,  -2.31780672,  -0.77100873,
           -4.92677546,  -6.94387484,  -3.82543421, -18.47957230, -12.05539799],
         [-13.96516991,  -3.03103042, -10.42327023,  -2.31780672,  -0.77100873,
           -4.92677546,  -6.94387484,  -3.82543421, -18.47957230, -12.05539799]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -4.51440239, -15.44854164,  -8.05630207, -16.16176605, -17.70856285,
          -13.55279732, -11.53569794, -14.65413857,  -6.42417431]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.22849655,   0.91555732, -11.74856281,  -1.75692499,  -9.82775021,
          -7.86440992,  -2.97888589,  -8.80196476,  -9.48748302,  -0.93618375]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.22849655,   0.91555768, -11.74856281,  -1.75692511,  -9.82775021,
           -7.86440945,  -2.97888517,  -8.80196381,  -9.48748302,  -0.93618345],
         [-12.22849655,   0.91555768, -11.74856281,  -1.75692511,  -9.82775021,
           -7.86440945,  -2.97888517,  -8.80196381,  -9.48748302,  -0.93618345]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.47157097, -2.67248273,  9.99163818,  8.07082558,  6.10748434,
           1.22196007,  7.04503870,  7.73055792, -0.82074165]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.41603422, -1.86728656, -7.06080151, -3.14511061, -4.17118073,
         -2.71107674, -9.32610226, -4.87725401,  0.92332196, -9.07040882]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.41603422, -1.86728632, -7.06080294, -3.14511061, -4.17118025,
          -2.71107721, -9.32610130, -4.87725401,  0.92332172, -9.07040882],
         [-4.41603422, -1.86728632, -7.06080294, -3.14511061, -4.17118025,
          -2.71107721, -9.32610130, -4.87725401,  0.92332172, -9.07040882]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.70495701, -0.84379089,  4.34972572,  0.43403339,  1.46010303,
           6.61502409,  2.16617680, -3.63439894,  6.35933161]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.74793005,  -4.69010687,  -3.17349696,   0.59921217,  -2.33980942,
          -1.01592815,  -4.53510380,  -2.93080497, -10.26368809,  -6.35063457]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.74792862,  -4.69010639,  -3.17349720,   0.59921223,  -2.33980918,
           -1.01592803,  -4.53510332,  -2.93080497, -10.26368809,  -6.35063457],
         [ -4.74792862,  -4.69010639,  -3.17349720,   0.59921223,  -2.33980918,
           -1.01592803,  -4.53510332,  -2.93080497, -10.26368809,  -6.35063457]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.57443142,  1.51660919, -3.77270937, -0.83368802, -2.15756917,
           1.36160612, -0.24269223,  7.09019089,  3.17713737]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.88556623, -3.75219989, -7.63572598, -2.59049010, -6.76465225,
         -3.17979813, -7.14549541, -2.15784526, -1.58234239, -1.34272850]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.88556671, -3.75219989, -7.63572693, -2.59048986, -6.76465225,
          -3.17979813, -7.14549541, -2.15784526, -1.58234215, -1.34272861],
         [-1.88556671, -3.75219989, -7.63572693, -2.59048986, -6.76465225,
          -3.17979813, -7.14549541, -2.15784526, -1.58234215, -1.34272861]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.87908554, -3.01245236,  0.87107468, -4.17416239, -3.58485413,
           0.38084316, -4.60680676, -5.18231010, -5.42192364]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.20026779,   0.94633090, -13.65156937,  -8.50529289,  -6.43957233,
         -11.72750759,  -4.04074001,  -7.07983875, -27.05201912,  -2.63502765]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.10738945,  -2.40821099, -13.25323391,  -6.01925039,  -4.80874681,
           -9.81067562,  -1.39897799,  -6.71499109, -30.76710510,  -5.81674910],
         [-23.10738945,  -2.40821099, -13.25323391,  -6.01925039,  -4.80874681,
           -9.81067562,  -1.39897799,  -6.71499109, -30.76710510,  -5.81674910]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[20.69917870, 10.84502316,  3.61103940,  2.40053582,  7.40246487,
          -1.00923300,  4.30677986, 28.35889435,  3.40853810]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0358 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.55345726,  -6.55235147, -13.09631538,   0.19958597,  -4.56966829,
          -4.04726601, -18.66021347,  -6.32158518, -33.37531662, -15.76448822]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.55345726,  -6.55235147, -13.09631634,   0.19958594,  -4.56966829,
           -4.04726648, -18.66021347,  -6.32158613, -33.37531662, -15.76448822],
         [-18.55345726,  -6.55235147, -13.09631634,   0.19958594,  -4.56966829,
           -4.04726648, -18.66021347,  -6.32158613, -33.37531662, -15.76448822]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-14.82185936, -26.82296562, -20.27899933, -33.57490158, -28.80564880,
          -29.32805061, -14.71510315, -27.05373001, -17.61082840]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.03921127,  -4.75235796,  -9.89256573,  -6.27510118,  -5.12566996,
          -7.23932600,  -8.85787868,  -3.78830457, -24.95602226, -10.29965687]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.03921223,  -4.75235701,  -9.89256573,  -6.27510118,  -5.12566853,
           -7.23932648,  -8.85787868,  -3.78830600, -24.95602036, -10.29965878],
         [-14.03921223,  -4.75235701,  -9.89256573,  -6.27510118,  -5.12566853,
           -7.23932648,  -8.85787868,  -3.78830600, -24.95602036, -10.29965878]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.73955345, -5.54730177, -0.40709305, -4.02455759, -5.17399025,
          -3.06033230, -1.44178009, -6.51135254, 14.65636158]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.43573952,  -6.86250687, -15.00169373,   0.85102224,  -5.48544884,
          -3.71472049, -18.23690987,  -2.19671869, -26.53403664, -12.68385220]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.43573952,  -6.86250734, -15.00169373,   0.85102224,  -5.48544836,
           -3.71472025, -18.23690987,  -2.19671869, -26.53403282, -12.68385220],
         [-18.43573952,  -6.86250734, -15.00169373,   0.85102224,  -5.48544836,
           -3.71472025, -18.23690987,  -2.19671869, -26.53403282, -12.68385220]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.57323265,  8.13918686, -7.71352959, -1.37705898, -3.14778709,
          11.37440300, -4.66578865, 19.67152596,  5.82134485]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.76194692, -0.37507430, -2.66816664, -5.15103626, -2.83345509,
         -3.86491632, -4.35875082, -2.29033375, -0.01015632, -1.96435034]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.76194692, -0.37507442, -2.66816616, -5.15103626, -2.83345532,
          -3.86491609, -4.35875082, -2.29033375, -0.01015572, -1.96435082],
         [-3.76194692, -0.37507442, -2.66816616, -5.15103626, -2.83345532,
          -3.86491609, -4.35875082, -2.29033375, -0.01015572, -1.96435082]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.09378076, -2.29309177,  2.48287010,  0.16528916,  1.19674993,
           1.69058466, -0.37783241, -2.65801048, -0.70381534]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.41971016,  -4.40632391, -16.21029282,  -2.50407720, -13.15130138,
         -10.07896519,  -1.45898950, -10.75714111, -44.69727325,  -9.97981167]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.41971016,  -4.40632296, -16.21029282,  -2.50407863, -13.15130329,
          -10.07896614,  -1.45898974, -10.75714111, -44.69728088,  -9.97981071],
         [-24.41971016,  -4.40632296, -16.21029282,  -2.50407863, -13.15130329,
          -10.07896614,  -1.45898974, -10.75714111, -44.69728088,  -9.97981071]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.43989944, -5.57348776,  6.23048210, -7.47573185,  3.17149258,
           0.09915543, -8.52082062,  0.77733040, 34.71746826]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.99242973,  -1.53684115,  -9.44434166,  -1.79828119,  -4.30159616,
          -7.12712097,  -5.75645733,  -8.51622391, -12.20375252,  -4.45440626]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.99242973,  -1.53684199,  -9.44434166,  -1.79828119,  -4.30159616,
           -7.12712097,  -5.75645685,  -8.51622486, -12.20375252,  -4.45440674],
         [ -8.99242973,  -1.53684199,  -9.44434166,  -1.79828119,  -4.30159616,
           -7.12712097,  -5.75645685,  -8.51622486, -12.20375252,  -4.45440674]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.47620487, -6.97938299,  0.92811680, -6.71794367, -4.21462870,
          -1.38910389, -2.75976801,  3.68752766, -4.06181812]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.09290743,  -5.98763847,  -4.97010326,  -2.35729504,  -2.00477195,
          -6.25573921,  -4.81399155,  -6.11491680, -14.60853958,  -9.76063347]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.09290814,  -5.98763943,  -4.97010326,  -2.35729527,  -2.00477171,
           -6.25573921,  -4.81399155,  -6.11491632, -14.60853958,  -9.76063347],
         [ -3.09290814,  -5.98763943,  -4.97010326,  -2.35729527,  -2.00477171,
           -6.25573921,  -4.81399155,  -6.11491632, -14.60853958,  -9.76063347]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.87719512,  1.01753616, -2.61280799, -2.96533155,  1.28563595,
          -0.15611172,  1.14481306,  9.63843632,  4.79053020]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.23234367, -6.44712734, -2.73615861, -0.08818348, -0.79648221,
         -2.04367495, -2.25019479, -4.06866550, -9.47719765, -5.53713560]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.23234367, -6.44712734, -2.73615861, -0.08818346, -0.79648226,
          -2.04367471, -2.25019455, -4.06866550, -9.47719669, -5.53713608],
         [-2.23234367, -6.44712734, -2.73615861, -0.08818346, -0.79648226,
          -2.04367471, -2.25019455, -4.06866550, -9.47719669, -5.53713608]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.30479240,  0.90999126, -2.80097747, -5.44895267, -4.74065399,
          -3.49346137, -3.28694153, -1.46847057,  3.94006062]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.82669401, -2.73564076, -2.82357383, -2.72787046, -1.54902935,
         -3.77071404, -4.85983038, -3.03183556, -9.34333706, -5.09988117]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.82669401, -2.73564172, -2.82357359, -2.72787094, -1.54902899,
          -3.77071452, -4.85982990, -3.03183460, -9.34333611, -5.09988117],
         [-4.82669401, -2.73564172, -2.82357359, -2.72787094, -1.54902899,
          -3.77071452, -4.85982990, -3.03183460, -9.34333611, -5.09988117]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.03313589, -2.12418818, -2.03625631, -2.13195896, -3.31080103,
          -1.08911538, -1.82799530,  4.48350620,  0.24005127]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.15126228, -11.11133003,  -2.67532086,   1.69569004, -14.33120441,
           1.63917828,  -7.24773407,  -9.08870029, -22.47267914,  -7.35147572]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.15126228, -11.11132908,  -2.67532110,   1.69569004, -14.33120632,
            1.63917840,  -7.24773455,  -9.08870220, -22.47267914,  -7.35147476],
         [-17.15126228, -11.11132908,  -2.67532110,   1.69569004, -14.33120632,
            1.63917840,  -7.24773455,  -9.08870220, -22.47267914,  -7.35147476]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[18.79044151, 12.75050735,  4.31449938, -0.05651164, 15.97038460,
           8.88691330, 10.72788048, 24.11185837,  8.99065304]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.01651001,  -7.38291693, -13.94966602,   1.28406572,  -4.88512850,
          -3.69893098, -11.08415985,  -5.29043579, -27.63476181,  -9.82532501]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.01650810,  -7.38291597, -13.94966602,   1.28406572,  -4.88512802,
           -3.69893146, -11.08415985,  -5.29043579, -27.63475990,  -9.82532597],
         [-17.01650810,  -7.38291597, -13.94966602,   1.28406572,  -4.88512802,
           -3.69893146, -11.08415985,  -5.29043579, -27.63475990,  -9.82532597]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  5.93234825,  -3.70124388,   2.86550617, -12.36822510,  -6.19903183,
           -7.38522816,  -5.79372406,  16.55060005,  -1.25883389]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  3.44685340,  -4.74097919,  -5.97276020,  -3.79561257,  -5.35117340,
          -6.85249138,  -6.13282633,  -9.64921951, -12.87768745, -12.38505554]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  3.44685292,  -4.74097967,  -5.97276068,  -3.79561281,  -5.35117340,
           -6.85249138,  -6.13282633,  -9.64921856, -12.87768745, -12.38505650],
         [  3.44685292,  -4.74097967,  -5.97276068,  -3.79561281,  -5.35117340,
           -6.85249138,  -6.13282633,  -9.64921856, -12.87768745, -12.38505650]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-7.24246597,  0.94536686,  2.17714787,  1.55556059,  3.05687857,
           2.33721352,  5.85360575,  9.08207512,  8.58944321]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.97848892,  -5.09002733,  -8.47191334,  -0.22402576,  -2.87745237,
          -5.14700890,  -4.66596174,  -1.29148209, -12.94436741,  -8.20096207]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.97848797,  -5.09002733,  -8.47191429,  -0.22402576,  -2.87745142,
           -5.14700890,  -4.66596174,  -1.29148173, -12.94436741,  -8.20096397],
         [ -6.97848797,  -5.09002733,  -8.47191429,  -0.22402576,  -2.87745142,
           -5.14700890,  -4.66596174,  -1.29148173, -12.94436741,  -8.20096397]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -5.96587944,  -7.85434008,  -4.47245312, -12.72034168, -10.06691551,
           -7.79735851,  -8.27840614, -11.65288544,  -4.74340343]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.03956032,  -3.56814027, -15.39514256,  -2.42295694,  -9.08571815,
          -8.13372326, -15.33097267,  -4.17323637, -31.19549751,  -2.22317553]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.03955936,  -3.56814194, -15.39514256,  -2.42295527,  -9.08571815,
           -8.13372231, -15.33097363,  -4.17323732, -31.19549561,  -2.22317648],
         [-12.03955936,  -3.56814194, -15.39514256,  -2.42295527,  -9.08571815,
           -8.13372231, -15.33097363,  -4.17323732, -31.19549561,  -2.22317648]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.86632204, -0.60509539, 11.22190475, -1.75028205,  4.91248083,
           3.96048498, 11.15773582, 27.02225876, -1.95006084]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.44066858,  -5.24825335,  -9.61408520,  -2.92884183,  -4.37004280,
         -10.70886517,  -4.89184332,  -8.46736145, -21.48877144, -13.31075191]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.44066906,  -5.24825382,  -9.61408424,  -2.92884111,  -4.37004280,
          -10.70886517,  -4.89184427,  -8.46736431, -21.48877335, -13.31075191],
         [ -4.44066906,  -5.24825382,  -9.61408424,  -2.92884111,  -4.37004280,
          -10.70886517,  -4.89184427,  -8.46736431, -21.48877335, -13.31075191]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.45117521,  0.35640955,  4.72223997, -1.96300316, -0.52180147,
           5.81702089,  3.57552004, 16.59692955,  8.41890717]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.02803516, -14.34040928, -17.93176079,  -1.94702673,  -6.82714653,
          -8.08495235,  -7.00864458, -14.47351456, -37.25160980, -14.95399475]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.02803707, -14.34040737, -17.93176079,  -1.94702673,  -6.82714748,
           -8.08495140,  -7.00864697, -14.47351456, -37.25160599, -14.95399475],
         [-15.02803707, -14.34040737, -17.93176079,  -1.94702673,  -6.82714748,
           -8.08495140,  -7.00864697, -14.47351456, -37.25160599, -14.95399475]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -2.90372372,  -3.59135342, -15.98473358, -11.10461330,  -9.84680939,
          -10.92311382,  -3.45824623,  19.31984520,  -2.97776604]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.86038494, -12.55100727,  -0.90199113,   0.60840052,  -5.69168186,
          -2.25015712, -26.86630821,  -8.72878075, -17.30691528, -10.37847614]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.86038494, -12.55100536,  -0.90199077,   0.60840011,  -5.69168186,
           -2.25015712, -26.86631012,  -8.72878075, -17.30691719, -10.37847519],
         [-15.86038494, -12.55100536,  -0.90199077,   0.60840011,  -5.69168186,
           -2.25015712, -26.86631012,  -8.72878075, -17.30691719, -10.37847519]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.61022758, 10.30084801, -1.34816635, -2.85855722,  3.44152474,
          24.61615372,  6.47862339, 15.05675983,  8.12831783]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.24116516,  -0.16209453,  -9.66367245,  -8.20133877,  -6.41618252,
          -7.44018269,   0.03302214,  -9.91712379, -18.83988380,  -7.57509518]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.24116516,  -0.16209421,  -9.66367245,  -8.20133781,  -6.41618204,
           -7.44018269,   0.03302243,  -9.91712379, -18.83988380,  -7.57509518],
         [-11.24116516,  -0.16209421,  -9.66367245,  -8.20133781,  -6.41618204,
           -7.44018269,   0.03302243,  -9.91712379, -18.83988380,  -7.57509518]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.57749271, -9.50157833, -1.46233463, -3.24749041, -2.22348976,
          -9.69669533,  0.25345135,  9.17621136, -2.08857727]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -0.09814858,   0.79469734,  -9.52967548, -11.81641102,  -7.37045002,
         -14.83153725,  -8.12491131, -15.85326862, -15.44792843,  -6.82571125]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -0.09814965,   0.79469818,  -9.52967548, -11.81641197,  -7.37045097,
          -14.83153725,  -8.12491035, -15.85326862, -15.44792843,  -6.82571125],
         [ -0.09814965,   0.79469818,  -9.52967548, -11.81641197,  -7.37045097,
          -14.83153725,  -8.12491035, -15.85326862, -15.44792843,  -6.82571125]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-15.34977913, -16.24262619,  -5.91825294,  -3.63151646,  -8.07747746,
           -0.61639118,  -7.32301807,   0.40534019,  -8.62221718]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.39094830,  -0.39990103, -11.44538403,  -8.08103371, -12.59943008,
          -9.77453136,  -1.03673530, -14.85577583, -23.66934204,  -9.37058449]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.39094543,  -0.39990032, -11.44538498,  -8.08103466, -12.59943199,
           -9.77453136,  -1.03673697, -14.85577583, -23.66933823,  -9.37058449],
         [-13.39094543,  -0.39990032, -11.44538498,  -8.08103466, -12.59943199,
           -9.77453136,  -1.03673697, -14.85577583, -23.66933823,  -9.37058449]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.02036095, -8.97068405,  2.07480049, -1.28954983,  3.22884750,
           0.40394688, -8.33384705,  5.48519135, 14.29875374]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.92920995,  -3.00557995,  -9.98978043,  -8.07203388,  -6.58902550,
         -10.53253937,  -2.73562074, -13.74256897, -18.65672874, -12.39721203]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.79760098,  -3.04127431,  -9.96308994,  -7.95052576,  -6.57675362,
          -10.52729702,  -2.81461191, -13.76194572, -18.48770332, -12.36411572],
         [ -2.79760098,  -3.04127431,  -9.96308994,  -7.95052576,  -6.57675362,
          -10.52729702,  -2.81461191, -13.76194572, -18.48770332, -12.36411572]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.01701093,  0.22666240,  7.14847803,  5.13591385,  3.76214170,
           7.71268511, 10.94733429, 15.67309189,  9.54950333]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0208 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0218 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.97583389,   3.01526380, -18.04388237,  -4.69519806, -12.15762329,
         -11.32755470, -23.13996887, -14.86082935, -27.67688560,  -1.06013691]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.97583199,   3.01526427, -18.04388237,  -4.69519949, -12.15762234,
          -11.32755470, -23.13996887, -14.86082840, -27.67688751,  -1.06013775],
         [-21.97583199,   3.01526427, -18.04388237,  -4.69519949, -12.15762234,
          -11.32755470, -23.13996887, -14.86082840, -27.67688751,  -1.06013775]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-24.99109650,  -3.93194962, -17.28063202,  -9.81820965, -10.64827728,
            1.16413689,  -7.11500359,   5.70105553, -20.91569519]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -1.67101753,   1.49558842, -10.92946625, -12.33301353,  -6.88355303,
         -17.95098877, -19.25050354,  -9.66479397,   4.47831392, -10.74031544]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -1.67101765,   1.49558842, -10.92946625, -12.33301258,  -6.88355303,
          -17.95098686, -19.25050354,  -9.66479397,   4.47831345, -10.74031544],
         [ -1.67101765,   1.49558842, -10.92946625, -12.33301258,  -6.88355303,
          -17.95098686, -19.25050354,  -9.66479397,   4.47831345, -10.74031544]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.16660595,  9.25844860, 10.66199493,  5.21253538, 16.27996826,
          17.57948685,  7.99377632, -6.14933109,  9.06929779]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.63059330,  -1.32385933,  -8.68974686,  -3.51835871,  -3.26322246,
          -8.55183125,  -3.83784795,  -8.47362232, -14.77678871,  -6.66611004]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.63059378,  -1.32385993,  -8.68974686,  -3.51835799,  -3.26322222,
           -8.55182934,  -3.83784699,  -8.47362232, -14.77678871,  -6.66611004],
         [ -6.63059378,  -1.32385993,  -8.68974686,  -3.51835799,  -3.26322222,
           -8.55182934,  -3.83784699,  -8.47362232, -14.77678871,  -6.66611004]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.92123556, -7.22796917,  0.13791752, -5.03347111, -5.28860712,
          -4.71398258, -0.07820702,  6.22495937, -1.88571930]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.24471356, -0.15942976, -3.96248531, -3.32503676, -3.00341535,
         -6.86497498, -7.43383455, -4.68990374, -0.16770762, -3.10003757]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.24471338, -0.15942964, -3.96248555, -3.32503676, -3.00341535,
          -6.86497450, -7.43383455, -4.68990326, -0.16770741, -3.10003805],
         [ 0.24471338, -0.15942964, -3.96248555, -3.32503676, -3.00341535,
          -6.86497450, -7.43383455, -4.68990326, -0.16770741, -3.10003805]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.20719910, -3.80305600, -0.63744879, -0.95907021,  2.90248895,
           3.47134900,  0.72741771, -3.79477811, -0.86244750]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.53137112,  -6.27012062, -11.21373367,  -0.71088922,  -9.45091248,
          -1.21739161, -13.28919697, -13.08758354, -25.51607704, -11.03276157]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.53137112,  -6.27012110, -11.21373367,  -0.71088952,  -9.45091343,
           -1.21739197, -13.28919792, -13.08758354, -25.51607704, -11.03276062],
         [-14.53137112,  -6.27012110, -11.21373367,  -0.71088952,  -9.45091343,
           -1.21739197, -13.28919792, -13.08758354, -25.51607704, -11.03276062]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  3.49861050,  -4.76263952,   0.18097305, -10.32187080,  -1.58184719,
           -9.81536865,   2.25643730,   2.05482292,  14.48331642]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.97436905, -1.14346766, -5.93911982, -0.72953707, -5.43860960,
         -4.91967726, -2.22319174, -6.75294256, -2.10014749, -5.19301462]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.97436810, -1.14346647, -5.93911982, -0.72953767, -5.43860960,
          -4.91967773, -2.22319221, -6.75294304, -2.10014629, -5.19301510],
         [-6.97436810, -1.14346647, -5.93911982, -0.72953767, -5.43860960,
          -4.91967773, -2.22319221, -6.75294304, -2.10014629, -5.19301510]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.05469036, -3.77621126,  1.01944208, -4.19014025,  0.51893187,
          -2.69648552,  1.83326530, -2.81953144,  0.27333736]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.83617401,   0.48714826,  -6.84227276,  -7.99207115,  -3.69804192,
          -8.16704178,  -3.16756558,  -7.68615055, -18.85535049,  -6.11744642]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.83617401,   0.48714897,  -6.84227276,  -7.99207163,  -3.69804168,
           -8.16704178,  -3.16756558,  -7.68614912, -18.85535049,  -6.11744595],
         [ -5.83617401,   0.48714897,  -6.84227276,  -7.99207163,  -3.69804168,
           -8.16704178,  -3.16756558,  -7.68614912, -18.85535049,  -6.11744595]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.13813233, -4.18519068,  3.14423108,  4.29403019,  4.46899986,
          -0.53047609,  3.98810744, 15.15730858,  2.41940427]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.44904423,  -3.72708988,  -6.76046228,  -2.59980989,  -4.41200733,
          -5.22155333,  -7.21249008,  -6.60348177, -19.10151672,  -4.81099558]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.44904423,  -3.72708988,  -6.76046276,  -2.59980989,  -4.41200733,
           -5.22155333,  -7.21249008,  -6.60348177, -19.10151672,  -4.81099558],
         [-10.44904423,  -3.72708988,  -6.76046276,  -2.59980989,  -4.41200733,
           -5.22155333,  -7.21249008,  -6.60348177, -19.10151672,  -4.81099558]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 3.68858147, -3.03337288, -4.16065311, -2.34845543, -1.53890944,
           0.45202732, -0.15698099, 12.34105396, -1.94946718]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.51680040,  -4.27091503,  -6.47817326,  -3.29032516,  -1.72929752,
          -6.52072477,  -7.31284475,  -6.34908438, -15.44023132, -10.99158955]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.51680040,  -4.27091599,  -6.47817421,  -3.29032469,  -1.72929752,
           -6.52072477,  -7.31284571,  -6.34908485, -15.44023037, -10.99158955],
         [ -6.51680040,  -4.27091599,  -6.47817421,  -3.29032469,  -1.72929752,
           -6.52072477,  -7.31284571,  -6.34908485, -15.44023037, -10.99158955]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 2.24588442,  2.20725822, -0.98059130, -2.54161835,  2.24980879,
           3.04192972,  2.07816887, 11.16931438,  6.72067356]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.81811523,   4.76078796, -14.75873852, -20.27713394, -23.73415565,
         -21.78417015,  -8.70254517, -34.50902176,  -5.76884222,  -2.63432550]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.81811714,   4.76078844, -14.75873852, -20.27713394, -23.73415565,
          -21.78417015,  -8.70254612, -34.50902176,  -5.76884317,  -2.63432479],
         [-21.81811714,   4.76078844, -14.75873852, -20.27713394, -23.73415565,
          -21.78417015,  -8.70254612, -34.50902176,  -5.76884317,  -2.63432479]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 13.11557102, -13.46333504,   6.05619240,  11.57458782,  15.03160954,
           13.08162403,  25.80647659,  -2.93370295,  -6.06822109]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.62545013,  -2.81719375,  -6.39713955,  -6.56214619,  -3.14325976,
          -8.11864185,  -0.25863877,  -8.16964245, -17.63310814,  -8.05796528]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]100%|██████████| 1/1 [00:01<00:00,  1.56s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.99993038,  -0.14321625,  -6.74214077,  -8.00787830,  -3.69151974,
           -9.45646095,  -1.43311894,  -8.56997108, -15.50175667,  -5.97545719],
         [ -5.99993038,  -0.14321625,  -6.74214077,  -8.00787830,  -3.69151974,
           -9.45646095,  -1.43311894,  -8.56997108, -15.50175667,  -5.97545719]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.56681156, -1.28990269,  5.30902195,  6.57475948,  2.25840092,
           8.02334213,  7.13685226, 14.06863785,  4.54233837]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.5697 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.82514954,  -5.94044161,  -5.51815844,   0.63507479,  -7.70255947,
          -1.03732884, -17.85545921, -10.83619404, -18.36279869,  -5.62280130]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.82515144,  -5.94044065,  -5.51815844,   0.63507462,  -7.70255995,
           -1.03732920, -17.85546112, -10.83619404, -18.36280060,  -5.62280083],
         [-11.82515144,  -5.94044065,  -5.51815844,   0.63507462,  -7.70255995,
           -1.03732920, -17.85546112, -10.83619404, -18.36280060,  -5.62280083]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -6.53764915, -12.42235947, -12.84464264, -18.99787521, -10.66024017,
          -17.32547188,  -0.50733948,  -7.52660656, -12.73999977]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.54123592,   2.05681562, -13.33404160,  -6.01242304,  -8.98628902,
         -13.33959675,  -6.67378902, -12.23341656, -18.00650978,  -8.23732090]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.54123592,   2.05681562, -13.33404350,  -6.01242399,  -8.98628807,
          -13.33959770,  -6.67378855, -12.23341656, -18.00650787,  -8.23732090],
         [-11.54123592,   2.05681562, -13.33404350,  -6.01242399,  -8.98628807,
          -13.33959770,  -6.67378855, -12.23341656, -18.00650787,  -8.23732090]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  2.55494785, -11.04310417,   4.34775543,  -2.97386408,   4.35330963,
           -2.31249952,   3.24712849,   9.02021980,  -0.74896717]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.48008823,  0.83099800, -3.93581080, -5.87851048, -4.04098940,
         -6.41879606, -3.83315182, -9.90061760, -6.25473213, -3.59032631]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.48008823,  0.83099765, -3.93581080, -5.87851048, -4.04098988,
          -6.41879559, -3.83315182, -9.90061951, -6.25473213, -3.59032679],
         [-1.48008823,  0.83099765, -3.93581080, -5.87851048, -4.04098988,
          -6.41879559, -3.83315182, -9.90061951, -6.25473213, -3.59032679]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.77464390, -7.08572960, -2.31892133, -0.37622166, -2.21374226,
           0.16406345, -2.42158031,  3.64588737, -2.66440535]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.45372224,  -1.88894439,  -6.56277418,  -5.02242327,  -3.39267540,
          -8.21396637,  -5.16311598,  -4.59195423, -15.67033100,  -7.72761154]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.45372272,  -1.88894367,  -6.56277418,  -5.02242374,  -3.39267516,
           -8.21396637,  -5.16311693,  -4.59195423, -15.67033100,  -7.72761250],
         [ -3.45372272,  -1.88894367,  -6.56277418,  -5.02242374,  -3.39267516,
           -8.21396637,  -5.16311693,  -4.59195423, -15.67033100,  -7.72761250]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.06104755, -1.50373149,  3.17009902,  1.62974858,  4.82129097,
           1.77044177,  1.19927907, 12.27765560,  4.33493710]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.31816864,  -3.17080855, -13.55509567,  -0.44324636,  -4.88366032,
          -5.72811985,  -1.39775467,  -6.45564461, -26.62762260,  -6.12770224]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.31816864,  -3.17080855, -13.55509567,  -0.44324693,  -4.88365984,
           -5.72812080,  -1.39775360,  -6.45564222, -26.62762642,  -6.12770319],
         [-20.31816864,  -3.17080855, -13.55509567,  -0.44324693,  -4.88365984,
           -5.72812080,  -1.39775360,  -6.45564222, -26.62762642,  -6.12770319]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[14.59004784, -2.55731225,  7.82697487, -5.28487396, -0.84446096,
          -4.33036709,  0.72752142, 20.89950562,  0.39958239]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  0.25706780,   0.24279299, -18.85913277, -17.24248123, -11.98330116,
         -19.14322853, -11.76056480, -17.27968025, -28.34807968, -16.33501244]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.19711365,   0.34029308, -18.85515022, -17.39506721, -11.95686054,
          -19.18782997, -11.72627831, -17.25862312, -28.40036964, -16.29963112],
         [  0.19711365,   0.34029308, -18.85515022, -17.39506721, -11.95686054,
          -19.18782997, -11.72627831, -17.25862312, -28.40036964, -16.29963112]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.14317943, 19.05226326, 17.59218025, 12.15397453, 19.38494301,
          11.92339230, 17.45573616, 28.59748268, 16.49674416]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0208 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0218 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.35242271,   0.10039123, -11.45278645,  -2.15462589, -17.91493797,
          -5.91790628,  -4.50430298, -19.38342857,  -9.67817593,  -1.62851036]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.35242367,   0.10039126, -11.45278645,  -2.15462565, -17.91493797,
           -5.91790628,  -4.50430298, -19.38342857,  -9.67817593,  -1.62851048],
         [ -9.35242367,   0.10039126, -11.45278645,  -2.15462565, -17.91493797,
           -5.91790628,  -4.50430298, -19.38342857,  -9.67817593,  -1.62851048]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.72391319, -1.72890174,  9.82427597,  0.52611518, 16.28642654,
           4.28939581,  2.87579250, 17.75491714,  8.04966545]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.96784019,  -7.67647839, -13.89554024,  -0.91843349, -15.03896236,
          -6.90472460,  -8.78234482,  -8.74507141, -45.67002869,  -8.21574497]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.96784019,  -7.67647600, -13.89554024,  -0.91843390, -15.03896332,
           -6.90472555,  -8.78234577,  -8.74507332, -45.67002487,  -8.21574497],
         [-18.96784019,  -7.67647600, -13.89554024,  -0.91843390, -15.03896332,
           -6.90472555,  -8.78234577,  -8.74507332, -45.67002487,  -8.21574497]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[10.75209522, -0.53926897,  5.67979527, -7.29731083,  6.82321835,
          -1.31101942,  0.56660080,  0.52932835, 37.45428085]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.61440182,  -9.10092735,  -4.31254768,   0.40597102,  -3.34704185,
          -3.54372597,  -5.22762203,  -3.47919559, -17.31367111,  -7.86248541]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.61440086,  -9.10092735,  -4.31254864,   0.40597087,  -3.34704185,
           -3.54372597,  -5.22762346,  -3.47919583, -17.31367111,  -7.86248589],
         [ -9.61440086,  -9.10092735,  -4.31254864,   0.40597087,  -3.34704185,
           -3.54372597,  -5.22762346,  -3.47919583, -17.31367111,  -7.86248589]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 1.75191498,  1.23844147, -3.54993725, -8.26845646, -4.51544380,
          -4.31875992, -2.63486242, -4.38329029,  9.45118523]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.46715450,  -4.31644583,  -7.06912947,  -2.18588018,  -3.15895438,
          -4.28881836,  -0.98525536,  -8.83954144, -16.33139038,  -8.43324947]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.46715403,  -4.31644678,  -7.06912947,  -2.18587947,  -3.15895438,
           -4.28881836,  -0.98525512,  -8.83954144, -16.33139038,  -8.43324947],
         [ -4.46715403,  -4.31644678,  -7.06912947,  -2.18587947,  -3.15895438,
           -4.28881836,  -0.98525512,  -8.83954144, -16.33139038,  -8.43324947]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-11.86423683, -12.01494408,  -9.26226044, -14.14551067, -13.17243576,
          -12.04257202, -15.34613514,  -7.49184895,  -7.89814091]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.30687904,  -8.01122761, -12.68505096,  -1.10921013,  -3.63990474,
          -8.28858376, -24.51256371,  -8.78735161, -32.91473770, -17.73047829]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.30687714,  -8.01122856, -12.68505096,  -1.10920990,  -3.63990426,
           -8.28858376, -24.51256371,  -8.78735161, -32.91473007, -17.73047638],
         [-23.30687714,  -8.01122856, -12.68505096,  -1.10920990,  -3.63990426,
           -8.28858376, -24.51256371,  -8.78735161, -32.91473007, -17.73047638]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[  5.57640076,  -9.71924782,  -5.04542542, -16.62126732, -14.09057236,
           -9.44189262,   6.78208733,  -8.94312477,  15.18425369]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.18834496, -22.66959190, -16.37356949,  -0.68792909,  -3.50523901,
         -11.66582680, -23.73686409,  -8.38960266, -60.23898697, -30.12634087]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.18833733, -22.66959190, -16.37356758,  -0.68792897,  -3.50523973,
          -11.66582489, -23.73686790,  -8.38960361, -60.23898315, -30.12633705],
         [-29.18833733, -22.66959190, -16.37356758,  -0.68792897,  -3.50523973,
          -11.66582489, -23.73686790,  -8.38960361, -60.23898315, -30.12633705]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -0.93799973,  -7.45674515, -13.75276947, -29.43840790, -26.62109756,
          -18.46051216,  -6.38946915, -21.73673248,  30.11264610]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.71151161,  -1.52507651,  -5.83969879,  -2.89346862,  -5.22967815,
          -4.09637022,  -2.30527520,  -7.05720139, -12.47644424,  -1.96090245]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.71151257,  -1.52507663,  -5.83969927,  -2.89346862,  -5.22967768,
           -4.09637117,  -2.30527449,  -7.05720234, -12.47644424,  -1.96090281],
         [ -9.71151257,  -1.52507663,  -5.83969927,  -2.89346862,  -5.22967768,
           -4.09637117,  -2.30527449,  -7.05720234, -12.47644424,  -1.96090281]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 6.81804371, -1.36839199,  2.94623065,  2.33620906,  1.20290256,
          -0.58819413,  4.16373348,  9.58297539, -0.93256581]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.50719213,   0.34893093,  -6.91854334,  -9.17503738,  -6.73209620,
          -7.61206436,  -1.80654621,  -7.05981588, -17.08118057,  -7.56186438]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.50719070,   0.34893018,  -6.91854334,  -9.17503738,  -6.73209572,
           -7.61206436,  -1.80654621,  -7.05981445, -17.08118057,  -7.56186438],
         [ -4.50719070,   0.34893018,  -6.91854334,  -9.17503738,  -6.73209572,
           -7.61206436,  -1.80654621,  -7.05981445, -17.08118057,  -7.56186438]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.55262375, -7.40874481, -0.14127111,  2.11522293, -0.32771873,
           0.55224991, -5.25326824, 10.02136612,  0.50204992]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.38275433,  -2.10587120,  -7.47467947,  -2.22729135,  -0.76859832,
          -8.06144619,  -4.73034000,  -5.99707603,  -6.86275959, -10.15233612]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.38275337,  -2.10587168,  -7.47467899,  -2.22729111,  -0.76859778,
           -8.06144714,  -4.73034000,  -5.99707556,  -6.86275768, -10.15233707],
         [ -3.38275337,  -2.10587168,  -7.47467899,  -2.22729111,  -0.76859778,
           -8.06144714,  -4.73034000,  -5.99707556,  -6.86275768, -10.15233707]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.67869377, -5.95557547, -0.58676815, -5.83415604, -7.29284954,
          -3.33110714, -2.06437159, -1.19868946,  2.09088993]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[  5.03605270,  -6.02425194, -11.13293934, -11.42270374,  -9.63808250,
         -11.66223621, -14.14756393, -15.57700729, -24.32827759, -16.30821609]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  1.03719127,  -3.34084153, -12.29128838, -11.35907459, -11.55525589,
          -11.08867836, -11.58321285, -16.73724174, -25.56074905, -13.61999226],
         [  1.03719127,  -3.34084153, -12.29128838, -11.35907459, -11.55525589,
          -11.08867836, -11.58321285, -16.73724174, -25.56074905, -13.61999226]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.37803268, 13.32847977, 12.39626598, 12.59244728, 12.12586975,
          12.62040424, 17.77443314, 26.59794044, 14.65718365]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.5733 seconds.
PGD attack failed
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/15): BoundBuffers(name=/15, inputs=[], perturbed=False)
  (/16): BoundBuffers(name=/16, inputs=[], perturbed=False)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundSub(name=/31, inputs=[/0, /15], perturbed=True)
  (/input.3): BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
  (/input.7): BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
  (/input.11): BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
  (/input.15): BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True)
  (/40): BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
  (/41): BoundFlatten(name=/41, inputs=[/40], perturbed=True)
  (/input.19): BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True)
  (/43): BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
  (/input.23): BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
  (/46): BoundLinear(name=/46, inputs=[/45, /29, /30], perturbed=True)
  (/input/reciprocal): BoundReciprocal(name=/input/reciprocal, inputs=[/16], perturbed=False)
  (/input/mul): BoundMul(name=/input/mul, inputs=[/31, /input/reciprocal], perturbed=True)
)
Original output: tensor([[  5.03605318,  -6.02425385, -11.13294029, -11.42270374,  -9.63808346,
         -11.66223621, -14.14756393, -15.57700729, -24.32827759, -16.30821419]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input.3, inputs=[/input/mul, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.7, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.7], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/36, /21, /22], perturbed=True): [(BoundRelu(name=/38, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.15, inputs=[/38, /23, /24], perturbed=True): [(BoundRelu(name=/40, inputs=[/input.15], perturbed=True), 0)]
  BoundLinear(name=/input.19, inputs=[/41, /25, /26], perturbed=True): [(BoundRelu(name=/43, inputs=[/input.19], perturbed=True), 0)]
  BoundLinear(name=/input.23, inputs=[/43, /27, /28], perturbed=True): [(BoundRelu(name=/45, inputs=[/input.23], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/38, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/40, inputs=[/input.15], perturbed=True)
   BoundRelu(name=/43, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/45, inputs=[/input.23], perturbed=True)
layer /34 using sparse-features alpha with shape [2844]; unstable size 2844; total size 32768 ([1, 32, 32, 32])
layer /34 start_node /input.15 using sparse-spec alpha [2, 9, 1, 2844] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /34 start_node /input.19 using sparse-spec alpha [2, 28, 1, 2844] with unstable size 27 total_size 512 output_shape torch.Size([512])
layer /34 start_node /input.23 using sparse-spec alpha [2, 78, 1, 2844] with unstable size 77 total_size 512 output_shape torch.Size([512])
layer /34 start_node /46 using full alpha [2, 9, 1, 2844] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [0]; unstable size 0; total size 8192 ([1, 32, 16, 16])
layer /36 start_node /input.15 using sparse-spec alpha [2, 9, 1, 0] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /36 start_node /input.19 using sparse-spec alpha [2, 28, 1, 0] with unstable size 27 total_size 512 output_shape torch.Size([512])
layer /36 start_node /input.23 using sparse-spec alpha [2, 78, 1, 0] with unstable size 77 total_size 512 output_shape torch.Size([512])
layer /36 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /38 using sparse-features alpha with shape [0]; unstable size 0; total size 16384 ([1, 64, 16, 16])
layer /38 start_node /input.15 using sparse-spec alpha [2, 9, 1, 0] with unstable size 8 total_size 4096 output_shape (64, 8, 8)
layer /38 start_node /input.19 using sparse-spec alpha [2, 28, 1, 0] with unstable size 27 total_size 512 output_shape torch.Size([512])
layer /38 start_node /input.23 using sparse-spec alpha [2, 78, 1, 0] with unstable size 77 total_size 512 output_shape torch.Size([512])
layer /38 start_node /46 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /40 using sparse-features alpha with shape [8]; unstable size 8; total size 4096 ([1, 64, 8, 8])
layer /40 start_node /input.19 using sparse-spec alpha [2, 28, 1, 8] with unstable size 27 total_size 512 output_shape torch.Size([512])
layer /40 start_node /input.23 using sparse-spec alpha [2, 78, 1, 8] with unstable size 77 total_size 512 output_shape torch.Size([512])
layer /40 start_node /46 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /43 using sparse-features alpha with shape [27]; unstable size 27; total size 512 ([1, 512])
layer /43 start_node /input.23 using sparse-spec alpha [2, 78, 1, 27] with unstable size 77 total_size 512 output_shape torch.Size([512])
layer /43 start_node /46 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [77]; unstable size 77; total size 512 ([1, 512])
layer /45 start_node /46 using full alpha [2, 9, 1, 77] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.48358870,  9.97581387,  7.66725063,  9.26081562,  8.03444099,
          9.82556725, 14.28966331, 23.63745499, 11.91310501]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 1.6839 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.21206093,  -7.07650518,  -8.59123993,   0.79866141,  -8.28085232,
          -7.62045860,  -8.43692589,  -6.26361179, -17.40136719,  -0.64361668]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.21206093,  -7.07650518,  -8.59123898,   0.79866147,  -8.28085232,
           -7.62045956,  -8.43692684,  -6.26361179, -17.40136719,  -0.64361674],
         [ -9.21206093,  -7.07650518,  -8.59123898,   0.79866147,  -8.28085232,
           -7.62045956,  -8.43692684,  -6.26361179, -17.40136719,  -0.64361674]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -2.13555574,  -0.62082195, -10.01072216,  -0.93120861,  -1.59160137,
           -0.77513409,  -2.94844913,   8.18930626,  -8.56844425]]],
       device='cuda:0')
number of violation:  8
Result: unsafe-pgd in 0.0066 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.87851143, -15.02728748,  -7.07393789,   0.73589224,  -7.45975637,
           2.54030061, -12.96411514,  -1.24255180, -42.89503860, -13.08527851]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.79208565, -14.36141109,  -8.23419666,   1.73930109,  -7.74769497,
            1.48231864, -12.40882874,  -1.92187512, -42.76499176, -12.12893200],
         [-23.79208565, -14.36141109,  -8.23419666,   1.73930109,  -7.74769497,
            1.48231864, -12.40882874,  -1.92187512, -42.76499176, -12.12893200]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[25.27440453, 15.84372997,  9.71651554, -0.25698245,  9.23001385,
          13.89114761,  3.40419388, 44.24731064, 13.61125088]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.5734 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5744 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.28540993,  -3.29103827,  -5.84143591,  -5.78031445,  -2.92023921,
          -5.58063555,  -2.73273444,  -2.37505436, -15.38681984,  -4.44971657]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.28541088,  -3.29103827,  -5.84143782,  -5.78031397,  -2.92023921,
           -5.58063555,  -2.73273444,  -2.37505484, -15.38681984,  -4.44971657],
         [-10.28541088,  -3.29103827,  -5.84143782,  -5.78031397,  -2.92023921,
           -5.58063555,  -2.73273444,  -2.37505484, -15.38681984,  -4.44971657]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 4.44397306, -2.55039954, -0.06112385, -2.92119861, -0.26080227,
          -3.10870337, -3.46638298,  9.54538155, -1.39172125]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.05863881, -4.22547531, -4.09345531, -1.04652023, -3.52289844,
         -5.32363796, -0.13659818, -6.08199263, -7.27288389, -6.76039267]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.05863881, -4.22547436, -4.09345531, -1.04652035, -3.52289867,
          -5.32363796, -0.13659845, -6.08199263, -7.27288389, -6.76039219],
         [-3.05863881, -4.22547436, -4.09345531, -1.04652035, -3.52289867,
          -5.32363796, -0.13659845, -6.08199263, -7.27288389, -6.76039219]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.03481650,  0.13201904, -3.04693508, -0.57055664,  1.23018265,
          -3.95685697,  1.98853731,  3.17942858,  2.66693687]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-1.22968187e+01, -6.91182911e-04, -9.41310310e+00, -7.02220011e+00,
         -1.92749286e+00, -1.19074306e+01, -8.16330528e+00, -8.55522633e+00,
         -1.24981785e+01, -9.67100334e+00]], device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.22968187e+01, -6.90467656e-04, -9.41310310e+00, -7.02219915e+00,
          -1.92749310e+00, -1.19074306e+01, -8.16330433e+00, -8.55522537e+00,
          -1.24981785e+01, -9.67100334e+00],
         [-1.22968187e+01, -6.90467656e-04, -9.41310310e+00, -7.02219915e+00,
          -1.92749310e+00, -1.19074306e+01, -8.16330433e+00, -8.55522537e+00,
          -1.24981785e+01, -9.67100334e+00]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.27461958, -7.02150869,  2.39090395, -5.09470606,  4.88523149,
           1.14110518,  1.53302622,  5.47597933,  2.64880419]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.09210300, -1.09979630, -5.94912481, -7.60549307, -4.88095951,
         -5.88098907, -7.17491293, -5.60588980, -0.64960355, -4.62793398]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.78079116, -1.86486602, -4.99362898, -8.24415302, -2.42686462,
          -6.19011450, -7.14969301, -3.46860218, -2.51720524, -4.56334877],
         [ 0.78079116, -1.86486602, -4.99362898, -8.24415302, -2.42686462,
          -6.19011450, -7.14969301, -3.46860218, -2.51720524, -4.56334877]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-3.29799652, -0.65233922,  2.47642374,  5.72694778, -0.09034061,
           3.67290926,  4.63248777,  0.95139694,  2.04614353]]],
       device='cuda:0')
number of violation:  3
Attack finished in 0.0362 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0372 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -4.67531872,  -4.72167587,  -9.93473911,  -4.73703194,  -5.57138872,
         -11.58247280,  -9.57535076,  -8.03937435, -21.14410400, -13.02239799]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -4.67531729,  -4.72167492,  -9.93473911,  -4.73703289,  -5.57138920,
          -11.58247375,  -9.57535267,  -8.03937435, -21.14410210, -13.02239704],
         [ -4.67531729,  -4.72167492,  -9.93473911,  -4.73703289,  -5.57138920,
          -11.58247375,  -9.57535267,  -8.03937435, -21.14410210, -13.02239704]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.90003538, -4.85367775,  0.35938644, -4.83831978, -4.00396347,
           2.00712109, -1.53597832, 11.56874943,  3.44704437]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.72591400, -11.07282543,  -5.45991135,   0.85603470,  -2.42881322,
          -4.39625168,  -8.52373123,  -6.55676079, -20.77995300, -10.19795990]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]100%|██████████| 1/1 [00:01<00:00,  1.57s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.64717674,  -8.55873966,  -6.41331530,  -1.08634174,  -0.90210378,
           -5.88114738,  -9.63376141,  -6.29488993, -20.98174095,  -9.84819508],
         [-14.64717674,  -8.55873966,  -6.41331530,  -1.08634174,  -0.90210378,
           -5.88114738,  -9.63376141,  -6.29488993, -20.98174095,  -9.84819508]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[13.56083488,  7.47239780,  5.32697344, -0.18423796,  4.79480553,
           8.54741955,  5.20854807, 19.89539909,  8.76185322]]],
       device='cuda:0')
number of violation:  1
Attack finished in 1.5774 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 1.5784 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.28838921, -12.72787666, -12.39697552,   1.62564933,  -6.23155403,
          -1.82508779, -15.69277382,  -5.91840601, -42.69353104,  -8.85383320]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.28838921, -12.72787666, -12.39697456,   1.62564933,  -6.23155451,
           -1.82508850, -15.69277573,  -5.91840744, -42.69353104,  -8.85383224],
         [-28.28838921, -12.72787666, -12.39697456,   1.62564933,  -6.23155451,
           -1.82508850, -15.69277573,  -5.91840744, -42.69353104,  -8.85383224]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[22.05683517,  6.49632215,  6.16542006, -7.85720396, -4.40646601,
           9.46122169, -0.31314707, 36.46197510,  2.62227774]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0064 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.87692833,   0.18682757, -11.70264244,  -7.86472082,  -3.64905143,
         -11.01778507, -12.99320889,  -7.59448195, -18.22792816, -10.55183220]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.87692881,   0.18682727, -11.70264244,  -7.86471987,  -3.64905190,
          -11.01778316, -12.99320889,  -7.59448195, -18.22792816, -10.55183125],
         [ -7.87692881,   0.18682727, -11.70264244,  -7.86471987,  -3.64905190,
          -11.01778316, -12.99320889,  -7.59448195, -18.22792816, -10.55183125]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-8.06375599,  3.82571363, -0.01220894, -4.22787666,  3.14085436,
           5.11628008, -0.28244686, 10.35099983,  2.67490244]]],
       device='cuda:0')
number of violation:  4
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.39861107, -13.75934982,  -3.34560680,   0.44612387,  -5.12742424,
          -0.80601829,  -2.88249755,   1.92281997, -28.47158623, -10.23378849]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.39860916, -13.75934982,  -3.34560537,   0.44612402,  -5.12742376,
           -0.80601835,  -2.88249683,   1.92281973, -28.47158623, -10.23378944],
         [-12.39860916, -13.75934982,  -3.34560537,   0.44612402,  -5.12742376,
           -0.80601835,  -2.88249683,   1.92281973, -28.47158623, -10.23378944]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[11.59259033, 12.95333099,  2.53958702, -1.25214243,  4.32140541,
           2.07647848, -2.72883797, 27.66556740,  9.42777061]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.59409094,  -2.33518100,  -7.80191565,  -0.21442220,  -8.90310383,
          -5.73311138, -13.08087158, -10.50650978,  -5.68220472,  -9.72323322]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.59409142,  -2.33518171,  -7.80191565,  -0.21442199,  -8.90310478,
           -5.73311186, -13.08087158, -10.50650978,  -5.68220472,  -9.72323513],
         [ -6.59409142,  -2.33518171,  -7.80191565,  -0.21442199,  -8.90310478,
           -5.73311186, -13.08087158, -10.50650978,  -5.68220472,  -9.72323513]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 0.91188669, -3.34702301,  2.11971092, -5.46778297,  3.22090006,
           0.05090714,  7.39866686,  4.82430506,  4.04103041]]],
       device='cuda:0')
number of violation:  2
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.33048701,  -2.38248277, -11.90244007,  -8.46001625, -10.18984318,
          -5.87575817, -12.53865528, -17.01324654, -23.69658661, -11.42329407]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -2.30524850,  -2.25637269, -11.82517242,  -8.52775955, -10.23902988,
           -5.85487556, -12.60564899, -17.06491280, -23.64636803, -11.43881607],
         [ -2.30524850,  -2.25637269, -11.82517242,  -8.52775955, -10.23902988,
           -5.85487556, -12.60564899, -17.06491280, -23.64636803, -11.43881607]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.04887581,  9.51992416,  6.22251129,  7.93378162,  3.54962707,
          10.30040073, 14.75966454, 21.34111977,  9.13356781]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0210 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0219 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -2.70793414,  -0.61333179,  -9.60606098,  -5.01496315,  -6.74224472,
          -9.43504620, -11.11910725,  -7.90982723,  -1.61282742, -11.06309223]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[  0.58997947,  -1.65806842,  -9.52926159,  -5.66373730,  -7.19641638,
          -10.53588963, -12.64092922,  -8.00455570,  -0.71922082, -12.08763504],
         [  0.58997947,  -1.65806842,  -9.52926159,  -5.66373730,  -7.19641638,
          -10.53588963, -12.64092922,  -8.00455570,  -0.71922082, -12.08763504]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-2.24804783,  7.87119293,  4.00566864,  5.53834820,  8.87782097,
          10.98286057,  6.34648705, -0.93884760, 10.42956638]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0359 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0369 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.90155411,  -0.30581996,  -8.49124336,  -3.09192777,  -7.05104780,
          -6.49305296,  -2.84899306,  -8.23818970, -19.27506447,  -3.90417004]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.90155602,  -0.30581972,  -8.49124336,  -3.09192824,  -7.05104780,
           -6.49305296,  -2.84899449,  -8.23818970, -19.27506256,  -3.90417004],
         [-13.90155602,  -0.30581972,  -8.49124336,  -3.09192824,  -7.05104780,
           -6.49305296,  -2.84899449,  -8.23818970, -19.27506256,  -3.90417004]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 5.66336632, -7.93237019,  0.25305367, -5.14626122, -1.18714190,
          -1.74513674, -5.38919544, 11.03687286, -4.33401966]]],
       device='cuda:0')
number of violation:  6
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.02872729,  -1.45570123,  -7.93445396,  -2.13764763,  -6.55043888,
         -10.77853680,  -8.88498211, -12.80467701,  -1.55627310,  -7.98023272]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.02872658,  -1.45570052,  -7.93445444,  -2.13764763,  -6.55043888,
          -10.77853680,  -8.88498020, -12.80467701,  -1.55627263,  -7.98023176],
         [ -3.02872658,  -1.45570052,  -7.93445444,  -2.13764763,  -6.55043888,
          -10.77853680,  -8.88498020, -12.80467701,  -1.55627263,  -7.98023176]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-4.90572786, -6.47875404, -5.79680681, -1.38401556,  2.84408236,
           0.95052576,  4.87022257, -6.37818193,  0.04577732]]],
       device='cuda:0')
number of violation:  5
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.65760994,  -9.99375153, -19.94779015,  -0.03495453,   0.72299433,
          -5.91908407, -33.85233307,  -3.96108508, -27.56027985, -32.19968414]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.65760612,  -9.99375153, -19.94779015,  -0.03495452,   0.72299361,
           -5.91908455, -33.85233307,  -3.96108508, -27.56028366, -32.19968033],
         [-23.65760612,  -9.99375153, -19.94779015,  -0.03495452,   0.72299361,
           -5.91908455, -33.85233307,  -3.96108508, -27.56028366, -32.19968033]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -3.90267754, -17.56653214,  -7.61249352, -27.52532959, -28.28327751,
          -21.64119911,   6.29204941, -23.59919930,   4.63939667]]],
       device='cuda:0')
number of violation:  7
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.39950433, -2.78101110, -2.61138868, -2.20219851, -2.16851115,
         -3.93737841, -5.11813068, -3.29504919, -1.22956836, -1.78907871]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.39950442, -2.78101087, -2.61138892, -2.20219874, -2.16851139,
          -3.93737864, -5.11813021, -3.29504943, -1.22956824, -1.78907847],
         [ 0.39950442, -2.78101087, -2.61138892, -2.20219874, -2.16851139,
          -3.93737864, -5.11813021, -3.29504943, -1.22956824, -1.78907847]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-1.62907267,  1.55144262,  1.38182068,  0.97263050,  0.93894315,
           2.70781040,  3.88856196,  2.06548119,  0.55951023]]],
       device='cuda:0')
number of violation:  1
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.75006104,   0.52230793, -19.40459251,  -1.51705432, -14.52297878,
         -10.96242714, -17.90027237, -26.24631882, -18.85676384, -12.26614475]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.75006104,   0.52230769, -19.40459061,  -1.51705444, -14.52297974,
          -10.96242714, -17.90027618, -26.24631882, -18.85676384, -12.26614285],
         [-22.75006104,   0.52230769, -19.40459061,  -1.51705444, -14.52297974,
          -10.96242714, -17.90027618, -26.24631882, -18.85676384, -12.26614285]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ -3.49625778, -26.76862717,  -6.84172821, -24.72926521, -11.72333908,
          -15.28389168,  -8.34604263,  -7.38955498, -13.98017597]]],
       device='cuda:0')
number of violation:  9
Result: unsafe-pgd in 0.0061 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 1.07401443, -1.75982237, -2.83240294, -4.39176512, -4.07118750,
         -5.62584591, -6.11155033, -4.00057459,  1.74645197, -1.21704102]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 1.90093863, -2.99190521, -2.54330730, -4.28929090, -3.35460925,
          -5.41268110, -6.80952930, -3.16684961,  0.97800481, -1.47712719],
         [ 1.90093863, -2.99190521, -2.54330730, -4.28929090, -3.35460925,
          -5.41268110, -6.80952930, -3.16684961,  0.97800481, -1.47712719]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[-0.92293382,  3.96991014,  3.52131224,  5.26729584,  4.33261395,
           6.39068604,  7.78753424,  4.14485455,  2.45513201]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0359 seconds.
PGD attack succeeded!
Result: unsafe-pgd in 0.0368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.009833425283432007, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.99682999,  -8.75033283, -12.36964989,  -1.94566762,  -2.22233415,
          -6.77637243,  -6.64282084, -11.08200264, -31.24684525, -15.00907707]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.99682808,  -8.75033283, -12.36965179,  -1.94566751,  -2.22233415,
           -6.77637386,  -6.64282084, -11.08200359, -31.24684334, -15.00907707],
         [-18.99682808,  -8.75033283, -12.36965179,  -1.94566751,  -2.22233415,
           -6.77637386,  -6.64282084, -11.08200359, -31.24684334, -15.00907707]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.22045422,  1.97395897,  5.59327793, -4.83070660, -4.55403996,
          -0.13355303,  4.30562973, 24.47047043,  8.23270321]]],
       device='cuda:0')
number of violation:  3
Result: unsafe-pgd in 0.0061 seconds
############# Summary #############
Final verified acc: 3.5000000000000004% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 7 , total falsified (unsafe/sat): 193 , timeout: 0
mean time for ALL instances (total 200):0.4581797179967758, max time: 20.65549898147583
mean time for verified SAFE instances(total 7): 10.379011120115008, max time: 20.65549898147583
mean time for verified (SAFE + UNSAFE) instances (total 200): 0.45817974090576175, max time: [10.1895010471344, 2.3607351779937744, 20.65549898147583, 12.280031204223633, 15.420531272888184, 10.062904119491577, 1.6838760375976562]
mean time for verified UNSAFE instances (total 193): 0.09835684114169581, max time: 4.641005992889404
unsafe-pgd (total 193), index: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]
safe (total 5), index: [8, 67, 77, 81, 102]
safe-incomplete (total 2), index: [43, 178]
Result dict saved to out.pkl.
